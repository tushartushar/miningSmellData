Implementation smell,Namespace,Class,File,Method,Description
Complex Method,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,Cyclomatic complexity of the method is 8
Long Identifier,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,EnsureCanBeEvaluatedMultipleTimes,The length of the parameter expressionsThatMustBeEvaluatedBefore is 36.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "				_errorReporter.Message(MessageSeverity.Error' 7019' string.Format("The type {0} cannot define a method named 'runTests' because it has a [TestFixtureAttribute]."' type.CSharpTypeDefinition.FullName)); " is 200.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "					if (!method.CSharpMember.IsPublic || !method.CSharpMember.ReturnType.IsKnownType(KnownTypeCode.Void) || ((IMethod)method.CSharpMember).Parameters.Count > 0 || ((IMethod)method.CSharpMember).TypeParameters.Count > 0) { " is 217.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "						_errorReporter.Message(MessageSeverity.Error' 7020' string.Format("Method {0}: Methods decorated with a [TestAttribute] must be public' non-generic' parameterless instance methods that return void."' method.CSharpMember.FullName)); " is 231.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "					tests.Add(Tuple.Create(testAttr.Description ?? method.CSharpMember.Name' testAttr.Category' testAttr.IsAsync' testAttr.ExpectedAssertionCount >= 0 ? (int?)testAttr.ExpectedAssertionCount : null' method.Definition)); " is 215.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "			foreach (var category in tests.GroupBy(t => t.Item2).Select(g => new { Category = g.Key' Tests = g.Select(x => new { Description = x.Item1' IsAsync = x.Item3' ExpectedAssertionCount = x.Item4' Function = x.Item5 }) }).OrderBy(x => x.Category)) { " is 245.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "					testInvocations.Add(JsExpression.Invocation(JsExpression.Member(JsExpression.Identifier("QUnit")' "module")' JsExpression.String(category.Category))); " is 150.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "				testInvocations.AddRange(category.Tests.Select(t => JsExpression.Invocation(JsExpression.Identifier(t.IsAsync ? "asyncTest" : "test")' t.ExpectedAssertionCount != null ? new JsExpression[] { JsExpression.String(t.Description)' JsExpression.Number(t.ExpectedAssertionCount.Value)' _runtimeLibrary.Bind(t.Function' JsExpression.This' this) } : new JsExpression[] { JsExpression.String(t.Description)' _runtimeLibrary.Bind(t.Function' JsExpression.This' this) }))); " is 462.
Long Statement,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The length of the statement  "			instanceMethods.Add(new JsMethod(null' "runTests"' null' JsExpression.FunctionDefinition(new string[0]' JsStatement.Block(testInvocations.Select(t => (JsStatement)t))))); " is 170.
Complex Conditional,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The conditional expression  "!method.CSharpMember.IsPublic || !method.CSharpMember.ReturnType.IsKnownType(KnownTypeCode.Void) || ((IMethod)method.CSharpMember).Parameters.Count > 0 || ((IMethod)method.CSharpMember).TypeParameters.Count > 0"  is complex.
Magic Number,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: _errorReporter.Message(MessageSeverity.Error' 7019' string.Format("The type {0} cannot define a method named 'runTests' because it has a [TestFixtureAttribute]."' type.CSharpTypeDefinition.FullName));
Magic Number,QUnit.Plugin,TestRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Runtime\QUnit.Plugin\TestRewriter.cs,ConvertType,The following statement contains a magic number: _errorReporter.Message(MessageSeverity.Error' 7020' string.Format("Method {0}: Methods decorated with a [TestAttribute] must be public' non-generic' parameterless instance methods that return void."' method.CSharpMember.FullName));
