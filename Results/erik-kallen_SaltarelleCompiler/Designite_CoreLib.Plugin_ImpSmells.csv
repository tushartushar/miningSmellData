Implementation smell,Namespace,Class,File,Method,Description
Long Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The method has 141 lines of code.
Long Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The method has 108 lines of code.
Long Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The method has 174 lines of code.
Long Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The method has 221 lines of code.
Long Method,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The method has 117 lines of code.
Long Method,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Lift,The method has 102 lines of code.
Complex Method,CoreLib.Plugin,MemberOrderer,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MemberOrderer.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,Cyclomatic complexity of the method is 39
Complex Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,Cyclomatic complexity of the method is 16
Complex Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,Cyclomatic complexity of the method is 22
Complex Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,Cyclomatic complexity of the method is 47
Complex Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,Cyclomatic complexity of the method is 53
Complex Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessEvent,Cyclomatic complexity of the method is 18
Complex Method,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessField,Cyclomatic complexity of the method is 17
Complex Method,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,DeterminePreferredMemberName,Cyclomatic complexity of the method is 11
Complex Method,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,Cyclomatic complexity of the method is 9
Complex Method,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,Cyclomatic complexity of the method is 36
Complex Method,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,Cyclomatic complexity of the method is 10
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetMetadataDescriptor,Cyclomatic complexity of the method is 9
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetFieldHashCode,Cyclomatic complexity of the method is 20
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateFieldCompare,Cyclomatic complexity of the method is 17
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructGetHashCodeMethod,Cyclomatic complexity of the method is 12
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,Cyclomatic complexity of the method is 10
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,Cyclomatic complexity of the method is 15
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,Cyclomatic complexity of the method is 10
Complex Method,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateInitTypeCalls,Cyclomatic complexity of the method is 10
Complex Method,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Lift,Cyclomatic complexity of the method is 76
Complex Method,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Default,Cyclomatic complexity of the method is 18
Complex Method,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetMember,Cyclomatic complexity of the method is 9
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,Compile,The method has 11 parameters.
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CompileConstructorInvocation,The method has 12 parameters.
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructAttribute,The method has 7 parameters.
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructFieldPropertyAccessor,The method has 10 parameters.
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,GetCommonMemberInfoProperties,The method has 8 parameters.
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The method has 8 parameters.
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The method has 9 parameters.
Long Parameter List,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The method has 8 parameters.
Long Parameter List,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,OOPEmulator,The method has 7 parameters.
Long Parameter List,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,RuntimeLibrary,The method has 5 parameters.
Long Parameter List,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,MakeEnumerator,The method has 5 parameters.
Long Parameter List,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,InitializeField,The method has 5 parameters.
Long Statement,CoreLib.Plugin,MakeMembersWithScriptableAttributesReflectable,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MakeMembersWithScriptableAttributesReflectable.cs,ProcessMember,The length of the statement  "		if (member.Attributes.Any (a => a.AttributeType.Kind == TypeKind.Class && !_attributeStore.AttributesFor ((IEntity)a.AttributeType.GetDefinition ()).HasAttribute<NonScriptableAttribute> ())) { " is 192.
Long Statement,CoreLib.Plugin,Namer,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\Namer.cs,GetVariableName,The length of the statement  "	if (desiredName != null && !usedNames.Contains (baseName) && !Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (desiredName) && baseName != "ss") " is 155.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,GetDefaultTypeName,The length of the statement  "		return def.Name + (def.TypeParameterCount != outerCount ? "$" + (def.TypeParameterCount - outerCount).ToString (CultureInfo.InvariantCulture) : ""); " is 148.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessDelegate,The length of the statement  "	_delegateSemantics [delegateDefinition] = new DelegateScriptSemantics (expandParams: expandParams' bindThisToFirstParameter: bindThisToFirstParameter); " is 151.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "	if (attributes.HasAttribute<NonScriptableAttribute> () || typeDefinition.DeclaringTypeDefinition != null && GetTypeSemantics (typeDefinition.DeclaringTypeDefinition).Type == TypeScriptSemantics.ImplType.NotUsableFromScript) { " is 225.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "	bool? includeGenericArguments = typeDefinition.TypeParameterCount > 0 ? MetadataUtils.ShouldGenericArgumentsBeIncluded (typeDefinition' _attributeStore) : false; " is 161.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "	} else if (scriptNameAttr != null && string.IsNullOrEmpty (scriptNameAttr.Name) && !string.IsNullOrEmpty (MetadataUtils.GetModuleName (typeDefinition' _attributeStore))) { " is 171.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "		if (!baseClass.Equals (_systemObject) && baseClass.FullName != "System.Record" && !GetTypeSemanticsInternal (baseClass).IsSerializable) { " is 137.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "		foreach (var i in typeDefinition.DirectBaseTypes.Where (b => b.Kind == TypeKind.Interface && !GetTypeSemanticsInternal (b.GetDefinition ()).IsSerializable)) { " is 158.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "			} else if (typeDefinition.Members.Any (m => !_attributeStore.AttributesFor (m).HasAttribute<CompilerGeneratedAttribute> () && (!(m is IMethod) || ((IMethod)m).IsConstructor))) { " is 177.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "			ValidateInlineCode (MetadataUtils.CreateTypeCheckMethod (typeDefinition' _compilation)' typeDefinition' importedAttr.TypeCheckCode' Messages._7157); " is 148.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessType,The length of the statement  "	_typeSemantics [typeDefinition] = new TypeSemantics (isMutableValueType ? TypeScriptSemantics.MutableValueType (name' ignoreGenericArguments: !includeGenericArguments.Value' generateCode: importedAttr == null) : TypeScriptSemantics.NormalType (name' ignoreGenericArguments: !includeGenericArguments.Value' generateCode: importedAttr == null)' isSerializable: isSerializable' isNamedValues: MetadataUtils.IsNamedValues (typeDefinition' _attributeStore)' isImported: importedAttr != null); " is 487.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,GetInstanceMemberNames,The length of the statement  "		throw new ArgumentException ("Error getting instance member names: type " + typeDefinition.FullName + " has not yet been processed."); " is 134.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,DeterminePreferredMemberName,The length of the statement  "		var otherMembers = member.DeclaringTypeDefinition.Methods.Where (m => m.Name == member.Name && !_attributeStore.AttributesFor (m).HasAttribute<AlternateSignatureAttribute> () && !_attributeStore.AttributesFor (m).HasAttribute<NonScriptableAttribute> () && !_attributeStore.AttributesFor (m).HasAttribute<InlineCodeAttribute> ()).ToList (); " is 339.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "			if (!b.Type.GetAllBaseTypeDefinitions ().Contains (b2.Type) && !b2.Type.GetAllBaseTypeDefinitions ().Contains (b.Type)) { " is 121.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "		foreach (var m in current.Members.OrderByDescending (x => x.NameSpecified).ThenBy (x => x.Member' MemberOrderer.Instance)) { " is 124.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "					ProcessMethod (method' current.Name' m.NameSpecified' m.Member.IsStatic || isSerializable ? staticMembers : instanceMembers); " is 125.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "					_methodSemantics [p.Getter] = ps.Type == PropertyScriptSemantics.ImplType.GetAndSetMethods ? ps.GetMethod : MethodScriptSemantics.NotUsableFromScript (); " is 153.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "					_methodSemantics [p.Setter] = ps.Type == PropertyScriptSemantics.ImplType.GetAndSetMethods ? ps.SetMethod : MethodScriptSemantics.NotUsableFromScript (); " is 153.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "				_methodSemantics [e.AddAccessor] = es.Type == EventScriptSemantics.ImplType.AddAndRemoveMethods ? es.AddMethod : MethodScriptSemantics.NotUsableFromScript (); " is 158.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "				_methodSemantics [e.RemoveAccessor] = es.Type == EventScriptSemantics.ImplType.AddAndRemoveMethods ? es.RemoveMethod : MethodScriptSemantics.NotUsableFromScript (); " is 164.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "	_instanceMemberNamesByType [typeDefinition] = new HashSet<string> (instanceMembers.Where (kvp => kvp.Value).Select (kvp => kvp.Key)); " is 133.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessTypeMembers,The length of the statement  "	_staticMemberNamesByType [typeDefinition] = new HashSet<string> (staticMembers.Where (kvp => kvp.Value).Select (kvp => kvp.Key)); " is 129.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "	if (constructor.Parameters.Count == 1 && constructor.Parameters [0].Type.FullName == typeof(DummyTypeUsedToAddAttributeToDefaultValueTypeConstructor).FullName) { " is 161.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "	if (nsa != null || GetTypeSemanticsInternal (source.DeclaringTypeDefinition).Semantics.Type == TypeScriptSemantics.ImplType.NotUsableFromScript) { " is 146.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "		_constructorSemantics [constructor] = ConstructorScriptSemantics.InlineCode (ica.Code' skipInInitializer: skipInInitializer' nonExpandedFormLiteralCode: ica.NonExpandedFormCode); " is 178.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "		_constructorSemantics [constructor] = preferredName == "$ctor" ? ConstructorScriptSemantics.Unnamed (generateCode: false' expandParams: epa != null' skipInInitializer: skipInInitializer) : ConstructorScriptSemantics.Named (preferredName' generateCode: false' expandParams: epa != null' skipInInitializer: skipInInitializer); " is 324.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "			var members = source.DeclaringTypeDefinition.Members.Where (m => m.SymbolKind == SymbolKind.Property || m.SymbolKind == SymbolKind.Field).ToDictionary (m => m.Name.ToLowerInvariant ()); " is 185.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "					if (p.Type.GetAllBaseTypes ().Any (b => b.Equals (member.ReturnType)) || (member.ReturnType.IsKnownType (KnownTypeCode.NullableOfT) && member.ReturnType.TypeArguments [0].Equals (p.Type))) { " is 190.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "			_constructorSemantics [constructor] = hasError ? ConstructorScriptSemantics.Unnamed () : ConstructorScriptSemantics.Json (parameterToMemberMap' skipInInitializer: skipInInitializer || constructor.Parameters.Count == 0); " is 219.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "	} else if (source.Parameters.Count == 1 && source.Parameters [0].Type is ArrayType && ((ArrayType)source.Parameters [0].Type).ElementType.IsKnownType (KnownTypeCode.Object) && source.Parameters [0].IsParams && isImported) { " is 223.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "		_constructorSemantics [constructor] = ConstructorScriptSemantics.InlineCode ("ss.mkdict({" + source.Parameters [0].Name + "})"' skipInInitializer: skipInInitializer); " is 166.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "			_constructorSemantics [constructor] = ConstructorScriptSemantics.StaticMethod (preferredName' generateCode: generateCode' expandParams: epa != null' skipInInitializer: skipInInitializer); " is 187.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "			_constructorSemantics [constructor] = preferredName == "$ctor" ? ConstructorScriptSemantics.Unnamed (generateCode: generateCode' expandParams: epa != null' skipInInitializer: skipInInitializer) : ConstructorScriptSemantics.Named (preferredName' generateCode: generateCode' expandParams: epa != null' skipInInitializer: skipInInitializer); " is 338.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "		if (!usedNames.ContainsKey ("$ctor") && !(isSerializable && _minimizeNames && MetadataUtils.CanBeMinimized (source' _attributeStore))) { " is 136.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "			_constructorSemantics [constructor] = isSerializable ? ConstructorScriptSemantics.StaticMethod ("$ctor"' generateCode: generateCode' expandParams: epa != null' skipInInitializer: skipInInitializer) : ConstructorScriptSemantics.Unnamed (generateCode: generateCode' expandParams: epa != null' skipInInitializer: skipInInitializer); " is 329.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The length of the statement  "			_constructorSemantics [constructor] = isSerializable ? ConstructorScriptSemantics.StaticMethod (name' generateCode: generateCode' expandParams: epa != null' skipInInitializer: skipInInitializer) : ConstructorScriptSemantics.Named (name' generateCode: generateCode' expandParams: epa != null' skipInInitializer: skipInInitializer); " is 330.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "				ValidateInlineCode (MetadataUtils.CreateDummyMethodForFieldInitialization (property' _compilation)' property' cia.Code' Messages._7163); " is 136.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "	if (GetTypeSemanticsInternal (property.DeclaringTypeDefinition).Semantics.Type == TypeScriptSemantics.ImplType.NotUsableFromScript || attributes.HasAttribute<NonScriptableAttribute> ()) { " is 187.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "		_propertySemantics [property] = PropertyScriptSemantics.GetAndSetMethods (property.CanGet ? MethodScriptSemantics.NormalMethod ("get") : null' property.CanSet ? MethodScriptSemantics.NormalMethod ("set") : null); " is 212.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "		var getica = property.Getter != null ? _attributeStore.AttributesFor (property.Getter).GetAttribute<InlineCodeAttribute> () : null; " is 131.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "		var setica = property.Setter != null ? _attributeStore.AttributesFor (property.Setter).GetAttribute<InlineCodeAttribute> () : null; " is 131.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "				_propertySemantics [property] = PropertyScriptSemantics.GetAndSetMethods (getica != null ? MethodScriptSemantics.InlineCode (getica.Code) : null' setica != null ? MethodScriptSemantics.InlineCode (setica.Code) : null); " is 218.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "				_propertySemantics [property] = PropertyScriptSemantics.GetAndSetMethods (property.Getter != null ? MethodScriptSemantics.NormalMethod ("X"' generateCode: false) : null' property.Setter != null ? MethodScriptSemantics.NormalMethod ("X"' generateCode: false) : null); " is 266.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "				_propertySemantics [property] = PropertyScriptSemantics.GetAndSetMethods (property.Getter != null ? MethodScriptSemantics.NativeIndexer () : null' property.Setter != null ? MethodScriptSemantics.NativeIndexer () : null); " is 220.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "				_propertySemantics [property] = PropertyScriptSemantics.GetAndSetMethods (property.Getter != null ? MethodScriptSemantics.NormalMethod ("X"' generateCode: false) : null' property.Setter != null ? MethodScriptSemantics.NormalMethod ("X"' generateCode: false) : null); " is 266.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "			_propertySemantics [property] = PropertyScriptSemantics.GetAndSetMethods (property.CanGet ? MethodScriptSemantics.InlineCode (saa.Alias) : null' property.CanSet ? MethodScriptSemantics.InlineCode (saa.Alias + " = {value}") : null); " is 231.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "		} else if (property.IsOverride && GetPropertySemantics ((IProperty)InheritanceHelper.GetBaseMember (property).MemberDefinition).Type != PropertyScriptSemantics.ImplType.NotUsableFromScript) { " is 191.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "		} else if (property.IsExplicitInterfaceImplementation || property.ImplementedInterfaceMembers.Any (m => GetPropertySemantics ((IProperty)m.MemberDefinition).Type != PropertyScriptSemantics.ImplType.NotUsableFromScript)) { " is 221.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "				_propertySemantics [property] = PropertyScriptSemantics.GetAndSetMethods (property.CanGet ? MethodScriptSemantics.NativeIndexer () : null' property.CanSet ? MethodScriptSemantics.NativeIndexer () : null); " is 204.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "	if (property.IsExplicitInterfaceImplementation && property.ImplementedInterfaceMembers.Any (m => GetPropertySemantics ((IProperty)m.MemberDefinition).Type == PropertyScriptSemantics.ImplType.NotUsableFromScript)) { " is 214.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "		var bases = property.ImplementedInterfaceMembers.Where (b => GetPropertySemantics ((IProperty)b).Type != PropertyScriptSemantics.ImplType.NotUsableFromScript).ToList (); " is 169.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "		var firstField = bases.FirstOrDefault (b => GetPropertySemantics ((IProperty)b).Type == PropertyScriptSemantics.ImplType.Field); " is 128.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "	bool needOwner = (backingFieldName != null && backingFieldName.Contains ("{owner}")) || (getterName != null && getterName.Item1 != null && getterName.Item1.Contains ("{owner}")) || (setterName != null && setterName.Item1 != null && setterName.Item1.Contains ("{owner}")); " is 271.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "			getterName = Tuple.Create (!nameSpecified && _minimizeNames && property.DeclaringType.Kind != TypeKind.Interface && MetadataUtils.CanBeMinimized (property' _attributeStore) ? null : (nameSpecified ? "get_" + preferredName : GetUniqueName ("get_" + preferredName' usedNames))' false); " is 283.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessProperty,The length of the statement  "			setterName = Tuple.Create (!nameSpecified && _minimizeNames && property.DeclaringType.Kind != TypeKind.Interface && MetadataUtils.CanBeMinimized (property' _attributeStore) ? null : (nameSpecified ? "set_" + preferredName : GetUniqueName ("set_" + preferredName' usedNames))' false); " is 283.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "	bool generateCode = !attributes.HasAttribute<DontGenerateAttribute> () && !attributes.HasAttribute<AlternateSignatureAttribute> (); " is 131.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "	bool? includeGenericArguments = method.TypeParameters.Count > 0 ? MetadataUtils.ShouldGenericArgumentsBeIncluded (method' _attributeStore) : false; " is 147.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "	if (eaa != null && (method.Name != "GetEnumerator" || method.IsStatic || method.TypeParameters.Count > 0 || method.Parameters.Count > 0)) { " is 139.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "	if (nsa != null || GetTypeSemanticsInternal (method.DeclaringTypeDefinition).Semantics.Type == TypeScriptSemantics.ImplType.NotUsableFromScript) { " is 146.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "		var interfaceImplementations = method.ImplementedInterfaceMembers.Where (m => method.IsExplicitInterfaceImplementation || _methodSemantics [(IMethod)m.MemberDefinition].Type != MethodScriptSemantics.ImplType.NotUsableFromScript).ToList (); " is 239.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "			} else if (method.IsOverride && GetMethodSemanticsInternal ((IMethod)InheritanceHelper.GetBaseMember (method).MemberDefinition).Type != MethodScriptSemantics.ImplType.NotUsableFromScript) { " is 189.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "					_methodSemantics [method] = MethodScriptSemantics.InlineCode ("{" + method.Parameters [0].Name + "}"' enumerateAsArray: eaa != null); " is 133.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				_methodSemantics [method] = MethodScriptSemantics.InlineCode (saa.Alias + "(" + string.Join ("' "' method.Parameters.Select (p => "{" + p.Name + "}")) + ")"); " is 158.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "			} else if (method.IsOverride && GetMethodSemanticsInternal ((IMethod)InheritanceHelper.GetBaseMember (method).MemberDefinition).Type != MethodScriptSemantics.ImplType.NotUsableFromScript) { " is 189.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				if (!string.IsNullOrEmpty (ica.NonVirtualCode) && !ValidateInlineCode (method' method' ica.NonVirtualCode' Messages._7130)) { " is 125.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				_methodSemantics [method] = MethodScriptSemantics.InlineCode (code' enumerateAsArray: eaa != null' generatedMethodName: !string.IsNullOrEmpty (ica.GeneratedMethodName) ? ica.GeneratedMethodName : null' nonVirtualInvocationLiteralCode: nonVirtualCode' nonExpandedFormLiteralCode: nonExpandedFormCode); " is 300.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "			if (method.IsOverride && GetMethodSemanticsInternal ((IMethod)InheritanceHelper.GetBaseMember (method).MemberDefinition).Type != MethodScriptSemantics.ImplType.NotUsableFromScript) { " is 182.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "					semantics = MethodScriptSemantics.NormalMethod (semantics.GeneratedMethodName' generateCode: generateCode' ignoreGenericArguments: semantics.IgnoreGenericArguments' expandParams: semantics.ExpandParams); " is 203.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				// Methods derived from methods with [InlineCode(...' GeneratedMethodName = "Something")] are treated as normal methods. " is 120.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "					var errorMethod = interfaceImplementations.FirstOrDefault (im => GetMethodSemanticsInternal ((IMethod)im.MemberDefinition).GeneratedMethodName != semantics.Name); " is 162.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				var candidateNames = interfaceImplementations.Select (im => GetMethodSemanticsInternal ((IMethod)im.MemberDefinition)).Select (s => s.Type == MethodScriptSemantics.ImplType.NormalMethod ? s.Name : (s.Type == MethodScriptSemantics.ImplType.InlineCode ? s.GeneratedMethodName : null)).Where (name => name != null).Distinct (); " is 324.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				// If the method implements more than one interface member' prefer to take the implementation from one that is not unusable. " is 124.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				var sem = interfaceImplementations.Select (im => GetMethodSemanticsInternal ((IMethod)im.MemberDefinition)).FirstOrDefault () ?? MethodScriptSemantics.NotUsableFromScript (); " is 174.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "					sem = MethodScriptSemantics.NormalMethod (sem.GeneratedMethodName' generateCode: generateCode' ignoreGenericArguments: sem.IgnoreGenericArguments' expandParams: sem.ExpandParams); " is 179.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "				// Methods implementing methods with [InlineCode(...' GeneratedMethodName = "Something")] are treated as normal methods. " is 120.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "					// Special case - Script# supports setting the name of a method to an empty string' which means that it simply removes the name (eg. "x.M(a)" becomes "x(a)"). We model this with literal code. " is 191.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "						_methodSemantics [method] = MethodScriptSemantics.InlineCode ((method.IsStatic ? "{$" + method.DeclaringType.FullName + "}" : "{this}") + "(" + string.Join ("' "' method.Parameters.Select (p => "{" + (p.IsParams && epa != null ? "*" : "") + p.Name + "}")) + ")"' enumerateAsArray: eaa != null); " is 294.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "						_methodSemantics [method] = MethodScriptSemantics.StaticMethodWithThisAsFirstArgument (name' generateCode: generateCode' ignoreGenericArguments: !includeGenericArguments.Value' expandParams: epa != null' enumerateAsArray: eaa != null); " is 235.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The length of the statement  "						_methodSemantics [method] = MethodScriptSemantics.NormalMethod (name' generateCode: generateCode' ignoreGenericArguments: !includeGenericArguments.Value' expandParams: epa != null' enumerateAsArray: eaa != null); " is 212.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessEvent,The length of the statement  "				ValidateInlineCode (MetadataUtils.CreateDummyMethodForFieldInitialization (evt' _compilation)' evt' cia.Code' Messages._7163); " is 126.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessEvent,The length of the statement  "	if (GetTypeSemanticsInternal (evt.DeclaringTypeDefinition).Semantics.Type == TypeScriptSemantics.ImplType.NotUsableFromScript || attributes.HasAttribute<NonScriptableAttribute> ()) { " is 182.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessEvent,The length of the statement  "		_eventSemantics [evt] = EventScriptSemantics.AddAndRemoveMethods (MethodScriptSemantics.NormalMethod ("add")' MethodScriptSemantics.NormalMethod ("remove")); " is 157.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessEvent,The length of the statement  "	bool needOwner = (backingFieldName != null && backingFieldName.Contains ("{owner}")) || (adderName != null && adderName.Item1 != null && adderName.Item1.Contains ("{owner}")) || (removerName != null && removerName.Item1 != null && removerName.Item1.Contains ("{owner}")); " is 271.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessEvent,The length of the statement  "			adderName = Tuple.Create (!nameSpecified && _minimizeNames && evt.DeclaringType.Kind != TypeKind.Interface && MetadataUtils.CanBeMinimized (evt' _attributeStore) ? null : (nameSpecified ? "add_" + preferredName : GetUniqueName ("add_" + preferredName' usedNames))' false); " is 272.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessEvent,The length of the statement  "			removerName = Tuple.Create (!nameSpecified && _minimizeNames && evt.DeclaringType.Kind != TypeKind.Interface && MetadataUtils.CanBeMinimized (evt' _attributeStore) ? null : (nameSpecified ? "remove_" + preferredName : GetUniqueName ("remove_" + preferredName' usedNames))' false); " is 280.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessField,The length of the statement  "				ValidateInlineCode (MetadataUtils.CreateDummyMethodForFieldInitialization (field' _compilation)' field' cia.Code' Messages._7163); " is 130.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessField,The length of the statement  "	if (GetTypeSemanticsInternal (field.DeclaringTypeDefinition).Semantics.Type == TypeScriptSemantics.ImplType.NotUsableFromScript || attributes.HasAttribute<NonScriptableAttribute> ()) { " is 184.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessField,The length of the statement  "				// This code handles the feature that it is possible to specify an invalid ScriptName for a member of a NamedValues enum' in which case that value has to be use as the constant value. " is 183.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessField,The length of the statement  "		} else if (field.DeclaringType.Kind == TypeKind.Enum && _attributeStore.AttributesFor (field.DeclaringTypeDefinition).HasAttribute<ImportedAttribute> () && _attributeStore.AttributesFor (field.DeclaringTypeDefinition).HasAttribute<ScriptNameAttribute> ()) { " is 257.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessField,The length of the statement  "		} else if (name == null || (field.IsConst && !attributes.HasAttribute<NoInlineAttribute> () && (field.DeclaringType.Kind == TypeKind.Enum || _minimizeNames))) { " is 160.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,GetTypeSemanticsInternal,The length of the statement  "	throw new ArgumentException (string.Format ("Type semantics for type {0} were not correctly imported"' typeDefinition.FullName)); " is 129.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ShouldGenerateAutoPropertyBackingField,The length of the statement  "	if (impl.Type == PropertyScriptSemantics.ImplType.GetAndSetMethods && ((impl.GetMethod != null && impl.GetMethod.GeneratedMethodName != null) || (impl.SetMethod != null && impl.SetMethod.GeneratedMethodName != null))) " is 217.
Long Statement,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ShouldGenerateAutoEventBackingField,The length of the statement  "	if (impl.Type == EventScriptSemantics.ImplType.AddAndRemoveMethods && ((impl.AddMethod != null && impl.AddMethod.GeneratedMethodName != null) || (impl.RemoveMethod != null && impl.RemoveMethod.GeneratedMethodName != null))) " is 223.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,MakeCamelCase,The length of the statement  "		return s.Substring (0' numUppercaseChars - 1).ToLower (CultureInfo.InvariantCulture) + s.Substring (numUppercaseChars - 1); " is 123.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,IsAutoProperty,The length of the statement  "	return property.Getter != null && property.Setter != null && property.Getter.BodyRegion == default(DomRegion) && property.Setter.BodyRegion == default(DomRegion); " is 162.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,IsAutoEvent,The length of the statement  "	return evt.AddAccessor != null && evt.RemoveAccessor != null && evt.AddAccessor.BodyRegion == default(DomRegion) && evt.RemoveAccessor.BodyRegion == default(DomRegion); " is 168.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,IsSerializable,The length of the statement  "	return attributeStore.AttributesFor (type).HasAttribute<ScriptSerializableAttribute> () || (type.GetAllBaseTypeDefinitions ().Any (td => td.FullName == "System.Record") && type.FullName != "System.Record"); " is 206.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,IsPreserveMemberCase,The length of the statement  "	var pmca = attributeStore.AttributesFor (type).GetAttribute<PreserveMemberCaseAttribute> () ?? attributeStore.AttributesFor (type.ParentAssembly).GetAttribute<PreserveMemberCaseAttribute> (); " is 191.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,GetAdditionalDependencies,The length of the statement  "	return attributeStore.AttributesFor (assembly).GetAttributes<AdditionalDependencyAttribute> ().Select (a => new KeyValuePair<string' string> (a.ModuleName' a.InstanceName)); " is 173.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ShouldGenericArgumentsBeIncluded,The length of the statement  "	var def = attributeStore.AttributesFor (method.ParentAssembly).GetAttribute<IncludeGenericArgumentsDefaultAttribute> (); " is 120.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,UnwrapValueTypeConstructor,The length of the statement  "	if (m is IMethod && !m.IsStatic && m.DeclaringType.Kind == TypeKind.Struct && ((IMethod)m).IsConstructor && ((IMethod)m).Parameters.Count == 0) { " is 145.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,UnwrapValueTypeConstructor,The length of the statement  "		var other = m.DeclaringType.GetConstructors ().SingleOrDefault (c => c.Parameters.Count == 1 && c.Parameters [0].Type.FullName == typeof(DummyTypeUsedToAddAttributeToDefaultValueTypeConstructor).FullName); " is 205.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CanBeMinimized,The length of the statement  "	return !member.IsExternallyVisible () || attributeStore.AttributesFor (member.ParentAssembly).HasAttribute<MinimizePublicNamesAttribute> (); " is 140.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,DeterminePreferredMemberName,The length of the statement  "		var otherMembers = member.DeclaringTypeDefinition.Methods.Where (m => m.Name == member.Name && !attributeStore.AttributesFor (m).HasAttribute<AlternateSignatureAttribute> () && !attributeStore.AttributesFor (m).HasAttribute<NonScriptableAttribute> () && !attributeStore.AttributesFor (m).HasAttribute<InlineCodeAttribute> ()).ToList (); " is 336.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,DeterminePreferredMemberName,The length of the statement  "		if (IsNamedValues (member.DeclaringTypeDefinition' attributeStore) && (name == "" || !name.IsValidJavaScriptIdentifier ())) { " is 125.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,DeterminePreferredMemberName,The length of the statement  "			// For named values enum' allow the use to specify an empty or invalid value' which will only be used as the literal value for the field' not for the name. " is 155.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,DeterminePreferredMemberName,The length of the statement  "	bool preserveName = (!isConstructor && !isAccessor && (attributes.HasAttribute<PreserveNameAttribute> () || attributes.HasAttribute<InstanceMethodOnFirstArgumentAttribute> () || IsPreserveMemberNames (member.DeclaringTypeDefinition' attributeStore) && member.ImplementedInterfaceMembers.Count == 0 && !member.IsOverride) || (IsSerializable (member.DeclaringTypeDefinition' attributeStore) && !member.IsStatic && (member is IProperty || member is IField))) || (IsNamedValues (member.DeclaringTypeDefinition' attributeStore) && member is IField); " is 544.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CreateTypeCheckMethod,The length of the statement  "	IMethod method = new DefaultResolvedMethod (new DefaultUnresolvedMethod (type.GetDefinition ().Parts [0]' "IsInstanceOfType")' compilation.TypeResolveContext.WithCurrentTypeDefinition (type.GetDefinition ())); " is 209.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CreateTypeCheckMethod,The length of the statement  "		method = new SpecializedMethod (method' new TypeParameterSubstitution (classTypeArguments: ((ParameterizedType)type).TypeArguments' methodTypeArguments: null)); " is 160.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CreateDummyMethodForFieldInitialization,The length of the statement  "	var unresolved = new DefaultUnresolvedMethod (member.DeclaringTypeDefinition.Parts [0]' "initialization for " + member.Name) { " is 126.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CreateDummyMethodForFieldInitialization,The length of the statement  "	IMethod method = new DefaultResolvedMethod (unresolved' compilation.TypeResolveContext.WithCurrentTypeDefinition (member.DeclaringTypeDefinition)); " is 147.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CreateDummyMethodForFieldInitialization,The length of the statement  "		method = new SpecializedMethod (method' new TypeParameterSubstitution (classTypeArguments: ((ParameterizedType)member.DeclaringType).TypeArguments' methodTypeArguments: null)); " is 176.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,Compile,The length of the statement  "	return new ExpressionCompiler (compilation' metadataImporter' namer' runtimeLibrary' errorReporter' variables' new Dictionary<LambdaResolveResult' NestedFunctionData> ()' t => { " is 177.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,Compile,The length of the statement  "	}' null' new NestedFunctionContext (EmptyList<IVariable>.Instance)' null' currentMethod' currentType).Compile (rr' returnValueIsImportant); " is 139.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CompileConstructorInvocation,The length of the statement  "	return Compile (new CSharpInvocationResolveResult (new TypeResolveResult (constructor.DeclaringType)' constructor' arguments' initializerStatements: initializerStatements)' currentType' currentMethod' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' true' variables' usedVariableNames); " is 306.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructAttribute,The length of the statement  "	var initializerStatements = attr.NamedArguments.Select (a => new OperatorResolveResult (a.Key.ReturnType' ExpressionType.Assign' new MemberResolveResult (new InitializedObjectResolveResult (attr.AttributeType)' a.Key)' a.Value)).ToList<ResolveResult> (); " is 254.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructAttribute,The length of the statement  "	var constructorResult = CompileConstructorInvocation (attr.Constructor' initializerStatements' currentType' null' attr.PositionalArguments' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' null' null); " is 221.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructAttribute,The length of the statement  "		return JsExpression.Invocation (JsExpression.FunctionDefinition (new string[0]' JsStatement.Block (constructorResult.AdditionalStatements.Concat (new[] { " is 153.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructFieldPropertyAccessor,The length of the statement  "	var properties = GetCommonMemberInfoProperties (m' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType); " is 159.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructFieldPropertyAccessor,The length of the statement  "	properties.Add (new JsObjectLiteralProperty ("params"' JsExpression.ArrayLiteral (m.Parameters.Select (p => instantiateType (p.Type))))); " is 137.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,GetScriptableAttributes,The length of the statement  "	return attributes.Where (a => !a.IsConditionallyRemoved && metadataImporter.GetTypeSemantics (a.AttributeType.GetDefinition ()).Type != TypeScriptSemantics.ImplType.NotUsableFromScript); " is 186.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,GetCommonMemberInfoProperties,The length of the statement  "		result.Add (new JsObjectLiteralProperty ("attr"' JsExpression.ArrayLiteral (attr.Select (a => ConstructAttribute (a' m.DeclaringTypeDefinition' compilation' metadataImporter' namer' runtimeLibrary' errorReporter))))); " is 217.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "	var properties = GetCommonMemberInfoProperties (constructor' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType); " is 169.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "	properties.Add (new JsObjectLiteralProperty ("params"' JsExpression.ArrayLiteral (constructor.Parameters.Select (p => instantiateType (p.Type))))); " is 147.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "	if (sem.Type == ConstructorScriptSemantics.ImplType.NamedConstructor || sem.Type == ConstructorScriptSemantics.ImplType.StaticMethod) " is 133.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "	if ((sem.Type == ConstructorScriptSemantics.ImplType.UnnamedConstructor || sem.Type == ConstructorScriptSemantics.ImplType.NamedConstructor || sem.Type == ConstructorScriptSemantics.ImplType.StaticMethod) && sem.ExpandParams) " is 225.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "	if (sem.Type == ConstructorScriptSemantics.ImplType.Json || sem.Type == ConstructorScriptSemantics.ImplType.InlineCode) { " is 121.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "				initializerStatements.Add (new OperatorResolveResult (p.ReturnType' ExpressionType.Assign' new MemberResolveResult (new InitializedObjectResolveResult (constructor.DeclaringType)' p)' new LocalResolveResult (variable))); " is 220.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "		var compileResult = CompileConstructorInvocation (constructor' initializerStatements' constructor.DeclaringTypeDefinition' constructor' constructorParameters' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' variables' usedNames); " is 250.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The length of the statement  "		var definition = JsExpression.FunctionDefinition (parameters.Select (p => variables [p].Name)' JsStatement.Block (compileResult.AdditionalStatements.Concat (new[] { " is 164.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		return ConstructConstructorInfo ((IMethod)m' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType); " is 153.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "	var properties = GetCommonMemberInfoProperties (m' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType); " is 159.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		if (sem.Type != MethodScriptSemantics.ImplType.NormalMethod && sem.Type != MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument && sem.Type != MethodScriptSemantics.ImplType.InlineCode) { " is 201.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		if ((sem.Type == MethodScriptSemantics.ImplType.NormalMethod || sem.Type == MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument) && sem.ExpandParams) " is 164.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "			var compileResult = Compile (CreateMethodInvocationResolveResult (method' method.IsStatic ? (ResolveResult)new TypeResolveResult (method.DeclaringType) : new ThisResolveResult (method.DeclaringType)' arguments)' method.DeclaringTypeDefinition' method' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' true' variables' usedNames); " is 349.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "			var definition = JsExpression.FunctionDefinition (parameters.Select (p => variables [p].Name)' JsStatement.Block (compileResult.AdditionalStatements.Concat (new[] { " is 164.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "				definition = JsExpression.FunctionDefinition (method.TypeParameters.Select (namer.GetTypeParameterName)' JsStatement.Return (definition)); " is 138.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		properties.Add (new JsObjectLiteralProperty ("params"' JsExpression.ArrayLiteral (method.Parameters.Select (p => instantiateType (p.Type))))); " is 142.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "			properties.Add (new JsObjectLiteralProperty ("params"' JsExpression.ArrayLiteral (prop.Parameters.Select (p => instantiateType (p.Type))))); " is 140.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "			if (sem.GetMethod != null && sem.GetMethod.Type != MethodScriptSemantics.ImplType.NormalMethod && sem.GetMethod.Type != MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument && sem.GetMethod.Type != MethodScriptSemantics.ImplType.InlineCode) { " is 256.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "			if (sem.SetMethod != null && sem.SetMethod.Type != MethodScriptSemantics.ImplType.NormalMethod && sem.SetMethod.Type != MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument && sem.SetMethod.Type != MethodScriptSemantics.ImplType.InlineCode) { " is 256.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "				properties.Add (new JsObjectLiteralProperty ("getter"' ConstructMemberInfo (prop.Getter' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType' sem.GetMethod))); " is 214.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "				properties.Add (new JsObjectLiteralProperty ("setter"' ConstructMemberInfo (prop.Setter' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType' sem.SetMethod))); " is 214.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "				properties.Add (new JsObjectLiteralProperty ("getter"' ConstructFieldPropertyAccessor (prop.Getter' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' sem.FieldName' instantiateType' isGetter: true' includeDeclaringType: includeDeclaringType))); " is 263.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "				properties.Add (new JsObjectLiteralProperty ("setter"' ConstructFieldPropertyAccessor (prop.Setter' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' sem.FieldName' instantiateType' isGetter: false' includeDeclaringType: includeDeclaringType))); " is 264.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		if (sem.AddMethod.Type != MethodScriptSemantics.ImplType.NormalMethod && sem.AddMethod.Type != MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument && sem.AddMethod.Type != MethodScriptSemantics.ImplType.InlineCode) { " is 231.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		if (sem.RemoveMethod.Type != MethodScriptSemantics.ImplType.NormalMethod && sem.RemoveMethod.Type != MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument && sem.RemoveMethod.Type != MethodScriptSemantics.ImplType.InlineCode) { " is 240.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		properties.Add (new JsObjectLiteralProperty ("adder"' ConstructMemberInfo (evt.AddAccessor' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType' sem.AddMethod))); " is 217.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "		properties.Add (new JsObjectLiteralProperty ("remover"' ConstructMemberInfo (evt.RemoveAccessor' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType' sem.RemoveMethod))); " is 225.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CreateMethodInvocationResolveResult,The length of the statement  "				return args.Count == 0 ? new MemberResolveResult (target' owner) : new CSharpInvocationResolveResult (target' prop' args); " is 122.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,CreateMethodInvocationResolveResult,The length of the statement  "					args.Count == 1 ? new MemberResolveResult (target' prop) : new CSharpInvocationResolveResult (target' prop' args.Take (args.Count - 1).ToList ())' " is 146.
Long Statement,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The length of the statement  "	return ConstructMemberInfo (m' compilation' metadataImporter' namer' runtimeLibrary' errorReporter' instantiateType' includeDeclaringType' semanticsIfAccessor); " is 160.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,RewriteMethod,The length of the statement  "	return method.TypeParameterNames.Count == 0 ? method.Definition : JsExpression.FunctionDefinition (method.TypeParameterNames' JsStatement.Return (method.Definition)); " is 166.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetMetadataDescriptor,The length of the statement  "		properties.Add (new JsObjectLiteralProperty ("attr"' JsExpression.ArrayLiteral (scriptableAttributes.Select (a => MetadataUtils.ConstructAttribute (a' type' _compilation' _metadataImporter' _namer' _runtimeLibrary' _errorReporter))))); " is 235.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetMetadataDescriptor,The length of the statement  "	if (type.Kind == TypeKind.Interface && MetadataUtils.IsJsGeneric (type' _metadataImporter) && type.TypeParameters != null && type.TypeParameters.Any (typeParameter => typeParameter.Variance != VarianceModifier.Invariant)) { " is 223.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetMetadataDescriptor,The length of the statement  "		properties.Add (new JsObjectLiteralProperty ("variance"' JsExpression.ArrayLiteral (type.TypeParameters.Select (typeParameter => JsExpression.Number (ConvertVarianceToInt (typeParameter.Variance)))))); " is 201.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetMetadataDescriptor,The length of the statement  "		var members = type.Members.Where (m => MetadataUtils.IsReflectable (m' _attributeStore)).OrderBy (m => m' MemberOrderer.Instance).Select (m => { " is 144.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetMetadataDescriptor,The length of the statement  "			return MetadataUtils.ConstructMemberInfo (m' _compilation' _metadataImporter' _namer' _runtimeLibrary' _errorReporter' t => _runtimeLibrary.InstantiateType (t' isGenericSpecialization ? _genericSpecializationReflectionRuntimeContext : _defaultReflectionRuntimeContext)' includeDeclaringType: false); " is 299.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetFieldHashCode,The length of the statement  "	bool needNullCheck = field.Type.IsReferenceType != false || field.Type.IsKnownType (KnownTypeCode.NullableOfT) || type.Kind == TypeKind.Enum && MetadataUtils.IsNamedValues (field.Type.GetDefinition ()' _attributeStore); " is 219.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateFieldCompare,The length of the statement  "	return simpleCompare ? (JsExpression)JsExpression.Same (m1' m2) : JsExpression.Invocation (JsExpression.Member (_systemScript' "equals")' m1' m2); " is 146.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructGetHashCodeMethod,The length of the statement  "				stmts.Add (JsExpression.Assign (h' JsExpression.BitwiseXor (JsExpression.Multiply (h' JsExpression.Number (397))' expr))); " is 122.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructGetHashCodeMethod,The length of the statement  "		stmts [0] = JsStatement.Return (JsExpression.BitwiseOr (((JsVariableDeclarationStatement)stmts [0]).Declarations [0].Initializer' JsExpression.Number (0))); " is 156.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructEqualsMethod,The length of the statement  "	JsExpression typeCompare = JsExpression.Invocation (JsExpression.Member (_systemScript' "isInstanceOfType")' o' JsExpression.Identifier (typeVariableName)); " is 156.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructEqualsMethod,The length of the statement  "		}' JsStatement.Block (JsStatement.If (JsExpression.LogicalNot (typeCompare)' JsStatement.Return (JsExpression.False)' null)' JsStatement.Return (parts.Aggregate ((old' p) => old == null ? p : JsExpression.LogicalAnd (old' p))))); " is 229.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "		JsStatement.Var ("r"' hasCreateInstance ? (JsExpression)JsExpression.Invocation (JsExpression.Member (JsExpression.Identifier (typevarName)' "createInstance")) : JsExpression.New (JsExpression.Identifier (typevarName))) " is 219.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "			if (def != null && def.Kind == TypeKind.Struct && _metadataImporter.GetTypeSemantics (def).Type == TypeScriptSemantics.ImplType.MutableValueType) " is 145.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "				value = _runtimeLibrary.CloneValueType (value' f.ReturnType' new DefaultRuntimeContext (type' _metadataImporter' _errorReporter' _namer)); " is 138.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "		if ((sem.Type == PropertyScriptSemantics.ImplType.GetAndSetMethods && MetadataUtils.IsAutoProperty (p) == true) || sem.Type == PropertyScriptSemantics.ImplType.Field) { " is 168.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "			var fieldName = sem.Type == PropertyScriptSemantics.ImplType.GetAndSetMethods ? _metadataImporter.GetAutoPropertyBackingFieldName (p) : sem.FieldName; " is 150.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "			if (def != null && def.Kind == TypeKind.Struct && _metadataImporter.GetTypeSemantics (def).Type == TypeScriptSemantics.ImplType.MutableValueType) " is 145.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "				value = _runtimeLibrary.CloneValueType (value' p.ReturnType' new DefaultRuntimeContext (type' _metadataImporter' _errorReporter' _namer)); " is 138.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "			if (def != null && def.Kind == TypeKind.Struct && _metadataImporter.GetTypeSemantics (def).Type == TypeScriptSemantics.ImplType.MutableValueType) " is 145.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructCloneMethod,The length of the statement  "				value = _runtimeLibrary.CloneValueType (value' e.ReturnType' new DefaultRuntimeContext (type' _metadataImporter' _errorReporter' _namer)); " is 138.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateInstanceMembers,The length of the statement  "	var members = c.InstanceMethods.Select (m => new JsObjectLiteralProperty (m.Name' m.Definition != null ? RewriteMethod (m) : JsExpression.Null)); " is 145.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateInitEnumCall,The length of the statement  "				values.Add (new JsObjectLiteralProperty (sem.Name' sem.Value is string ? JsExpression.String ((string)sem.Value) : JsExpression.Number (Convert.ToDouble (sem.Value)))); " is 168.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetImplementedInterfaces,The length of the statement  "	return type.GetAllBaseTypes ().Where (t => t.Kind == TypeKind.Interface && !t.Equals (type) && MetadataUtils.DoesTypeObeyTypeSystem (t.GetDefinition ()' _attributeStore)).Select (t => _runtimeLibrary.InstantiateType (t' new DefaultRuntimeContext (type' _metadataImporter' _errorReporter' _namer))); " is 298.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetBaseClass,The length of the statement  "	if (csBase == null || csBase.IsKnownType (KnownTypeCode.Object) || csBase.IsKnownType (KnownTypeCode.ValueType) || MetadataUtils.IsImported (csBase.GetDefinition ()' _attributeStore) && MetadataUtils.IsSerializable (csBase.GetDefinition ()' _attributeStore)) " is 258.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetBaseClass,The length of the statement  "	return _runtimeLibrary.InstantiateType (csBase' new DefaultRuntimeContext (type' _metadataImporter' _errorReporter' _namer)); " is 125.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AssignNamedConstructorPrototypes,The length of the statement  "	return c.NamedConstructors.Reverse ().Aggregate ((JsExpression)JsExpression.Member (typeRef' Prototype)' (right' ctor) => JsExpression.Assign (JsExpression.Member (JsExpression.Member (typeRef' ctor.Name)' Prototype)' right)); " is 226.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "		stmts.AddRange (c.NamedConstructors.Select (m => (JsStatement)JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' m.Name)' m.Definition))); " is 168.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "	var defaultConstructor = Saltarelle.Compiler.Utils.SelfParameterize (c.CSharpTypeDefinition).GetConstructors ().SingleOrDefault (x => x.Parameters.Count == 0 && x.IsPublic); " is 173.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "		if (sem.Type != ConstructorScriptSemantics.ImplType.UnnamedConstructor && sem.Type != ConstructorScriptSemantics.ImplType.NotUsableFromScript) { " is 144.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			var createInstance = MetadataUtils.CompileConstructorInvocation (defaultConstructor' null' c.CSharpTypeDefinition' null' EmptyList<ResolveResult>.Instance' _compilation' _metadataImporter' _namer' _runtimeLibrary' _errorReporter' null' null); " is 242.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			stmts.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' "createInstance")' JsExpression.FunctionDefinition (new string[0]' JsStatement.Block (createInstance.AdditionalStatements.Concat (new[] { " is 229.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "		stmts.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' "getDefaultValue")' hasCreateInstance ? JsExpression.Member (JsExpression.Identifier (typevarName)' "createInstance") : JsExpression.FunctionDefinition (EmptyList<string>.Instance' JsStatement.Return (JsExpression.New (JsExpression.Identifier (typevarName)))))); " is 354.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "		if (_metadataImporter.GetTypeSemantics (c.CSharpTypeDefinition).Type == TypeScriptSemantics.ImplType.MutableValueType) { " is 120.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			stmts.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' "$clone")' GenerateStructCloneMethod (c.CSharpTypeDefinition' typevarName' hasCreateInstance))); " is 188.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "	stmts.AddRange (c.StaticMethods.Select (m => (JsStatement)JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' m.Name)' RewriteMethod (m)))); " is 169.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			_errorReporter.Region = c.CSharpTypeDefinition.Attributes.Single (a => a.AttributeType.FullName == typeof(SerializableAttribute).FullName).Region; " is 146.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			var method = MetadataUtils.CreateTypeCheckMethod (Saltarelle.Compiler.Utils.SelfParameterize (c.CSharpTypeDefinition)' _compilation); " is 133.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "				var result = InlineCodeMethodCompiler.CompileExpressionInlineCodeMethodInvocation (method' tokens' JsExpression.Identifier ("obj")' new JsExpression[0]' n => { " is 159.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "				stmts.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' "isInstanceOfType")' JsExpression.FunctionDefinition (new[] { " is 153.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			stmts.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' "isInstanceOfType")' JsExpression.FunctionDefinition (new string[0]' JsStatement.Return (JsExpression.True)))); " is 203.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			JsExpression.ArrayLiteral (c.CSharpTypeDefinition.TypeParameters.Select (tp => JsExpression.Identifier (_namer.GetTypeParameterName (tp))))' " is 140.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			args.Add (JsExpression.FunctionDefinition (new string[0]' JsStatement.Return (GetBaseClass (c.CSharpTypeDefinition) ?? JsExpression.Null))); " is 140.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "		args.Add (JsExpression.FunctionDefinition (new string[0]' JsStatement.Return (JsExpression.ArrayLiteral (GetImplementedInterfaces (c.CSharpTypeDefinition))))); " is 159.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "		stmts.Add (JsExpression.Invocation (JsExpression.Member (_systemScript' c.CSharpTypeDefinition.Kind == TypeKind.Interface ? RegisterGenericInterfaceInstance : RegisterGenericClassInstance)' args)); " is 197.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			stmts.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' "__class")' JsExpression.False)); " is 125.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,AddClassMembers,The length of the statement  "			stmts.Add (JsExpression.Invocation (JsExpression.Member (_systemScript' SetMetadata)' JsExpression.Identifier (typevarName)' metadata)); " is 136.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateResourcesClass,The length of the statement  "	var fields = c.StaticInitStatements.OfType<JsExpressionStatement> ().Select (s => s.Expression).OfType<JsBinaryExpression> ().Where (expr => expr.NodeType == ExpressionNodeType.Assign && expr.Left is JsMemberAccessExpression).Select (expr => new { " is 247.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateResourcesClass,The length of the statement  "	return JsStatement.Var (_namer.GetTypeVariableName (_metadataImporter.GetTypeSemantics (c.CSharpTypeDefinition).Name)' JsExpression.ObjectLiteral (fields.Select (f => new JsObjectLiteralProperty (f.Name' f.Value)))); " is 216.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetIncludedResources,The length of the statement  "	return _compilation.MainAssembly.Resources.Where (r => r.Type == AssemblyResourceType.Embedded && !r.Name.EndsWith ("Plugin.dll")); " is 131.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,MakeInitAssemblyCall,The length of the statement  "		args.Add (JsExpression.ObjectLiteral (includedResources.Select (r => new JsObjectLiteralProperty (r.Name' JsExpression.String (Convert.ToBase64String (ReadResource (r))))))); " is 174.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "	statements.Add (JsStatement.Comment ("//////////////////////////////////////////////////////////////////////////////" + Environment.NewLine + " " + type.CSharpTypeDefinition.FullName)); " is 185.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "			statements.AddRange (c.StaticMethods.Select (m => (JsStatement)JsExpression.Binary (ExpressionNodeType.Assign' JsExpression.Member (JsExpression.Identifier (GetRoot (type.CSharpTypeDefinition))' m.Name)' m.Definition))); " is 220.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "			statements.AddRange (c.StaticMethods.Select (m => (JsStatement)JsExpression.Assign (MakeNestedMemberAccess (name + "." + m.Name)' m.Definition))); " is 146.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "				var typeParameterNames = c.CSharpTypeDefinition.TypeParameters.Select (tp => _namer.GetTypeParameterName (tp)).ToList (); " is 121.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "				var replacer = new GenericSimplifier (c.CSharpTypeDefinition' typeParameterNames' JsExpression.Identifier (InstantiatedGenericTypeVariableName)); " is 145.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "				statements.Add (JsStatement.Var (typevarName' JsExpression.FunctionDefinition (typeParameterNames' JsStatement.Block (stmts)))); " is 128.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "				statements.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' TypeName)' JsExpression.String (_metadataImporter.GetTypeSemantics (c.CSharpTypeDefinition).Name))); " is 197.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "				statements.Add (JsExpression.Invocation (JsExpression.Member (_systemScript' c.CSharpTypeDefinition.Kind == TypeKind.Interface ? InitGenericInterface : InitGenericClass)' args)); " is 178.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "				statements.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' TypeName)' JsExpression.String (_metadataImporter.GetTypeSemantics (c.CSharpTypeDefinition).Name))); " is 197.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "		statements.Add (JsStatement.Var (typevarName' JsExpression.FunctionDefinition (new string[0]' JsStatement.EmptyBlock))); " is 120.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "		statements.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (typevarName)' TypeName)' JsExpression.String (_metadataImporter.GetTypeSemantics (e.CSharpTypeDefinition).Name))); " is 197.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateTypeDefinitions,The length of the statement  "		statements.Add (JsExpression.Assign (MakeNestedMemberAccess (name' JsExpression.Identifier (root))' JsExpression.Identifier (typevarName))); " is 140.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateInitTypeCalls,The length of the statement  "				statements.Add (CreateInitInterfaceCall (c' typevarName' GetImplementedInterfaces (type.CSharpTypeDefinition.GetDefinition ()).ToList ())); " is 139.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateInitTypeCalls,The length of the statement  "				statements.Add (CreateInitClassCall (c' typevarName' GetBaseClass (type.CSharpTypeDefinition)' GetImplementedInterfaces (type.CSharpTypeDefinition).ToList ())); " is 160.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateInitTypeCalls,The length of the statement  "					statements.Add (JsExpression.Assign (JsExpression.Member (JsExpression.Identifier (_namer.GetTypeVariableName (name))' "__class")' JsExpression.False)); " is 152.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateInitTypeCalls,The length of the statement  "	return new TypeOOPEmulationPhase (type.CSharpTypeDefinition.GetAllBaseTypeDefinitions ().Where (t => !t.Equals (type.CSharpTypeDefinition))' statements); " is 153.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,CreateMetadataAssignment,The length of the statement  "			(JsStatement)JsExpression.Invocation (JsExpression.Member (_systemScript' SetMetadata)' JsExpression.Identifier (_namer.GetTypeVariableName (_metadataImporter.GetTypeSemantics (type.CSharpTypeDefinition).Name))' metadata) " is 221.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetCodeBeforeFirstType,The length of the statement  "	result.AddRange (exportedNamespacesByRoot.OrderBy (x => x.Key).SelectMany (x => CreateNamespaces (JsExpression.Identifier (x.Key)' x.Value))); " is 142.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetCodeAfterLastType,The length of the statement  "	var scriptableAttributes = MetadataUtils.GetScriptableAttributes (_compilation.MainAssembly.AssemblyAttributes' _metadataImporter).ToList (); " is 141.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetCodeAfterLastType,The length of the statement  "			(JsStatement)JsExpression.Assign (JsExpression.Member (_linker.CurrentAssemblyExpression' "attr")' JsExpression.ArrayLiteral (scriptableAttributes.Select (a => MetadataUtils.ConstructAttribute (a' null' _compilation' _metadataImporter' _namer' _runtimeLibrary' _errorReporter)))) " is 279.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetStaticInitStatements,The length of the statement  "	return type.StaticInitStatements.Count > 0 && !MetadataUtils.IsJsGeneric (type.CSharpTypeDefinition' _metadataImporter) && !MetadataUtils.IsResources (type.CSharpTypeDefinition' _attributeStore) ? (IEnumerable<JsStatement>)new JsStatement[] { " is 242.
Long Statement,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetStaticInitStatements,The length of the statement  "		JsExpression.Invocation (JsExpression.FunctionDefinition (new string[0]' JsStatement.Block (type.StaticInitStatements))) " is 120.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetTypeDefinitionScriptType,The length of the statement  "	if (context != TypeContext.GetScriptType && context != TypeContext.TypeOf && !MetadataUtils.DoesTypeObeyTypeSystem (type' _attributeStore)) { " is 141.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetTypeDefinitionScriptType,The length of the statement  "	} else if (MetadataUtils.IsSerializable (type' _attributeStore) && !MetadataUtils.DoesTypeObeyTypeSystem (type' _attributeStore)) { " is 131.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetScriptType,The length of the statement  "			return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "makeGenericType")' CreateTypeReferenceExpression (type.GetDefinition ())' JsExpression.ArrayLiteral (pt.TypeArguments.Select (a => GetScriptType (a' TypeContext.GenericArgument' context)))); " is 291.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetCastTarget,The length of the statement  "		var underlying = MetadataUtils.IsNamedValues (def' _attributeStore) ? _compilation.FindType (KnownTypeCode.String) : def.EnumUnderlyingType; " is 140.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetCastTarget,The length of the statement  "		if (MetadataUtils.IsSerializable (def' _attributeStore) && string.IsNullOrEmpty (MetadataUtils.GetSerializableTypeCheckCode (def' _attributeStore))) " is 148.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetCastTarget,The length of the statement  "		if (sems.Type != TypeScriptSemantics.ImplType.NotUsableFromScript && semt.Type != TypeScriptSemantics.ImplType.NotUsableFromScript && sems.Name == semt.Name && Equals (ts.ParentAssembly' tt.ParentAssembly)) " is 206.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CompileImportedTypeCheckCode,The length of the statement  "	return JsExpression.LogicalAnd (ReferenceNotEquals (@this' JsExpression.Null' context)' InlineCodeMethodCompiler.CompileExpressionInlineCodeMethodInvocation (method' tokens' @this' EmptyList<JsExpression>.Instance' n => { " is 221.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,TypeIs,The length of the statement  "	if (def != null && (!MetadataUtils.DoesTypeObeyTypeSystem (def' _attributeStore) || (MetadataUtils.IsSerializable (def' _attributeStore) && string.IsNullOrEmpty (MetadataUtils.GetSerializableTypeCheckCode (def' _attributeStore))))) { " is 233.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,TypeIs,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "isInstanceOfType")' expression' jsTarget); " is 143.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,TryDowncast,The length of the statement  "		if (def != null && (!MetadataUtils.DoesTypeObeyTypeSystem (def' _attributeStore) || (MetadataUtils.IsSerializable (def' _attributeStore) && string.IsNullOrEmpty (MetadataUtils.GetSerializableTypeCheckCode (def' _attributeStore))))) { " is 233.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,TryDowncast,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "safeCast")' expression' jsTarget); " is 135.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Downcast,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "cast")' expression' jsTarget); " is 131.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,ReferenceEquals,The length of the statement  "		return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "isNullOrUndefined")' b); " is 125.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,ReferenceEquals,The length of the statement  "		return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "isNullOrUndefined")' a); " is 125.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,ReferenceEquals,The length of the statement  "		return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "referenceEquals")' a' b); " is 126.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,ReferenceNotEquals,The length of the statement  "		return JsExpression.LogicalNot (JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "referenceEquals")' a' b)); " is 152.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,InstantiateGenericMethod,The length of the statement  "	return JsExpression.Invocation (method' typeArguments.Select (a => GetScriptType (a' TypeContext.GenericArgument' context))); " is 125.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,MakeException,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.Exception)' "wrap")' operand); " is 133.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,IntegerDivision,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.Int32)' "div")' numerator' denominator); " is 143.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,FloatToInt,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.Int32)' "trunc")' operand); " is 130.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Lift,The length of the statement  "				bool isIntegerType = t.IsKnownType (KnownTypeCode.Byte) || t.IsKnownType (KnownTypeCode.SByte) || t.IsKnownType (KnownTypeCode.Int16) || t.IsKnownType (KnownTypeCode.UInt16) || t.IsKnownType (KnownTypeCode.Char) || t.IsKnownType (KnownTypeCode.Int32) || t.IsKnownType (KnownTypeCode.UInt32) || t.IsKnownType (KnownTypeCode.Int64) || t.IsKnownType (KnownTypeCode.UInt64); " is 370.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Lift,The length of the statement  "		return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.NullableOfT)' GetMethodNameForLift (liftType' ie.Arguments.Count))' new[] { " is 178.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Lift,The length of the statement  "				return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.NullableOfT)' methodName)' ((JsUnaryExpression)expression).Operand); " is 171.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Lift,The length of the statement  "				return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.NullableOfT)' methodName)' ((JsBinaryExpression)expression).Left' ((JsBinaryExpression)expression).Right); " is 209.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,FromNullable,The length of the statement  "	// This is a little hacky. The problem we want to solve is that 'bool b = myDynamic' should compile to !!myDynamic' but the actual call is unbox(convert(myDynamic' bool))' where convert() will return the !!. Anyway' in JS' the !expression will never be null anyway. " is 265.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,FromNullable,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "unbox")' expression); " is 122.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,LiftedBooleanAnd,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.NullableOfT)' "and")' a' b); " is 131.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,LiftedBooleanOr,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.NullableOfT)' "or")' a' b); " is 130.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,LiftedBooleanXor,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (KnownTypeReference.NullableOfT)' "xor")' a' b); " is 131.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Bind,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "mkdel")' target' function); " is 128.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,BindFirstParameterToThis,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "thisFix")' function); " is 122.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Default,The length of the statement  "		return MetadataUtils.IsNamedValues (type.GetDefinition ()' _attributeStore) ? JsExpression.Null : JsExpression.Number (0); " is 122.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Default,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "getDefaultValue")' GetScriptType (type' TypeContext.GetScriptType' context)); " is 178.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CreateArray,The length of the statement  "		return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "multidimArray")' new[] { " is 125.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CloneDelegate,The length of the statement  "		// The user does something like "D d1 = F(); var d2 = new D(d1)". Assume he does this for a reason and create a clone of the delegate. " is 134.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CloneDelegate,The length of the statement  "		return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "delegateClone")' source); " is 126.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CloneDelegate,The length of the statement  "		// The clone is just to convert the delegate to a different type. The risk of anyone comparing the references is small' so just return the original as delegates are immutable anyway. " is 182.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The length of the statement  "	JsExpression jsMethod = JsExpression.Member (JsExpression.Member (GetScriptType (method.DeclaringType' TypeContext.GetScriptType' context)' "prototype")' impl.Name); " is 165.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The length of the statement  "			return JsExpression.Invocation (JsExpression.Member (jsMethod' "call")' args.Take (args.Count - 1).Concat (((JsArrayLiteralExpression)args [args.Count - 1]).Elements)); " is 168.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The length of the statement  "			return JsExpression.Invocation (JsExpression.Member (jsMethod' "apply")' args [0]' args.Count == 2 ? args [1] : JsExpression.Invocation (JsExpression.Member (JsExpression.ArrayLiteral (args.Skip (1).Take (args.Count - 2))' "concat")' args [args.Count - 1])); " is 258.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,BindBaseCall,The length of the statement  "	JsExpression jsMethod = JsExpression.Member (JsExpression.Member (GetScriptType (method.DeclaringType' TypeContext.GetScriptType' context)' "prototype")' impl.Name); " is 165.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,BindBaseCall,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "mkdel")' @this' jsMethod); " is 127.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,MakeEnumerator,The length of the statement  "	return JsExpression.New (CreateTypeReferenceExpression (ReflectionHelper.ParseReflectionName ("System.Collections.Generic.IteratorBlockEnumerator`1"))' moveNext' getCurrent' dispose ?? (JsExpression)JsExpression.Null' JsExpression.This); " is 237.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,MakeEnumerable,The length of the statement  "	return JsExpression.New (CreateTypeReferenceExpression (ReflectionHelper.ParseReflectionName ("System.Collections.Generic.IteratorBlockEnumerable`1"))' getEnumerator' JsExpression.This); " is 186.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetMultiDimensionalArrayValue,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "arrayGet")' new[] { " is 120.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,SetMultiDimensionalArrayValue,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "arraySet")' new[] { " is 120.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CreateTaskCompletionSource,The length of the statement  "	return JsExpression.New (CreateTypeReferenceExpression (ReflectionHelper.ParseReflectionName ("System.Threading.Tasks.TaskCompletionSource`1"))); " is 145.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,SetAsyncException,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (taskCompletionSource' "setException")' MakeException (exception' context)); " is 128.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,ApplyConstructor,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "applyConstructor")' constructor' argumentsArray); " is 150.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,ShallowCopy,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "shallowCopy")' source' target); " is 132.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,FindIndexInReflectableMembers,The length of the statement  "	foreach (var m in member.DeclaringTypeDefinition.Members.Where (m => MetadataUtils.IsReflectable (m' _attributeStore)).OrderBy (m => m' MemberOrderer.Instance)) { " is 162.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetMember,The length of the statement  "		JsExpression result = JsExpression.Index (JsExpression.Member (JsExpression.Member (TypeOf (member.DeclaringType' context)' "__metadata")' "members")' JsExpression.Number (index)); " is 180.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetMember,The length of the statement  "		return MetadataUtils.ConstructMemberInfo (member' _compilation' _metadataImporter' _namer' this' _errorReporter' t => TypeOf (t' context)' includeDeclaringType: true); " is 167.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetExpressionForLocal,The length of the statement  "	return JsExpression.ObjectLiteral (new JsObjectLiteralProperty ("ntype"' JsExpression.Number ((int)ExpressionType.MemberAccess))' new JsObjectLiteralProperty ("type"' scriptType)' new JsObjectLiteralProperty ("expression"' JsExpression.ObjectLiteral (new JsObjectLiteralProperty ("ntype"' JsExpression.Number ((int)ExpressionType.Constant))' new JsObjectLiteralProperty ("type"' scriptType)' new JsObjectLiteralProperty ("value"' JsExpression.ObjectLiteral ())))' new JsObjectLiteralProperty ("member"' JsExpression.ObjectLiteral (new JsObjectLiteralProperty ("typeDef"' new JsTypeReferenceExpression (_compilation.FindType (KnownTypeCode.Object).GetDefinition ()))' new JsObjectLiteralProperty ("name"' JsExpression.String (name))' new JsObjectLiteralProperty ("type"' JsExpression.Number ((int)MemberTypes.Property))' new JsObjectLiteralProperty ("returnType"' scriptType)' new JsObjectLiteralProperty ("getter"' JsExpression.ObjectLiteral (new JsObjectLiteralProperty ("typeDef"' new JsTypeReferenceExpression (_compilation.FindType (KnownTypeCode.Object).GetDefinition ()))' new JsObjectLiteralProperty ("name"' JsExpression.String ("get_" + name))' new JsObjectLiteralProperty ("type"' JsExpression.Number ((int)MemberTypes.Method))' new JsObjectLiteralProperty ("returnType"' scriptType)' new JsObjectLiteralProperty ("params"' JsExpression.ArrayLiteral ())' new JsObjectLiteralProperty ("def"' getterDefinition)))' new JsObjectLiteralProperty ("setter"' JsExpression.ObjectLiteral (new JsObjectLiteralProperty ("typeDef"' new JsTypeReferenceExpression (_compilation.FindType (KnownTypeCode.Object).GetDefinition ()))' new JsObjectLiteralProperty ("name"' JsExpression.String ("set_" + name))' new JsObjectLiteralProperty ("type"' JsExpression.Number ((int)MemberTypes.Method))' new JsObjectLiteralProperty ("returnType"' new JsTypeReferenceExpression (_compilation.FindType (KnownTypeCode.Void).GetDefinition ()))' new JsObjectLiteralProperty ("params"' JsExpression.ArrayLiteral (scriptType))' new JsObjectLiteralProperty ("def"' setterDefinition)))))); " is 2061.
Long Statement,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CloneValueType,The length of the statement  "	return JsExpression.Invocation (JsExpression.Member (CreateTypeReferenceExpression (_systemScript)' "clone")' GetScriptType (type' TypeContext.GetScriptType' context)' value); " is 175.
Complex Conditional,CoreLib.Plugin,Namer,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\Namer.cs,GetVariableName,The conditional expression  "desiredName != null && !usedNames.Contains (baseName) && !Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (desiredName) && baseName != "ss""  is complex.
Complex Conditional,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The conditional expression  "source.Parameters.Count == 1 && source.Parameters [0].Type is ArrayType && ((ArrayType)source.Parameters [0].Type).ElementType.IsKnownType (KnownTypeCode.Object) && source.Parameters [0].IsParams && isImported"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessConstructor,The conditional expression  "!usedNames.ContainsKey ("$ctor") && !(isSerializable && _minimizeNames && MetadataUtils.CanBeMinimized (source' _attributeStore))"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessMethod,The conditional expression  "eaa != null && (method.Name != "GetEnumerator" || method.IsStatic || method.TypeParameters.Count > 0 || method.Parameters.Count > 0)"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ProcessField,The conditional expression  "name == null || (field.IsConst && !attributes.HasAttribute<NoInlineAttribute> () && (field.DeclaringType.Kind == TypeKind.Enum || _minimizeNames))"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ShouldGenerateAutoPropertyBackingField,The conditional expression  "impl.Type == PropertyScriptSemantics.ImplType.GetAndSetMethods && ((impl.GetMethod != null && impl.GetMethod.GeneratedMethodName != null) || (impl.SetMethod != null && impl.SetMethod.GeneratedMethodName != null))"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataImporter,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataImporter.cs,ShouldGenerateAutoEventBackingField,The conditional expression  "impl.Type == EventScriptSemantics.ImplType.AddAndRemoveMethods && ((impl.AddMethod != null && impl.AddMethod.GeneratedMethodName != null) || (impl.RemoveMethod != null && impl.RemoveMethod.GeneratedMethodName != null))"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,UnwrapValueTypeConstructor,The conditional expression  "m is IMethod && !m.IsStatic && m.DeclaringType.Kind == TypeKind.Struct && ((IMethod)m).IsConstructor && ((IMethod)m).Parameters.Count == 0"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructConstructorInfo,The conditional expression  "(sem.Type == ConstructorScriptSemantics.ImplType.UnnamedConstructor || sem.Type == ConstructorScriptSemantics.ImplType.NamedConstructor || sem.Type == ConstructorScriptSemantics.ImplType.StaticMethod) && sem.ExpandParams"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The conditional expression  "sem.GetMethod != null && sem.GetMethod.Type != MethodScriptSemantics.ImplType.NormalMethod && sem.GetMethod.Type != MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument && sem.GetMethod.Type != MethodScriptSemantics.ImplType.InlineCode"  is complex.
Complex Conditional,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,ConstructMemberInfo,The conditional expression  "sem.SetMethod != null && sem.SetMethod.Type != MethodScriptSemantics.ImplType.NormalMethod && sem.SetMethod.Type != MethodScriptSemantics.ImplType.StaticMethodWithThisAsFirstArgument && sem.SetMethod.Type != MethodScriptSemantics.ImplType.InlineCode"  is complex.
Complex Conditional,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetMetadataDescriptor,The conditional expression  "type.Kind == TypeKind.Interface && MetadataUtils.IsJsGeneric (type' _metadataImporter) && type.TypeParameters != null && type.TypeParameters.Any (typeParameter => typeParameter.Variance != VarianceModifier.Invariant)"  is complex.
Complex Conditional,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetBaseClass,The conditional expression  "csBase == null || csBase.IsKnownType (KnownTypeCode.Object) || csBase.IsKnownType (KnownTypeCode.ValueType) || MetadataUtils.IsImported (csBase.GetDefinition ()' _attributeStore) && MetadataUtils.IsSerializable (csBase.GetDefinition ()' _attributeStore)"  is complex.
Complex Conditional,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetCastTarget,The conditional expression  "sems.Type != TypeScriptSemantics.ImplType.NotUsableFromScript && semt.Type != TypeScriptSemantics.ImplType.NotUsableFromScript && sems.Name == semt.Name && Equals (ts.ParentAssembly' tt.ParentAssembly)"  is complex.
Complex Conditional,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,TypeIs,The conditional expression  "def != null && (!MetadataUtils.DoesTypeObeyTypeSystem (def' _attributeStore) || (MetadataUtils.IsSerializable (def' _attributeStore) && string.IsNullOrEmpty (MetadataUtils.GetSerializableTypeCheckCode (def' _attributeStore))))"  is complex.
Complex Conditional,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,TryDowncast,The conditional expression  "def != null && (!MetadataUtils.DoesTypeObeyTypeSystem (def' _attributeStore) || (MetadataUtils.IsSerializable (def' _attributeStore) && string.IsNullOrEmpty (MetadataUtils.GetSerializableTypeCheckCode (def' _attributeStore))))"  is complex.
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: if (ensureValidIdentifier) {  	string result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1);  	while (i >= _encodeNumberTable.Length - 10) {  		i /= _encodeNumberTable.Length - 10;  		result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  	}  	return Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (result) ? "_" + result : result;  } else {  	string result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1);  	while (i >= _encodeNumberTable.Length) {  		i /= _encodeNumberTable.Length;  		result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1) + result;  	}  	return result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: if (ensureValidIdentifier) {  	string result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1);  	while (i >= _encodeNumberTable.Length - 10) {  		i /= _encodeNumberTable.Length - 10;  		result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  	}  	return Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (result) ? "_" + result : result;  } else {  	string result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1);  	while (i >= _encodeNumberTable.Length) {  		i /= _encodeNumberTable.Length;  		result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1) + result;  	}  	return result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: if (ensureValidIdentifier) {  	string result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1);  	while (i >= _encodeNumberTable.Length - 10) {  		i /= _encodeNumberTable.Length - 10;  		result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  	}  	return Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (result) ? "_" + result : result;  } else {  	string result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1);  	while (i >= _encodeNumberTable.Length) {  		i /= _encodeNumberTable.Length;  		result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1) + result;  	}  	return result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: if (ensureValidIdentifier) {  	string result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1);  	while (i >= _encodeNumberTable.Length - 10) {  		i /= _encodeNumberTable.Length - 10;  		result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  	}  	return Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (result) ? "_" + result : result;  } else {  	string result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1);  	while (i >= _encodeNumberTable.Length) {  		i /= _encodeNumberTable.Length;  		result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1) + result;  	}  	return result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: if (ensureValidIdentifier) {  	string result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1);  	while (i >= _encodeNumberTable.Length - 10) {  		i /= _encodeNumberTable.Length - 10;  		result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  	}  	return Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (result) ? "_" + result : result;  } else {  	string result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1);  	while (i >= _encodeNumberTable.Length) {  		i /= _encodeNumberTable.Length;  		result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1) + result;  	}  	return result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: if (ensureValidIdentifier) {  	string result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1);  	while (i >= _encodeNumberTable.Length - 10) {  		i /= _encodeNumberTable.Length - 10;  		result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  	}  	return Saltarelle.Compiler.JSModel.Utils.IsJavaScriptReservedWord (result) ? "_" + result : result;  } else {  	string result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1);  	while (i >= _encodeNumberTable.Length) {  		i /= _encodeNumberTable.Length;  		result = _encodeNumberTable.Substring (i % _encodeNumberTable.Length' 1) + result;  	}  	return result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: while (i >= _encodeNumberTable.Length - 10) {  	i /= _encodeNumberTable.Length - 10;  	result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: while (i >= _encodeNumberTable.Length - 10) {  	i /= _encodeNumberTable.Length - 10;  	result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: while (i >= _encodeNumberTable.Length - 10) {  	i /= _encodeNumberTable.Length - 10;  	result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: while (i >= _encodeNumberTable.Length - 10) {  	i /= _encodeNumberTable.Length - 10;  	result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  }  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: i /= _encodeNumberTable.Length - 10;  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  
Magic Number,CoreLib.Plugin,MetadataUtils,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\MetadataUtils.cs,EncodeNumber,The following statement contains a magic number: result = _encodeNumberTable.Substring (i % (_encodeNumberTable.Length - 10) + 10' 1) + result;  
Magic Number,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,ConvertVarianceToInt,The following statement contains a magic number: switch (variance) {  case VarianceModifier.Covariant:  	return 1;  case VarianceModifier.Contravariant:  	return 2;  default:  	return 0;  }  
Magic Number,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,ConvertVarianceToInt,The following statement contains a magic number: return 2;  
Magic Number,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructGetHashCodeMethod,The following statement contains a magic number: foreach (var f in type.Fields.Where (f => !f.IsStatic)) {  	var expr = GetFieldHashCode (f);  	if (expr != null) {  		if (stmts.Count == 0) {  			stmts.Add (JsStatement.Var ("h"' expr));  		} else {  			stmts.Add (JsExpression.Assign (h' JsExpression.BitwiseXor (JsExpression.Multiply (h' JsExpression.Number (397))' expr)));  		}  	}  }  
Magic Number,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructGetHashCodeMethod,The following statement contains a magic number: if (expr != null) {  	if (stmts.Count == 0) {  		stmts.Add (JsStatement.Var ("h"' expr));  	} else {  		stmts.Add (JsExpression.Assign (h' JsExpression.BitwiseXor (JsExpression.Multiply (h' JsExpression.Number (397))' expr)));  	}  }  
Magic Number,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructGetHashCodeMethod,The following statement contains a magic number: if (stmts.Count == 0) {  	stmts.Add (JsStatement.Var ("h"' expr));  } else {  	stmts.Add (JsExpression.Assign (h' JsExpression.BitwiseXor (JsExpression.Multiply (h' JsExpression.Number (397))' expr)));  }  
Magic Number,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateStructGetHashCodeMethod,The following statement contains a magic number: stmts.Add (JsExpression.Assign (h' JsExpression.BitwiseXor (JsExpression.Multiply (h' JsExpression.Number (397))' expr)));  
Magic Number,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetMethodNameForLift,The following statement contains a magic number: if (argumentCount == 2) {  	switch (liftType) {  	case LiftType.Regular:  		return "lift2";  	case LiftType.Comparison:  		return "liftcmp";  	case LiftType.Equality:  		return "lifteq";  	case LiftType.Inequality:  		return "liftne";  	}  }  
Magic Number,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The following statement contains a magic number: if (impl.ExpandParams) {  	var args = thisAndArguments.ToList ();  	if (args [args.Count - 1] is JsArrayLiteralExpression) {  		return JsExpression.Invocation (JsExpression.Member (jsMethod' "call")' args.Take (args.Count - 1).Concat (((JsArrayLiteralExpression)args [args.Count - 1]).Elements));  	} else {  		return JsExpression.Invocation (JsExpression.Member (jsMethod' "apply")' args [0]' args.Count == 2 ? args [1] : JsExpression.Invocation (JsExpression.Member (JsExpression.ArrayLiteral (args.Skip (1).Take (args.Count - 2))' "concat")' args [args.Count - 1]));  	}  } else {  	return JsExpression.Invocation (JsExpression.Member (jsMethod' "call")' thisAndArguments);  }  
Magic Number,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The following statement contains a magic number: if (impl.ExpandParams) {  	var args = thisAndArguments.ToList ();  	if (args [args.Count - 1] is JsArrayLiteralExpression) {  		return JsExpression.Invocation (JsExpression.Member (jsMethod' "call")' args.Take (args.Count - 1).Concat (((JsArrayLiteralExpression)args [args.Count - 1]).Elements));  	} else {  		return JsExpression.Invocation (JsExpression.Member (jsMethod' "apply")' args [0]' args.Count == 2 ? args [1] : JsExpression.Invocation (JsExpression.Member (JsExpression.ArrayLiteral (args.Skip (1).Take (args.Count - 2))' "concat")' args [args.Count - 1]));  	}  } else {  	return JsExpression.Invocation (JsExpression.Member (jsMethod' "call")' thisAndArguments);  }  
Magic Number,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The following statement contains a magic number: if (args [args.Count - 1] is JsArrayLiteralExpression) {  	return JsExpression.Invocation (JsExpression.Member (jsMethod' "call")' args.Take (args.Count - 1).Concat (((JsArrayLiteralExpression)args [args.Count - 1]).Elements));  } else {  	return JsExpression.Invocation (JsExpression.Member (jsMethod' "apply")' args [0]' args.Count == 2 ? args [1] : JsExpression.Invocation (JsExpression.Member (JsExpression.ArrayLiteral (args.Skip (1).Take (args.Count - 2))' "concat")' args [args.Count - 1]));  }  
Magic Number,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The following statement contains a magic number: if (args [args.Count - 1] is JsArrayLiteralExpression) {  	return JsExpression.Invocation (JsExpression.Member (jsMethod' "call")' args.Take (args.Count - 1).Concat (((JsArrayLiteralExpression)args [args.Count - 1]).Elements));  } else {  	return JsExpression.Invocation (JsExpression.Member (jsMethod' "apply")' args [0]' args.Count == 2 ? args [1] : JsExpression.Invocation (JsExpression.Member (JsExpression.ArrayLiteral (args.Skip (1).Take (args.Count - 2))' "concat")' args [args.Count - 1]));  }  
Magic Number,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The following statement contains a magic number: return JsExpression.Invocation (JsExpression.Member (jsMethod' "apply")' args [0]' args.Count == 2 ? args [1] : JsExpression.Invocation (JsExpression.Member (JsExpression.ArrayLiteral (args.Skip (1).Take (args.Count - 2))' "concat")' args [args.Count - 1]));  
Magic Number,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,CallBase,The following statement contains a magic number: return JsExpression.Invocation (JsExpression.Member (jsMethod' "apply")' args [0]' args.Count == 2 ? args [1] : JsExpression.Invocation (JsExpression.Member (JsExpression.ArrayLiteral (args.Skip (1).Take (args.Count - 2))' "concat")' args [args.Count - 1]));  
Missing Default,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GetFieldHashCode,The following switch statement is missing a default case: switch (((ITypeDefinition)type).KnownTypeCode) {  case KnownTypeCode.Boolean:  	result = JsExpression.Conditional (member' JsExpression.Number (1)' JsExpression.Number (0));  	break;  case KnownTypeCode.Byte:  case KnownTypeCode.SByte:  case KnownTypeCode.Char:  case KnownTypeCode.Int16:  case KnownTypeCode.UInt16:  case KnownTypeCode.Int32:  case KnownTypeCode.UInt32:  case KnownTypeCode.Int64:  case KnownTypeCode.UInt64:  case KnownTypeCode.Decimal:  case KnownTypeCode.Single:  case KnownTypeCode.Double:  	result = needNullCheck ? JsExpression.LogicalOr (member' JsExpression.Number (0)) : member;  	break;  }  
Missing Default,CoreLib.Plugin,OOPEmulator,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\OOPEmulator.cs,GenerateFieldCompare,The following switch statement is missing a default case: switch (((ITypeDefinition)field.Type).KnownTypeCode) {  case KnownTypeCode.Boolean:  case KnownTypeCode.Byte:  case KnownTypeCode.SByte:  case KnownTypeCode.Char:  case KnownTypeCode.Int16:  case KnownTypeCode.UInt16:  case KnownTypeCode.Int32:  case KnownTypeCode.UInt32:  case KnownTypeCode.Int64:  case KnownTypeCode.UInt64:  case KnownTypeCode.Decimal:  case KnownTypeCode.Single:  case KnownTypeCode.Double:  	simpleCompare = true;  	break;  }  
Missing Default,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,GetMethodNameForLift,The following switch statement is missing a default case: switch (liftType) {  case LiftType.Regular:  	return "lift2";  case LiftType.Comparison:  	return "liftcmp";  case LiftType.Equality:  	return "lifteq";  case LiftType.Inequality:  	return "liftne";  }  
Missing Default,CoreLib.Plugin,RuntimeLibrary,F:\newReposMay17\erik-kallen_SaltarelleCompiler\Runtime\CoreLib.Plugin\RuntimeLibrary.cs,Default,The following switch statement is missing a default case: switch (((ITypeDefinition)type).KnownTypeCode) {  case KnownTypeCode.Boolean:  	return JsExpression.False;  case KnownTypeCode.NullableOfT:  	return JsExpression.Null;  case KnownTypeCode.DateTime:  	return JsExpression.New (CreateTypeReferenceExpression (KnownTypeReference.DateTime)' JsExpression.Number (0));  case KnownTypeCode.Byte:  case KnownTypeCode.SByte:  case KnownTypeCode.Char:  case KnownTypeCode.Int16:  case KnownTypeCode.UInt16:  case KnownTypeCode.Int32:  case KnownTypeCode.UInt32:  case KnownTypeCode.Int64:  case KnownTypeCode.UInt64:  case KnownTypeCode.Decimal:  case KnownTypeCode.Single:  case KnownTypeCode.Double:  	return JsExpression.Number (0);  }  
