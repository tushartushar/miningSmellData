Implementation smell,Namespace,Class,File,Method,Description
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,AsyncTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\AsyncTests.cs,AsyncMethodWithTryFinallyNested,The method has 120 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,AsyncTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\AsyncTests.cs,AsyncMethodWithTryCatchNested,The method has 113 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,AsyncTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\AsyncTests.cs,AsyncMethodWithTryCatchFinallyNested,The method has 132 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,AsyncTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\AsyncTests.cs,ComplexAsyncMethodWithTryFinally,The method has 103 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,AsyncTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\AsyncTests.cs,AsyncMethodWithNestedTryBlocks,The method has 268 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,AsyncTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\AsyncTests.cs,TwoTryBlocksInARow,The method has 114 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,IteratorBlockTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\IteratorBlockTests.cs,YieldBreakExecutesFinallyHandlersNested1,The method has 209 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,IteratorBlockTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\IteratorBlockTests.cs,YieldBreakExecutesFinallyHandlersNested2,The method has 236 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,IteratorBlockTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\IteratorBlockTests.cs,GotoOutOfTryBlockExecutesFinallyHandlers1,The method has 204 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,IteratorBlockTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\IteratorBlockTests.cs,GotoOutOfTryBlockExecutesFinallyHandlers2,The method has 225 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,IteratorBlockTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\IteratorBlockTests.cs,YieldInTryWithFinallyNested,The method has 202 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,IteratorBlockTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\IteratorBlockTests.cs,TwoTryBlocksAfterEachother,The method has 137 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,IfStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\IfStatementTests.cs,NestedIfElse,The method has 109 lines of code.
Long Method,Saltarelle.Compiler.Tests.StateMachineTests,CompositeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\CompositeTests.cs,TryCatchFinallyAreRewrittenByThemselves,The method has 218 lines of code.
Long Parameter List,Saltarelle.Compiler.Tests,Common,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\Common.cs,CreateMockTypeDefinition,The method has 5 parameters. Parameters: name' assembly' accessibility' declaringType' attributes
Long Parameter List,Saltarelle.Compiler.Tests,Message,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockErrorReporter.cs,Message,The method has 5 parameters. Parameters: severity' code' region' format' args
Long Parameter List,Saltarelle.Compiler.Tests,MockRuntimeLibrary,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockRuntimeLibrary.cs,MakeEnumerator,The method has 5 parameters. Parameters: yieldType' moveNext' getCurrent' dispose' context
Long Parameter List,Saltarelle.Compiler.Tests,MockRuntimeLibrary,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockRuntimeLibrary.cs,InitializeField,The method has 5 parameters. Parameters: jsMember' scriptName' member' initialValue' context
Long Parameter List,Saltarelle.Compiler.Tests.CompilerTests,CompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\CompilerTestBase.cs,Compile,The method has 8 parameters. Parameters: sources' metadataImporter' namer' runtimeLibrary' errorReporter' methodCompiled' defineConstants' references
Long Parameter List,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,Compile,The method has 5 parameters. Parameters: source' metadataImporter' runtimeLibrary' errorReporter' useFirstConstructor
Long Parameter List,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,CompileMethod,The method has 8 parameters. Parameters: source' metadataImporter' namer' runtimeLibrary' errorReporter' methodName' addSkeleton' references
Long Parameter List,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,AssertCorrect,The method has 8 parameters. Parameters: csharp' expected' metadataImporter' runtimeLibrary' addSkeleton' references' methodName' mutableValueTypes
Long Parameter List,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,AssertCorrect,The method has 5 parameters. Parameters: csharp' expected' runtimeLibrary' metadataImporter' methodName
Long Statement,Saltarelle.Compiler.Tests,Common,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\Common.cs,CreateMockTypeDefinition,The length of the statement  "			typeDef.Setup(_ => _.GetConstructors(It.IsAny<Predicate<IUnresolvedMethod>>()' It.IsAny<GetMemberOptions>())).Returns(new IMethod[0]); " is 134.
Long Statement,Saltarelle.Compiler.Tests,Message,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockErrorReporter.cs,Equals,The length of the statement  "			return Equals(other.Severity' Severity) && other.Code == Code && Equals(other.Region' Region) && Equals(other.Format' Format) && ArgsEqual(other.Args' Args); " is 157.
Long Statement,Saltarelle.Compiler.Tests,MockRuntimeLibrary,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockRuntimeLibrary.cs,GetScriptType,The length of the statement  "				return JsExpression.Invocation(JsExpression.Identifier(contextName + "_$InstantiateGenericType")' new[] { new JsTypeReferenceExpression(Common.CreateMockTypeDefinition(type.Name' Common.CreateMockAssembly())) }.Concat(pt.TypeArguments.Select(a => GetScriptType(a' TypeContext.GenericArgument' resolveTypeParameter)))); " is 318.
Long Statement,Saltarelle.Compiler.Tests,MockRuntimeLibrary,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockRuntimeLibrary.cs,GetScriptType,The length of the statement  "				return new JsTypeReferenceExpression(Common.CreateMockTypeDefinition(contextName + "_" + type.GetDefinition().Name' Common.CreateMockAssembly())); " is 146.
Long Statement,Saltarelle.Compiler.Tests,MockRuntimeLibrary,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockRuntimeLibrary.cs,GetScriptType,The length of the statement  "				return JsExpression.Invocation(JsExpression.Identifier(contextName + "_$Array")' GetScriptType(((ArrayType)type).ElementType' TypeContext.GenericArgument' resolveTypeParameter)); " is 178.
Long Statement,Saltarelle.Compiler.Tests,MockRuntimeLibrary,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockRuntimeLibrary.cs,GetScriptType,The length of the statement  "				return new JsTypeReferenceExpression(Common.CreateMockTypeDefinition(contextName + "_" + type.Name' Common.CreateMockAssembly())); " is 130.
Long Statement,Saltarelle.Compiler.Tests,TypeReferenceFinderTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\TypeReferenceFinderTests.cs,CanAnalyzeExpression,The length of the statement  "			var expr = JsExpression.Add(new JsTypeReferenceExpression(t1)' JsExpression.Add(JsExpression.Member(new JsTypeReferenceExpression(t1)' "X")' JsExpression.Add(new JsTypeReferenceExpression(t2)' new JsTypeReferenceExpression(t3)))); " is 230.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,CompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\CompilerTestBase.cs,Compile,The length of the statement  "			var compiler = new Saltarelle.Compiler.Compiler.Compiler(metadataImporter ?? new MockMetadataImporter()' namer ?? new MockNamer()' runtimeLibrary ?? new MockRuntimeLibrary()' errorReporter); " is 190.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,CompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\CompilerTestBase.cs,Compile,The length of the statement  "			var c = PreparedCompilation.CreateCompilation("x"' sourceFiles' references ?? new[] { Common.Mscorlib }' defineConstants); " is 122.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,CompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\CompilerTestBase.cs,FindInstanceFieldInitializer,The length of the statement  "			                                                 && call.Arguments[1] is JsConstantExpression && ((JsConstantExpression)call.Arguments[1]).StringValue == name.Substring(lastDot + 1)) " is 133.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,CompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\CompilerTestBase.cs,FindStaticFieldInitializer,The length of the statement  "			                                                 && call.Arguments[1] is JsConstantExpression && ((JsConstantExpression)call.Arguments[1]).StringValue == name.Substring(lastDot + 1)) " is 133.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassesWithGenerateCodeSetToFalseAndTheirNestedClassesAreNotInTheOutput,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = type => TypeScriptSemantics.NormalType(type.Name' generateCode: type.Name != "C2") }; " is 154.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassesWithGenerateCodeSetToFalseAndTheirNestedClassesAreNotInTheOutput,The length of the statement  "			metadataImporter = new MockMetadataImporter { GetTypeSemantics = type => type.Name != "C2" ? TypeScriptSemantics.NormalType(type.Name) : TypeScriptSemantics.NotUsableFromScript() }; " is 181.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,EnumsWithGenerateCodeSetToFalseAreNotInTheOutput,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = type => TypeScriptSemantics.NormalType(type.Name' generateCode: type.Name != "C2") }; " is 154.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,EnumsWithGenerateCodeSetToFalseAreNotInTheOutput,The length of the statement  "			metadataImporter = new MockMetadataImporter { GetTypeSemantics = type => type.Name != "C2" ? TypeScriptSemantics.NormalType(type.Name) : TypeScriptSemantics.NotUsableFromScript() }; " is 181.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsABaseClassForAUsableClass,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "B1" ? TypeScriptSemantics.NotUsableFromScript() : TypeScriptSemantics.NormalType(t.Name) }; " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsABaseClassForAUsableClass,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("inheritance list") && er.AllMessages[0].FormattedMessage.Contains("B1") && er.AllMessages[0].FormattedMessage.Contains("D1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsABaseClassForAUsableClass,The length of the statement  "			metadataImporter = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "B1" ? TypeScriptSemantics.NotUsableFromScript() : TypeScriptSemantics.NormalType(t.Name) }; " is 172.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsABaseClassForAUsableClass,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("inheritance list") && er.AllMessages[0].FormattedMessage.Contains("B1") && er.AllMessages[0].FormattedMessage.Contains("D1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,InterfaceThatIsNotUsableFromScriptCannotBeImplementedByAUsableClass,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "I1" ? TypeScriptSemantics.NotUsableFromScript() : TypeScriptSemantics.NormalType(t.Name) }; " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,InterfaceThatIsNotUsableFromScriptCannotBeImplementedByAUsableClass,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("inheritance list") && er.AllMessages[0].FormattedMessage.Contains("I1") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "C1" ? TypeScriptSemantics.NotUsableFromScript() : TypeScriptSemantics.NormalType(t.Name) }; " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Compile(new[] { "class C1 {} class B1<T> {} class D1 : B1<C1> {}" }' metadataImporter: metadataImporter' errorReporter: er); " is 124.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("inheritance list") && er.AllMessages[0].FormattedMessage.Contains("C1") && er.AllMessages[0].FormattedMessage.Contains("D1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Compile(new[] { "class C1 {} interface I1<T> {} class D1 : I1<C1> {}" }' metadataImporter: metadataImporter' errorReporter: er); " is 128.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("inheritance list") && er.AllMessages[0].FormattedMessage.Contains("C1") && er.AllMessages[0].FormattedMessage.Contains("D1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Compile(new[] { "class C1 {} interface I1<T> {} class D1 : I1<I1<C1>> {}" }' metadataImporter: metadataImporter' errorReporter: er); " is 132.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,ClassThatIsNotUsableFromScriptCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("inheritance list") && er.AllMessages[0].FormattedMessage.Contains("C1") && er.AllMessages[0].FormattedMessage.Contains("D1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "C1" ? TypeScriptSemantics.MutableValueType(t.Name) : TypeScriptSemantics.NormalType(t.Name) }; " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Compile(new[] { "struct C1 {} class B1<T> {} class D1 : B1<C1> {}" }' metadataImporter: metadataImporter' errorReporter: er); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Compile(new[] { "struct C1 {} interface I1<T> {} class D1 : I1<C1> {}" }' metadataImporter: metadataImporter' errorReporter: er); " is 129.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Compile(new[] { "struct C1 {} interface I1<T> {} class D1 : I1<I1<C1>> {}" }' metadataImporter: metadataImporter' errorReporter: er); " is 133.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilationTests.cs,NormalMethodCanBeCompiled,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilationTests.cs,StaticMethodWithThisAsFirstArgumentCanBeCompiled,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) }); " is 150.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ParameterFixupTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ParameterFixupTests.cs,ExpandedParamArrayIsFixedAtTheTopOfMethods,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: true) }); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ParameterFixupTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ParameterFixupTests.cs,ExpandedParamArrayIsFixedAtTheTopOfMethodsForStaticMethodsWithThisAsFirstArgument,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name' expandParams: true) }); " is 170.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ParameterFixupTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ParameterFixupTests.cs,ExpandedParamArrayIsFixedAtTheTopOfAnonymousDelegateExpressions,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = m => new DelegateScriptSemantics(expandParams: true) }); " is 128.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ParameterFixupTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ParameterFixupTests.cs,ExpandedParamArrayIsFixedAtTheTopOfStatementLambda,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = m => new DelegateScriptSemantics(expandParams: true) }); " is 128.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ParameterFixupTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ParameterFixupTests.cs,ExpandedParamArrayIsFixedAtTheTopOfExpressionLambda,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = m => new DelegateScriptSemantics(expandParams: true) }); " is 128.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ParameterFixupTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ParameterFixupTests.cs,ExpandedParamArrayIsFixedAtTheTopOfConstructors,The length of the statement  "}"' "C"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(expandParams: c.DeclaringType.Name == "C") }); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,TheTokenizerWorks,The length of the statement  "			Assert.That(InlineCodeMethodCompiler.Tokenize(method' "X{ab}{{y}z}}Y{{{c}}}T"' s => Assert.Fail("Unexpected error " + s))' " is 122.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,TheTokenizerWorks,The length of the statement  "			Assert.That(InlineCodeMethodCompiler.Tokenize(method' "X{}Y"' s => Assert.Fail("Unexpected error " + s))' Is.EqualTo(new[] { new InlineCodeToken(InlineCodeToken.TokenType.Text' "X{}Y") })); " is 189.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,TokenizerCanDetectParameterNames,The length of the statement  "			            Is.EqualTo(new[] { new InlineCodeToken(InlineCodeToken.TokenType.Parameter' index: 0)' new InlineCodeToken(InlineCodeToken.TokenType.Parameter' index: 1) })); " is 158.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,TokenizerCanDetectLiteralStringParameterToUseAsIdentifier,The length of the statement  "			            Is.EqualTo(new[] { new InlineCodeToken(InlineCodeToken.TokenType.LiteralStringParameterToUseAsIdentifier' index: 0)' new InlineCodeToken(InlineCodeToken.TokenType.LiteralStringParameterToUseAsIdentifier' index: 1) })); " is 218.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,TokenizerCanDetectTypeTypeParameters,The length of the statement  "			            Is.EqualTo(new[] { new InlineCodeToken(InlineCodeToken.TokenType.TypeParameter' index: 0' ownerType: SymbolKind.TypeDefinition)' new InlineCodeToken(InlineCodeToken.TokenType.TypeParameter' index: 1' ownerType: SymbolKind.TypeDefinition) })); " is 242.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,TokenizerCanDetectMethodTypeParameters,The length of the statement  "			            Is.EqualTo(new[] { new InlineCodeToken(InlineCodeToken.TokenType.TypeParameter' index: 0' ownerType: SymbolKind.Method)' new InlineCodeToken(InlineCodeToken.TokenType.TypeParameter' index: 1' ownerType: SymbolKind.Method) })); " is 226.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,TokenizerCanDetectTypeParameterNamePreceededByAtSign,The length of the statement  "			            Is.EqualTo(new[] { new InlineCodeToken(InlineCodeToken.TokenType.TypeParameter' index: 0' ownerType: SymbolKind.TypeDefinition)' new InlineCodeToken(InlineCodeToken.TokenType.TypeParameter' index: 0' ownerType: SymbolKind.Method) })); " is 234.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingTextWithBracesInLiteralCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{{ }}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 180.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingParametersFromLiteralCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{{ item1: {arg1}' item2: {arg2} }}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 209.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingThisInInlineCodeForInstanceMethodWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("[ {this} ]") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 185.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingMethodTypeArgumentsFromLiteralCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{{ item1: {T1}' item2: {T2} }}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 205.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingTypeTypeArgumentsFromLiteralCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{{ item1: {T1}' item2: {T2} }}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 205.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingTypeReferenceFromLiteralCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("[ {$System.String}' {$System.Int32} ]") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 212.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingLiteralStringParameterToUseAsIdentifierFromLiteralCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("invoke_{@s}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodThatExpectsLiteralStringWithSomethingElseIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("invoke_{@myParameter}") : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 218.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodThatExpectsLiteralStringWithSomethingElseIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.FormattedMessage.Contains("myParameter") && m.FormattedMessage.Contains("literal string"))); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodWithExpandedParamArrayWorksForFunctionCalls,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}*{p2}({*p3})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 191.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodWithExpandedParamArrayWorksForFunctionCalls,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}*{p2}(A' {*p3})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 194.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodWithExpandedParamArrayWorksForNewExpressions,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}* new {p2}({*p3})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 196.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodWithExpandedParamArrayWorksForNewExpressions,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}* new {p2}(A' {*p3})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 199.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodWithExpandedParamArrayWorksForArrayLiterals,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}*{p2} + [{*p3}]") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 194.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingMethodWithExpandedParamArrayWorksForArrayLiterals,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}*{p2} + [A' {*p3}]") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 197.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,UsingExpandedParamArrayInOtherContextIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}*{p2} + {*p3}") : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 214.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InlineCodeWithSyntaxErrorIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{p1}*{p2}+") : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 207.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,ValidateReturnsNoErrosWhenCalledWithAValidString,The length of the statement  "			Assert.That(InlineCodeMethodCompiler.ValidateExpressionLiteralCode(method' "{$System.Object}({T1}' {T2}' {@s}' {this}' {a}' {*p})"' n => JsExpression.Null' t => JsExpression.Null)' Is.Empty); " is 191.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,ValidateReturnsAnErrorWhenThereIsAFormatStringError,The length of the statement  "			var result = InlineCodeMethodCompiler.ValidateExpressionLiteralCode(method' "{abc"' n => JsExpression.Null' t => JsExpression.Null); " is 132.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,ValidateReturnsAnErrorWhenThisIsUsedForAStaticMethod,The length of the statement  "			var result = InlineCodeMethodCompiler.ValidateExpressionLiteralCode(method' "{this}"' n => JsExpression.Null' t => JsExpression.Null); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,ValidateReturnsAnErrorWhenTheAtModifierIsUsedWithAnArgumentThatIsNotAString,The length of the statement  "			var result = InlineCodeMethodCompiler.ValidateExpressionLiteralCode(method' "{@myArg}"' n => JsExpression.Null' t => JsExpression.Null); " is 136.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,ValidateReturnsAnErrorWhenTheStarModifierIsUsedWithAnArgumentThatIsNotAParamArray,The length of the statement  "			var result = InlineCodeMethodCompiler.ValidateExpressionLiteralCode(method' "{*myArg}"' n => JsExpression.Null' t => JsExpression.Null); " is 136.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,ValidateReturnsAnErrorWhenThereIsASyntaxError,The length of the statement  "			var result = InlineCodeMethodCompiler.ValidateExpressionLiteralCode(method' "{x} + "' n => JsExpression.Null' t => JsExpression.Null); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,ValidateReturnsAnErrorWhenAnExpandedParamArrayIsUsedInAnInvalidContext,The length of the statement  "			var result = InlineCodeMethodCompiler.ValidateExpressionLiteralCode(method' "{p1}*{p2} + {*p3}"' n => JsExpression.Null' t => JsExpression.Null); " is 145.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,InlineCodeMethodCompilerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\InlineCodeMethodCompilerTests.cs,InvokingInlineCodeMethodWithTypeParameterAsTypeArgumentWorks,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{T1}._({T2})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 207.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,AutoPropertyAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\AutoPropertyAccessorCompilationTests.cs,InstanceAutoPropertyAccessorsImplementedAsStaticMethodsAreCorrectlyCompiled,The length of the statement  "			Compile(new[] { "using System; class C { public int MyProperty { get; set; } }" }' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("get_" + p.Name)' MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("set_" + p.Name)) }); " is 352.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,AutoPropertyAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\AutoPropertyAccessorCompilationTests.cs,StaticAutoPropertyAccessorsAreCorrectlyCompiledForGenericClasses,The length of the statement  "			Assert.That(OutputFormatter.Format(c.StaticInitStatements[0]' allowIntermediates: true)' Is.EqualTo("$Init(sm_$InstantiateGenericType({C}' $T)' '$MyProperty'' $Default({def_Int32}));" + Environment.NewLine)); " is 208.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,Compile,The length of the statement  "			Compile(new[] { source }' metadataImporter: metadataImporter' runtimeLibrary: runtimeLibrary' errorReporter: errorReporter' methodCompiled: (m' res' mc) => { " is 157.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,SimpleStaticMethodConstructorWithoutBaseCallWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor") }); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,SimpleStaticMethodConstructorWithImplicitBaseCallWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor") }); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,SimpleStaticMethodConstructorWithExplicitBaseCallWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor") }); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ReturningFromAStaticMethodConstructorReturnsTheCreatedObject,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor") }); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ConstructorChainingWithReorderedAndDefaultArgumentsWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Named("ctor1") : ConstructorScriptSemantics.Unnamed() }); " is 190.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToConstructorImplementedAsInlineCodeFromUnnamedConstructorWprks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.InlineCode("_({x})._({s})") }); " is 203.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToConstructorImplementedAsJsonFromUnnamedConstructorWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Json(c.Parameters.Select(p => c.DeclaringType.GetFields().Single(x => x.Name.Equals(p.Name' StringComparison.InvariantCultureIgnoreCase)))) }); " is 315.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToConstructorImplementedAsInlineCodeFromStaticMethodConstructorWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.StaticMethod("M") : ConstructorScriptSemantics.InlineCode("__Literal_({x})._{@s}__") }); " is 221.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToStaticMethodConstructorFromAnotherStaticMethodConstructorWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor$" + c.Parameters.Count.ToString(CultureInfo.InvariantCulture)) }); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToJsonConstructorFromStaticMethodConstructorWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.StaticMethod("X") : ConstructorScriptSemantics.Json(c.Parameters.Select(p => c.DeclaringType.GetFields().Single(x => x.Name.Equals(p.Name' StringComparison.InvariantCultureIgnoreCase)))) }); " is 323.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToStaticMethodConstructorFromAnotherTypeOfConstructorWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.StaticMethod("ctor") }); " is 196.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,InvokingBaseStaticMethodConstructorFromAnotherTypeOfConstructorWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.DeclaringType.Name == "D" ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.StaticMethod("ctor") }); " is 200.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ConstructorWithoutExplicitBaseInvokerDoesNotInvokeBaseClassDefaultConstructorIfMarkedAsSkipInInitializer,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.Name == "B") }); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToConstructorMarkedAsNotUsableFromScriptIsAnError,The length of the statement  "}" }' errorReporter: rpt' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.NotUsableFromScript() }); " is 219.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToConstructorMarkedAsNotUsableFromScriptIsAnError,The length of the statement  "			Assert.That(rpt.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.IndexOf("cannot be used"' StringComparison.InvariantCultureIgnoreCase) >= 0)); " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,InvokingBaseConstructorMarkedAsNotUsableFromScriptIsAnError,The length of the statement  "}" }' errorReporter: rpt' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.DeclaringType.Name == "D" ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.NotUsableFromScript() }); " is 223.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,InvokingBaseConstructorMarkedAsNotUsableFromScriptIsAnError,The length of the statement  "			Assert.That(rpt.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.IndexOf("cannot be used"' StringComparison.InvariantCultureIgnoreCase) >= 0)); " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToAnonymousConstructorFromStaticMethodConstructorWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.DeclaringType.Name == "C" && c.Parameters.Count == 0 ? ConstructorScriptSemantics.StaticMethod("ctor") : ConstructorScriptSemantics.Unnamed() }); " is 227.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,InvokingBaseConstructorMarkedAsSkipInInitializerDoesNothing,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.Name == "B") }); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,InvokingStaticMethodBaseConstructorMarkedAsSkipInInitializerCreatesAnEmptyObjectLiteral,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("construct_" + c.DeclaringType.Name' skipInInitializer: c.DeclaringType.Name == "B") }); " is 208.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,InvokingBaseConstructorWithReorderedAndDefaultArgumentsWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed() }); " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,FieldInitializationWorksForStaticMethodConstructors,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor") }); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,FieldInitializationWorksForStaticMethodConstructorsWhenCallingBase,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor") }); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToUnnamedParamArrayConstructorThatDoesNotExpandArgumentsInExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Named("x") : ConstructorScriptSemantics.Unnamed() }); " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToUnnamedParamArrayConstructorThatDoesNotExpandArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Named("x") : ConstructorScriptSemantics.Unnamed() }); " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToUnnamedParamArrayConstructorThatExpandsArgumentsInExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Named("x") : ConstructorScriptSemantics.Unnamed(expandParams: true) }); " is 204.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToUnnamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Named("x") : ConstructorScriptSemantics.Unnamed(expandParams: true) }); " is 204.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToUnnamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Named("x") : ConstructorScriptSemantics.Unnamed(expandParams: true) }); " is 204.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToNamedParamArrayConstructorThatDoesNotExpandArgumentsInExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Named("x") }); " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToNamedParamArrayConstructorThatDoesNotExpandArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Named("x") }); " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToNamedParamArrayConstructorThatExpandsArgumentsInExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Named("x"' expandParams: true) }); " is 206.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToNamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Named("x"' expandParams: true) }); " is 206.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToNamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Named("x"' expandParams: true) }); " is 206.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToStaticMethodParamArrayConstructorThatDoesNotExpandArgumentsInExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor$" + c.Parameters.Count.ToString(CultureInfo.InvariantCulture)) }); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToStaticMethodParamArrayConstructorThatDoesNotExpandArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor$" + c.Parameters.Count.ToString(CultureInfo.InvariantCulture)) }); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToStaticMethodParamArrayConstructorThatExpandsArgumentsInExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor$" + c.Parameters.Count.ToString(CultureInfo.InvariantCulture)' expandParams: true) }); " is 212.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToStaticMethodParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor$" + c.Parameters.Count.ToString(CultureInfo.InvariantCulture)' expandParams: true) }); " is 212.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToStaticMethodParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("ctor$" + c.Parameters.Count.ToString(CultureInfo.InvariantCulture)' expandParams: true) }); " is 212.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToInlineCodeConstructorThatUsesExpandedParameterPlaceholderInNonExpandedFormIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 1 ? ConstructorScriptSemantics.InlineCode("_({*args})") : ConstructorScriptSemantics.Unnamed() }' errorReporter: er); " is 221.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToInlineCodeConstructorThatUsesExpandedParameterPlaceholderInNonExpandedFormIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("constructor") && msg.FormattedMessage.Contains("C1") && msg.FormattedMessage.Contains("params parameter expanded"))); " is 227.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,ChainingToInlineCodeConstructorInNonExpandedFormUsesNonExpandedPattern,The length of the statement  "}"' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 1 ? ConstructorScriptSemantics.InlineCode("_({*args})"' nonExpandedFormLiteralCode: "_2({args})") : ConstructorScriptSemantics.Unnamed() }); " is 242.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,AutoEventAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\AutoEventAccessorCompilationTests.cs,InstanceAutoEventAccessorsImplementedAsStaticMethodsAreCorrectlyCompiled,The length of the statement  "			Compile(new[] { "using System; class C { public event System.EventHandler MyEvent; }" }' metadataImporter: new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("add_" + e.Name)' MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("remove_" + e.Name)) }); " is 358.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,AutoEventAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\AutoEventAccessorCompilationTests.cs,StaticAutoEventAccessorsAreCorrectlyCompiled,The length of the statement  "			Assert.That(OutputFormatter.Format(c.StaticInitStatements[0]' allowIntermediates: true)' Is.EqualTo("$Init({sm_C}' '$MyEvent'' $Default({def_EventHandler}));" + Environment.NewLine)); " is 183.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,AutoEventAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\AutoEventAccessorCompilationTests.cs,StaticAutoEventAccessorsAreCorrectlyCompiledForGenericClasses,The length of the statement  "	sm_$InstantiateGenericType({C}' $T).$MyEvent = {sm_Delegate}.Combine(sm_$InstantiateGenericType({C}' $T).$MyEvent' $value); " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,AutoEventAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\AutoEventAccessorCompilationTests.cs,StaticAutoEventAccessorsAreCorrectlyCompiledForGenericClasses,The length of the statement  "	sm_$InstantiateGenericType({C}' $T).$MyEvent = {sm_Delegate}.Remove(sm_$InstantiateGenericType({C}' $T).$MyEvent' $value); " is 122.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,AutoEventAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\AutoEventAccessorCompilationTests.cs,StaticAutoEventAccessorsAreCorrectlyCompiledForGenericClasses,The length of the statement  "			Assert.That(OutputFormatter.Format(c.StaticInitStatements[0]' allowIntermediates: true)' Is.EqualTo("$Init(sm_$InstantiateGenericType({C}' $T)' '$MyEvent'' $Default({def_EventHandler}));" + Environment.NewLine)); " is 212.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ManualAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ManualAccessorCompilationTests.cs,InstanceManualPropertyAccessorsCanBeCompiled,The length of the statement  "			Compile(new[] { "using System; class C { public int myField; public int MyProperty { get { return myField; } set { myField = value; } } }" }); " is 142.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ManualAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ManualAccessorCompilationTests.cs,StaticManualPropertyAccessorsCanBeCompiled,The length of the statement  "			Compile(new[] { "using System; class C { public static int myField; public static int MyProperty { get { return myField; } set { myField = value; } } }" }); " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ManualAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ManualAccessorCompilationTests.cs,IndexerAccessorsCanBeCompiled,The length of the statement  "			Compile(new[] { "using System; class C { private int x; public int this[int i' int j] { get { return i + j; } set { x = i + j + value; } } }" }); " is 145.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ManualAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ManualAccessorCompilationTests.cs,InstanceManuaEventAccessorsCanBeCompiled,The length of the statement  "			Compile(new[] { "using System; class C { private EventHandler myField; public event EventHandler MyEvent { add { myField += value; } remove { myField -= value; } } }" }); " is 170.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ManualAccessorCompilationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ManualAccessorCompilationTests.cs,StaticManuaEventAccessorsCanBeCompiled,The length of the statement  "			Compile(new[] { "using System; class C { private static EventHandler myField; public static event EventHandler MyEvent { add { myField += value; } remove { myField -= value; } } }" }); " is 184.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,CompileMethod,The length of the statement  "			Compile(new[] { addSkeleton ? "using System; class C { " + source + "}" : source }' metadataImporter: metadataImporter' namer: namer' runtimeLibrary: runtimeLibrary' errorReporter: errorReporter' methodCompiled: (m' res' mc) => { " is 229.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,AssertCorrect,The length of the statement  "					if (p.DeclaringType.Kind == TypeKind.Anonymous || new Regex("^F[0-9]*$").IsMatch(p.Name) || (p.DeclaringType.FullName == "System.Array" && p.Name == "Length")) " is 159.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,AssertCorrect,The length of the statement  "						return PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_$" + p.Name)' MethodScriptSemantics.NormalMethod("set_$" + p.Name)); " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,AssertCorrect,The length of the statement  "				GetEventSemantics  = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_$" + e.Name)' MethodScriptSemantics.NormalMethod("remove_$" + e.Name))' " is 178.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,AssertCorrect,The length of the statement  "					return mutableValueTypes && t.Kind == TypeKind.Struct ? TypeScriptSemantics.MutableValueType(t.FullName) : TypeScriptSemantics.NormalType(t.FullName); " is 150.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,AssertCorrect,The length of the statement  "			Assert.That(actual.Replace("\r\n"' "\n")' Is.EqualTo(expected.Replace("\r\n"' "\n"))' "Expected:\n" + expected + "\n\nActual:\n" + actual); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].NestedFunctions.Should().HaveCount(0); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].NestedFunctions.Should().HaveCount(0); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].NestedFunctions.Should().HaveCount(0); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(2' 16)); " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(3' 29)); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(4' 29)); " is 158.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(5' 24)); " is 158.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(8' 23)); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(9' 27)); " is 158.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(13' 19)); " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(3' 48)); " is 133.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(4' 47)); " is 152.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(5' 29)); " is 152.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(8' 29)); " is 133.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(9' 32)); " is 152.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].ResolveResult.Parameters.Select(p => p.Name).Should().Equal(new string[0]); " is 129.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].ResolveResult.Parameters.Select(p => p.Name).Should().Equal(new[] { "s" }); " is 148.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].ResolveResult.Parameters.Select(p => p.Name).Should().Equal(new[] { "i"' "j" }); " is 172.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].ResolveResult.Parameters.Select(p => p.Name).Should().Equal(new[] { "x" }); " is 167.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].ResolveResult.Parameters.Select(p => p.Name).Should().Equal(new[] { "s2" }); " is 149.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].ResolveResult.Parameters.Select(p => p.Name).Should().Equal(new[] { "y" }); " is 167.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[1].ResolveResult.Parameters.Select(p => p.Name).Should().Equal(new string[0]); " is 129.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].Parent.Should().Be(MethodCompiler.nestedFunctionsRoot.NestedFunctions[0]); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].Parent.Should().Be(MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0]); " is 185.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].Parent.Should().Be(MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0]); " is 185.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].Parent.Should().Be(MethodCompiler.nestedFunctionsRoot.NestedFunctions[0]); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The length of the statement  "			MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].Parent.Should().Be(MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1]); " is 185.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,ReferencedVariablesGatheringIsCorrect,The length of the statement  "			Assert.That(f.DirectlyUsedVariables.Select(v => MethodCompiler.variables[v].Name).ToList()' Is.EquivalentTo(new[] { "$a1"' "$a3"' "$f2" })); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,ReferencedVariablesGatheringIsCorrect,The length of the statement  "			Assert.That(f2.DirectlyUsedVariables.Select(v => MethodCompiler.variables[v].Name).ToList()' Is.EquivalentTo(new[] { "$a2"' "$a4" })); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,DeclaredVariablesGatheringIsCorrect,The length of the statement  "			Assert.That(r.DirectlyDeclaredVariables.Select(v => MethodCompiler.variables[v].Name).ToList()' Is.EquivalentTo(new[] { "$a1"' "$a2"' "$a3"' "$f" })); " is 150.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,DeclaredVariablesGatheringIsCorrect,The length of the statement  "			Assert.That(f.DirectlyDeclaredVariables.Select(v => MethodCompiler.variables[v].Name).ToList()' Is.EquivalentTo(new[] { "$f2" })); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,DeclaredVariablesGatheringIsCorrect,The length of the statement  "			Assert.That(f2.DirectlyDeclaredVariables.Select(v => MethodCompiler.variables[v].Name).ToList()' Is.EquivalentTo(new[] { "$a4" })); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,AssertUsedByReference,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == scriptVariableName).UseByRefSemantics' Is.True' scriptVariableName + " should be used by reference"); " is 167.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,AssertNotUsedByReference,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == scriptVariableName).UseByRefSemantics' Is.False' scriptVariableName + " should not be used by reference"); " is 172.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$p").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(2' 1))); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(2' 1))); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$p2").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21))); " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f2").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21))); " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$s").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f3").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29))); " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$i").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(5' 29))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$j").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(5' 29))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$a1").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29))); " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f4").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21))); " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f5").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(9' 23))); " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The length of the statement  "			Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$a").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(2' 1))); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,UsedNamesIsCorrectWhenGeneratingTemporaryVariables,The length of the statement  "			CompileMethod("private int[] arr; public void M(int i' string s) { foreach (var e in arr) {}  } }"' namer: new MockNamer { GetVariableName = (v' used) => new string('x'' used.Count + 1) }); " is 189.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AwaitTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AwaitTests.cs,InlineCodeImplementationOfGetAwaiterWorks,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "GetAwaiter" ? MethodScriptSemantics.InlineCode("_GetAwaiter_({this})._") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 232.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AwaitTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AwaitTests.cs,InlineCodeImplementationOfGetResultWorks,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "GetResult" ? MethodScriptSemantics.InlineCode("_GetResult({this})._") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 229.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AwaitTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AwaitTests.cs,InlineCodeImplementationOfOnCompletedIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "OnCompleted" ? MethodScriptSemantics.InlineCode("_OnCompleted({this})._") : MethodScriptSemantics.NormalMethod("$" + m.Name) }' errorReporter: er); " is 235.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AwaitTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AwaitTests.cs,InlineCodeImplementationOfOnCompletedIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(e => e.FormattedMessage.Contains("OnCompleted") && e.FormattedMessage.Contains("normal method") && e.FormattedMessage.Contains("await"))); " is 169.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AwaitTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AwaitTests.cs,AwaitingDynamicIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7541 && m.FormattedMessage.Contains("dynamic"))); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,AssertCorrect,The length of the statement  "			base.AssertCorrect("using System; using System.Linq.Expressions; using System.Collections.Generic; class C { " + csharp + "}"' expected' references: _referencesLazy.Value' methodName: methodName' metadataImporter: metadataImporter' addSkeleton: false' runtimeLibrary: runtimeLibrary); " is 284.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseBinaryOperators,The length of the statement  "	var $e1 = {sm_Expression}.$Lambda({sm_Expression}.$Coalesce($tmp1' $tmp2' sm_$InstantiateGenericType({Nullable}' {ga_Int32}))' [$tmp1' $tmp2]); " is 143.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseUnaryOperatorsWithUserDefinedMethod,The length of the statement  "	var $e = {sm_Expression}.$Lambda({sm_Expression}.$NegateChecked($tmp1' $GetMember({to_X}' 'op_UnaryNegation'))' [$tmp1]); " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseUnaryOperatorsWithUserDefinedMethod,The length of the statement  "	var $e = {sm_Expression}.$Lambda({sm_Expression}.$OnesComplement($tmp1' $GetMember({to_X}' 'op_OnesComplement'))' [$tmp1]); " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseBinaryOperatorsWithUserDefinedMethod,The length of the statement  "	var $e = {sm_Expression}.$Lambda({sm_Expression}.METHOD_NAME($tmp1' $tmp2' $GetMember({to_X}' 'OPERATOR_NAME'))' [$tmp1' $tmp2]); " is 129.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseBinaryOperatorsWithUserDefinedMethod,The length of the statement  "	var $e = {sm_Expression}.$Lambda({sm_Expression}.METHOD_NAME($tmp1' $tmp2' $GetMember({to_X}' 'OPERATOR_NAME'))' [$tmp1' $tmp2]); " is 129.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,OperatorMethodImplementedAsNativeOperatorIsNotConsideredAMethod,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.IsOperator ? MethodScriptSemantics.NativeOperator() : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 182.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseUserDefinedConversion,The length of the statement  "	var $e = {sm_Expression}.$Lambda({sm_Expression}.$Convert($tmp1' {sm_Int32}' $GetMember({to_X}' 'op_Explicit'))' [$tmp1]); " is 122.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanNestLambdas,The length of the statement  "	Expression<Func<Func<int' int' int' int>' Func<int' Func<int' Func<int' int>>>>> curry = f => (a => b => c => f(a' b' c)); " is 122.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanNestLambdas,The length of the statement  "@"	var $tmp1 = {sm_Expression}.$Parameter(sm_$InstantiateGenericType({Func}' {ga_Int32}' {ga_Int32}' {ga_Int32}' {ga_Int32})' 'f'); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanNestLambdas,The length of the statement  "	var $curry = {sm_Expression}.$Lambda({sm_Expression}.$Lambda({sm_Expression}.$Lambda({sm_Expression}.$Lambda({sm_Expression}.$Invoke({sm_Int32}' $tmp1' [$tmp2' $tmp3' $tmp4])' [$tmp4])' [$tmp3])' [$tmp2])' [$tmp1]); " is 215.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanQuote,The length of the statement  "	var $f = {sm_Expression}.$Lambda({sm_Expression}.$Call(null' $GetMember({to_C}' 'F')' [{sm_Expression}.$Quote({sm_Expression}.$Lambda({sm_Expression}.$Add($tmp2' $tmp1' {sm_Int32})' [$tmp2]))])' [$tmp1]); " is 204.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseConstants,The length of the statement  "	var $f3 = {sm_Expression}.$Lambda({sm_Expression}.$Constant(null' sm_$InstantiateGenericType({Nullable}' {ga_Int32}))' []); " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseArrayCreate,The length of the statement  "@"	var $f1 = {sm_Expression}.$Lambda({sm_Expression}.$NewArrayInit(sm_$Array({ga_Int32})' [{sm_Expression}.$Constant(42' {sm_Int32})' {sm_Expression}.$Constant(43' {sm_Int32})' {sm_Expression}.$Constant(44' {sm_Int32})])' []); " is 226.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseArrayCreate,The length of the statement  "	var $f2 = {sm_Expression}.$Lambda({sm_Expression}.$NewArrayBounds(sm_$Array({ga_Double})' [{sm_Expression}.$Constant(13' {sm_Int32})])' []); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseArrayCreate,The length of the statement  "	var $f3 = {sm_Expression}.$Lambda({sm_Expression}.$NewArrayBounds(sm_$Array({ga_Double})' [{sm_Expression}.$Constant(5' {sm_Int32})' {sm_Expression}.$Constant(3' {sm_Int32})])' []); " is 181.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseArrayIndex,The length of the statement  "	var $f2 = {sm_Expression}.$Lambda({sm_Expression}.$ArrayIndex({sm_Double}' $tmp3' [$tmp4' $tmp5])' [$tmp3' $tmp4' $tmp5]); " is 122.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanInvokeMethod,The length of the statement  "	var $f1 = {sm_Expression}.$Lambda({sm_Expression}.$Call($tmp1' $GetMember({to_C}' 'F')' [$tmp2' $tmp3])' [$tmp1' $tmp2' $tmp3]); " is 128.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanInvokeMethod,The length of the statement  "	var $f2 = {sm_Expression}.$Lambda({sm_Expression}.$Call(null' $GetMember({to_C}' 'F2')' [$tmp4' $tmp5])' [$tmp4' $tmp5]); " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseMethodGroupConversion,The length of the statement  "	var $f = {sm_Expression}.$Lambda({sm_Expression}.$Convert({sm_Expression}.$Call({sm_Expression}.$Constant($GetMember({to_C}' 'F')' {sm_MethodInfo})' $GetMember({to_MethodInfo}' 'CreateDelegate')' [sm_$InstantiateGenericType({Func}' {ga_String}' {ga_Double}' {ga_Int32})' $tmp1])' sm_$InstantiateGenericType({Func}' {ga_String}' {ga_Double}' {ga_Int32}))' [$tmp1]); " is 364.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseMethodGroupConversion,The length of the statement  "	var $f2 = {sm_Expression}.$Lambda({sm_Expression}.$Convert({sm_Expression}.$Call({sm_Expression}.$Constant($GetMember({to_C}' 'F2')' {sm_MethodInfo})' $GetMember({to_MethodInfo}' 'CreateDelegate')' [sm_$InstantiateGenericType({Func}' {ga_String}' {ga_Double}' {ga_Double})' null])' sm_$InstantiateGenericType({Func}' {ga_String}' {ga_Double}' {ga_Double}))' []); " is 362.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseIndexer,The length of the statement  "	var $f1 = {sm_Expression}.$Lambda({sm_Expression}.$Call($tmp1' $GetMember({to_C}' 'get_Item')' [$tmp2' $tmp3])' [$tmp1' $tmp2' $tmp3]); " is 135.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseThis,The length of the statement  "@"	var $e = {sm_Expression}.$Lambda({sm_Expression}.$Field({sm_Expression}.$Constant(this' {sm_C})' $GetMember({to_C}' 'F'))' []); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseThis,The length of the statement  "@"			var $e = {sm_Expression}.$Lambda({sm_Expression}.$Field({sm_Expression}.$Constant(this.$this' {sm_C})' $GetMember({to_C}' 'F'))' []); " is 138.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanCreateAnonymousObject,The length of the statement  "	var $e = {sm_Expression}.$Lambda({sm_Expression}.$Convert({sm_Expression}.$New($GetMember(to_$Anonymous' '.ctor')' [$tmp1' $tmp2]' [$GetMember(to_$Anonymous' 'a')' $GetMember(to_$Anonymous' 'B')])' {sm_Object})' [$tmp1' $tmp2]); " is 228.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseObjectInitializers,The length of the statement  "@"	var $e1 = {sm_Expression}.$Lambda({sm_Expression}.$MemberInit({sm_Expression}.$New($GetMember({to_C}' '.ctor')' [])' [{sm_Expression}.$Bind($GetMember({to_C}' 'F')' {sm_Expression}.$Constant(42' {sm_Int32}))' {sm_Expression}.$Bind($GetMember({to_C}' 'P')' {sm_Expression}.$Constant(17' {sm_Int32}))])' []); " is 309.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseObjectInitializers,The length of the statement  "	var $e2 = {sm_Expression}.$Lambda({sm_Expression}.$MemberInit({sm_Expression}.$New($GetMember({to_C}' '.ctor')' [])' [{sm_Expression}.$MemberBind($GetMember({to_C}' 'X')' [{sm_Expression}.$Bind($GetMember({to_C}' 'F')' {sm_Expression}.$Constant(42' {sm_Int32}))])])' []); " is 271.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseObjectInitializers,The length of the statement  "	var $e3 = {sm_Expression}.$Lambda({sm_Expression}.$MemberInit({sm_Expression}.$New($GetMember({to_C}' '.ctor')' [])' [{sm_Expression}.$MemberBind($GetMember({to_C}' 'Y')' [{sm_Expression}.$Bind($GetMember({to_C}' 'F')' {sm_Expression}.$Constant(448' {sm_Int32}))])])' []); " is 272.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseObjectInitializers,The length of the statement  "	var $e4 = {sm_Expression}.$Lambda({sm_Expression}.$MemberInit({sm_Expression}.$New($GetMember({to_C}' '.ctor')' [])' [{sm_Expression}.$MemberBind($GetMember({to_C}' 'X')' [{sm_Expression}.$Bind($GetMember({to_C}' 'F')' {sm_Expression}.$Constant(12' {sm_Int32}))' {sm_Expression}.$MemberBind($GetMember({to_C}' 'X')' [{sm_Expression}.$Bind($GetMember({to_C}' 'P')' {sm_Expression}.$Constant(14' {sm_Int32}))' {sm_Expression}.$MemberBind($GetMember({to_C}' 'Y')' [{sm_Expression}.$Bind($GetMember({to_C}' 'F')' {sm_Expression}.$Constant(89' {sm_Int32}))])' {sm_Expression}.$Bind($GetMember({to_C}' 'F')' {sm_Expression}.$Constant(38' {sm_Int32}))])])])' []); " is 656.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseCollectionInitializers,The length of the statement  "class MyDictionary : System.Collections.IEnumerable { public System.Collections.IEnumerator GetEnumerator() { return null; } public void Add(int a' string b) {} public void Add(int a) {} } " is 188.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseCollectionInitializers,The length of the statement  "@"	var $e1 = {sm_Expression}.$Lambda({sm_Expression}.$MemberInit({sm_Expression}.$New($GetMember('C'' '.ctor$0')' [])' [{sm_Expression}.$ListBind($GetMember('C'' 'LF')' [{sm_Expression}.$ElementInit($GetMember('List'' 'Add$1')' [{sm_Expression}.$Constant(7' {sm_Int32})])' {sm_Expression}.$ElementInit($GetMember('List'' 'Add$1')' [{sm_Expression}.$Constant(4' {sm_Int32})])])' {sm_Expression}.$ListBind($GetMember('C'' 'LP')' [{sm_Expression}.$ElementInit($GetMember('List'' 'Add$1')' [{sm_Expression}.$Constant(9' {sm_Int32})])' {sm_Expression}.$ElementInit($GetMember('List'' 'Add$1')' [{sm_Expression}.$Constant(78' {sm_Int32})])])])' []); " is 643.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseCollectionInitializers,The length of the statement  "	var $e2 = {sm_Expression}.$Lambda({sm_Expression}.$MemberInit({sm_Expression}.$New($GetMember('C'' '.ctor$0')' [])' [{sm_Expression}.$ListBind($GetMember('C'' 'D')' [{sm_Expression}.$ElementInit($GetMember('MyDictionary'' 'Add$2')' [{sm_Expression}.$Constant(42' {sm_Int32})' {sm_Expression}.$Constant('Truth'' {sm_String})])' {sm_Expression}.$ElementInit($GetMember('MyDictionary'' 'Add$1')' [{sm_Expression}.$Constant(13' {sm_Int32})])])])' []); " is 447.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseCollectionInitializers,The length of the statement  "	var $e3 = {sm_Expression}.$Lambda({sm_Expression}.$ListInit({sm_Expression}.$New($GetMember('MyDictionary'' '.ctor$0')' [])' [{sm_Expression}.$ElementInit($GetMember('MyDictionary'' 'Add$2')' [{sm_Expression}.$Constant(14' {sm_Int32})' {sm_Expression}.$Constant('X'' {sm_String})])' {sm_Expression}.$ElementInit($GetMember('MyDictionary'' 'Add$2')' [{sm_Expression}.$Constant(42' {sm_Int32})' {sm_Expression}.$Constant('Y'' {sm_String})])])' []); " is 446.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseCollectionInitializers,The length of the statement  ""' runtimeLibrary: new MockRuntimeLibrary { GetMember = (m' c) => JsExpression.Invocation(JsExpression.Identifier("$GetMember")' JsExpression.String(m.DeclaringType.Name)' JsExpression.String(m.Name + (m is IMethod ? "$" + ((IMethod)m).Parameters.Count : ""))) }); " is 264.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,CanUseObjectAndCollectionInitializersNested,The length of the statement  "@"	var $e1 = {sm_Expression}.$Lambda({sm_Expression}.$MemberInit({sm_Expression}.$New($GetMember({to_C}' '.ctor')' [])' [{sm_Expression}.$Bind($GetMember({to_C}' 'F1')' {sm_Expression}.$Constant(7' {sm_Int32}))' {sm_Expression}.$MemberBind($GetMember({to_C}' 'X')' [{sm_Expression}.$MemberBind($GetMember({to_C}' 'Y')' [{sm_Expression}.$ListBind($GetMember({to_C}' 'L1')' [{sm_Expression}.$ElementInit($GetMember(to_$InstantiateGenericType({List}' {ga_Int32})' 'Add')' [{sm_Expression}.$Constant(9' {sm_Int32})])' {sm_Expression}.$ElementInit($GetMember(to_$InstantiateGenericType({List}' {ga_Int32})' 'Add')' [{sm_Expression}.$Constant(78' {sm_Int32})])])' {sm_Expression}.$Bind($GetMember({to_C}' 'F1')' {sm_Expression}.$Constant(23' {sm_Int32}))])])' {sm_Expression}.$Bind($GetMember({to_C}' 'F2')' {sm_Expression}.$Constant(12' {sm_Int32}))])' []); " is 852.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,TemporariesAreCreatedForArgumentsUsedMoreThanOnce,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "Lambda" ? MethodScriptSemantics.InlineCode("_({body})._({body})._({parameters})._({parameters})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 237.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,TemporariesAreCreatedForArgumentsUsedMoreThanOnce,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "Lambda" ? MethodScriptSemantics.InlineCode("_({body})._({body})._({parameters})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 221.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ExpressionTreeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ExpressionTreeTests.cs,TemporariesAreCreatedForArgumentsUsedMoreThanOnce,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "Lambda" ? MethodScriptSemantics.InlineCode("_({body})._({parameters})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 211.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,RuntimeLibraryIntegrationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\RuntimeLibraryIntegrationTests.cs,EnsureCanBeEvaluatedMultipleTimesWorks,The length of the statement  ""' runtimeLibrary: new MockRuntimeLibrary { LiftedBooleanOr = (a' b' c) => { var l = new[] { a }; b = c.EnsureCanBeEvaluatedMultipleTimes(b' l); return JsExpression.Invocation(JsExpression.Identifier("$LiftedBooleanOr")' l[0]' b); } } ); " is 237.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,QueryExpressionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\QueryExpressionTests.cs,AssertCorrect,The length of the statement  "}"' expected' references: _referencesLazy.Value' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.DeclaringTypeDefinition.FullName == "System.Linq.Enumerable" ? MethodScriptSemantics.InlineCode("{" + m.Parameters[0].Name + "}.$" + m.Name + "(" + string.Join("' "' m.Parameters.Skip(1).Select(p => "{" + p.Name + "}")) + ")") : MethodScriptSemantics.NormalMethod("$" + m.Name' ignoreGenericArguments: true)' GetTypeSemantics = t => TypeScriptSemantics.NormalType(t.Name' ignoreGenericArguments: true) }' runtimeLibrary: new MockRuntimeLibrary { Upcast = (e' _1' _2' _) => e }); " is 620.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,QueryExpressionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\QueryExpressionTests.cs,JoinFollowedByLet,The length of the statement  "	var result = from i in arr1 join j in arr2 on i.keyi equals j.keyj let k = i.valuei + j.valuej select i.valuei + j.valuej + k; " is 126.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,QueryExpressionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\QueryExpressionTests.cs,NestedQueries,The length of the statement  "	var result = from i in arr1 from j in arr2 let l = new { i' j } group l by l.i into g select new { g.Key' a = from q in g select new { q.i' q.j } }; " is 148.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,QueryExpressionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\QueryExpressionTests.cs,RangeVariablesAreNotInScopeInJoinEquals,The length of the statement  "	var result = from a in arr let a2 = a select (from b in arr let b2 = b join c in arr on b equals b + a into g select g); " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AnonymousMethodTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AnonymousMethodTests.cs,StatementLambdaThatUsesThisIsNotBoundInAStaticMethodWithThisAsFirstArgument,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) }); " is 149.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AnonymousMethodTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AnonymousMethodTests.cs,ExpressionLambdaThatUsesThisIsNotBoundInAStaticMethodWithThisAsFirstArgument,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) }); " is 149.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AnonymousMethodTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AnonymousMethodTests.cs,BindFirstParameterToThisWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(bindThisToFirstParameter: true) }); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ArrayLiteralTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ArrayLiteralTests.cs,CreatingAMultiDimensionalArrayWithInitializerWorks,The length of the statement  "	var arr = new int[''] { { { 1' 2 }' { 3' 4 }' { 5' 6 } }' { { 7' 8 }' { 9' 10 }' { 11' 12 } }' { { 13' 14 }' { 15' 16 }' { 17' 18 } }' { { 19' 20 }' { 21' 22 }' { 23' 24 } } }; " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,AssertCorrectForBulkOperators,The length of the statement  "				var jsOp = (op == "==" || op == "!=" ? op + "=" : op);	// Script should use strict equals (===) rather than normal equals (==) " is 126.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnLongAndULongIsAnError,The length of the statement  "				Compile(new[] { "class C { public void M() { long v = 0; var v2 = v OPER 1; } }".Replace("OPER"' oper) }' errorReporter: er); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnLongAndULongIsAnError,The length of the statement  "				Compile(new[] { "class C { public void M() { ulong v = 0; var v2 = v OPER 1; } }".Replace("OPER"' oper) }' errorReporter: er); " is 126.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The length of the statement  "				Compile(new[] { "class C { public void M() { long? v = 0; var v2 = v OPER 1; } }".Replace("OPER"' oper) }' errorReporter: er); " is 126.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The length of the statement  "				Compile(new[] { "class C { public void M() { ulong? v = 0; var v2 = v OPER 1; } }".Replace("OPER"' oper) }' errorReporter: er); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,CompoundAssigningToIndexerImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})._({x})._({y})")' MethodScriptSemantics.InlineCode("set_({this})._({x})._({y})._({value})")) : PropertyScriptSemantics.Field(p.Name) }); " is 313.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,CompoundAssigningToPropertyImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,CompoundAssigningToPropertyWithSetMethodImplementedAsLiteralCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})")' MethodScriptSemantics.InlineCode("set_({this})._({value})")) }); " is 231.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,DivisionCompoundAssignmentWorksForIntegralPropertiesImplementedAsNativeIndexers,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) })); " is 174.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,DivisionCompoundAssignmentOnlyInvokesTargetOnceForIntegralPropertiesImplementedAsNativeIndexers,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) })); " is 174.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,DivisionCompoundAssignmentWorksForFloatingPointPropertiesImplementedAsNativeIndexers,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) })); " is 174.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,UsingPropertyThatIsNotUsableFromScriptGivesAnError,The length of the statement  "			Compile(new[] { "class Class { int UnusableProperty { get; set; } public void M() { UnusableProperty += 0; } }" }' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,UsingPropertyThatIsNotUsableFromScriptGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableProperty"))); " is 137.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,PrefixForPropertyImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,PostfixForPropertyImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,PrefixForIndexerImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})._({x})._({y})")' MethodScriptSemantics.InlineCode("set_({this})._({x})._({y})._({value})")) : PropertyScriptSemantics.Field(p.Name) }); " is 313.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,PostfixForIndexerImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})._({x})._({y})")' MethodScriptSemantics.InlineCode("set_({this})._({x})._({y})._({value})")) : PropertyScriptSemantics.Field(p.Name) }); " is 313.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,PrefixForPropertyWithSetMethodImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})")' MethodScriptSemantics.InlineCode("set_({this})._({value})")) }); " is 231.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,PostfixForPropertyWithSetMethodImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})")' MethodScriptSemantics.InlineCode("set_({this})._({value})")) }); " is 231.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,LiftedPrefixForPropertyImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,LiftedPostfixForPropertyImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,LiftedPrefixForPropertyImplementedAsNativeIndexerWorksWhenUsingTheReturnValue,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,IncrementAndDecrementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\IncrementAndDecrementTests.cs,LiftedPostfixForPropertyImplementedAsNativeIndexerWorksWhenUsingTheReturnValue,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,GenericMethodInvocationWithIgnoreGenericArgumentsWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' ignoreGenericArguments: true) }); " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,NormalMethodInvocationWorksForReorderedAndDefaultArgumentsStruct,The length of the statement  "void F(S1 a = default(S1)' S2 b = default(S2)' S3 c = default(S3)' S4 d = default(S4)' S5 e = default(S5)' S6 f = default(S6)' S7 g = default(S7)) {} " is 149.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,NormalMethodInvocationWorksForReorderedAndDefaultArgumentsStruct2,The length of the statement  "void F(S4 a = default(S4)' S5 b = default(S5)' S6 c = default(S6)' S1 d = default(S1)' S7 e = default(S7)' S3 f = default(S3)' S2 g = default(S2)) {} " is 149.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,ReadingPropertyImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,StaticMethodWithThisAsFirstArgumentWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod(m.Name) }); " is 210.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,StaticMethodWithThisAsFirstArgumentWorksStruct,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod(m.Name)' GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name) }); " is 280.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,StaticMethodWithThisAsFirstArgumentDeclaredInGenericTypeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 216.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,GenericStaticMethodWithThisAsFirstArgumentWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 216.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,StaticMethodWithThisAsFirstArgumentWorksWithReorderedAndDefaultArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 216.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeExpressionWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({$System.Object})._({T1})._({T2})._({T3})._({this})._({x})._({y})._({z})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 255.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingVoidMethodImplementedAsInlineCodeWithMultipleStatementsWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("if ({T1}) {T2}; else {T3}; var $$ = _({this})._({x})._({y})._({z})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 247.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeWithCustomNonVirtualCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("X"' nonVirtualInvocationLiteralCode: "_({T1})._({T2})._({this})._({x})._({y})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }' addSkeleton: false); " is 278.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeWorksWithReorderedAndDefaultArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})._({b})._({c})._({d})._({e})._({f})._({g})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 229.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeCreatesTemporariesForParametersUsedTwice,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})._({b})._({c})._({d})._({c})._({d})._({e})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 229.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeCreatesTemporariesForParametersUsedTwiceWhenArgumentsReordered,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})._({b})._({c})._({d})._({c})._({d})._({e})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 229.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeCreatesTemporariesForThisIfRequired1,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({this})._({a})._({a})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 204.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeCreatesTemporariesForThisIfRequired2,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({this})._({this})._({a})._({b})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 214.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeEvaluatesThisIfNotUsedInTheInlineCode,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})._({c})._({d})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 201.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeEvaluatesArgumentNotUsedInTheInlineCode,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 187.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeEvaluatesArgumentsLeftTorightWhenTheInlineCodeDoesNotReorderArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})._({b})._({c})._({d})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 208.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeEvaluatesArgumentsLeftTorightWhenTheInlineCodeReordersArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({b})._({d})._({c})._({a})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 208.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeEvaluatesArgumentsLeftToRightWhenTheInlineCodeReorderingUndoesTheNamedArgumentReordering,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({b})._({d})._({c})._({a})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 208.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeEvaluatesArgumentsLeftTorightWhenTheInlineCodeReordersThis,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({b})._({d})._({this})._({c})._({a})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 218.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsInlineCodeWorksWithReorderedAndDefaultArgumentsWorksWhenTheInlineCodeMethodAlsoReordersArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({b})._({d})._({this})._({c})._({a})._({e})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodMarkedAsNotUsableFromScriptGivesAnError,The length of the statement  "			Compile(new[] { "class Class { int UnusableMethod() {} public void M() { UnusableMethod(); } }" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "UnusableMethod" ? MethodScriptSemantics.NotUsableFromScript() : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 310.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodMarkedAsNotUsableFromScriptGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableMethod"))); " is 135.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseNotUsableTypeAsAGenericArgument,The length of the statement  "			var nc = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "C1" ? TypeScriptSemantics.NotUsableFromScript() : TypeScriptSemantics.NormalType(t.Name) }; " is 162.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseNotUsableTypeAsAGenericArgument,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("generic argument") && er.AllMessages[0].FormattedMessage.Contains("C1") && er.AllMessages[0].FormattedMessage.Contains("F1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseNotUsableTypeAsAGenericArgument,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("generic argument") && er.AllMessages[0].FormattedMessage.Contains("C1") && er.AllMessages[0].FormattedMessage.Contains("F1")); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseMutableValueTypeAsAGenericArgument,The length of the statement  "			var md = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "C1" ? TypeScriptSemantics.MutableValueType(t.Name) : TypeScriptSemantics.NormalType(t.Name) }; " is 165.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseMutableValueTypeAsAGenericArgument,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseMutableValueTypeAsAGenericArgument,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F") }); " is 155.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInExpandedFormWorksStruct,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F")' GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name) }); " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name.StartsWith("F")) }); " is 164.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormWorksStruct,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name.StartsWith("F"))' GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name) }); " is 234.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormDoesNotEvaluateTargetTwice,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F") }); " is 155.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormWorksForStaticMethod,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F") }); " is 155.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormWorksForGenericMethod,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name.StartsWith("F")) }); " is 164.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormWorksForBaseCall,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name.StartsWith("F")) }' addSkeleton: false); " is 184.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormWorksForNonGenericStaticMethodWithThisAsFirstArgument,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F"' expandParams: true) : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 228.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayMethodThatExpandsArgumentsInNonExpandedFormWorksForGenericStaticMethodWithThisAsFirstArgument,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F"' expandParams: true) : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 228.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayDelegateThatExpandsArgumentsInExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: true) }); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayDelegateThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: true) }); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingParamArrayDelegateWithBindThisToFirstParameterThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(bindThisToFirstParameter: true' expandParams: true) }); " is 159.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,IndexingDynamicMemberWithMoreThanOneArgumentGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("one argument"))); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,IndexingDynamicObjectWithMoreThanOneArgumentGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("one argument"))); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,UsingNamedArgumentInInvocationOfDynamicMemberIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F") }' errorReporter: er); " is 177.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,UsingNamedArgumentInInvocationOfDynamicMemberIsAnError,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("named argument") && er.AllMessages[0].FormattedMessage.Contains("Dynamic")); " is 133.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,UsingNamedArgumentInInvocationOfDynamicObjectIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F") }' errorReporter: er); " is 177.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,UsingNamedArgumentInInvocationOfDynamicObjectIsAnError,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("named argument") && er.AllMessages[0].FormattedMessage.Contains("Dynamic")); " is 133.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingIndexerWithDynamicArgumentIsAnErrorWhenMoreThanOneMemberIsApplicable,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.FormattedMessage.Contains("one argument"))); " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodWithDynamicArgumentIsAnErrorWhenAllMethodsInTheGroupDoNotHaveTheSameScriptName,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod(m.Name + "$" + string.Join("$"' m.Parameters.Select(p => p.Type.Name))) }' errorReporter: er); " is 206.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodWithDynamicArgumentIsAnErrorWhenAllMethodsInTheGroupDoNotHaveTheSameScriptName,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.FormattedMessage.Contains("same script name"))); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodWithDynamicArgumentIsAnErrorWhenAMethodInTheGroupIsNotImplementedAsANormalMethod,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" && m.Parameters[1].Type.Name == "String" ? MethodScriptSemantics.InlineCode("X") : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 239.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodWithDynamicArgumentIsAnErrorWhenAMethodInTheGroupIsNotImplementedAsANormalMethod,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.FormattedMessage.Contains("not a normal method"))); " is 128.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokeDelegateWithBindThisToFirstParameterWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(bindThisToFirstParameter: true) }); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsANormalMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.NormalType(t.Name' ignoreGenericArguments: true) }' errorReporter: er); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsANormalMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1"))); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsANormalMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod(m.Name' ignoreGenericArguments: m.Name == "M") }' errorReporter: er); " is 181.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsANormalMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M"))); " is 196.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsANormalMethodWithIgnoredGenericArgumentsIsNotAnErrorIfTheMethodAlsoIgnoresGenericArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.NormalType("$" + t.Name' ignoreGenericArguments: true)' GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' ignoreGenericArguments: true) }); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.NormalType(t.Name' ignoreGenericArguments: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F") : MethodScriptSemantics.NormalMethod("$" + m.Name) }' errorReporter: er); " is 324.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1"))); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod(m.Name' ignoreGenericArguments: true) }' errorReporter: er); " is 262.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M"))); " is 196.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithATypeThatNeedsAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.NormalType(t.Name' ignoreGenericArguments: t.Name == "C1")' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 336.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithATypeThatNeedsAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1"))); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithATypeThatNeedsAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) : MethodScriptSemantics.NormalMethod(m.Name' ignoreGenericArguments: true) }' errorReporter: er); " is 262.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithATypeThatNeedsAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M"))); " is 196.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodImplementedAsAStaticMethodWithThisAsFirstArgumentWithIgnoredGenericArgumentsIsNotAnErrorIfTheMethodAlsoIgnoresGenericArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.NormalType("$" + t.Name' ignoreGenericArguments: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F"' ignoreGenericArguments: true) : MethodScriptSemantics.NormalMethod("$" + m.Name' ignoreGenericArguments: true) }); " is 368.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericInlineCodeMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.NormalType(t.Name' ignoreGenericArguments: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({T})._({t})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }' errorReporter: er); " is 310.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericInlineCodeMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1"))); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericInlineCodeMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod(m.Name' ignoreGenericArguments: m.Name == "M") }' errorReporter: er); " is 181.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericInlineCodeMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M"))); " is 196.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingMethodInlineCodeMethodWithIgnoredGenericArgumentsIsNotAnErrorIfTheMethodDoesNotUseTheGenericArgument,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.NormalType("$" + t.Name' ignoreGenericArguments: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({t1})._({t2})") : MethodScriptSemantics.NormalMethod(m.Name' ignoreGenericArguments: true) }); " is 320.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAMethodOfAGenericMethodWithAnUnavailableTypeParameterIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' ignoreGenericArguments: m.Name == "M") }' errorReporter: er); " is 187.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAMethodOfAGenericMethodWithAnUnavailableTypeParameterIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M"))); " is 196.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingInlineCodeMethodThatExpandsParamArrayInNonExpandedFormIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F1" ? MethodScriptSemantics.InlineCode("_({*args})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }' errorReporter: er); " is 214.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingInlineCodeMethodThatExpandsParamArrayInNonExpandedFormIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7525 && m.FormattedMessage.Contains("C1.F1") && m.FormattedMessage.Contains("params parameter expanded"))); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingInlineCodeMethodInNonExpandedFormUsesTheNonExpandedFormPattern,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({*args})"' nonExpandedFormLiteralCode: "_2({args})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 233.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,ParamArrayWithSideEffectsExpandParams,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: true) }' runtimeLibrary: new MockRuntimeLibrary { Upcast = (a' b' c' d) => a }); " is 237.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToIndexerWorksWhenReorderingArgumentsStruct,The length of the statement  "S this[S a = default(S)' S b = default(S)' S c = default(S)' S d = default(S)' S e = default(S)' S f = default(S)' S g = default(S)] { get { return default(S); } set {} } " is 170.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToIndexerWorksWhenReorderingArgumentsStruct,The length of the statement  "	this.set_$Item($Default({def_S})' this.$F4()' $Default({def_S})' $tmp1' $Default({def_S})' $tmp3' $tmp2' $Clone($i' {to_S})); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToIndexerImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})._({x})._({y})")' MethodScriptSemantics.InlineCode("set_({this})._({x})._({y})._({value})")) : PropertyScriptSemantics.Field(p.Name) }); " is 313.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToIndexerImplementedAsInlineCodeWorksStruct,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})._({x})._({y})")' MethodScriptSemantics.InlineCode("set_({this})._({x})._({y})._({value})")) : PropertyScriptSemantics.Field(p.Name)' GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name) }); " is 383.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToPropertyImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToPropertyImplementedAsNativeIndexerWorksStruct,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name)' GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name) }); " is 243.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToPropertyWithSetMethodImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})")' MethodScriptSemantics.InlineCode("set_({this})._({value})")) }); " is 231.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssigningToPropertyWithSetMethodImplementedAsInlineCodeWorksStruct,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})")' MethodScriptSemantics.InlineCode("set_({this})._({value})"))' GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name) }); " is 301.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,UsingPropertyThatIsNotUsableFromScriptGivesAnError,The length of the statement  "			Compile(new[] { "class Class { int UnusableProperty { get; set; } public void M() { UnusableProperty = 0; } }" }' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 255.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,UsingPropertyThatIsNotUsableFromScriptGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableProperty"))); " is 137.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingNotUsableFieldGivesAnError,The length of the statement  "			Compile(new[] { "class Class { int UnusableField; public void M() { int x = UnusableField; } }" }' metadataImporter: new MockMetadataImporter { GetFieldSemantics = f => FieldScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 234.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingNotUsableFieldGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableField"))); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingPropertyWithGetMethodImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_({this})")' MethodScriptSemantics.InlineCode("set_({this})._({value})")) }); " is 231.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingNotUsablePropertyGivesAnError,The length of the statement  "			Compile(new[] { "class Class { int UnusableProperty { get; set; } public void M() { int i = UnusableProperty; } }" }' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 259.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingNotUsablePropertyGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableProperty"))); " is 137.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UsingEventAddAccessorImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter() { GetEventSemantics = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.InlineCode("add_({this})._({value})")' MethodScriptSemantics.InlineCode("remove_({this})._({value})")) }); " is 244.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UsingEventRemoveAccessorImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter() { GetEventSemantics = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.InlineCode("add_({this})._({value})")' MethodScriptSemantics.InlineCode("remove_({this})._({value})")) }); " is 244.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingIndexerImplementedAsNativeIndexerWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.IsIndexer ? PropertyScriptSemantics.NativeIndexer() : PropertyScriptSemantics.Field(p.Name) }); " is 173.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,SubscribingToNotUsableEventGivesAnError,The length of the statement  "			Compile(new[] { "class Class { event System.EventHandler UnusableEvent; public void M() { UnusableEvent += null; } }" }' metadataImporter: new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,SubscribingToNotUsableEventGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableEvent"))); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UnsubscribingFromNotUsableEventGivesAnError,The length of the statement  "			Compile(new[] { "class Class { event System.EventHandler UnusableEvent; public void M() { UnusableEvent -= null; } }" }' metadataImporter: new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 256.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UnsubscribingFromNotUsableEventGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableEvent"))); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,RaisingNotUsableEventGivesAnError,The length of the statement  "			Compile(new[] { "class Class { event System.EventHandler UnusableEvent; public void M() { UnusableEvent(null' null); } }" }' metadataImporter: new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 260.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,RaisingNotUsableEventGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableEvent"))); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingNotUsableEventGivesAnError,The length of the statement  "			Compile(new[] { "class Class { event System.EventHandler UnusableEvent; public void M() { bool b = UnusableEvent != null; } }" }' metadataImporter: new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 265.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingNotUsableEventGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableEvent"))); " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingFieldImplementedAsConstantWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetFieldSemantics = f => f.Name == "F1" ? FieldScriptSemantics.NullConstant() : (f.Name == "F2" ? FieldScriptSemantics.StringConstant("abcd") : (f.Name == "F3" ? FieldScriptSemantics.NumericConstant(1234.5) : (f.Name == "F4" ? FieldScriptSemantics.BooleanConstant(true) : FieldScriptSemantics.Field(f.Name)))) }); " is 361.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,AssigningToFieldImplementedAsConstantIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetFieldSemantics = f => f.Name == "F1" ? FieldScriptSemantics.NullConstant() : FieldScriptSemantics.Field(f.Name) }' errorReporter: er); " is 188.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,AssigningToFieldImplementedAsConstantIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.FormattedMessage.Contains("C.F1") && m.FormattedMessage.Contains("cannot be assigned to"))); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,AssigningToFieldImplementedAsConstantIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetFieldSemantics = f => f.Name == "F1" ? FieldScriptSemantics.NullConstant() : FieldScriptSemantics.Field(f.Name) }' errorReporter: er); " is 188.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,AssigningToFieldImplementedAsConstantIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.FormattedMessage.Contains("C.F1") && m.FormattedMessage.Contains("cannot be assigned to"))); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UsingBaseStaticPropertyFromDerivedClassWorks2,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$" + p.Name) }); " is 143.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UsingBaseStaticPropertyThroughDerivedClassWorks2,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$" + p.Name) }); " is 143.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UsingBaseStaticPropertyFromDerivedClassWorks3,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$" + p.Name) }); " is 143.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,UsingBaseStaticPropertyThroughDerivedClassWorks3,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$" + p.Name) }); " is 143.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnInlineCodeStaticMethodWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{x}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 178.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnInlineCodeStaticMethodPrefixedWithClassNameWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("{x}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 178.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,ReadingMethodGroupWithOverloadsWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod(m.Parameters.Count > 0 ? m.Name + "_" + m.Parameters[0].Type.Name : m.Name) }); " is 188.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,ReadingMethodGroupWithAnotherTargetWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod(m.Parameters.Count > 0 ? m.Name + "_" + m.Parameters[0].Type.Name : m.Name) }); " is 188.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,ReadingMethodGroupWithAnotherTargetOnlyInvokesTheTargetOnce,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod(m.Parameters.Count > 0 ? m.Name + "_" + m.Parameters[0].Type.Name : m.Name) }); " is 188.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionDoesNotInstantiateGenericMethodIfIgnoreGenericArgumentsIsSet,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' ignoreGenericArguments: true) }); " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,UsingAMethodMarkedAsNotUsableFromScriptGivesAnError,The length of the statement  "			Compile(new[] { "class Class { int UnusableMethod() {} public void M() { System.Func<int> f; f = UnusableMethod; } }" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "UnusableMethod" ? MethodScriptSemantics.NotUsableFromScript() : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 332.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,UsingAMethodMarkedAsNotUsableFromScriptGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("Class.UnusableMethod"))); " is 135.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnNormalMethodThatExpandsParamsToDelegateThatDoesNot,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F") }' errorReporter: er); " is 177.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnNormalMethodThatExpandsParamsToDelegateThatDoesNot,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("C1.F") && er.AllMessages[0].FormattedMessage.Contains("System.Action") && er.AllMessages[0].FormattedMessage.Contains("expand") && er.AllMessages[0].FormattedMessage.Contains("param array")); " is 248.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnMethodThatExpandsParamsToDelegateThatAlsoDoes,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: m.Name == "F")' GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: true) }); " is 232.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,BindFirstParameterToThisWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(bindThisToFirstParameter: true) }); " is 139.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnInlineCodeMethodWithReturnValue,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})._({b})._({T})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 195.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnInlineCodeMethodWithoutReturnValue,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({a})._({b})._({T})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 195.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnInlineCodeMethodWithoutReturnValueWithMultipleStatements,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("if ({a}) {b}; var $$ = {T}") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 201.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnInlineCodeMethodThatUsesThis,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({this})._({a})._({b})._({T})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 205.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnInlineCodeMethodOnAnotherTargetWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({this})._({a})._({b})._({T})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 205.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnInlineCodeMethodUsingNonVirtualCall,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("X"' nonVirtualInvocationLiteralCode: "_({this})._({a})._({b})._({T})") : MethodScriptSemantics.NormalMethod(m.Name) }' addSkeleton: false); " is 263.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnInlineCodeMethodWhenDelegateTypeUsesBindThisToFirstParameter,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(bindThisToFirstParameter: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({this})._({_this})._({b})._({T})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 298.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnInlineCodeMethodWhenDelegateTypeExpandsParamArray,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({this})._({a})._({b})._({c})._({T})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 289.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnInlineCodeMethodThatIncludesAnExpandedParameter,The length of the statement  "" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F1" ? MethodScriptSemantics.InlineCode("_({*a})") : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 204.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnInlineCodeMethodThatIncludesAnExpandedParameter,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7523 && msg.FormattedMessage.Contains("C1.F1") && msg.FormattedMessage.Contains("expanded param array"))); " is 197.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnInlineCodeMethodUsesNonExpandedFormPattern,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F1" ? MethodScriptSemantics.InlineCode("_({*a})"' nonExpandedFormLiteralCode: "_2({a})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 222.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnInlineCodeMethodThatIncludesAParameterAsLiteralText,The length of the statement  "" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F1" ? MethodScriptSemantics.InlineCode("_({@a})") : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 204.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnInlineCodeMethodThatIncludesAParameterAsLiteralText,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7523 && msg.FormattedMessage.Contains("C1.F1") && msg.FormattedMessage.Contains("literal string as code"))); " is 199.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnStaticMethodWithThisAsFirstArgumentWithReturnValue,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 202.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnStaticMethodWithThisAsFirstArgumentWithoutReturnValue,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 202.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnStaticMethodWithThisAsFirstArgumentInGenericType,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F") : MethodScriptSemantics.NormalMethod(m.Name) }' addSkeleton: false); " is 222.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnStaticMethodWithThisAsFirstArgumentOnAnotherTargetWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 202.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnStaticMethodWithThisAsFirstArgumentWhenDelegateTypeUsesBindThisToFirstParameter,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(bindThisToFirstParameter: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 291.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CanPerformMethodGroupConversionOnStaticMethodWithThisAsFirstArgumentWhenBothTheMethodAndTheDelegateTypeExpandsParamArray,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: true)' GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F"' expandParams: true) : MethodScriptSemantics.NormalMethod(m.Name) }); " is 299.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnStaticMethodWithThisAsFirstArgumentThatExpandsParamsToDelegateThatDoesNot,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$F"' expandParams: true) : MethodScriptSemantics.NormalMethod(m.Name) }' errorReporter: er); " is 244.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnStaticMethodWithThisAsFirstArgumentThatExpandsParamsToDelegateThatDoesNot,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("C1.F") && er.AllMessages[0].FormattedMessage.Contains("System.Action") && er.AllMessages[0].FormattedMessage.Contains("expand") && er.AllMessages[0].FormattedMessage.Contains("param array")); " is 248.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnExtensionMethodImplementedAsNormalMethod_ExpandParams,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' expandParams: true)' GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: true) }); " is 243.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnExtensionMethodImplementedAsInlineCode,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({s})._({a})._({b})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 221.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnExtensionMethodImplementedAsInlineCode_WithReturnValue,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({s})._({a})._({b})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 221.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnExtensionMethodImplementedAsInlineCode_ExpandParams,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({s})._({a})._({b})") : MethodScriptSemantics.NormalMethod("$" + m.Name)' GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: true) }); " is 298.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,MethodGroupConversionOnExtensionMethodImplementedAsInlineCodeAppliedToThis,The length of the statement  ""' addSkeleton: false' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "F" ? MethodScriptSemantics.InlineCode("_({c})._({a})._({b})") : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 221.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanCallNamedConstructorWithNoArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("$ctor2") }); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanCallNamedConstructorWithArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("$ctor2") }); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanCallNamedConstructorWithReorderedAndDefaultArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("$ctor2")' GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 201.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanCallStaticMethodConstructorWithNoArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("create_" + c.DeclaringType.Name) }); " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanCallStaticMethodConstructorWithArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("create_" + c.DeclaringType.Name) }); " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanCallStaticMethodConstructorWithReorderedAndDefaultArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("create_" + c.DeclaringType.Name)' GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 232.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingConstructorImplementedAsInlineCodeWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.InlineCode("__CreateX_({a})._({b})._({c})._({d})._({e})._({f})._({g})")' GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 257.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingConstructorImplementedAsInlineCodeWithExpandedParamArrayParameterInNonExpandedFormIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.InlineCode("_({*args})") }' errorReporter: er); " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingConstructorImplementedAsInlineCodeWithExpandedParamArrayParameterInNonExpandedFormIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("constructor") && msg.FormattedMessage.Contains("C1") && msg.FormattedMessage.Contains("params parameter expanded"))); " is 227.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingConstructorImplementedAsInlineCodeInNonExpandedFormUsesTheNonExpandedCode,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.InlineCode("_({*args})"' nonExpandedFormLiteralCode: "_2({args})") }); " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingConstructorImplementedAsInlineCodeWorksForGenericType,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.InlineCode("__CreateX_({T1})._({T2})._({a})._({b})")' GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 238.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,UsingConstructorMarkedAsNotUsableFromScriptGivesAnError,The length of the statement  "			Compile(new[] { "class Class { public Class() {} public void M() { var c = new Class(); } }" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.NotUsableFromScript() }' errorReporter: er); " is 243.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,UsingConstructorMarkedAsNotUsableFromScriptGivesAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.FormattedMessage.Contains("constructor"))); " is 126.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanUseObjectInitializerWhenPropertySetMethodHasInlineCodeImplementation,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetPropertySemantics = p => p.Name == "P" ? PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.InlineCode("get_P({this})")' MethodScriptSemantics.InlineCode("set_P({this}' {value})")) : PropertyScriptSemantics.Field(p.Name) }); " is 287.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CanUseCollectionInitializersWhenAddMethodHasInlineCodeImplementation,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "Add" ? MethodScriptSemantics.InlineCode("add({this}' {" + m.Parameters[0].Name + "})") : MethodScriptSemantics.NormalMethod(m.Name) }); " is 220.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,UsingCollectionInitializerWithInlineCodeConstructorWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.InlineCode("__X__") }); " is 129.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseNotUsableTypeAsATypeArgument,The length of the statement  "			var nc = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "C1" ? TypeScriptSemantics.NotUsableFromScript() : TypeScriptSemantics.NormalType(t.Name) }; " is 162.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseNotUsableTypeAsATypeArgument,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("instance") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 195.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseNotUsableTypeAsATypeArgument,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("type argument") && er.AllMessages[0].FormattedMessage.Contains("C1") && er.AllMessages[0].FormattedMessage.Contains("C2")); " is 253.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseMutableValueTypeAsTypeArgument,The length of the statement  "			var md = new MockMetadataImporter { GetTypeSemantics = t => t.Kind == TypeKind.Struct ? TypeScriptSemantics.MutableValueType(t.Name) : TypeScriptSemantics.NormalType(t.Name) }; " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseMutableValueTypeAsTypeArgument,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("S1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseMutableValueTypeAsTypeArgument,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("S1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingUnnamedParamArrayConstructorThatExpandsArgumentsInExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(expandParams: true) }); " is 137.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingUnnamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(expandParams: true) }); " is 137.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingUnnamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(expandParams: true) }); " is 137.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingUnnamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(expandParams: true) }); " is 137.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingNamedParamArrayConstructorThatDoesNotExpandArgumentsInExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("X") }); " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingNamedParamArrayConstructorThatDoesNotExpandArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("X") }); " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingNamedParamArrayConstructorThatExpandsArgumentsInExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("X"' expandParams: true) }); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingNamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("X"' expandParams: true) }); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingNamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("X"' expandParams: true) }); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingNamedParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("X"' expandParams: true) }); " is 140.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingStaticMethodParamArrayConstructorThatDoesNotExpandArgumentsInExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("X") }); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingStaticMethodParamArrayConstructorThatDoesNotExpandArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("X") }); " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingStaticMethodParamArrayConstructorThatExpandsArgumentsInExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("X"' expandParams: true) }); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingStaticMethodParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("X"' expandParams: true) }); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingStaticMethodParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("X"' expandParams: true) }); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InvokingStaticMethodParamArrayConstructorThatExpandsArgumentsInNonExpandedFormWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("X"' expandParams: true) }); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithJsonConstructorWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Json(new IMember[0]) }); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,JsonConstructorWithParameterToMemberMapWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.DeclaringType.Name == "C1" ? ConstructorScriptSemantics.Json(new[] { c.DeclaringType.GetFields().Single(f => f.Name == "a2")' c.DeclaringType.GetFields().Single(f => f.Name == "b2") }) : ConstructorScriptSemantics.Unnamed() }); " is 308.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,JsonConstructorWithParameterToMemberMapWorksWithReorderedAndDefaultArguments,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Json(c.Parameters.Select(p => c.DeclaringType.GetFields().Single(f => f.Name == p.Name + "2"))) }); " is 205.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,JsonConstructorWithParameterToMemberMapWorksWithObjectInitializers,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Json(c.Parameters.Select(p => c.DeclaringType.GetFields().Single(f => f.Name == p.Name + "2"))) }); " is 205.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,MemberCorrespondingToOptionalNonSpecifiedArgumentToJsonConstructorCanBeInitialized,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Json(c.Parameters.Select(p => c.DeclaringType.GetFields().Single(f => f.Name == p.Name + "2"))) }); " is 205.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InitializingMemberThatIsAlsoInitializedWithParameterToMemberMapIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Json(c.Parameters.Select(p => c.DeclaringType.GetFields().Single(f => f.Name == p.Name + "2"))) }' errorReporter: er); " is 227.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,InitializingMemberThatIsAlsoInitializedWithParameterToMemberMapIsAnError,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("a2") && er.AllMessages[0].FormattedMessage.Contains("initializer") && er.AllMessages[0].FormattedMessage.Contains("constructor call")); " is 192.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotCreateADelegateThatBindsThisToFirstParameterFromOneThatDoesNot,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(bindThisToFirstParameter: d.Name == "D1") }' errorReporter: er); " is 171.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotCreateADelegateThatBindsThisToFirstParameterFromOneThatDoesNot,The length of the statement  "			Assert.That(er.AllMessages.Any(e => e.FormattedMessage.Contains("D1") && e.FormattedMessage.Contains("D2") && e.FormattedMessage.Contains("differ in whether the Javascript 'this'"))); " is 183.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotCreateADelegateThatExpandsParamsFromOneThatDoesNot,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetDelegateSemantics = d => new DelegateScriptSemantics(expandParams: d.Name == "D1") }' errorReporter: er); " is 159.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotCreateADelegateThatExpandsParamsFromOneThatDoesNot,The length of the statement  "			Assert.That(er.AllMessages.Any(e => e.FormattedMessage.Contains("D1") && e.FormattedMessage.Contains("D2") && e.FormattedMessage.Contains("differ in whether the param array"))); " is 177.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentWorksWhenAllCandidatesAreUnnamedConstructors,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(generateCode: false) }); " is 138.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentWorksWhenAllCandidatesAreNamedConstructorsWithTheSameName,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Named("X"' generateCode: false) }); " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentWorksWhenAllCandidatesAreStaticMethodsWithTheSameName,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.StaticMethod("X"' generateCode: false) }); " is 148.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentAndInitializerStatementsWorks,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(generateCode: false) }); " is 138.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,UsingNamedArgumentWithDynamicConstructorInvocationIsAnError,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(generateCode: false) }' errorReporter: er); " is 160.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenTheSemanticsDifferBetweenApplicableMethods,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count == 0 || c.Parameters[0].Type.Name == "Int32" ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Named("X") }' errorReporter: er); " is 247.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenNamesDifferBetweenApplicableMethods,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count > 0 ? ConstructorScriptSemantics.Named("C$" + c.Parameters[0].Type.Name) : ConstructorScriptSemantics.Unnamed() }' errorReporter: er); " is 235.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenNamesDifferBetweenApplicableMethods,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => c.Parameters.Count > 0 ? ConstructorScriptSemantics.StaticMethod("C$" + c.Parameters[0].Type.Name) : ConstructorScriptSemantics.Unnamed() }' errorReporter: er); " is 242.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenTheApplicableMethodsUseInlineCode,The length of the statement  "}" }' metadataImporter: new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.InlineCode("X") }' errorReporter: er); " is 147.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ThisTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ThisTests.cs,ThisWorksInsideStaticMethodWithThisAsFirstArgument,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) }); " is 149.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ThisTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ThisTests.cs,ThisWorksInsideAnonymousMethodInsideStaticMethodWithThisAsFirstArgument,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name) }); " is 149.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,TypeOfTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\TypeOfTests.cs,TypeOfNestedGenericTypesWorks,The length of the statement  "@"	var $x = to_$InstantiateGenericType({X}' ga_$InstantiateGenericType({X}' {ga_C}' {ga_D})' ga_$InstantiateGenericType({X}' {ga_D}' {ga_C})); " is 142.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,TypeOfTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\TypeOfTests.cs,CannotUseNotUsableTypeInATypeOfExpression,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "C1" ? TypeScriptSemantics.NotUsableFromScript() : TypeScriptSemantics.NormalType(t.Name) }; " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,TypeOfTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\TypeOfTests.cs,CannotUseNotUsableTypeInATypeOfExpression,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("expression") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 197.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,TypeOfTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\TypeOfTests.cs,CannotUseNotUsableTypeInATypeOfExpression,The length of the statement  "			Assert.That(er.AllMessages[0].FormattedMessage.Contains("not usable from script") && er.AllMessages[0].FormattedMessage.Contains("expression") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 197.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,TypeOfTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\TypeOfTests.cs,CannotUseMutableValueTypeAsATypeArgumentInATypeOfExpression,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetTypeSemantics = t => t.Name == "C1" ? TypeScriptSemantics.MutableValueType(t.Name) : TypeScriptSemantics.NormalType(t.Name) }; " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,TypeOfTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\TypeOfTests.cs,CannotUseMutableValueTypeAsATypeArgumentInATypeOfExpression,The length of the statement  "			Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1")); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,UserDefinedOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\UserDefinedOperatorTests.cs,UserDefinedOperatorImplementedAsNativeOperatorIsNotInvoked,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.IsOperator ? MethodScriptSemantics.NativeOperator() : MethodScriptSemantics.NormalMethod(m.Name) }); " is 176.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,DefaultConstructorImplementedAsStaticMethodWorks,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => ConstructorScriptSemantics.StaticMethod("X") }; " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,DefaultConstructorIsNotInsertedIfOtherConstructorIsDefined,The length of the statement  "			var metadataImporter = new MockMetadataImporter() { GetConstructorSemantics = c => c.Parameters.Count == 0 ? ConstructorScriptSemantics.Unnamed() : ConstructorScriptSemantics.Named("ctor$" + string.Join("$"' c.Parameters.Select(p => p.Type.Name))) }; " is 250.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,ConstructorsCanBeOverloadedWithDifferentImplementations,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => ctor.DeclaringType.IsKnownType(KnownTypeCode.Object) ? ConstructorScriptSemantics.Unnamed(skipInInitializer: true) : (ctor.Parameters[0].Type.Name == "String" ? ConstructorScriptSemantics.Named("StringCtor") : ConstructorScriptSemantics.StaticMethod("IntCtor")) }; " is 348.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,ConstructorImplementedAsStaticMethodGetsAddedToTheStaticMethodsCollectionAndNotTheConstructors,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => ConstructorScriptSemantics.StaticMethod("X") }; " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,ConstructorImplementedAsNotUsableFromScriptDoesNotAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => ConstructorScriptSemantics.NotUsableFromScript() }; " is 135.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,ConstructorImplementedAsInlineCodeDoesNotAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => ConstructorScriptSemantics.InlineCode("X") }; " is 129.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,ConstructorImplementedAsJsonDoesNotAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => ConstructorScriptSemantics.Json(new IMember[0]) }; " is 134.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,StaticConstructorBodyGetsAddedLastInTheStaticInitStatements,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => { if (ctor.IsStatic) throw new InvalidOperationException(); else return ConstructorScriptSemantics.Unnamed(); } }; " is 198.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,StaticFieldsWithoutInitializersInGenericTypeAreInitializedToDefault,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => { if (ctor.IsStatic) throw new InvalidOperationException(); else return ConstructorScriptSemantics.Unnamed(); } }; " is 198.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,ConstructorConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\ConstructorConversionTests.cs,StaticFieldsWithInitializersInGenericTypeAreInitialized,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = ctor => { if (ctor.IsStatic) throw new InvalidOperationException(); else return ConstructorScriptSemantics.Unnamed(); } }; " is 198.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceAutoEventsWithAddRemoveMethodsAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + e.Name)' MethodScriptSemantics.NormalMethod("remove_" + e.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceAutoEventsWithAddRemoveMethodsWithNoCodeAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object))' " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceAutoEventsWithAddRemoveMethodsWithNoCodeAreCorrectlyImported,The length of the statement  "			                                                  GetEventSemantics = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + e.Name' generateCode: false)' MethodScriptSemantics.NormalMethod("remove_" + e.Name' generateCode: false))' " is 217.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceAutoEventsThatShouldNotGenerateBackingFieldsDoNotGenerateBackingFields,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object))' " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,StaticAutoEventsWithAddRemoveMethodsAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + e.Name)' MethodScriptSemantics.NormalMethod("remove_" + e.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceManualEventsWithAddRemoveMethodsAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetEventSemantics = f => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + f.Name)' MethodScriptSemantics.NormalMethod("remove_" + f.Name)) }; " is 227.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceManualEventsWithAddRemoveMethodsAreCorrectlyImported,The length of the statement  "			Compile(new[] { "class C { public event System.EventHandler SomeProp { add {} remove{} } }" }' metadataImporter: metadataImporter); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceManualEventsWithAddRemoveMethodsWithNoCodeAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object))' GetEventSemantics = f => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + f.Name' generateCode: false)' MethodScriptSemantics.NormalMethod("remove_" + f.Name' generateCode: false)) }; " is 406.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,InstanceManualEventsWithAddRemoveMethodsWithNoCodeAreCorrectlyImported,The length of the statement  "			Compile(new[] { "class C { public event System.EventHandler SomeProp { add {} remove{} } }" }' metadataImporter: metadataImporter); " is 131.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,StaticManualEventsWithAddRemoveMethodsAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetEventSemantics = f => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + f.Name)' MethodScriptSemantics.NormalMethod("remove_" + f.Name)) }; " is 227.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,StaticManualEventsWithAddRemoveMethodsAreCorrectlyImported,The length of the statement  "			Compile(new[] { "class C { public static event System.EventHandler SomeProp { add {} remove{} } }" }' metadataImporter: metadataImporter); " is 138.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,ImportingMultipleEventsInTheSameDeclarationWorks,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetEventSemantics = f => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + f.Name)' MethodScriptSemantics.NormalMethod("remove_" + f.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,BackingFieldsForInstanceAutoEventsWithInitializerUseThatInitializer,The length of the statement  "			Compile(new[] { "class C { public static System.EventHandler GetHandler() { return null; } public event System.EventHandler Event1 = null' Event2 = GetHandler()' Event3 = (s' e) => {}; }" }); " is 191.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,BackingFieldsForStaticAutoEventsWithInitializerUseThatInitializer,The length of the statement  "			Compile(new[] { "class C { public static System.EventHandler GetHandler() { return null; } public static event System.EventHandler Event1 = null' Event2 = GetHandler()' Event3 = (s' e) => {}; }" }); " is 198.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,AbstractEventIsNotAnAutoEvent,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetEventSemantics = e => EventScriptSemantics.AddAndRemoveMethods(MethodScriptSemantics.NormalMethod("add_" + e.Name)' MethodScriptSemantics.NormalMethod("remove_" + e.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,EventConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\EventConversionTests.cs,AbstractEventIsNotAnAutoEvent,The length of the statement  "			Compile(new[] { "abstract class C { public abstract event System.EventHandler SomeProp; }" }' metadataImporter: metadataImporter); " is 130.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,FieldConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\FieldConversionTests.cs,StaticFieldsAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object)) }; " is 188.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,FieldConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\FieldConversionTests.cs,FieldsThatAreNotUsableFromScriptAreNotImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object))' GetFieldSemantics = f => FieldScriptSemantics.NotUsableFromScript() }; " is 257.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,FieldConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\FieldConversionTests.cs,RuntimeLibraryCanReturnNullFromInitializeFieldToPreventInitializationCodeFromAppearing,The length of the statement  "			Compile(new[] { "class C { public int f1 = 2' f2; public static int f3 = 3' f4; }" }' runtimeLibrary: new MockRuntimeLibrary { InitializeField = (t' n' m' v' c) => null }); " is 172.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,IndexerThatIsNotUsableFromScriptIsNotImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.NotUsableFromScript() }; " is 126.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,IndexerWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_Item")' MethodScriptSemantics.NormalMethod("set_Item")) }; " is 217.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,IndexerAccessorsInInterfaceHaveNullDefinition,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_Item")' MethodScriptSemantics.NormalMethod("set_Item")) }; " is 217.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,IndexerWithGetAndSetMethodsWithNoCodeIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_Item"' generateCode: false)' MethodScriptSemantics.NormalMethod("set_Item"' generateCode: false)) }; " is 259.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,IndexerWithGetAndSetMethodsWithNoCodeIsCorrectlyImported,The length of the statement  "			Compile(new[] { "class C { public int this[int i] { get { return 0; } set {} } }" }' metadataImporter: metadataImporter); " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,NativeIndexerIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.NativeIndexer() }; " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,NativeIndexerIsCorrectlyImported,The length of the statement  "			Compile(new[] { "class C { public int this[int i] { get { return 0; } set {} } }" }' metadataImporter: metadataImporter); " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,ReadOnlyIndexerWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_Item")' MethodScriptSemantics.NormalMethod("set_Item")) }; " is 217.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,ReadOnlyNativeIndexerIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.NativeIndexer() }; " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,WriteOnlyIndexerWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_Item")' MethodScriptSemantics.NormalMethod("set_Item")) }; " is 217.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,WriteOnlyNativeIndexerIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.NativeIndexer() }; " is 120.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,AbstractIndexerHasANullDefinition,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_Item")' MethodScriptSemantics.NormalMethod("set_Item")) }; " is 217.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,IndexerConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\IndexerConversionTests.cs,AbstractIndexerHasANullDefinition,The length of the statement  "			Compile(new[] { "abstract class C { public abstract int this[int i] { get; set; } }" }' metadataImporter: metadataImporter); " is 124.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,MethodImplementedAsInlineCodeDoesNotAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = method => MethodScriptSemantics.InlineCode("X") }; " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,MethodImplementedAsInlineCodeWithGeneratedMethodNameDoesAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = method => MethodScriptSemantics.InlineCode("X"' generatedMethodName: "someMethod") }; " is 156.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,MethodImplementedAsNotUsableFromScriptDoesNotAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = method => MethodScriptSemantics.NotUsableFromScript() }; " is 127.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,InstanceMethodWithGenerateCodeSetToFalseDoesNotAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = method => MethodScriptSemantics.NormalMethod("X"' generateCode: false) }; " is 144.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,StaticMethodWithGenerateCodeSetToFalseDoesNotAppearOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = method => MethodScriptSemantics.NormalMethod("X"' generateCode: false) }; " is 144.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,StaticMethodWithThisAsFirstArgumentAppearsOnTheType,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = method => MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("X") }; " is 146.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,ShadowingMethodsAreIncluded,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod(m.DeclaringType.Name == "C" ? "XDerived" : m.Name) }; " is 164.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,ShadowingMethodsAreIncluded,The length of the statement  "			Compile(new[] { "class B { public void X(); } class C : B { public new void X() {} }" }' metadataImporter: metadataImporter); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,PartialMethodWithoutDefinitionIsNotImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = m => { throw new InvalidOperationException(); } }; " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,OverloadedPartialMethodsWork,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$M_" + m.Parameters.Count) }; " is 141.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,OverloadedPartialMethodsWork,The length of the statement  "			Compile(new[] { "partial class C { partial void M(); partial void M(int i); }"' "partial class C { partial void M(int i) {} }" }' metadataImporter: metadataImporter); " is 166.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,PartialMethodWithDeclarationAndDefinitionIsImported,The length of the statement  "			Compile(new[] { "partial class C { partial void M(); }"' "partial class C { partial void M() {} }" }' metadataImporter: metadataImporter); " is 138.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,GenericMethodTypeArgumentsAreIgnoredForInstanceMethodsIfTheMethodImplOptionsSaySo,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("X"' ignoreGenericArguments: true) }; " is 148.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,MethodConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\MethodConversionTests.cs,GenericMethodTypeArgumentsAreIgnoredForStaticMethodsIfTheMethodImplOptionsSaySo,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("X"' ignoreGenericArguments: true) }; " is 148.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesWithGetSetMethodsAndFieldAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_" + p.Name)' MethodScriptSemantics.NormalMethod("set_" + p.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesWithGetSetMethodsWithNoCodeAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object))' " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesWithGetSetMethodsWithNoCodeAreCorrectlyImported,The length of the statement  "			                                                  GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_" + p.Name' generateCode: false)' MethodScriptSemantics.NormalMethod("set_" + p.Name' generateCode: false))' " is 217.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesThatShouldNotGenerateBackingFieldsDoNotGenerateBackingFields,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object))' " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesWithGetSetMethodsStaticWithNoCodeAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetConstructorSemantics = c => ConstructorScriptSemantics.Unnamed(skipInInitializer: c.DeclaringType.IsKnownType(KnownTypeCode.Object))' " is 186.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesWithGetSetMethodsStaticWithNoCodeAreCorrectlyImported,The length of the statement  "			                                                  GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("get_" + p.Name' generateCode: false)' MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("set_" + p.Name' generateCode: false))' " is 263.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_" + p.Name)' MethodScriptSemantics.NormalMethod("set_" + p.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertiesThatShouldBeInstanceFieldsAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$" + p.Name) }; " is 124.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,StaticAutoPropertiesWithGetSetMethodsAndFieldAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_" + p.Name)' MethodScriptSemantics.NormalMethod("set_" + p.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,StaticAutoPropertiesThatShouldBeFieldsAreCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$" + p.Name) }; " is 124.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,InstanceAutoPropertyBackingFieldIsCorrectlyInitialized,The length of the statement  "			Compile(new[] { "class C<T> { public int P1 { get; set; } public string P2 { get; set; } public T P3 { get; set; } }" }); " is 121.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,StaticAutoPropertyBackingFieldIsCorrectlyInitialized,The length of the statement  "			Compile(new[] { "class C<T> { public static int P1 { get; set; } public static string P2 { get; set; } public static T P3 { get; set; } }" }); " is 142.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedInstancePropertyWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_SomeProp")' MethodScriptSemantics.NormalMethod("set_SomeProp")) }; " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedInstancePropertyThatShouldBeAFieldIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$SomeProp") }; " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedReadOnlyInstancePropertyWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_SomeProp")' null) }; " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedReadOnlyInstancePropertyThatShouldBeAFieldIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$SomeProp") }; " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedWriteOnlyInstancePropertyWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(null' MethodScriptSemantics.NormalMethod("set_SomeProp")) }; " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedWriteOnlyInstancePropertyThatShouldBeAFieldIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$SomeProp") }; " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedStaticPropertyWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_SomeProp")' MethodScriptSemantics.NormalMethod("set_SomeProp")) }; " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedStaticPropertyWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			Compile(new[] { "class C { public static int SomeProp { get { return 0; } set {} } }" }' metadataImporter: metadataImporter); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedStaticPropertyThatShouldBeAFieldIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$SomeProp") }; " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedStaticPropertyThatShouldBeAFieldIsCorrectlyImported,The length of the statement  "			Compile(new[] { "class C { public static int SomeProp { get { return 0; } set {} } }" }' metadataImporter: metadataImporter); " is 125.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedReadOnlyStaticPropertyWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_SomeProp")' null) }; " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedReadOnlyStaticPropertyThatShouldBeAFieldIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$SomeProp") }; " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedWriteOnlyStaticPropertyWithGetAndSetMethodsIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(null' MethodScriptSemantics.NormalMethod("set_SomeProp")) }; " is 179.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,ManuallyImplementedWriteOnlyStaticPropertyThatShouldBeAFieldIsCorrectlyImported,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.Field("$SomeProp") }; " is 123.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,AbstractPropertyIsNotAnAutoProperty,The length of the statement  "			var metadataImporter = new MockMetadataImporter { GetPropertySemantics = p => PropertyScriptSemantics.GetAndSetMethods(MethodScriptSemantics.NormalMethod("get_" + p.Name)' MethodScriptSemantics.NormalMethod("set_" + p.Name))' " is 225.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MemberConversion,PropertyConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MemberConversion\PropertyConversionTests.cs,AbstractPropertyIsNotAnAutoProperty,The length of the statement  "			Compile(new[] { "abstract class C { public abstract string SomeProp { get; set; } }" }' metadataImporter: metadataImporter); " is 124.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,SwitchTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\SwitchTests.cs,FieldsImplementedAsConstantsWorkAsCaseLabels,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetFieldSemantics = f => f.DeclaringType.Name == "E" ? FieldScriptSemantics.StringConstant(f.Name) : FieldScriptSemantics.Field(f.Name) }); " is 187.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,ForeachStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\ForeachStatementTests.cs,ForeachStatementWithStrucElementType,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name)' GetPropertySemantics = p => PropertyScriptSemantics.Field(p.Name) }); " is 187.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,ForeachStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\ForeachStatementTests.cs,ForeachOverArrayIsOptimizedToForLoopStruct,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetTypeSemantics = t => TypeScriptSemantics.MutableValueType(t.Name)' GetPropertySemantics = p => PropertyScriptSemantics.Field(p.Name) }); " is 187.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,ForeachStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\ForeachStatementTests.cs,GetEnumeratorWithEnumerateAsArray,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => MethodScriptSemantics.NormalMethod("$" + m.Name' enumerateAsArray: m.Name == "GetEnumerator") }); " is 171.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,ForeachStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\ForeachStatementTests.cs,GetEnumeratorAsStaticMethodWithThisAsFirstArgumentWithEnumerateAsArray,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "GetEnumerator" ? MethodScriptSemantics.StaticMethodWithThisAsFirstArgument("$" + m.Name' enumerateAsArray: true) : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 252.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,ForeachStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\ForeachStatementTests.cs,GetEnumeratorAsInlineCodeWithEnumerateAsArray,The length of the statement  ""' metadataImporter: new MockMetadataImporter { GetMethodSemantics = m => m.Name == "GetEnumerator" ? MethodScriptSemantics.InlineCode("X"' enumerateAsArray: true) : MethodScriptSemantics.NormalMethod("$" + m.Name) }); " is 218.
Long Statement,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,ForeachStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\ForeachStatementTests.cs,ForeachOverDynamicIsAnError,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7542 && m.FormattedMessage.Contains("dynamic"))); " is 134.
Long Statement,Saltarelle.Compiler.Tests.AnalyzerTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\AnalyzerTests\AnalyzerTests.cs,VisitFunctionDefinitionExpression,The length of the statement  "				return JsExpression.FunctionDefinition(expression.ParameterNames' JsStatement.Block(MakePrefix(expression).Concat(body.Statements))' expression.Name); " is 150.
Long Statement,Saltarelle.Compiler.Tests.AnalyzerTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\AnalyzerTests\AnalyzerTests.cs,VisitFunctionStatement,The length of the statement  "				return JsStatement.Function(statement.Name' statement.ParameterNames' JsStatement.Block(MakePrefix(statement).Concat(body.Statements))); " is 136.
Long Statement,Saltarelle.Compiler.Tests.AnalyzerTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\AnalyzerTests\AnalyzerTests.cs,MakePrefix,The length of the statement  "					result.Add(JsExpression.Invocation(JsExpression.Identifier("locals")' _locals[scope].OrderBy(x => x).Select(JsExpression.Identifier))); " is 135.
Long Statement,Saltarelle.Compiler.Tests.AnalyzerTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\AnalyzerTests\AnalyzerTests.cs,MakePrefix,The length of the statement  "					result.Add(JsExpression.Invocation(JsExpression.Identifier("globals")' _globals[scope].OrderBy(x => x).Select(JsExpression.Identifier))); " is 137.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SimpleCompilationWorks,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File1.cs")' @"using System.Collections; public class C1 { public JsDictionary M() { return null; } }"); " is 139.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SimpleCompilationWorks,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File2.cs")' @"using System.Collections; public class C2 { public JsDictionary M() { return null; } }"); " is 139.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,AssemblyNameIsCorrectInTheGeneratedScript,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File1.cs")' @"using System.Collections; public class C1 { public JsDictionary M() { return null; } }"); " is 139.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,AssemblyNameIsCorrectInTheGeneratedScript,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File2.cs")' @"using System.Collections; public class C2 { public JsDictionary M() { return null; } }"); " is 139.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,AssemblyNameIsCorrectInTheGeneratedScript,The length of the statement  "				Assert.That(text.Contains("ss.initAssembly($asm' 'Test.Assembly')"));    // Verify that the symbol was passed to the script compiler. " is 133.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompileErrorsAreReportedAndCauseFilesNotToBeGenerated,The length of the statement  "				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 103 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 45) && m.Format != null && m.Args.Length == 0)); " is 230.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompileWarningsAreReportedButFilesAreGenerated,The length of the statement  "				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Warning && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0)); " is 232.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,GlobalWarningsAsErrorsWorks,The length of the statement  "				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0)); " is 230.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsAsErrorsWorks,The length of the statement  "				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0)); " is 230.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsNotAsErrorsWorks,The length of the statement  "				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Warning && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0)); " is 232.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ConditionalSymbolsWork,The length of the statement  "				Assert.That(er.AllMessages.Select(m => m.Code).ToList()' Is.EquivalentTo(new[] { 219 }));                              // Verify that the symbol was passed to mcs. " is 163.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ConditionalSymbolsWork,The length of the statement  "				Assert.That(File.ReadAllText(Path.GetFullPath("Test.js")).Contains("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"));    // Verify that the symbol was passed to the script compiler. " is 179.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompilingAnonymousTypeWorks,The length of the statement  "				File.WriteAllText(Path.GetFullPath("Test.cs")' @"using System.Collections; public class C1 { public void M() { var o = new { someValue = 1 }; } }"); " is 148.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompilingAnonymousTypeWorks,The length of the statement  "				Assert.That(result' Is.True' "Compilation failed with " + string.Join(Environment.NewLine' er.AllMessages.Select(m => m.FormattedMessage))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompilingLiftedEqualityWorks,The length of the statement  "				File.WriteAllText(Path.GetFullPath("Test.cs")' @"public class C1 { public void M() { int? i1 = null; int i2 = 0; bool b = (i1 == i2); } }"); " is 140.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompilingLiftedEqualityWorks,The length of the statement  "				Assert.That(result' Is.True' "Compilation failed with " + string.Join(Environment.NewLine' er.AllMessages.Select(m => m.FormattedMessage))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanInitializeListWithCollectionInitializer,The length of the statement  "				File.WriteAllText(Path.GetFullPath("Test.cs")' @"using System.Collections.Generic; public class C1 { public void M() { var l = new List<int> { 1 }; } }"); " is 154.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanInitializeListWithCollectionInitializer,The length of the statement  "				Assert.That(result' Is.True' "Compilation failed with " + string.Join(Environment.NewLine' er.AllMessages.Select(m => m.FormattedMessage))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanCompileIteratorBlock,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File1.cs")' @"using System.Collections.Generic; public class C1 { public IEnumerable<int> M() { yield return 0; } }"); " is 154.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanCompileLockStatement,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File1.cs")' @"using System.Collections.Generic; public class C1 { public void M() { lock (new object()) {} } }"); " is 149.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,NonExistentSourceFilesAreHandledGracefully,The length of the statement  "				Assert.That(er.AllMessages.Where(m => m.Severity == MessageSeverity.Error && m.Format.Contains("NonExistentFile.cs"))' Is.Not.Empty); " is 133.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,GeneratingDocumentationFileWorks,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File.cs")' @"/** <summary>$$$$$$$$$$$$$$$</summary>*/ class Class1 { public void M() {} }"); " is 128.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,UsingAliasedReferenceCausesError7998,The length of the statement  "				File.WriteAllText(Path.GetFullPath("Out.cs")' @"extern alias myalias; class Class2 : myalias::Class1 { public void M2() {} }"); " is 127.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,UsingAliasedReferenceCausesError7998,The length of the statement  "					References         = { new Reference(Common.MscorlibPath)' new Reference(Path.GetFullPath("Ref.dll")' alias: "myalias") }' " is 122.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,EntryPointCanBeAutomaticallyDetermined,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File1.cs")' @"public class Class1 { public static void Main() {} } public class Class2 { public static object Main() { return null; } public static void Main(int x) {} public static void Main(string[] a' int b) {} }"); " is 254.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,EntryPointCanBeSpecified,The length of the statement  "				File.WriteAllText(Path.GetFullPath("File1.cs")' @"namespace MyNamespace { public class SomeClass { public static void Main() {} } } public class OtherClass { public static void Main() {} }"); " is 191.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SigningWorks,The length of the statement  "			string key = "0702000000240000525341320004000001000100BF8CF25A8FAE18A956C58C7F0484E846B1DAF18C64DDC3C04B668894E90AFB7C796F86B2926EB59548DDF82097805AE0A981C553A639A0669B39BECD22C1026A3F8E0F90E01BF6993EA18F8E2EA60F4F1B1563FDBB9F8D501A0E0736C3ACCD6BA86B6B2002D20AE83A5E62218BC2ADA819FF0B1521E56801684FA07726EB6DAAC9DF138633A3495C1687045E1B98ECAC630F4BB278AEFF7D6276A88DFFFF02D556562579E144591166595656519A0620F272E8FE1F29DC6EAB1D14319A77EDEB479C09294F0970F1293273AA6E5A8DB32DB6C156E070672F7EEA2C1111E040FB8B992329CD8572D48D9BB256A5EE0329B69ABAFB227BBEEEF402F7383DE4EDB83947AF3B87F9ED7B2A3F3F4572F871020606778C0CEF86C77ECF6F9E8A5112A5B06FA33255A1D8AF6F2401DFA6AC3220181B1BB99D79C931B416E06926DA0E21B79DA68D3ED95CBBFE513990B3BFB4419A390206B48AC93BC397183CD608E0ECA794B66AEC94521E655559B7A098711D2FFD531BED25FF797B8320E415E99F70995777243C3940AF6672976EF37D851D93F765EC0F35FE641279F14400E227A1627CDDCCE09F6B3543681544A169DC78B6AF734AFDAF2C50015E6B932E6BD913619BA04FB5BE03428EAB072C64F7743E1E9DDDADE9DCA6A1E47C648BE01D9133F7D227FAE72337E662459B6A0CA11410FA0179F22312A534B5CABE611742A11A890B1893CD0402CE01778EDC921F0D27CBC96AEE75ECB4D4E083301A843E9716BBB0AD689FDEE275321EA915FD44F696883DAF4E3CAB3D0229283ED43FB12747"; " is 1208.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SigningWorks,The length of the statement  "			byte[] keyBytes = Enumerable.Range(0' key.Length / 2).Select(i => Convert.ToByte(key.Substring(i * 2' 2)' 16)).ToArray(); " is 121.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,IndirectlyReferencedAssemblyMustBeReferenced,The length of the statement  "			}' (from name in new[] { "Asm1"' "Asm2"' "Asm3"' "Asm4" } from ext in new[] { ".cs"' ".dll"' ".js" } select name + ext).ToArray()); " is 131.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ExpressionTreesWork,The length of the statement  "				File.WriteAllText(Path.GetFullPath("Test.cs")' @"public class C1 { public void M() { System.Linq.Expressions.Expression<System.Func<int' int' int>> e = (a' b) => a + b; } }"); " is 175.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ExpressionTreesWork,The length of the statement  "				Assert.That(result' Is.True' "Compilation failed with " + string.Join(Environment.NewLine' er.AllMessages.Select(m => m.FormattedMessage))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanEmbedResources,The length of the statement  "			byte[] publicContent  = new byte[] { 0xB7' 0xF3' 0x36' 0x6F' 0xA3' 0x4B' 0x4B' 0x19' 0x83' 0x27' 0x1C' 0x02' 0x19' 0xCA' 0x2E' 0x2E }; " is 134.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanEmbedResources,The length of the statement  "			byte[] privateContent = new byte[] { 0xCB' 0xDC' 0xDB' 0x54' 0x38' 0x9E' 0x42' 0x1A' 0xAA' 0x35' 0xD8' 0x95' 0x8D' 0x97' 0xF0' 0xCF }; " is 134.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanEmbedResources,The length of the statement  "					EmbeddedResources  = { new EmbeddedResource(Path.GetFullPath("PublicResource.txt")' "The.Resource.Name"' true)' new EmbeddedResource(Path.GetFullPath("PrivateResource.txt")' "Secret.Name"' false) } " is 197.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanEmbedResources,The length of the statement  "				Assert.That(result' Is.True' "Compilation failed with " + string.Join(Environment.NewLine' er.AllMessages.Select(m => m.FormattedMessage))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CanEmbedResources,The length of the statement  "					Assert.That(asm.GetManifestResourceInfo("The.Resource.Name").__ResourceAttributes' Is.EqualTo(ResourceAttributes.Public)); " is 122.
Long Statement,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,DuplicateReferencesAreIgnored,The length of the statement  "				Assert.That(result' Is.True' "Compilation failed with " + string.Join(Environment.NewLine' er.AllMessages.Select(m => m.FormattedMessage))); " is 140.
Long Statement,Saltarelle.Compiler.Tests.EndToEndTests,EndToEndCompilation,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\EndToEndTests\EndToEndCompilation.cs,ReadProject,The length of the statement  "			                               .Select(f => Path.GetFullPath(Path.Combine(basePath' Path.GetDirectoryName(f)' "bin"' "Debug"' Path.GetFileNameWithoutExtension(f) + ".dll"))).ToList(); " is 152.
Long Statement,Saltarelle.Compiler.Tests.EndToEndTests,EndToEndCompilation,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\EndToEndTests\EndToEndCompilation.cs,ReadProject,The length of the statement  "			opts.SourceFiles.AddRange(project.XPathSelectElements("msb:Project/msb:ItemGroup/msb:Compile"' nsm).Select(item => Path.GetFullPath(Path.Combine(basePath' item.Attributes("Include").Single().Value)))); " is 201.
Long Statement,Saltarelle.Compiler.Tests.EndToEndTests,EndToEndCompilation,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\EndToEndTests\EndToEndCompilation.cs,ReadProject,The length of the statement  "			opts.References.AddRange(project.XPathSelectElements("msb:Project/msb:ItemGroup/msb:Reference/msb:HintPath"' nsm).Select(item => new Reference(Path.GetFullPath(Path.Combine(basePath' item.Value))))); " is 199.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,InputFilesAndOutputFileNamesWork,The length of the statement  "			ExpectSuccess(new[] { "/outasm:MyAssembly.dll"' "/outscript:MyScript.dll"' "/doc:MyDocFile.xml"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 139.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DefineConstantsWork,The length of the statement  "			ExpectSuccess(new[] { "/define:MY_SYMBOL1;MY_SYMBOL2"' "/define:MY_SYMBOL3;MY_SYMBOL2"' "/define:MY_SYMBOL4"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 152.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DefineConstantsWork,The length of the statement  "				Assert.That(options.DefineConstants' Is.EquivalentTo(new[] { "MY_SYMBOL1"' "MY_SYMBOL2"' "MY_SYMBOL3"' "MY_SYMBOL4" })); " is 120.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DefineConstantsWork,The length of the statement  "			ExpectSuccess(new[] { "/d:MY_SYMBOL1;MY_SYMBOL2"' "/d:MY_SYMBOL3;MY_SYMBOL2"' "/d:MY_SYMBOL4"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 137.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DefineConstantsWork,The length of the statement  "				Assert.That(options.DefineConstants' Is.EquivalentTo(new[] { "MY_SYMBOL1"' "MY_SYMBOL2"' "MY_SYMBOL3"' "MY_SYMBOL4" })); " is 120.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,AdditionalLibPathsWork,The length of the statement  "			ExpectSuccess(new[] { @"/lib:C:\Some\Path\1'C:\Some\Other\Path"' @"/lib:Some\Relative\Path'C:\Some\Other\Path"' @"/lib:LastPath"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 172.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,AdditionalLibPathsWork,The length of the statement  "				Assert.That(options.AdditionalLibPaths' Is.EquivalentTo(new[] { @"C:\Some\Path\1"' @"C:\Some\Other\Path"' @"Some\Relative\Path"' @"LastPath" })); " is 145.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,ReferencesWork,The length of the statement  "			ExpectSuccess(new[] { @"/reference:SomeReference1"' @"/reference:Some\Relative\Path\SomeOtherReference"' @"/reference:somealias=AliasedReference"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 189.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,ReferencesWork,The length of the statement  "				Assert.That(options.References.Select(r => new { r.Alias' r.Filename }).ToList()' Is.EquivalentTo(new[] { new { Alias = (string)null' Filename = "SomeReference1" }' new { Alias = (string)null' Filename = @"Some\Relative\Path\SomeOtherReference" }' new { Alias = "somealias"' Filename = "AliasedReference" } })); " is 311.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,ReferencesWork,The length of the statement  "			ExpectSuccess(new[] { @"/reference:SomeReference1'Some\Relative\Path\SomeOtherReference'somealias=AliasedReference"' @"/reference:OtherReference"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 189.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,ReferencesWork,The length of the statement  "				Assert.That(options.References.Select(r => new { r.Alias' r.Filename }).ToList()' Is.EquivalentTo(new[] { new { Alias = (string)null' Filename = "SomeReference1" }' new { Alias = (string)null' Filename = @"Some\Relative\Path\SomeOtherReference" }' new { Alias = "somealias"' Filename = "AliasedReference" }' new { Alias = (string)null' Filename = "OtherReference" } })); " is 370.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,ReferencesWork,The length of the statement  "			ExpectSuccess(new[] { @"/r:SomeReference1"' @"/r:Some\Relative\Path\SomeOtherReference"' @"/r:somealias=AliasedReference"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 165.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,ReferencesWork,The length of the statement  "				Assert.That(options.References.Select(r => new { r.Alias' r.Filename }).ToList()' Is.EquivalentTo(new[] { new { Alias = (string)null' Filename = "SomeReference1" }' new { Alias = (string)null' Filename = @"Some\Relative\Path\SomeOtherReference" }' new { Alias = "somealias"' Filename = "AliasedReference" } })); " is 311.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningLevelsWork,The length of the statement  "				ExpectSuccess(new[] { string.Format(CultureInfo.InvariantCulture' "/warn:{0}"' i)' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 125.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningLevelsWork,The length of the statement  "				ExpectSuccess(new[] { string.Format(CultureInfo.InvariantCulture' "/w:{0}"' i)' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 122.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DisabledWarningsWork,The length of the statement  "			ExpectSuccess(new[] { "/nowarn:123'145"' "/nowarn:158'123'654"' "/nowarn:78"' "MyFile1.cs"' "MyFile2.cs" }' options => { " is 120.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,EmbedResourcesWorks,The length of the statement  "				Assert.That(options.EmbeddedResources.Any(r => r.Filename == "thefile.txt" && r.ResourceName == "thefile.txt" && r.IsPublic)); " is 126.
Long Statement,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,EmbedResourcesWorks,The length of the statement  "				Assert.That(options.EmbeddedResources.Any(r => r.Filename == "otherfile.txt" && r.ResourceName == "otherfile.txt" && r.IsPublic)); " is 130.
Long Statement,Saltarelle.Compiler.Tests.MinificationTests,MinifierTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,EncodeNumberWorks,The length of the statement  "				"a"' "b"' "c"' "d"' "e"' "f"' "g"' "h"' "i"' "j"' "k"' "l"' "m"' "n"' "o"' "p"' "q"' "r"' "s"' "t"' "u"' "v"' "w"' "x"' "y"' "z"' "A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "I"' "J"' "K"' "L"' "M"' "N"' "O"' "P"' "Q"' "R"' "S"' "T"' "U"' "V"' "W"' "X"' "Y"' "Z"' " is 259.
Long Statement,Saltarelle.Compiler.Tests.MinificationTests,MinifierTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,EncodeNumberWorks,The length of the statement  "				"ba"' "bb"' "bc"' "bd"' "be"' "bf"' "bg"' "bh"' "bi"' "bj"' "bk"' "bl"' "bm"' "bn"' "bo"' "bp"' "bq"' "br"' "bs"' "bt"' "bu"' "bv"' "bw"' "bx"' "by"' "bz"' "bA"' "bB"' "bC"' "bD"' "bE"' "bF"' "bG"' "bH"' "bI"' "bJ"' "bK"' "bL"' "bM"' "bN"' "bO"' "bP"' "bQ"' "bR"' "bS"' "bT"' "bU"' "bV"' "bW"' "bX"' "bY"' "bZ"' " is 311.
Long Statement,Saltarelle.Compiler.Tests.MinificationTests,MinifierTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,EncodeNumberWorks,The length of the statement  "				"ca"' "cb"' "cc"' "cd"' "ce"' "cf"' "cg"' "ch"' "ci"' "cj"' "ck"' "cl"' "cm"' "cn"' "co"' "cp"' "cq"' "cr"' "cs"' "ct"' "cu"' "cv"' "cw"' "cx"' "cy"' "cz"' "cA"' "cB"' "cC"' "cD"' "cE"' "cF"' "cG"' "cH"' "cI"' "cJ"' "cK"' "cL"' "cM"' "cN"' "cO"' "cP"' "cQ"' "cR"' "cS"' "cT"' "cU"' "cV"' "cW"' "cX"' "cY"' "cZ"' " is 311.
Long Statement,Saltarelle.Compiler.Tests.MinificationTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,VisitFunctionDefinitionExpression,The length of the statement  "				return JsExpression.FunctionDefinition(expression.ParameterNames' JsStatement.Block(MakePrefix(expression).Concat(body.Statements))' expression.Name); " is 150.
Long Statement,Saltarelle.Compiler.Tests.MinificationTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,VisitFunctionStatement,The length of the statement  "				return JsStatement.Function(statement.Name' statement.ParameterNames' JsStatement.Block(MakePrefix(statement).Concat(body.Statements))); " is 136.
Long Statement,Saltarelle.Compiler.Tests.MinificationTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,MakePrefix,The length of the statement  "					result.Add(JsExpression.Invocation(JsExpression.Identifier("locals")' _locals[scope].OrderBy(x => x).Select(JsExpression.Identifier))); " is 135.
Long Statement,Saltarelle.Compiler.Tests.MinificationTests,OutputRewriter,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,MakePrefix,The length of the statement  "					result.Add(JsExpression.Invocation(JsExpression.Identifier("globals")' _globals[scope].OrderBy(x => x).Select(JsExpression.Identifier))); " is 137.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,Compile,The length of the statement  "			var compilation = PreparedCompilation.CreateCompilation("X"' new[] { new MockSourceFile("file.cs"' program) }' new[] { Common.Mscorlib }' new string[0]); " is 153.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,Compile,The length of the statement  "			var compiler = new Compiler.Compiler(new MockMetadataImporter()' new MockNamer()' new MockRuntimeLibrary()' new MockErrorReporter()); " is 133.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,InvokesTheCorrectMethodsAndAddsTheResultInTheCorrectOrder,The length of the statement  "	GetCodeBeforeFirstType  = t => new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier("before")' t.Select(x => JsExpression.Identifier(x.CSharpTypeDefinition.Name))) }' " is 182.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,InvokesTheCorrectMethodsAndAddsTheResultInTheCorrectOrder,The length of the statement  "	GetStaticInitStatements = t => new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier("init")' JsExpression.Identifier(t.CSharpTypeDefinition.Name)) }' " is 165.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,InvokesTheCorrectMethodsAndAddsTheResultInTheCorrectOrder,The length of the statement  "	GetCodeAfterLastType    = t => new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier("after")' t.Select(x => JsExpression.Identifier(x.CSharpTypeDefinition.Name))) }' " is 181.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,InvokesTheCorrectMethodsAndAddsTheResultInTheCorrectOrder,The length of the statement  "	EmulateType             = t => new TypeOOPEmulation(new[] { new TypeOOPEmulationPhase(null' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier("phase1")' JsExpression.Identifier(t.CSharpTypeDefinition.Name)) })' " is 229.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,InvokesTheCorrectMethodsAndAddsTheResultInTheCorrectOrder,The length of the statement  "	                                                            new TypeOOPEmulationPhase(null' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier("phase2")' JsExpression.Identifier(t.CSharpTypeDefinition.Name)) })' " is 169.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,InvokesTheCorrectMethodsAndAddsTheResultInTheCorrectOrder,The length of the statement  "}' types.Single(t => t.CSharpTypeDefinition.Name == "Y").CSharpTypeDefinition.GetMethods().Single(m => m.Name == "Main")); " is 122.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,StatementsForEachPhaseAreSortedIndividuallyFirstByDependencyThenByTypeName,The length of the statement  "		new TypeOOPEmulationPhase(phase1Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(1)) })' " is 188.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,StatementsForEachPhaseAreSortedIndividuallyFirstByDependencyThenByTypeName,The length of the statement  "		new TypeOOPEmulationPhase(phase2Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(2)) })' " is 188.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,StatementsForEachPhaseAreSortedIndividuallyFirstByDependencyThenByTypeName,The length of the statement  "		new TypeOOPEmulationPhase(phase3Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(3)) })' " is 188.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,SortingByNameWorksWithNamespaces,The length of the statement  "			var types = names.Select(n => new { n' r = rnd.Next() }).OrderBy(x => x.r).Select(x => (JsType)new JsClass(Common.CreateMockTypeDefinition(x.n' asm))).ToList(); " is 160.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,SortingByNameWorksWithNamespaces,The length of the statement  "			AssertCorrect(types' string.Join("\n"' names.Select(x => x.Replace("."' "_") + ";")) + "\n"' new MockOOPEmulator { EmulateType = t => new TypeOOPEmulation(new[] { new TypeOOPEmulationPhase(null' new[] { (JsStatement)JsExpression.Identifier(t.CSharpTypeDefinition.FullName.Replace("."' "_")) }) }) }' null); " is 306.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,SortByDependencyWorksWithGenericTypes,The length of the statement  ""' new MockOOPEmulator { EmulateType = t => new TypeOOPEmulation(new[] { new TypeOOPEmulationPhase(t.CSharpTypeDefinition.GetAllBaseTypeDefinitions().Where(b => b.TypeParameterCount == 0).Select(b => b.GetDefinition())' new[] { (JsStatement)JsExpression.Identifier(t.CSharpTypeDefinition.Name) }) }) }' null); " is 309.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,AnErrorIsIssuedIfTheMainMethodHasParameters,The length of the statement  "			var compilation = new CSharpProjectContent().AddOrUpdateFiles(new IUnresolvedFile[] { cu }).AddAssemblyReferences(new[] { MinimalCorlib.Instance }).CreateCompilation(); " is 168.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,AnErrorIsIssuedIfTheMainMethodHasParameters,The length of the statement  "			invoker.Process(cu.GetAllTypeDefinitions().Select(t => new JsClass(t.Resolve(typeResolveContext).GetDefinition())).ToList<JsType>()' compilation.FindType(new FullTypeName("MyClass")).GetMethods().Single(m => m.Name == "Main")); " is 227.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,AnErrorIsIssuedIfTheMainMethodIsNotImplementedAsANormalMethod,The length of the statement  "			var invoker = new OOPEmulatorInvoker(new MockOOPEmulator()' new MockMetadataImporter { GetMethodSemantics = m => m.Name == "Main" ? MethodScriptSemantics.InlineCode("X") : MethodScriptSemantics.NormalMethod(m.Name) }' er); " is 222.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,AnErrorIsIssuedIfTheMainMethodIsNotImplementedAsANormalMethod,The length of the statement  "			var compilation = new CSharpProjectContent().AddOrUpdateFiles(new IUnresolvedFile[] { cu }).AddAssemblyReferences(new[] { MinimalCorlib.Instance }).CreateCompilation(); " is 168.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,AnErrorIsIssuedIfTheMainMethodIsNotImplementedAsANormalMethod,The length of the statement  "			invoker.Process(cu.GetAllTypeDefinitions().Select(t => new JsClass(t.Resolve(typeResolveContext).GetDefinition())).ToList<JsType>()' compilation.FindType(new FullTypeName("MyClass")).GetMethods().Single(m => m.Name == "Main")); " is 227.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,StaticMethodsOnlyAreUsedAsTieBreakersWhenCyclicDependenciesOccur,The length of the statement  "public class C3 { [System.Runtime.CompilerServices.ScriptName(""someName"")] public C3(int x) { var t = typeof(C2); } static C3() { var x3 = typeof(C2); } } " is 156.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,StaticMethodsOnlyAreUsedAsTieBreakersWhenCyclicDependenciesOccur,The length of the statement  "public class C4 { public void M1() { var t = typeof(C3); } public static void M2() { var t = typeof(C3); } static C4() { int x4 = 0; } } " is 136.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,CyclesInDependencyGraphAreHandledGracefully,The length of the statement  "			var invoker = new OOPEmulatorInvoker(new MockOOPEmulator { EmulateType = t => new TypeOOPEmulation(new[] { new TypeOOPEmulationPhase(deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Null }) }) }' new MockMetadataImporter()' er); " is 243.
Long Statement,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,CyclesInDependencyGraphAreHandledGracefully,The length of the statement  "			Assert.That(er.AllMessages.Any(m => m.Code == 7802 && ((string)m.Args[0]).Contains("A1") && ((string)m.Args[0]).Contains("B1") && ((string)m.Args[0]).Contains("C1"))); " is 167.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ObjectLiteralWithInvalidIdentifierPropertyWorks,The length of the statement  "			AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a\\b"' JsExpression.Number(1)))' "{ 'a\\\\b': 1 }"); " is 122.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,FunctionDefinitionExpressionIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsExpression.FunctionDefinition(new string[0]' JsStatement.Return(JsExpression.Null))' "function() {\n\treturn null;\n}"); " is 136.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,FunctionDefinitionExpressionIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsExpression.FunctionDefinition(new [] { "a"' "b" }' JsStatement.Return(JsExpression.Null))' "function(a' b) {\n\treturn null;\n}"); " is 146.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,FunctionDefinitionExpressionIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsExpression.FunctionDefinition(new string[0]' JsStatement.Return(JsExpression.Null)' name: "myFunction")' "function myFunction() {\n\treturn null;\n}"); " is 167.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,VariableDeclarationStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Var(new[] { JsStatement.Declaration("i"' null)' JsStatement.Declaration("j"' null) })' "var i' j;\n"); " is 128.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,VariableDeclarationStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Var(new[] { JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' JsExpression.Number(1)) })' "var i = 0' j = 1;\n"); " is 172.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,VariableDeclarationStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Var(new[] { JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' null) })' "var i = 0' j;\n"); " is 150.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.For(JsStatement.Var(JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' JsExpression.Number(1)))' " is 154.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The length of the statement  "			                              JsExpression.Comma(JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))' JsExpression.PostfixPlusPlus(JsExpression.Identifier("j")))' " is 139.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IfStatementIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.True' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' null)' " is 129.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IfStatementIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.True' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(1)))' " is 198.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.True' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' null)' " is 129.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.Identifier("a")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' " is 133.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The length of the statement  "			                             JsStatement.If(JsExpression.Identifier("c")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(2))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(3)))))' " is 197.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,TryCatchFinallyStatementWithCatchOrFinallyOrBothIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Try(JsExpression.Identifier("x")' JsStatement.Catch("e"' JsExpression.Identifier("y"))' JsExpression.Identifier("z"))' " is 144.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,TryCatchFinallyStatementWithCatchOrFinallyOrBothIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Try(JsExpression.Identifier("x")' JsStatement.Catch("e"' JsExpression.Identifier("y"))' null)' " is 120.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,FunctionDefinitionStatementIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Function("f"' new[] { "a"' "b"' "c" }' JsExpression.Identifier("x"))' "function f(a' b' c) {\n\tx;\n}\n"); " is 132.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,NewArgumentListContainsNoSpaces,The length of the statement  "			AssertCorrect(JsExpression.New(JsExpression.Identifier("x")' JsExpression.Number(1)' JsExpression.Number(2)' JsExpression.Number(3))' "new x(1'2'3)"); " is 150.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,InvocationArgumentListContainsNoSpaces,The length of the statement  "			AssertCorrect(JsExpression.Invocation(JsExpression.Identifier("x")' JsExpression.Number(1)' JsExpression.Number(2)' JsExpression.Number(3))' "x(1'2'3)"); " is 153.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,FunctionDefinitionExpressionIsOutputCorrectly,The length of the statement  "			AssertCorrect(JsExpression.FunctionDefinition(new string[0]' JsStatement.Return(JsExpression.Null))' "function(){return null;}"); " is 129.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,FunctionDefinitionExpressionIsOutputCorrectly,The length of the statement  "			AssertCorrect(JsExpression.FunctionDefinition(new [] { "a"' "b" }' JsStatement.Return(JsExpression.Null))' "function(a'b){return null;}"); " is 138.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,FunctionDefinitionExpressionIsOutputCorrectly,The length of the statement  "			AssertCorrect(JsExpression.FunctionDefinition(new string[0]' JsStatement.Return(JsExpression.Null)' name: "myFunction")' "function myFunction(){return null;}"); " is 160.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ASpaceIsInsertedBetweenBinaryAndUnaryPlusAndMinusToAvoidParseAsIncrementOrDecrement,The length of the statement  "			AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add' JsExpression.Identifier("a")' JsExpression.Unary(ExpressionNodeType.Positive' JsExpression.Identifier("b")))' "a+ +b"); " is 177.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ASpaceIsInsertedBetweenBinaryAndUnaryPlusAndMinusToAvoidParseAsIncrementOrDecrement,The length of the statement  "			AssertCorrect(JsExpression.Binary(ExpressionNodeType.Subtract' JsExpression.Identifier("a")' JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Identifier("b")))' "a- -b"); " is 180.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ASpaceIsInsertedBetweenBinaryAndUnaryPlusAndMinusToAvoidParseAsIncrementOrDecrement,The length of the statement  "			AssertCorrect(JsExpression.Binary(ExpressionNodeType.Subtract' JsExpression.Identifier("a")' JsExpression.Unary(ExpressionNodeType.Positive' JsExpression.Identifier("b")))' "a-+b"); " is 181.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ASpaceIsInsertedBetweenBinaryAndUnaryPlusAndMinusToAvoidParseAsIncrementOrDecrement,The length of the statement  "			AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add' JsExpression.Identifier("a")' JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Identifier("b")))' "a+-b"); " is 174.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,BlockStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Block(new JsStatement[] { JsExpression.Identifier("X")' JsExpression.Identifier("Y") })' "{X;Y;}"); " is 125.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,VariableDeclarationStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Var(new[] { JsStatement.Declaration("i"' null)' JsStatement.Declaration("j"' null) })' "var i'j;"); " is 125.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,VariableDeclarationStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Var(new[] { JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' JsExpression.Number(1)) })' "var i=0'j=1;"); " is 165.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,VariableDeclarationStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.Var(new[] { JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' null) })' "var i=0'j;"); " is 145.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.For(JsStatement.Var(JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' JsExpression.Number(1)))' " is 154.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The length of the statement  "			                              JsExpression.Comma(JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))' JsExpression.PostfixPlusPlus(JsExpression.Identifier("j")))' " is 139.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,IfStatementIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.True' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' null)' " is 129.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,IfStatementIsCorrectlyOutput,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.True' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(1)))' " is 198.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.True' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' null)' " is 129.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The length of the statement  "			AssertCorrect(JsStatement.If(JsExpression.Identifier("a")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))' " is 133.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The length of the statement  "			                                 JsStatement.If(JsExpression.Identifier("c")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(2))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(3)))))' " is 197.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,TryCatchFinallyStatementWithCatchOrFinallyOrBothWorks,The length of the statement  "			AssertCorrect(JsStatement.Try(JsExpression.Identifier("x")' JsStatement.Catch("e"' JsExpression.Identifier("y"))' JsExpression.Identifier("z"))' " is 144.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,TryCatchFinallyStatementWithCatchOrFinallyOrBothWorks,The length of the statement  "			AssertCorrect(JsStatement.Try(JsExpression.Identifier("x")' JsStatement.Catch("e"' JsExpression.Identifier("y"))' null)' " is 120.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaExpressionIsParenthesizedInsideObjectLiteral,The length of the statement  "			AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Comma(JsExpression.Number(1)' JsExpression.Number(2)))' " is 142.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementsContainingOnlyAFunctionDefinitionParenthesizesThatDefinition,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.FunctionDefinition(new string[0]' JsStatement.EmptyBlock)' "(function() {\r\n});\r\n"); " is 127.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0)))' "({ a: 0 });\n"); " is 130.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.Invocation(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0))))' "({ a: 0 }());\n"); " is 157.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.Member(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0)))' "a")' "({ a: 0 }.a);\n"); " is 158.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.Comma(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0)))' JsExpression.Null)' "({ a: 0 }' null);\n"); " is 175.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.Conditional(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0)))' JsExpression.Number(0)' JsExpression.Number(1))' "({ a: 0 } ? 0 : 1);\n"); " is 212.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.PrefixPlusPlus(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0))))' "++{ a: 0 };\n"); " is 159.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.PostfixPlusPlus(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0))))' "({ a: 0 }++);\n"); " is 162.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.PostfixMinusMinus(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0))))' "({ a: 0 }--);\n"); " is 164.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.Index(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0)))' JsExpression.Number(0))' "({ a: 0 }[0]);\n"); " is 177.
Long Statement,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionStatementIsParenthesizedWhenItStartsWithAnObjectLiteral,The length of the statement  "			AssertCorrect((JsStatement)JsExpression.Member(JsExpression.Invocation(JsExpression.Member(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("a"' JsExpression.Number(0)))' "a"))' "b")' "({ a: 0 }.a().b);\n"); " is 213.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,AsyncTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\AsyncTests.cs,AsyncMethodWithNestedTryBlocks,The length of the statement  "			// Note: This generates an extra' unnecessary' state machine. It could be removed' but that would further increase the complexity of the most complex part of the compiler. " is 171.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "				result = StateMachineRewriter.RewriteIteratorBlock(stmt' e => e.NodeType != ExpressionNodeType.Identifier' () => "$tmp" + (++tempIndex).ToString(CultureInfo.InvariantCulture)' () => "$state" + (++stateIndex).ToString(CultureInfo.InvariantCulture)' () => string.Format("$loop" + (++loopLabelIndex).ToString(CultureInfo.InvariantCulture))' () => string.Format("$finally" + (++finallyHandlerIndex).ToString(CultureInfo.InvariantCulture))' v => JsExpression.Invocation(JsExpression.Identifier("setCurrent")' v)' sm => { " is 515.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "					body.AddRange(sm.FinallyHandlers.Select(h => (JsStatement)JsExpression.Assign(JsExpression.Identifier(h.Item1)' h.Item2))); " is 123.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "						body.Add(JsExpression.Assign(JsExpression.Identifier("dispose")' JsExpression.FunctionDefinition(new string[0]' sm.Disposer))); " is 127.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "				                                                 methodType == MethodType.AsyncTask ? JsStatement.Declaration("$tcs"' JsExpression.New(JsExpression.Identifier("TaskCompletionSource"))) : null' " is 143.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "				                                                 expr => { if (methodType != MethodType.AsyncTask) throw new InvalidOperationException("Should not set result in async void method"); return JsExpression.Invocation(JsExpression.Member(JsExpression.Identifier("$tcs")' "setResult")' expr ?? JsExpression.String("<<null>>")); }' " is 275.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "				                                                 expr => { if (methodType != MethodType.AsyncTask) throw new InvalidOperationException("Should not set exception in async void method"); return JsExpression.Invocation(JsExpression.Member(JsExpression.Identifier("$tcs")' "setException")' expr); }' " is 246.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "				                                                 ()   => { if (methodType != MethodType.AsyncTask) throw new InvalidOperationException("Should not get task async void method"); return JsExpression.Invocation(JsExpression.Member(JsExpression.Identifier("$tcs")' "getTask")); }' " is 227.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "				result = StateMachineRewriter.RewriteNormalMethod(stmt' e => e.NodeType != ExpressionNodeType.Identifier' () => "$tmp" + (++tempIndex).ToString(CultureInfo.InvariantCulture)' () => "$state" + (++stateIndex).ToString(CultureInfo.InvariantCulture)' () => string.Format("$loop" + (++loopLabelIndex).ToString(CultureInfo.InvariantCulture))); " is 337.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,StateMachineRewriterTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\StateMachineRewriterTestBase.cs,AssertCorrect,The length of the statement  "			Assert.That(actual.Replace("\r\n"' "\n")' Is.EqualTo(expected.Replace("\r\n"' "\n"))' "Expected:\n" + expected + "\n\nActual:\n" + actual); " is 139.
Long Statement,Saltarelle.Compiler.Tests.StateMachineTests,CompositeTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\StateMachineTests\CompositeTests.cs,TryCatchFinallyAreRewrittenByThemselves,The length of the statement  "			// Note: This generates an extra' unnecessary' state machine. It could be removed' but that would further increase the complexity of the most complex part of the compiler. " is 171.
Long Statement,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,RoundtripExpression,The length of the statement  "			Assert.That(OutputFormatter.Format(expr).Replace("\r\n"' "\n")' Is.EqualTo((expected ?? source).Replace("\r\n"' "\n"))); " is 120.
Long Statement,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,RoundtripStatement,The length of the statement  "			Assert.That(OutputFormatter.Format(stmt).Replace("\r\n"' "\n")' Is.EqualTo((expected ?? source).Replace("\r\n"' "\n"))); " is 120.
Long Statement,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,Unary,The length of the statement  "				Assert.That(expr.Operand.NodeType == ExpressionNodeType.Identifier && ((JsIdentifierExpression)expr.Operand).Name == "x"); " is 122.
Long Statement,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,LabelledStatement,The length of the statement  "			Assert.That(((JsExpressionStatement)((JsLabelledStatement)stmt.Statements[0]).Statement).Expression' Is.InstanceOf<JsIdentifierExpression>()); " is 142.
Complex Conditional,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,MethodCompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\MethodCompilerTestBase.cs,AssertCorrect,The conditional expression  "p.DeclaringType.Kind == TypeKind.Anonymous || new Regex("^F[0-9]*$").IsMatch(p.Name) || (p.DeclaringType.FullName == "System.Array" && p.Name == "Length")"  is complex.
Empty Catch Block,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,UsingFiles,The method has an empty catch block.
Empty Catch Block,Saltarelle.Compiler.Tests.EndToEndTests,EndToEndCompilation,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\EndToEndTests\EndToEndCompilation.cs,CanCompileProject,The method has an empty catch block.
Empty Catch Block,Saltarelle.Compiler.Tests.EndToEndTests,EndToEndCompilation,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\EndToEndTests\EndToEndCompilation.cs,CanCompileProject,The method has an empty catch block.
Empty Catch Block,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,SpuriousInputInExpressionThrowsRecognitionException,The method has an empty catch block.
Magic Number,Saltarelle.Compiler.Tests,MockNamer,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockNamer.cs,MockNamer,The following statement contains a magic number: GetVariableName          = (desired' used) => {  			                               string baseName;  		                                   if (desired != null) {  		                                       baseName = desired.Replace("<>"' "$");  		                                       if (prefixWithDollar && !baseName.StartsWith("$"))  		                                           baseName = "$" + baseName;  		                                   }  		                                   else {  		                                       baseName = "$tmp";  		                                   }  			                               if (desired != null && !used.Contains(baseName))  			                                   return baseName;  			                               int i = (desired == null ? 1 : 2);  			                               while (used.Contains(baseName + i.ToString(CultureInfo.InvariantCulture)))  			                                   i++;  			                               return baseName + i.ToString(CultureInfo.InvariantCulture);  			                           };
Magic Number,Saltarelle.Compiler.Tests,Message,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockErrorReporter.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ Code;
Magic Number,Saltarelle.Compiler.Tests,Message,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockErrorReporter.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ Region.GetHashCode();
Magic Number,Saltarelle.Compiler.Tests,Message,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MockErrorReporter.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (Format != null ? Format.GetHashCode() : 0);
Magic Number,Saltarelle.Compiler.Tests,TypeReferenceFinderTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\TypeReferenceFinderTests.cs,CanAnalyzeStatements,The following statement contains a magic number: Assert.That(refs' Has.Count.EqualTo(3));
Magic Number,Saltarelle.Compiler.Tests,TypeReferenceFinderTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\TypeReferenceFinderTests.cs,CanAnalyzeExpression,The following statement contains a magic number: Assert.That(refs' Has.Count.EqualTo(3));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests,CompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\CompilerTestBase.cs,FindInstanceFieldInitializer,The following statement contains a magic number: return cls.UnnamedConstructor.Body.Statements  			                                  .OfType<JsExpressionStatement>()  			                                  .Select(s => s.Expression)  			                                  .OfType<JsInvocationExpression>()  			                                  .Where(call =>    call.Method is JsIdentifierExpression  			                                                 && ((JsIdentifierExpression)call.Method).Name == "$Init"  			                                                 && call.Arguments[0] is JsThisExpression  			                                                 && call.Arguments[1] is JsConstantExpression && ((JsConstantExpression)call.Arguments[1]).StringValue == name.Substring(lastDot + 1))  			                                  .Select(call => OutputFormatter.Format(call.Arguments[2]' true))  			                                  .SingleOrDefault();
Magic Number,Saltarelle.Compiler.Tests.CompilerTests,CompilerTestBase,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\CompilerTestBase.cs,FindStaticFieldInitializer,The following statement contains a magic number: return cls.StaticInitStatements.OfType<JsExpressionStatement>()  			                               .Select(s => s.Expression)  			                               .OfType<JsInvocationExpression>()  			                                  .Where(call =>    call.Method is JsIdentifierExpression  			                                                 && ((JsIdentifierExpression)call.Method).Name == "$Init"  			                                                 && call.Arguments[1] is JsConstantExpression && ((JsConstantExpression)call.Arguments[1]).StringValue == name.Substring(lastDot + 1))  			                               .Select(call => OutputFormatter.Format(call.Arguments[2]' true))  			                               .SingleOrDefault();
Magic Number,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests,TypeConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\TypeConversionTests.cs,MutableValueTypeCannotBeUsedAsGenericArgumentForABaseClassOrImplementedInterface,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,DynamicChainingIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7998 && (string)m.Args[0] == "dynamic constructor chaining"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,ConstructorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\ConstructorTests.cs,DynamicInvocationOfBaseConstructorIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7998 && (string)m.Args[0] == "dynamic invocation of base constructor"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions.Should().HaveCount(2);
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions.Should().HaveCount(2);
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions.Should().HaveCount(2);
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(2' 16));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(2' 16));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(3' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(3' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(4' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(4' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(5' 24));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(5' 24));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(8' 23));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(8' 23));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(9' 27));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].DefinitionNode.StartLocation.Should().Be(new TextLocation(9' 27));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(13' 19));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[1].DefinitionNode.StartLocation.Should().Be(new TextLocation(13' 19));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(2' 22));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(2' 22));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(3' 48));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(3' 48));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(4' 47));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(4' 47));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(5' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[0].NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(5' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(8' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(8' 29));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(9' 32));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[0].NestedFunctions[1].NestedFunctions[0].BodyNode.StartLocation.Should().Be(new TextLocation(9' 32));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(13' 28));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,NestedFunctionGathererTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\NestedFunctionGathererTests.cs,TheGatheredStructureIsCorrect,The following statement contains a magic number: MethodCompiler.nestedFunctionsRoot.NestedFunctions[1].BodyNode.StartLocation.Should().Be(new TextLocation(13' 28));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$p").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(2' 1)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(2' 1)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$p2").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$p2").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f2").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f2").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$s").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$s").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f3").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f3").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$i").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(5' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$i").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(5' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$j").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(5' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$j").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(5' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$a1").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$a1").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(4' 29)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f4").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f4").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(3' 21)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f5").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(9' 23)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$f5").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(9' 23)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation,VariableGatheringTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\VariableGatheringTests.cs,DeclaringMethodsAreCorrect,The following statement contains a magic number: Assert.That(MethodCompiler.variables.Values.Single(v => v.Name == "$a").DeclaringMethod.StartLocation' Is.EqualTo(new TextLocation(2' 1)));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AwaitTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AwaitTests.cs,AwaitingDynamicIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7541 && m.FormattedMessage.Contains("dynamic")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,BinaryNonAssignmentOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\BinaryNonAssignmentOperatorTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,BitwiseOperationOnLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,BitwiseOperationOnLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,CompoundAssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\CompoundAssignmentTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseMutableValueTypeAsAGenericArgument,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,CannotUseMutableValueTypeAsAGenericArgument,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsANormalMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsANormalMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithATypeThatNeedsAnIgnoredGenericArgumentFromTypeIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericMethodImplementedAsAStaticMethodWithThisAsFirstArgumentMethodWithATypeThatNeedsAnIgnoredGenericArgumentFromMethodIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericInlineCodeMethodWithAnIgnoredGenericArgumentFromTypeIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("type C1")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAGenericInlineCodeMethodWithAnIgnoredGenericArgumentFromMethodIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingAMethodOfAGenericMethodWithAnUnavailableTypeParameterIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7536 && m.FormattedMessage.Contains("IncludeGenericArguments") && m.FormattedMessage.Contains("method C1.M")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,InvocationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\InvocationTests.cs,InvokingInlineCodeMethodThatExpandsParamArrayInNonExpandedFormIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7525 && m.FormattedMessage.Contains("C1.F1") && m.FormattedMessage.Contains("params parameter expanded")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,TheCorrectErrorIsReturnedIfAssigningToDynamicIndexerWithTwoArguments,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7528));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,AssignmentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\AssignmentTests.cs,AssignmentToThisInImmutableValueTypeIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7538));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MemberAccessTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MemberAccessTests.cs,ReadingFieldImplementedAsConstantWorks,The following statement contains a magic number: AssertCorrect(  @"  public int F1;  public int F2;  public int F3;  public int F4;    public void M() {  	// BEGIN  	var f1 = F1;  	var f2 = F2;  	var f3 = F3;  	var f4 = F4;  	// END  }"'  @"	var $f1 = null;  	var $f2 = 'abcd';  	var $f3 = 1234.5;  	var $f4 = true;  "' metadataImporter: new MockMetadataImporter { GetFieldSemantics = f => f.Name == "F1" ? FieldScriptSemantics.NullConstant() : (f.Name == "F2" ? FieldScriptSemantics.StringConstant("abcd") : (f.Name == "F3" ? FieldScriptSemantics.NumericConstant(1234.5) : (f.Name == "F4" ? FieldScriptSemantics.BooleanConstant(true) : FieldScriptSemantics.Field(f.Name)))) });
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnInlineCodeMethodThatIncludesAnExpandedParameter,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7523 && msg.FormattedMessage.Contains("C1.F1") && msg.FormattedMessage.Contains("expanded param array")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,MethodGroupConversionTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\MethodGroupConversionTests.cs,CannotPerformMethodGroupConversionOnInlineCodeMethodThatIncludesAParameterAsLiteralText,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7523 && msg.FormattedMessage.Contains("C1.F1") && msg.FormattedMessage.Contains("literal string as code")));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseMutableValueTypeAsTypeArgument,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("S1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CannotUseMutableValueTypeAsTypeArgument,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("S1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,UsingNamedArgumentWithDynamicConstructorInvocationIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7526));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenTheSemanticsDifferBetweenApplicableMethods,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7526));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenNamesDifferBetweenApplicableMethods,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7531));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenNamesDifferBetweenApplicableMethods,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7531));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,ObjectCreationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\ObjectCreationTests.cs,CreatingObjectWithDynamicArgumentGivesAnErrorWhenTheApplicableMethodsUseInlineCode,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7531));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,TypeOfTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\TypeOfTests.cs,CannotUseMutableValueTypeAsATypeArgumentInATypeOfExpression,The following statement contains a magic number: Assert.That(er.AllMessages[0].Code == 7539 && er.AllMessages[0].FormattedMessage.Contains("mutable value type") && er.AllMessages[0].FormattedMessage.Contains("C1"));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,UnaryOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\UnaryOperatorTests.cs,BitwiseOperationOnLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,UnaryOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\UnaryOperatorTests.cs,BitwiseOperationOnLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,UnaryOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\UnaryOperatorTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Expressions,UnaryOperatorTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Expressions\UnaryOperatorTests.cs,BitwiseOperationOnNullableLongAndULongIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(msg => msg.Severity == MessageSeverity.Error && msg.Code == 7540));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,SwitchTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\SwitchTests.cs,CaseLabelsWhichAreNotExactlyRepresentableInDoubleAreAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7543));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,SwitchTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\SwitchTests.cs,CaseLabelsWhichAreNotExactlyRepresentableInDoubleAreAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7543));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,SwitchTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\SwitchTests.cs,CaseLabelsWhichAreNotExactlyRepresentableInDoubleAreAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7543));
Magic Number,Saltarelle.Compiler.Tests.CompilerTests.MethodCompilation.Statements,ForeachStatementTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\CompilerTests\MethodCompilation\Statements\ForeachStatementTests.cs,ForeachOverDynamicIsAnError,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 7542 && m.FormattedMessage.Contains("dynamic")));
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompileErrorsAreReportedAndCauseFilesNotToBeGenerated,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = y; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 103 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 45) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False' "Assembly should not be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.False' "Script should not be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompileErrorsAreReportedAndCauseFilesNotToBeGenerated,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = y; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 103 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 45) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False' "Assembly should not be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.False' "Script should not be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompileWarningsAreReportedButFilesAreGenerated,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options            = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Warning && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.True' "Assembly should be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.True' "Script should be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,CompileWarningsAreReportedButFilesAreGenerated,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options            = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Warning && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.True' "Assembly should be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.True' "Script should be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,GlobalWarningsAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References            = { new Reference(Common.MscorlibPath) }'  					SourceFiles           = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath    = Path.GetFullPath("Test.dll")'  					OutputScriptPath      = Path.GetFullPath("Test.js")'  					TreatWarningsAsErrors = true  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False' "Assembly should not be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.False' "Script should not be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,GlobalWarningsAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References            = { new Reference(Common.MscorlibPath) }'  					SourceFiles           = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath    = Path.GetFullPath("Test.dll")'  					OutputScriptPath      = Path.GetFullPath("Test.js")'  					TreatWarningsAsErrors = true  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False' "Assembly should not be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.False' "Script should not be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					WarningsAsErrors   = { 219 }  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False' "Assembly should not be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.False' "Script should not be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					WarningsAsErrors   = { 219 }  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False' "Assembly should not be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.False' "Script should not be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					WarningsAsErrors   = { 219 }  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Error && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False' "Assembly should not be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.False' "Script should not be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsNotAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References            = { new Reference(Common.MscorlibPath) }'  					SourceFiles           = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath    = Path.GetFullPath("Test.dll")'  					OutputScriptPath      = Path.GetFullPath("Test.js")'  					TreatWarningsAsErrors = true'  					WarningsNotAsErrors   = { 219 }  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Warning && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.True' "Assembly should be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.True' "Script should be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsNotAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References            = { new Reference(Common.MscorlibPath) }'  					SourceFiles           = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath    = Path.GetFullPath("Test.dll")'  					OutputScriptPath      = Path.GetFullPath("Test.js")'  					TreatWarningsAsErrors = true'  					WarningsNotAsErrors   = { 219 }  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Warning && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.True' "Assembly should be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.True' "Script should be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SpecificWarningsNotAsErrorsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0; } }");  				var options = new CompilerOptions {  					References            = { new Reference(Common.MscorlibPath) }'  					SourceFiles           = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath    = Path.GetFullPath("Test.dll")'  					OutputScriptPath      = Path.GetFullPath("Test.js")'  					TreatWarningsAsErrors = true'  					WarningsNotAsErrors   = { 219 }  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Any(m => m.Severity == MessageSeverity.Warning && m.Code == 219 && m.Region.FileName == Path.GetFullPath("File.cs") && m.Region.Begin == new TextLocation(1' 41) && m.Format != null && m.Args.Length == 0));  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.True' "Assembly should be written");  				Assert.That(File.Exists(Path.GetFullPath("Test.js"))' Is.True' "Script should be written");  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ChangingTheWarningLevelWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0l; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Select(m => m.Code).ToList()' Is.EquivalentTo(new[] { 219' 78 }));  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ChangingTheWarningLevelWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0l; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Select(m => m.Code).ToList()' Is.EquivalentTo(new[] { 219' 78 }));  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ChangingTheWarningLevelWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0l; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					WarningLevel       = 3'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Select(m => m.Code)' Is.EqualTo(new[] { 219 }));  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ChangingTheWarningLevelWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0l; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					WarningLevel       = 3'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Select(m => m.Code)' Is.EqualTo(new[] { 219 }));  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,DisabledWarningsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0l; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					DisabledWarnings   = { 78 }'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Select(m => m.Code).ToList()' Is.EquivalentTo(new[] { 219 }));  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,DisabledWarningsWorks,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"public class C1 { public void M() { var x = 0l; } }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					DisabledWarnings   = { 78 }'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Select(m => m.Code).ToList()' Is.EquivalentTo(new[] { 219 }));  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ConditionalSymbolsWork,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")'  @"  public class C1 {  	public void M() {  #if MY_SYMBOL  		var x = ""$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"";  #endif  	}  }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					DefineConstants    = { "MY_SYMBOL" }  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(result' Is.True);  				Assert.That(er.AllMessages.Select(m => m.Code).ToList()' Is.EquivalentTo(new[] { 219 }));                              // Verify that the symbol was passed to mcs.  				Assert.That(File.ReadAllText(Path.GetFullPath("Test.js")).Contains("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"));    // Verify that the symbol was passed to the script compiler.  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ErrorWritingTheOutputAssemblyGivesCS7950,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"class Class1 { public void M() {} }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("MyOutputFile.dll")'  					OutputScriptPath   = Path.GetFullPath("MyOutputFile.js")'  					DocumentationFile  = Path.GetFullPath("MyOutputFile.xml")'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);    				bool result;  				using (File.Open(Path.GetFullPath("MyOutputFile.dll")' FileMode.Create)) {  					result = driver.Compile(options);  				}    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Code == 7950 && m.Args.Length == 1));  			}' "File.cs"' "MyOutputFile.dll"' "MyOutputFile.js"' "MyOutputFile.xml");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ErrorWritingTheOutputScriptGivesCS7951,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"class Class1 { public void M() {} }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("MyOutputFile.dll")'  					OutputScriptPath   = Path.GetFullPath("MyOutputFile.js")'  					DocumentationFile  = Path.GetFullPath("MyOutputFile.xml")'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);    				bool result;  				using (File.Open(Path.GetFullPath("MyOutputFile.js")' FileMode.Create)) {  					result = driver.Compile(options);  				}    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Code == 7951 && m.Args.Length == 1));  			}' "File.cs"' "MyOutputFile.dll"' "MyOutputFile.js"' "MyOutputFile.xml");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,ErrorWritingTheDocumentationFileGivesCS7952,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"class Class1 { public void M() {} }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("MyOutputFile.dll")'  					OutputScriptPath   = Path.GetFullPath("MyOutputFile.js")'  					DocumentationFile  = Path.GetFullPath("MyOutputFile.xml")'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);    				bool result;  				using (File.Open(Path.GetFullPath("MyOutputFile.xml")' FileMode.Create)) {  					result = driver.Compile(options);  				}    				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Any(m => m.Code == 7952 && m.Args.Length == 1));  			}' "File.cs"' "MyOutputFile.dll"' "MyOutputFile.js"' "MyOutputFile.xml");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,AssemblyThatCanNotBeLocatedCausesError7997,The following statement contains a magic number: UsingFiles(() => {  				File.WriteAllText(Path.GetFullPath("File.cs")' @"class Class1 { public void M() {} }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath)' new Reference("MyNonexistentAssembly") }'  					SourceFiles        = { Path.GetFullPath("File.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")'  					MinimizeScript     = false'  				};  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);  				var result = driver.Compile(options);    				Assert.That(er.AllMessages' Has.Count.EqualTo(1));  				Assert.That(er.AllMessages.Any(m => m.Code == 7997 && (string)m.Args[0] == "MyNonexistentAssembly"));    				Assert.That(result' Is.False);  				Assert.That(File.Exists(Path.GetFullPath("Test.dll"))' Is.False);  			}' "File.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,UsingAliasedReferenceCausesError7998,The following statement contains a magic number: UsingFiles(() => {  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);    				File.WriteAllText(Path.GetFullPath("Ref.cs")' @"public class Class1 { public void M() {} }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("Ref.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Ref.dll")'  					OutputScriptPath   = Path.GetFullPath("Ref.js")'  				};  				bool result = driver.Compile(options);  				Assert.That(result' Is.True);  				Assert.That(er.AllMessages' Is.Empty);    				File.WriteAllText(Path.GetFullPath("Out.cs")' @"extern alias myalias; class Class2 : myalias::Class1 { public void M2() {} }");  				options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath)' new Reference(Path.GetFullPath("Ref.dll")' alias: "myalias") }'  					SourceFiles        = { Path.GetFullPath("Out.cs") }'  					OutputAssemblyPath = Path.GetFullPath("Out.dll")'  					OutputScriptPath   = Path.GetFullPath("Out.js")'  				};    				result = driver.Compile(options);  				Assert.That(result' Is.False);  				Assert.That(er.AllMessages.Single().Code' Is.EqualTo(7998));  				Assert.That(er.AllMessages.Single().Args[0]' Is.EqualTo("aliased reference"));    			}' "Ref.cs"' "Ref.dll"' "Ref.js"' "Out.cs"' "Out.dll"' "Out.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,EntryPointCanBeAutomaticallyDetermined,The following statement contains a magic number: UsingFiles(() => {  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);    				File.WriteAllText(Path.GetFullPath("File1.cs")' @"public class Class1 { public static void Main() {} } public class Class2 { public static object Main() { return null; } public static void Main(int x) {} public static void Main(string[] a' int b) {} }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File1.cs") }'  					HasEntryPoint      = true'  					DisabledWarnings   = { 28 }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")  				};  				bool result = driver.Compile(options);  				Assert.That(result' Is.True);  				Assert.That(er.AllMessages' Is.Empty);    				var content = File.ReadAllText(Path.GetFullPath("Test.js"));  				Assert.That(content.Replace("\r\n"' "\n").EndsWith("\t$Class1.main();\n})();\n")' Is.True);  			}' "File1.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,EntryPointCanBeSpecified,The following statement contains a magic number: UsingFiles(() => {  				var er = new MockErrorReporter();  				var driver = new CompilerDriver(er);    				File.WriteAllText(Path.GetFullPath("File1.cs")' @"namespace MyNamespace { public class SomeClass { public static void Main() {} } } public class OtherClass { public static void Main() {} }");  				var options = new CompilerOptions {  					References         = { new Reference(Common.MscorlibPath) }'  					SourceFiles        = { Path.GetFullPath("File1.cs") }'  					HasEntryPoint      = true'  					EntryPointClass    = "MyNamespace.SomeClass"'  					DisabledWarnings   = { 28 }'  					OutputAssemblyPath = Path.GetFullPath("Test.dll")'  					OutputScriptPath   = Path.GetFullPath("Test.js")  				};  				bool result = driver.Compile(options);  				Assert.That(result' Is.True);  				Assert.That(er.AllMessages' Is.Empty);    				var content = File.ReadAllText(Path.GetFullPath("Test.js"));  				Assert.That(content.Replace("\r\n"' "\n").EndsWith("\t$MyNamespace_SomeClass.main();\n})();\n")' Is.True);  			}' "File1.cs"' "Test.dll"' "Test.js");
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SigningWorks,The following statement contains a magic number: byte[] keyBytes = Enumerable.Range(0' key.Length / 2).Select(i => Convert.ToByte(key.Substring(i * 2' 2)' 16)).ToArray();
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SigningWorks,The following statement contains a magic number: byte[] keyBytes = Enumerable.Range(0' key.Length / 2).Select(i => Convert.ToByte(key.Substring(i * 2' 2)' 16)).ToArray();
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SigningWorks,The following statement contains a magic number: byte[] keyBytes = Enumerable.Range(0' key.Length / 2).Select(i => Convert.ToByte(key.Substring(i * 2' 2)' 16)).ToArray();
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,SigningWorks,The following statement contains a magic number: byte[] keyBytes = Enumerable.Range(0' key.Length / 2).Select(i => Convert.ToByte(key.Substring(i * 2' 2)' 16)).ToArray();
Magic Number,Saltarelle.Compiler.Tests.DriverTests,DriverTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\DriverTests\DriverTests.cs,IndirectlyReferencedAssemblyMustBeReferenced,The following statement contains a magic number: UsingFiles(() => {  				Compile("public class Asm1 { public int M() { return 0; } }"' "Asm1");  				Compile("public class Asm2 { public Asm1 M() { return null; } }"' "Asm2"' "Asm1");    				var result = Compile("public class Asm3 { public Asm2 M() { return null; } }"' "Asm3"' "Asm1"' "Asm2");  				Assert.That(result.Item1' Is.True);  				Assert.That(result.Item2' Is.Empty);    				result = Compile("public class Asm4 { public Asm2 M() { return null; } }"' "Asm4"' "Asm2");  				Assert.That(result.Item1' Is.False);  				Assert.That(result.Item2.Count' Is.EqualTo(1));  				Assert.That(result.Item2[0].Code' Is.EqualTo(7996));  				Assert.That(result.Item2[0].Args[0]' Is.EqualTo("Asm1"));  			}' (from name in new[] { "Asm1"' "Asm2"' "Asm3"' "Asm4" } from ext in new[] { ".cs"' ".dll"' ".js" } select name + ext).ToArray());
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,SimplestCommandLineReturnsTheExpectedOptions,The following statement contains a magic number: ExpectSuccess(new [] { "File1.cs" }' options => {  				Assert.That(options.HasEntryPoint' Is.False);  				Assert.That(options.EntryPointClass' Is.Null);  				Assert.That(options.AdditionalLibPaths' Is.Empty);  				Assert.That(options.MinimizeScript' Is.True);  				Assert.That(options.DefineConstants' Is.Empty);  				Assert.That(options.DisabledWarnings' Is.Empty);  				Assert.That(options.DocumentationFile' Is.Null);  				Assert.That(options.OutputAssemblyPath' Is.Null);  				Assert.That(options.OutputScriptPath' Is.Null);  				Assert.That(options.References' Is.Empty);  				Assert.That(options.SourceFiles' Is.EqualTo(new[] { "File1.cs" }));  				Assert.That(options.TreatWarningsAsErrors' Is.False);  				Assert.That(options.WarningLevel' Is.EqualTo(4));  				Assert.That(options.WarningsAsErrors' Is.Empty);  				Assert.That(options.WarningsNotAsErrors' Is.Empty);  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningLevelsWork,The following statement contains a magic number: i <= 4
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningLevelsWork,The following statement contains a magic number: i <= 4
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DisabledWarningsWork,The following statement contains a magic number: ExpectSuccess(new[] { "/nowarn:123'145"' "/nowarn:158'123'654"' "/nowarn:78"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.DisabledWarnings' Is.EquivalentTo(new[] { 123' 145' 158' 654' 78 }));  				Assert.That(options.SourceFiles' Is.EqualTo(new[] { "MyFile1.cs"' "MyFile2.cs" }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DisabledWarningsWork,The following statement contains a magic number: ExpectSuccess(new[] { "/nowarn:123'145"' "/nowarn:158'123'654"' "/nowarn:78"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.DisabledWarnings' Is.EquivalentTo(new[] { 123' 145' 158' 654' 78 }));  				Assert.That(options.SourceFiles' Is.EqualTo(new[] { "MyFile1.cs"' "MyFile2.cs" }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DisabledWarningsWork,The following statement contains a magic number: ExpectSuccess(new[] { "/nowarn:123'145"' "/nowarn:158'123'654"' "/nowarn:78"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.DisabledWarnings' Is.EquivalentTo(new[] { 123' 145' 158' 654' 78 }));  				Assert.That(options.SourceFiles' Is.EqualTo(new[] { "MyFile1.cs"' "MyFile2.cs" }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DisabledWarningsWork,The following statement contains a magic number: ExpectSuccess(new[] { "/nowarn:123'145"' "/nowarn:158'123'654"' "/nowarn:78"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.DisabledWarnings' Is.EquivalentTo(new[] { 123' 145' 158' 654' 78 }));  				Assert.That(options.SourceFiles' Is.EqualTo(new[] { "MyFile1.cs"' "MyFile2.cs" }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,DisabledWarningsWork,The following statement contains a magic number: ExpectSuccess(new[] { "/nowarn:123'145"' "/nowarn:158'123'654"' "/nowarn:78"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.DisabledWarnings' Is.EquivalentTo(new[] { 123' 145' 158' 654' 78 }));  				Assert.That(options.SourceFiles' Is.EqualTo(new[] { "MyFile1.cs"' "MyFile2.cs" }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror+:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.False);  				Assert.That(options.WarningsAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror+:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.False);  				Assert.That(options.WarningsAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror+:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.False);  				Assert.That(options.WarningsAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.False);  				Assert.That(options.WarningsAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.False);  				Assert.That(options.WarningsAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.False);  				Assert.That(options.WarningsAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror"' "/warnaserror-:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.True);  				Assert.That(options.WarningsNotAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror"' "/warnaserror-:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.True);  				Assert.That(options.WarningsNotAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,WarningsAsErrorsWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/warnaserror"' "/warnaserror-:234'745'364"' "MyFile1.cs"' "MyFile2.cs" }' options => {  				Assert.That(options.TreatWarningsAsErrors' Is.True);  				Assert.That(options.WarningsNotAsErrors' Is.EquivalentTo(new[] { 234' 745' 364 }));  			});
Magic Number,Saltarelle.Compiler.Tests.ExeTests,CommandLineArgumentTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\ExeTests\CommandLineArgumentTests.cs,EmbedResourcesWorks,The following statement contains a magic number: ExpectSuccess(new[] { "/resource:thefile.txt"' "/res:otherfile.txt"' "File.cs" }' options => {  				Assert.That(options.EmbeddedResources.Count' Is.EqualTo(2));  				Assert.That(options.EmbeddedResources.Any(r => r.Filename == "thefile.txt" && r.ResourceName == "thefile.txt" && r.IsPublic));  				Assert.That(options.EmbeddedResources.Any(r => r.Filename == "otherfile.txt" && r.ResourceName == "otherfile.txt" && r.IsPublic));  			});
Magic Number,Saltarelle.Compiler.Tests.MinificationTests,MinifierTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,EncodeNumberWorks,The following statement contains a magic number: Assert.That(Enumerable.Range(0' 160).Select(Minifier.EncodeNumber).ToList()' Is.EqualTo(new[] {  				"a"' "b"' "c"' "d"' "e"' "f"' "g"' "h"' "i"' "j"' "k"' "l"' "m"' "n"' "o"' "p"' "q"' "r"' "s"' "t"' "u"' "v"' "w"' "x"' "y"' "z"' "A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "I"' "J"' "K"' "L"' "M"' "N"' "O"' "P"' "Q"' "R"' "S"' "T"' "U"' "V"' "W"' "X"' "Y"' "Z"'  				"ba"' "bb"' "bc"' "bd"' "be"' "bf"' "bg"' "bh"' "bi"' "bj"' "bk"' "bl"' "bm"' "bn"' "bo"' "bp"' "bq"' "br"' "bs"' "bt"' "bu"' "bv"' "bw"' "bx"' "by"' "bz"' "bA"' "bB"' "bC"' "bD"' "bE"' "bF"' "bG"' "bH"' "bI"' "bJ"' "bK"' "bL"' "bM"' "bN"' "bO"' "bP"' "bQ"' "bR"' "bS"' "bT"' "bU"' "bV"' "bW"' "bX"' "bY"' "bZ"'  				"ca"' "cb"' "cc"' "cd"' "ce"' "cf"' "cg"' "ch"' "ci"' "cj"' "ck"' "cl"' "cm"' "cn"' "co"' "cp"' "cq"' "cr"' "cs"' "ct"' "cu"' "cv"' "cw"' "cx"' "cy"' "cz"' "cA"' "cB"' "cC"' "cD"' "cE"' "cF"' "cG"' "cH"' "cI"' "cJ"' "cK"' "cL"' "cM"' "cN"' "cO"' "cP"' "cQ"' "cR"' "cS"' "cT"' "cU"' "cV"' "cW"' "cX"' "cY"' "cZ"'  				"da"' "db"' "dc"' "dd"  			}));
Magic Number,Saltarelle.Compiler.Tests.MinificationTests,MinifierTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,EncodeNumberWorks,The following statement contains a magic number: Enumerable.Range(0' 1000000).Select(Minifier.EncodeNumber).Should().OnlyHaveUniqueItems();
Magic Number,Saltarelle.Compiler.Tests.MinificationTests,MinifierTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\MinificationTests\MinifierTests.cs,GenerateNameGeneratesUniqueValidNames,The following statement contains a magic number: i < 1000
Magic Number,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,StatementsForEachPhaseAreSortedIndividuallyFirstByDependencyThenByTypeName,The following statement contains a magic number: AssertCorrect(new[] { new JsClass(a)' new JsClass(b)' new JsClass(c)' new JsClass(d) }'  @"D(1);  B(1);  C(1);  A(1);  C(2);  B(2);  D(2);  A(2);  A(3);  B(3);  C(3);  D(3);  "' new MockOOPEmulator {  	EmulateType = t => new TypeOOPEmulation(new[] {  		new TypeOOPEmulationPhase(phase1Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(1)) })'  		new TypeOOPEmulationPhase(phase2Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(2)) })'  		new TypeOOPEmulationPhase(phase3Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(3)) })'  	})  }' null);
Magic Number,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,StatementsForEachPhaseAreSortedIndividuallyFirstByDependencyThenByTypeName,The following statement contains a magic number: AssertCorrect(new[] { new JsClass(a)' new JsClass(b)' new JsClass(c)' new JsClass(d) }'  @"D(1);  B(1);  C(1);  A(1);  C(2);  B(2);  D(2);  A(2);  A(3);  B(3);  C(3);  D(3);  "' new MockOOPEmulator {  	EmulateType = t => new TypeOOPEmulation(new[] {  		new TypeOOPEmulationPhase(phase1Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(1)) })'  		new TypeOOPEmulationPhase(phase2Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(2)) })'  		new TypeOOPEmulationPhase(phase3Deps[t.CSharpTypeDefinition]' new[] { (JsStatement)JsExpression.Invocation(JsExpression.Identifier(t.CSharpTypeDefinition.Name)' JsExpression.Number(3)) })'  	})  }' null);
Magic Number,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,SortingByNameWorksWithNamespaces,The following statement contains a magic number: var rnd = new Random(42);
Magic Number,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,AnErrorIsIssuedIfTheMainMethodHasParameters,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7800 && (string)m.Args[0] == "MyClass.Main"));
Magic Number,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,AnErrorIsIssuedIfTheMainMethodIsNotImplementedAsANormalMethod,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7801 && (string)m.Args[0] == "MyClass.Main"));
Magic Number,Saltarelle.Compiler.Tests.OOPEmulatorInvokerTests,OOPEmulatorInvokerTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OOPEmulatorInvokerTests\OOPEmulatorInvokerTests.cs,CyclesInDependencyGraphAreHandledGracefully,The following statement contains a magic number: Assert.That(er.AllMessages.Any(m => m.Code == 7802 && ((string)m.Args[0]).Contains("A1") && ((string)m.Args[0]).Contains("B1") && ((string)m.Args[0]).Contains("C1")));
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ArrayLiteralWorks,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(JsExpression.Number(1)' JsExpression.Number(2))' "[1' 2]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ArrayLiteralWorks,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(JsExpression.Number(1)' null' JsExpression.Number(2)' null)' "[1' ' 2' ]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IndexingWorks,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Index'  			                   JsExpression.Binary(ExpressionNodeType.Index'  			                       JsExpression.Number(1)'  			                       JsExpression.Number(2)  			                   )'  			                   JsExpression.Number(3)  			               )'  			               "1[2][3]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IndexingWorks,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Index'  			                   JsExpression.Binary(ExpressionNodeType.Index'  			                       JsExpression.Number(1)'  			                       JsExpression.Number(2)  			                   )'  			                   JsExpression.Number(3)  			               )'  			               "1[2][3]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,NumbersAreCorrectlyRepresented,The following statement contains a magic number: AssertCorrect(JsExpression.Number(1.25)' "1.25");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ObjectLiteralIsOutputCorrectly,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Number(1))'  			                                         new JsObjectLiteralProperty("y"' JsExpression.Number(2))'  			                                         new JsObjectLiteralProperty("z"' JsExpression.Number(3)))'  			              "{ x: 1' y: 2' z: 3 }");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ObjectLiteralIsOutputCorrectly,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Number(1))'  			                                         new JsObjectLiteralProperty("y"' JsExpression.Number(2))'  			                                         new JsObjectLiteralProperty("z"' JsExpression.Number(3)))'  			              "{ x: 1' y: 2' z: 3 }");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ObjectLiteralWithFunctionValuesAreOutputOnMultipleLines,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Number(1))'  			                                                              new JsObjectLiteralProperty("y"' JsExpression.FunctionDefinition(new string[0]' JsStatement.Return()))'  			                                                              new JsObjectLiteralProperty("z"' JsExpression.Number(3)))'  @"{  	x: 1'  	y: function() {  		return;  	}'  	z: 3  }");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ObjectLiteralWithNumericPropertyWorks,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("1"' JsExpression.Number(2)))' "{ '1': 2 }");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.For(JsStatement.Var(JsStatement.Declaration("i"' JsExpression.Number(0)))'  			                              JsExpression.Lesser(JsExpression.Identifier("i")' JsExpression.Number(10))'  			                              JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))'  			                              JsStatement.EmptyBlock)'  			              "for (var i = 0; i < 10; i++) {\n}\n");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.For(JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))'  			                              JsExpression.Lesser(JsExpression.Identifier("i")' JsExpression.Number(10))'  			                              JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))'  			                              JsStatement.EmptyBlock)'  			              "for (i = 0; i < 10; i++) {\n}\n");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.For(JsStatement.Var(JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' JsExpression.Number(1)))'  			                              JsExpression.Lesser(JsExpression.Identifier("i")' JsExpression.Number(10))'  			                              JsExpression.Comma(JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))' JsExpression.PostfixPlusPlus(JsExpression.Identifier("j")))'  			                              JsStatement.EmptyBlock)'  			              "for (var i = 0' j = 1; i < 10; i++' j++) {\n}\n");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The following statement contains a magic number: AssertCorrect(JsStatement.If(JsExpression.Identifier("a")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))'  			                             JsStatement.If(JsExpression.Identifier("b")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(1))'  			                             JsStatement.If(JsExpression.Identifier("c")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(2))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(3)))))'  @"if (a) {  	i = 0;  }  else if (b) {  	i = 1;  }  else if (c) {  	i = 2;  }  else {  	i = 3;  }  ");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The following statement contains a magic number: AssertCorrect(JsStatement.If(JsExpression.Identifier("a")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))'  			                             JsStatement.If(JsExpression.Identifier("b")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(1))'  			                             JsStatement.If(JsExpression.Identifier("c")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(2))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(3)))))'  @"if (a) {  	i = 0;  }  else if (b) {  	i = 1;  }  else if (c) {  	i = 2;  }  else {  	i = 3;  }  ");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,SwitchStatementIsCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.Switch(JsExpression.Identifier("x")'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(0) }' JsExpression.Identifier("a"))'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(1)' JsExpression.Number(2) }' JsExpression.Identifier("b"))'  			                  JsStatement.SwitchSection(new[] { null' JsExpression.Number(3) }' JsExpression.Identifier("c"))  			              )'  @"switch (x) {  	case 0: {  		a;  	}  	case 1:  	case 2: {  		b;  	}  	default:  	case 3: {  		c;  	}  }  ");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,NonMinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\NonMinifiedOutputTests.cs,SwitchStatementIsCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.Switch(JsExpression.Identifier("x")'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(0) }' JsExpression.Identifier("a"))'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(1)' JsExpression.Number(2) }' JsExpression.Identifier("b"))'  			                  JsStatement.SwitchSection(new[] { null' JsExpression.Number(3) }' JsExpression.Identifier("c"))  			              )'  @"switch (x) {  	case 0: {  		a;  	}  	case 1:  	case 2: {  		b;  	}  	default:  	case 3: {  		c;  	}  }  ");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,CommaIsOutputWithoutSpace,The following statement contains a magic number: AssertCorrect(JsExpression.Comma(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Comma(  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1'2'3'4");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,CommaIsOutputWithoutSpace,The following statement contains a magic number: AssertCorrect(JsExpression.Comma(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Comma(  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1'2'3'4");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,CommaIsOutputWithoutSpace,The following statement contains a magic number: AssertCorrect(JsExpression.Comma(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Comma(  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1'2'3'4");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ArrayLiteralsContainNoSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(JsExpression.Number(1)' JsExpression.Number(2))' "[1'2]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ArrayLiteralsContainNoSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(JsExpression.Number(1)' null' JsExpression.Number(2)' null)' "[1''2']");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ConditionalDoesNotContainEmbeddedSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Number(1)'  			                  JsExpression.Number(2)'  			                  JsExpression.Number(3)  			              )'  			              "(1?2:3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ConditionalDoesNotContainEmbeddedSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Number(1)'  			                  JsExpression.Number(2)'  			                  JsExpression.Number(3)  			              )'  			              "(1?2:3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,NewArgumentListContainsNoSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.New(JsExpression.Identifier("x")' JsExpression.Number(1)' JsExpression.Number(2)' JsExpression.Number(3))' "new x(1'2'3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,NewArgumentListContainsNoSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.New(JsExpression.Identifier("x")' JsExpression.Number(1)' JsExpression.Number(2)' JsExpression.Number(3))' "new x(1'2'3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,InvocationArgumentListContainsNoSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(JsExpression.Identifier("x")' JsExpression.Number(1)' JsExpression.Number(2)' JsExpression.Number(3))' "x(1'2'3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,InvocationArgumentListContainsNoSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(JsExpression.Identifier("x")' JsExpression.Number(1)' JsExpression.Number(2)' JsExpression.Number(3))' "x(1'2'3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ObjectLiteralsContainNoEmbeddedSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Number(1))'  			                                         new JsObjectLiteralProperty("y"' JsExpression.Number(2))'  			                                         new JsObjectLiteralProperty("z"' JsExpression.Number(3)))'  			              "{x:1'y:2'z:3}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ObjectLiteralsContainNoEmbeddedSpaces,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Number(1))'  			                                         new JsObjectLiteralProperty("y"' JsExpression.Number(2))'  			                                         new JsObjectLiteralProperty("z"' JsExpression.Number(3)))'  			              "{x:1'y:2'z:3}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ObjectLiteralWithFunctionValuesAreNotOutputOnMultipleLines,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Number(1))'  			                                         new JsObjectLiteralProperty("y"' JsExpression.FunctionDefinition(new string[0]' JsStatement.Return()))'  			                                         new JsObjectLiteralProperty("z"' JsExpression.Number(3)))'  			              "{x:1'y:function(){return;}'z:3}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.For(JsStatement.Var("i"' JsExpression.Number(0))'  			                              JsExpression.Lesser(JsExpression.Identifier("i")' JsExpression.Number(10))'  			                              JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))'  			                              JsStatement.EmptyBlock)'  			              "for(var i=0;i<10;i++){}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.For(JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))'  			                              JsExpression.Lesser(JsExpression.Identifier("i")' JsExpression.Number(10))'  			                              JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))'  			                              JsStatement.EmptyBlock)'  			              "for(i=0;i<10;i++){}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,ForStatementsAreCorrectlyOutput,The following statement contains a magic number: AssertCorrect(JsStatement.For(JsStatement.Var(JsStatement.Declaration("i"' JsExpression.Number(0))' JsStatement.Declaration("j"' JsExpression.Number(1)))'  			                              JsExpression.Lesser(JsExpression.Identifier("i")' JsExpression.Number(10))'  			                              JsExpression.Comma(JsExpression.PostfixPlusPlus(JsExpression.Identifier("i"))' JsExpression.PostfixPlusPlus(JsExpression.Identifier("j")))'  			                              JsStatement.EmptyBlock)'  			              "for(var i=0'j=1;i<10;i++'j++){}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The following statement contains a magic number: AssertCorrect(JsStatement.If(JsExpression.Identifier("a")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))'  			                                 JsStatement.If(JsExpression.Identifier("b")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(1))'  			                                 JsStatement.If(JsExpression.Identifier("c")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(2))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(3)))))'  			              "if(a){i=0;}else if(b){i=1;}else if(c){i=2;}else{i=3;}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,IfAndElseIfStatementsAreChained,The following statement contains a magic number: AssertCorrect(JsStatement.If(JsExpression.Identifier("a")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(0))'  			                                 JsStatement.If(JsExpression.Identifier("b")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(1))'  			                                 JsStatement.If(JsExpression.Identifier("c")' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(2))' JsExpression.Assign(JsExpression.Identifier("i")' JsExpression.Number(3)))))'  			              "if(a){i=0;}else if(b){i=1;}else if(c){i=2;}else{i=3;}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,SwitchStatementWorks,The following statement contains a magic number: AssertCorrect(JsStatement.Switch(JsExpression.Identifier("x")'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(0) }' JsExpression.Identifier("a"))'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(1)' JsExpression.Number(2) }' JsExpression.Identifier("b"))'  			                  JsStatement.SwitchSection(new[] { null' JsExpression.Number(3) }' JsExpression.Identifier("c"))  			              )'  			              "switch(x){case 0:{a;}case 1:case 2:{b;}default:case 3:{c;}}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,MinifiedOutputTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\MinifiedOutputTests.cs,SwitchStatementWorks,The following statement contains a magic number: AssertCorrect(JsStatement.Switch(JsExpression.Identifier("x")'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(0) }' JsExpression.Identifier("a"))'  			                  JsStatement.SwitchSection(new[] { JsExpression.Number(1)' JsExpression.Number(2) }' JsExpression.Identifier("b"))'  			                  JsStatement.SwitchSection(new[] { null' JsExpression.Number(3) }' JsExpression.Identifier("c"))  			              )'  			              "switch(x){case 0:{a;}case 1:case 2:{b;}default:case 3:{c;}}");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,LeftToRightAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Subtract'  			                  JsExpression.Binary(ExpressionNodeType.Subtract'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "1 - 2 - 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,LeftToRightAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Subtract'  			                  JsExpression.Binary(ExpressionNodeType.Subtract'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "1 - 2 - 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,LeftToRightAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Subtract'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Subtract'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 - (2 - 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,LeftToRightAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Subtract'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Subtract'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 - (2 - 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,RightToLeftAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Assign'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Assign'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 = 2 = 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,RightToLeftAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Assign'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Assign'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 = 2 = 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,RightToLeftAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Assign'  			                  JsExpression.Binary(ExpressionNodeType.Assign'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "(1 = 2) = 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,RightToLeftAssociativityWorksForExpressionNodeTypes,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Assign'  			                  JsExpression.Binary(ExpressionNodeType.Assign'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "(1 = 2) = 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "1 * 2 + 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "1 * 2 + 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 + 2 * 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 + 2 * 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Multiply'  			                  JsExpression.Binary(ExpressionNodeType.Add'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "(1 + 2) * 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Multiply'  			                  JsExpression.Binary(ExpressionNodeType.Add'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)  			              )'  			              "(1 + 2) * 3");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Multiply'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Add'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 * (2 + 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplyHasHigherPrecedenceThanAdd,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Multiply'  			                  JsExpression.Number(1)'  			                  JsExpression.Binary(ExpressionNodeType.Add'  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 * (2 + 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedAsAssignmentValue,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Assign'  			                  JsExpression.Number(1)'  			                  JsExpression.Comma(  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 = (2' 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedAsAssignmentValue,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Assign'  			                  JsExpression.Number(1)'  			                  JsExpression.Comma(  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1 = (2' 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsNotParenthesizedInsideOtherComma,The following statement contains a magic number: AssertCorrect(JsExpression.Comma(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Comma(  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1' 2' 3' 4");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsNotParenthesizedInsideOtherComma,The following statement contains a magic number: AssertCorrect(JsExpression.Comma(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Comma(  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1' 2' 3' 4");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsNotParenthesizedInsideOtherComma,The following statement contains a magic number: AssertCorrect(JsExpression.Comma(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Comma(  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1' 2' 3' 4");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideArrayLiteral,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "[(1' 2)' 3' (4' 5)]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideArrayLiteral,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "[(1' 2)' 3' (4' 5)]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideArrayLiteral,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "[(1' 2)' 3' (4' 5)]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideArrayLiteral,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "[(1' 2)' 3' (4' 5)]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,AssignmentIsNotParenthesizedInsideArrayLiteral,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(  			                  JsExpression.Binary(ExpressionNodeType.Assign'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )  			              )'  			              "[1 = 2]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ConditionalIsAlwaysParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Number(1)'  			                  JsExpression.Number(2)'  			                  JsExpression.Number(3)  			              )'  			              "(1 ? 2 : 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ConditionalIsAlwaysParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Number(1)'  			                  JsExpression.Number(2)'  			                  JsExpression.Number(3)  			              )'  			              "(1 ? 2 : 3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ConditionalIsNotDoublyParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add'  			                  JsExpression.Number(1)'  			                  JsExpression.Conditional(  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1 + (2 ? 3 : 4)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ConditionalIsNotDoublyParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add'  			                  JsExpression.Number(1)'  			                  JsExpression.Conditional(  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1 + (2 ? 3 : 4)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ConditionalIsNotDoublyParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Add'  			                  JsExpression.Number(1)'  			                  JsExpression.Conditional(  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )  			              )'  			              "1 + (2 ? 3 : 4)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplicationInConditionalIsParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(5)'  			                      JsExpression.Number(6)  			                  )  			              )'  			              "((1 * 2) ? (3 * 4) : (5 * 6))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplicationInConditionalIsParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(5)'  			                      JsExpression.Number(6)  			                  )  			              )'  			              "((1 * 2) ? (3 * 4) : (5 * 6))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplicationInConditionalIsParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(5)'  			                      JsExpression.Number(6)  			                  )  			              )'  			              "((1 * 2) ? (3 * 4) : (5 * 6))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplicationInConditionalIsParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(5)'  			                      JsExpression.Number(6)  			                  )  			              )'  			              "((1 * 2) ? (3 * 4) : (5 * 6))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,MultiplicationInConditionalIsParenthesized,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(3)'  			                      JsExpression.Number(4)  			                  )'  			                  JsExpression.Binary(ExpressionNodeType.Multiply'  			                      JsExpression.Number(5)'  			                      JsExpression.Number(6)  			                  )  			              )'  			              "((1 * 2) ? (3 * 4) : (5 * 6))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionNodeTypeIsNotParenthesizedInsideConditional,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Number(1))'  			                  JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Number(2))'  			                  JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Number(3))  			              )'  			              "(-1 ? -2 : -3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ExpressionNodeTypeIsNotParenthesizedInsideConditional,The following statement contains a magic number: AssertCorrect(JsExpression.Conditional(  			                  JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Number(1))'  			                  JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Number(2))'  			                  JsExpression.Unary(ExpressionNodeType.Negate' JsExpression.Number(3))  			              )'  			              "(-1 ? -2 : -3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideInvocation,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(  			                  JsExpression.Identifier("f")'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "f((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideInvocation,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(  			                  JsExpression.Identifier("f")'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "f((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideInvocation,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(  			                  JsExpression.Identifier("f")'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "f((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideInvocation,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(  			                  JsExpression.Identifier("f")'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "f((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsNotParenthesizedInsideIndexing,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Index'  			                  JsExpression.Number(1)'  			                  JsExpression.Comma(  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1[2' 3]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsNotParenthesizedInsideIndexing,The following statement contains a magic number: AssertCorrect(JsExpression.Binary(ExpressionNodeType.Index'  			                  JsExpression.Number(1)'  			                  JsExpression.Comma(  			                      JsExpression.Number(2)'  			                      JsExpression.Number(3)  			                  )  			              )'  			              "1[2' 3]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,InvocationIsNotParenthesizedWhenUsedAsMemberAccessTarget,The following statement contains a magic number: AssertCorrect(JsExpression.Member(  			                  JsExpression.Invocation(  			                      JsExpression.Number(1)'  			                      new[] { JsExpression.Number(2) }  			                  )'  			                  "Member"  			              )'  			              "1(2).Member");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,NewExpressionIsParenthesizedWhenItIsTheTargetOfAMemberAccess,The following statement contains a magic number: AssertCorrect(JsExpression.Member(  			                  JsExpression.New(  			                      JsExpression.Number(1)'  			                      new[] { JsExpression.Number(2) }  			                  )'  			                  "Member"  			              )'  			              "(new 1(2)).Member");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideConstructorArgumentList,The following statement contains a magic number: AssertCorrect(JsExpression.New(  			                  JsExpression.Number(10)'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "new 10((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideConstructorArgumentList,The following statement contains a magic number: AssertCorrect(JsExpression.New(  			                  JsExpression.Number(10)'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "new 10((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideConstructorArgumentList,The following statement contains a magic number: AssertCorrect(JsExpression.New(  			                  JsExpression.Number(10)'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "new 10((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideConstructorArgumentList,The following statement contains a magic number: AssertCorrect(JsExpression.New(  			                  JsExpression.Number(10)'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "new 10((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaIsParenthesizedInsideConstructorArgumentList,The following statement contains a magic number: AssertCorrect(JsExpression.New(  			                  JsExpression.Number(10)'  			                  JsExpression.Comma(  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )'  			                  JsExpression.Number(3)'  			                  JsExpression.Comma(  			                      JsExpression.Number(4)'  			                      JsExpression.Number(5)  			                  )  			              )'  			              "new 10((1' 2)' 3' (4' 5))");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,AssignmentIsNotParenthesizedInsideConstructorArgumentList,The following statement contains a magic number: AssertCorrect(JsExpression.ArrayLiteral(  			                  JsExpression.Binary(ExpressionNodeType.Assign'  			                      JsExpression.Number(1)'  			                      JsExpression.Number(2)  			                  )  			              )'  			              "[1 = 2]");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ChainedFunctionCallsAreNotParenthtesized,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(  			                  JsExpression.Invocation(  			                      JsExpression.Identifier("x")'  			                      new[] { JsExpression.Number(1) }  			                  )'  			                  new[] { JsExpression.Number(2) }  			              )'  			              "x(1)(2)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ChainedFunctionCallsAndMemberAccessesAreNotParenthtesized,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(  			                  JsExpression.Member(  			                      JsExpression.Invocation(  			                          JsExpression.Member(  			                              JsExpression.Invocation(  			                                  JsExpression.Member(JsExpression.This' "x")'  			                                  new[] { JsExpression.Number(1) }  			                              )' "y")'  			                          new[] { JsExpression.Number(2) }  			                       )' "z")'  			                  new[] { JsExpression.Number(3) }  			              )'  			              "this.x(1).y(2).z(3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,ChainedFunctionCallsAndMemberAccessesAreNotParenthtesized,The following statement contains a magic number: AssertCorrect(JsExpression.Invocation(  			                  JsExpression.Member(  			                      JsExpression.Invocation(  			                          JsExpression.Member(  			                              JsExpression.Invocation(  			                                  JsExpression.Member(JsExpression.This' "x")'  			                                  new[] { JsExpression.Number(1) }  			                              )' "y")'  			                          new[] { JsExpression.Number(2) }  			                       )' "z")'  			                  new[] { JsExpression.Number(3) }  			              )'  			              "this.x(1).y(2).z(3)");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaExpressionIsParenthesizedInsideObjectLiteral,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Comma(JsExpression.Number(1)' JsExpression.Number(2)))'  			                                         new JsObjectLiteralProperty("y"' JsExpression.Number(3)))'  			              "{ x: (1' 2)' y: 3 }");
Magic Number,Saltarelle.Compiler.Tests.OutputFormatterTests,ParenthesationTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\OutputFormatterTests\ParenthesationTests.cs,CommaExpressionIsParenthesizedInsideObjectLiteral,The following statement contains a magic number: AssertCorrect(JsExpression.ObjectLiteral(new JsObjectLiteralProperty("x"' JsExpression.Comma(JsExpression.Number(1)' JsExpression.Number(2)))'  			                                         new JsObjectLiteralProperty("y"' JsExpression.Number(3)))'  			              "{ x: (1' 2)' y: 3 }");
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,Number,The following statement contains a magic number: Assert.That(expr.NumberValue' Is.EqualTo(123));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,Number,The following statement contains a magic number: Assert.That(expr.NumberValue' Is.EqualTo(255));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,Number,The following statement contains a magic number: Assert.That(expr.NumberValue' Is.EqualTo(1.375));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,Number,The following statement contains a magic number: Assert.That(expr.NumberValue' Is.EqualTo(255));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,SwitchStatement,The following statement contains a magic number: Assert.That(stmt.Sections.Count' Is.EqualTo(3));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,SwitchStatement,The following statement contains a magic number: Assert.That(stmt.Sections[2].Values' Is.EqualTo(new object[] { null }));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,SwitchStatement,The following statement contains a magic number: Assert.That(OutputFormatter.Format(stmt.Sections[2].Body).Replace("\r\n"' "\n")' Is.EqualTo("{\n\tz;\n}\n"));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,SwitchStatementWithMultipleLabelsPerBlock,The following statement contains a magic number: Assert.That(stmt.Sections.Count' Is.EqualTo(2));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,SwitchStatementWithMultipleLabelsPerBlock,The following statement contains a magic number: Assert.That(stmt.Sections[1].Values.Count' Is.EqualTo(2));
Magic Number,Saltarelle.Compiler.Tests.JavaScriptParserTests,JavaScriptParserTests,D:\research\architectureSmells\repos\erik-kallen_SaltarelleCompiler\Compiler\Saltarelle.Compiler.Tests\JavaScriptParserTests\JavaScriptParserTests.cs,Program,The following statement contains a magic number: Assert.That(stmts.Count' Is.EqualTo(2));
