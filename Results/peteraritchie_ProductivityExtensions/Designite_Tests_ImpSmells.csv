Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Tests,when_testing_set_equality,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_set_equality.cs,then_two_lists_with_equal_elements_same_order_are_equal_with_equality,The length of the statement  "			Assert.IsTrue(list1.SetEqual(list2' new DelegateEqualityComparer<string>(s=>s.ToUpperInvariant().GetHashCode()' (x'y)=>x.ToUpperInvariant() == y.ToUpperInvariant()))); " is 167.
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfEqualSequencesReturnsTrue,The following statement contains a magic number: var l1 = new List<int> {1' 2' 3};
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfEqualSequencesReturnsTrue,The following statement contains a magic number: var l1 = new List<int> {1' 2' 3};
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfEqualSequencesReturnsTrue,The following statement contains a magic number: var l2 = new List<int> {9' 1' 2' 3};
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfEqualSequencesReturnsTrue,The following statement contains a magic number: var l2 = new List<int> {9' 1' 2' 3};
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfEqualSequencesReturnsTrue,The following statement contains a magic number: var l2 = new List<int> {9' 1' 2' 3};
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSequencesReturnsFalse,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSequencesReturnsFalse,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSequencesReturnsFalse,The following statement contains a magic number: var l2 = new List<int> { 9' 3'2'1 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSequencesReturnsFalse,The following statement contains a magic number: var l2 = new List<int> { 9' 3'2'1 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSequencesReturnsFalse,The following statement contains a magic number: var l2 = new List<int> { 9' 3'2'1 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSizeSequencesReturnsFalse,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSizeSequencesReturnsFalse,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualOfDifferenSizeSequencesReturnsFalse,The following statement contains a magic number: var l2 = new List<int> { 9 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality50Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality50Percent,The following statement contains a magic number: Assert.AreEqual(50' l1.SequenceEquality(l2' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus50Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus50Percent,The following statement contains a magic number: Assert.AreEqual(-50' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality33Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality33Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality33Percent,The following statement contains a magic number: Assert.AreEqual(33' l1.SequenceEquality(l2' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus33Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus33Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus33Percent,The following statement contains a magic number: Assert.AreEqual(-33' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality66Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality66Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality66Percent,The following statement contains a magic number: var l2 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality66Percent,The following statement contains a magic number: Assert.AreEqual(66' l1.SequenceEquality(l2' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus66Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus66Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus66Percent,The following statement contains a magic number: var l2 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus66Percent,The following statement contains a magic number: Assert.AreEqual(-66' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality25Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3'4  };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality25Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3'4  };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality25Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3'4  };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality25Percent,The following statement contains a magic number: Assert.AreEqual(25' l1.SequenceEquality(l2' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus25Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus25Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus25Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus25Percent,The following statement contains a magic number: Assert.AreEqual(-25' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality75Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3'4  };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality75Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3'4  };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality75Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3'4  };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality75Percent,The following statement contains a magic number: var l2 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality75Percent,The following statement contains a magic number: var l2 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEquality75Percent,The following statement contains a magic number: Assert.AreEqual(75' l1.SequenceEquality(l2' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus75Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus75Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus75Percent,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus75Percent,The following statement contains a magic number: var l2 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus75Percent,The following statement contains a magic number: var l2 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityMinus75Percent,The following statement contains a magic number: Assert.AreEqual(-75' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityEqual,The following statement contains a magic number: var l1 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityEqual,The following statement contains a magic number: var l2 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityNotEqual,The following statement contains a magic number: var l1 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityNotEqual,The following statement contains a magic number: var l2 = new List<int> { 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityNotEqual,The following statement contains a magic number: var l2 = new List<int> { 3' 4 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityNotEqual,The following statement contains a magic number: Assert.AreEqual(100' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThisNotEqual,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThisNotEqual,The following statement contains a magic number: var l1 = new List<int> { 1' 2' 3 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThisNotEqual,The following statement contains a magic number: var l2 = new List<int> { 4' 5 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThisNotEqual,The following statement contains a magic number: var l2 = new List<int> { 4' 5 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThisNotEqual,The following statement contains a magic number: Assert.AreEqual(-100' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThatNotEqual,The following statement contains a magic number: var l1 = new List<int> { 1' 2 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThatNotEqual,The following statement contains a magic number: var l2 = new List<int> { 3' 4' 5 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThatNotEqual,The following statement contains a magic number: var l2 = new List<int> { 3' 4' 5 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThatNotEqual,The following statement contains a magic number: var l2 = new List<int> { 3' 4' 5 };
Magic Number,Tests,SequenceableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\SequenceableTests.cs,SequenceEqualityLargerThatNotEqual,The following statement contains a magic number: Assert.AreEqual(100' l2.SequenceEquality(l1' EqualityComparer<int>.Default));
Magic Number,Tests,StringableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\StringableTests.cs,LeftSameLength,The following statement contains a magic number: Assert.AreEqual("12"' "12".Left(2));
Magic Number,Tests,StringableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\StringableTests.cs,LeftMoreThanLength,The following statement contains a magic number: Assert.AreEqual("12"' "12".Left(3));
Magic Number,Tests,StringableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\StringableTests.cs,RightSameLength,The following statement contains a magic number: Assert.AreEqual("12"' "12".Right(2));
Magic Number,Tests,StringableTests,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\StringableTests.cs,RightMoreThanLength,The following statement contains a magic number: Assert.AreEqual("12"' "12".Right(3));
Magic Number,Tests,when_adding_range_to_collection,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_adding_range_to_collection.cs,then_added_elements_to_empty_list_are_added,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,Tests,when_adding_range_to_collection,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_adding_range_to_collection.cs,then_added_elements_to_existing_list_are_added,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,Tests,when_adding_range_to_dictionary,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_adding_range_to_dictionary.cs,then_range_added_to_empty_dictionary_adds_correctly,The following statement contains a magic number: stuff.AddRange(s => s.ToUpperInvariant().Remove(2)' new[]{"one"' "two"' "three"});
Magic Number,Tests,when_adding_range_to_dictionary,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_adding_range_to_dictionary.cs,then_range_added_to_empty_dictionary_adds_correctly,The following statement contains a magic number: Assert.AreEqual(3' stuff.Count);
Magic Number,Tests,when_adding_range_to_dictionary,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_adding_range_to_dictionary.cs,then_range_added_to_existing_dictionary_adds_correctly,The following statement contains a magic number: Assert.AreEqual(3' stuff.Count);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_different_values_are_swapped,The following statement contains a magic number: var list = new List<int> {1' 3' 2};
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_different_values_are_swapped,The following statement contains a magic number: var list = new List<int> {1' 3' 2};
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_different_values_are_swapped,The following statement contains a magic number: list.SwapValues(1' 2);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_different_values_are_swapped,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_different_values_are_swapped,The following statement contains a magic number: Assert.AreEqual(2' list[1]);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_different_values_are_swapped,The following statement contains a magic number: Assert.AreEqual(3' list[2]);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_different_values_are_swapped,The following statement contains a magic number: Assert.AreEqual(3' list[2]);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_list_size_does_not_change,The following statement contains a magic number: var list = new List<int> { 1' 3' 2 };
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_list_size_does_not_change,The following statement contains a magic number: var list = new List<int> { 1' 3' 2 };
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_list_size_does_not_change,The following statement contains a magic number: list.SwapValues(1' 2);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_list_size_does_not_change,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_non_swaped_values_are_unchanged,The following statement contains a magic number: var list = new List<int> { 1' 3' 2 };
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_non_swaped_values_are_unchanged,The following statement contains a magic number: var list = new List<int> { 1' 3' 2 };
Magic Number,Tests,when_swapping_list_values,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_swapping_list_values.cs,then_non_swaped_values_are_unchanged,The following statement contains a magic number: list.SwapValues(1' 2);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_null_action_collection_returns_nop,The following statement contains a magic number: action(42);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_empty_action_collection_returns_nop,The following statement contains a magic number: action(42);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_action_collection_of_one_returns_correct_delegate,The following statement contains a magic number: action(42);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_action_collection_of_one_returns_correct_delegate,The following statement contains a magic number: Assert.AreEqual(42' p);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_action_collection_of_multiples_returns_correct_delegate,The following statement contains a magic number: action(21);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_action_collection_of_multiples_returns_correct_delegate,The following statement contains a magic number: Assert.AreEqual(2' parameters.Count);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_action_collection_of_multiples_returns_correct_delegate,The following statement contains a magic number: Assert.IsTrue(parameters.All(e => e == 21));
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_func_collection_of_one_returns_correct_delegate,The following statement contains a magic number: var result = action(42);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_func_collection_of_one_returns_correct_delegate,The following statement contains a magic number: Assert.AreEqual(42' p);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_func_collection_of_one_returns_correct_delegate,The following statement contains a magic number: Assert.AreEqual(42' result);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_func_collection_of_multiples_returns_correct_delegate,The following statement contains a magic number: var result = action(21);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_func_collection_of_multiples_returns_correct_delegate,The following statement contains a magic number: Assert.AreEqual(2' parameters.Count);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_func_collection_of_multiples_returns_correct_delegate,The following statement contains a magic number: Assert.AreEqual(21' result);
Magic Number,Tests,when_testing_creating_multicast_delegates,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_testing_creating_multicast_delegates.cs,then_func_collection_of_multiples_returns_correct_delegate,The following statement contains a magic number: Assert.IsTrue(parameters.All(e => e == 21));
Magic Number,Tests,when_wrapping_task_with_apm,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_wrapping_task_with_apm.cs,then_end_results_in_correct_value,The following statement contains a magic number: IAsyncResult asyncResult = Task.Factory.StartNew(() => 42).ToApm(_ => { }' null);
Magic Number,Tests,when_wrapping_task_with_apm,C:\research\architectureSmells\repos\peteraritchie_ProductivityExtensions\src\Tests\when_wrapping_task_with_apm.cs,then_end_results_in_correct_value,The following statement contains a magic number: Assert.AreEqual(42' task.Result);
