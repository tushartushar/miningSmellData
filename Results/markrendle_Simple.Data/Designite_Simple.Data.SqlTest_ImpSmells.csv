Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Simple.Data.SqlTest,BulkInsertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\BulkInsertTest.cs,BulkInsertUsesSchemaAndFireTriggers,The length of the parameter rowsWhichWhereUpdatedByTrigger is 30.
Long Statement,Simple.Data.SqlTest,BulkInsertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\BulkInsertTest.cs,BulkInsertRecordsWithDifferentColumnsAndFewerColumnsInFirstRecordProperlyInsertsData,The length of the statement  "            var expected = new[] { new OptionalColumnTestObject("Bob"' "Dole")' new OptionalColumnTestObject("Bob"' "Saget"' "L")' }; " is 121.
Long Statement,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseShouldPreselectDetailTablesAsCollections,The length of the statement  "            var result = db.Customers.FindAllByCustomerId(1).WithOrders().WithNotes().FirstOrDefault() as IDictionary<string' object>; " is 122.
Long Statement,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,FindAllWithClauseWithJoinCriteriaShouldPreselectDetailTableAsCollection,The length of the statement  "            var result = db.Customers.FindAllByCustomerId(1).With(db.Customers.Orders.OrderItems).FirstOrDefault() as IDictionary<string' object>; " is 134.
Long Statement,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,FindAllWithClauseWithNestedDetailTable,The length of the statement  "            var result = db.Customers.FindAllByCustomerId(1).With(db.Customers.Orders).With(db.Customers.Orders.OrderItems).FirstOrDefault() as IDictionary<string' object>; " is 160.
Long Statement,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseWithTwoStepShouldPreselectManyToManyTableAsCollection,The length of the statement  "            var result = db.Customers.FindAll(db.Customers.Order.OrderId == 1).WithOrders().FirstOrDefault() as IDictionary<string' object>; " is 128.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderBy,The length of the statement  "            var sql = "select [dbo].[d].[a]'[dbo].[d].[b]'[dbo].[d].[c] from [dbo].[d] where [dbo].[d].[a] = 1 order by [dbo].[d].[c]"; " is 123.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderBy,The length of the statement  "                "with __data as (select [dbo].[d].[a]' row_number() over(order by [dbo].[d].[c]) as [_#_] from [dbo].[d] where [dbo].[d].[a] = 1)" " is 130.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderBy,The length of the statement  "                + " select [dbo].[d].[a]'[dbo].[d].[b]'[dbo].[d].[c] from __data join [dbo].[d] on [dbo].[d].[a] = __data.[a] where [dbo].[d].[a] = 1 and [_#_] between 6 and 15"}; " is 163.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderByKeysIfNotAlreadyOrdered,The length of the statement  "                "with __data as (select [dbo].[d].[a]' row_number() over(order by [dbo].[d].[a]) as [_#_] from [dbo].[d] where [dbo].[d].[a] = 1)" " is 130.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderByKeysIfNotAlreadyOrdered,The length of the statement  "                + " select [dbo].[d].[a]'[dbo].[d].[b]'[dbo].[d].[c] from __data join [dbo].[d] on [dbo].[d].[a] = __data.[a] where [dbo].[d].[a] = 1 and [_#_] between 11 and 30"}; " is 164.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldCopeWithAliasedColumns,The length of the statement  "                "with __data as (select [dbo].[d].[a]' row_number() over(order by [dbo].[d].[a]) as [_#_] from [dbo].[d] where [dbo].[d].[a] = 1)" " is 130.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldCopeWithAliasedColumns,The length of the statement  "                + " select [dbo].[d].[a]'[dbo].[d].[b] as [foo]'[dbo].[d].[c] from __data join [dbo].[d] on [dbo].[d].[a] = __data.[a] where [dbo].[d].[a] = 1 and [_#_] between 21 and 25"}; " is 173.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldCopeWithColumnsThatEndInFrom,The length of the statement  "            const string sql = @"SELECT [dbo].[PromoPosts].[Id]'[dbo].[PromoPosts].[ActiveFrom]'[dbo].[PromoPosts].[ActiveTo]'[dbo].[PromoPosts].[Created]'[dbo].[PromoPosts].[Updated]  " is 171.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldCopeWithColumnsThatEndInFrom,The length of the statement  "            var expected = @"with __data as (select [dbo].[promoposts].[id]' row_number() over(order by [dbo].[promoposts].[activefrom]) as [_#_] from [dbo].[promoposts]) select [dbo].[promoposts].[id]'[dbo].[promoposts].[activefrom]'[dbo].[promoposts].[activeto]'[dbo].[promoposts].[created]'[dbo].[promoposts].[updated] from __data join [dbo].[promoposts] on [dbo].[promoposts].[id] = __data.[id] and [_#_] between 1 and 25"; " is 415.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldExcludeLeftJoinedTablesFromSubSelect,The length of the statement  "    [dbo].[ChildClass].[SomeProperty2] AS [__withn__ChildClass__SomeProperty2] FROM [dbo].[MainClass] LEFT JOIN [dbo].[JoinTable] ON ([dbo].[MainClass].[ID] = [dbo].[JoinTable].[MainClassID]) LEFT JOIN [dbo].[ChildClass] ON ([dbo].[ChildClass].[ID] = [dbo].[JoinTable].[ChildClassID]) WHERE ([dbo].[MainClass].[SomeProperty] > @p1 AND [dbo].[MainClass].[SomeProperty] <= @p2)"; " is 373.
Long Statement,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldExcludeLeftJoinedTablesFromSubSelect,The length of the statement  "            const string expected = @"with __data as (select [dbo].[promoposts].[id]' row_number() over(order by [dbo].[promoposts].[id]) as [_#_] from [dbo].[mainclass] where ([dbo].[mainclass].[someproperty] > @p1 and [dbo].[mainclass].[someproperty] <= @p2)) select [dbo].[mainclass].[id]' [dbo].[mainclass].[someproperty]' [dbo].[mainclass].[someproperty2]' [dbo].[mainclass].[someproperty3]' [dbo].[mainclass].[someproperty4]' [dbo].[childclass].[id] as [__withn__childclass__id]' [dbo].[childclass].[someproperty] as [__withn__childclass__someproperty]' [dbo].[childclass].[someproperty2] as [__withn__childclass__someproperty2] from __data join [dbo].[promoposts] on [dbo].[promoposts].[id] = __data.[id]from [dbo].[mainclass] left join [dbo].[jointable] on ([dbo].[mainclass].[id] = [dbo].[jointable].[mainclassid]) left join [dbo].[childclass] on ([dbo].[childclass].[id] = [dbo].[jointable].[childclassid]) where ([dbo].[mainclass].[someproperty] > @p1 and [dbo].[mainclass].[someproperty] <= @p2) and [_#_] between 1 and 25"; " is 1024.
Long Statement,Simple.Data.SqlTest.SchemaTests,DatabaseSchemaTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SchemaTests\DatabaseSchemaTests.cs,TestNewTableIsAddedToSchemaAfterReset,The length of the statement  "                cmd.CommandText = @"IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RuntimeTable]') AND type in (N'U')) " is 129.
Magic Number,Simple.Data.SqlTest,BulkInsertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\BulkInsertTest.cs,BulkInsertUsesSchema,The following statement contains a magic number: Assert.AreEqual(1000' count.Value);
Magic Number,Simple.Data.SqlTest,BulkInsertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\BulkInsertTest.cs,BulkInsertUsesSchema,The following statement contains a magic number: Assert.AreEqual(1000' list.Count);
Magic Number,Simple.Data.SqlTest,BulkInsertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\BulkInsertTest.cs,BulkInsertUsesSchemaAndFireTriggers,The following statement contains a magic number: tx.WithOptions(new AdoOptions(commandTimeout: 60000' fireTriggersOnBulkInserts: true));
Magic Number,Simple.Data.SqlTest,BulkInsertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\BulkInsertTest.cs,BulkInsertUsesSchemaAndFireTriggers,The following statement contains a magic number: Assert.AreEqual(1000' rowsWhichWhereUpdatedByTrigger);
Magic Number,Simple.Data.SqlTest,BulkInsertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\BulkInsertTest.cs,GenerateItems,The following statement contains a magic number: i < 1000
Magic Number,Simple.Data.SqlTest,ConversionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\ConversionTests.cs,InsertingWeirdTypesFromExpando,The following statement contains a magic number: expando.Age = new WeirdType(3);
Magic Number,Simple.Data.SqlTest,ConversionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\ConversionTests.cs,InsertingWeirdTypesFromExpando,The following statement contains a magic number: Assert.AreEqual(3' user.Age);
Magic Number,Simple.Data.SqlTest,FunctionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FunctionTest.cs,CoalesceFunctionWorks,The following statement contains a magic number: var date = new DateTime(1900' 1' 1);
Magic Number,Simple.Data.SqlTest,SchemaQualifiedTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SchemaQualifiedTests.cs,QueryWithSchemaQualifiedTableName,The following statement contains a magic number: var result = db.test.SchemaTable.QueryById(2)                             .Select(db.test.SchemaTable.Id'                                     db.test.SchemaTable.Description)                             .Single();
Magic Number,Simple.Data.SqlTest,SchemaQualifiedTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SchemaQualifiedTests.cs,QueryWithSchemaQualifiedTableName,The following statement contains a magic number: Assert.AreEqual(2' result.Id);
Magic Number,Simple.Data.SqlTest,SchemaQualifiedTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SchemaQualifiedTests.cs,QueryWithSchemaQualifiedTableNameAndAliases,The following statement contains a magic number: var result = db.test.SchemaTable.QueryById(2)                             .Select(db.test.SchemaTable.Id.As("This")'                                     db.test.SchemaTable.Description.As("That"))                             .Single();
Magic Number,Simple.Data.SqlTest,SchemaQualifiedTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SchemaQualifiedTests.cs,QueryWithSchemaQualifiedTableNameAndAliases,The following statement contains a magic number: Assert.AreEqual(2' result.This);
Magic Number,Simple.Data.SqlTest,DeleteTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\DeleteTest.cs,TestDeleteAll,The following statement contains a magic number: db.DeleteTest.Insert(Id: 2);
Magic Number,Simple.Data.SqlTest,DeleteTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\DeleteTest.cs,TestDeleteAll,The following statement contains a magic number: Assert.AreEqual(2' count.ReturnValue);
Magic Number,Simple.Data.SqlTest,DeleteTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\DeleteTest.cs,TestDeleteAllInTransaction,The following statement contains a magic number: tx.DeleteTest.Insert(Id: 2);
Magic Number,Simple.Data.SqlTest,DeleteTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\DeleteTest.cs,TestDeleteAllInTransaction,The following statement contains a magic number: Assert.AreEqual(2' count.ReturnValue);
Magic Number,Simple.Data.SqlTest,GetTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\GetTests.cs,GetWithNonExistentPrimaryKeyShouldReturnNull,The following statement contains a magic number: var user = db.Users.Get(1138);
Magic Number,Simple.Data.SqlTest,GetTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\GetTests.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,GetTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\GetTests.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,GetTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\GetTests.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithNamedArguments,The following statement contains a magic number: var user = db.Users.Insert(Name: "Ford"' Password: "hoopy"' Age: 29);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithNamedArguments,The following statement contains a magic number: Assert.AreEqual(29' user.Age);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOn,The following statement contains a magic number: var user = db.Users.Insert(Id: 42' Name: "Arthur"' Password: "Tea"' Age: 30);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOn,The following statement contains a magic number: var user = db.Users.Insert(Id: 42' Name: "Arthur"' Password: "Tea"' Age: 30);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOn,The following statement contains a magic number: Assert.AreEqual(42' user.Id);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOnThenOffAgain,The following statement contains a magic number: var user = db.Users.Insert(Id: 2267709' Name: "Douglas"' Password: "dirk"' Age: 49);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOnThenOffAgain,The following statement contains a magic number: var user = db.Users.Insert(Id: 2267709' Name: "Douglas"' Password: "dirk"' Age: 49);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOnThenOffAgain,The following statement contains a magic number: Assert.AreEqual(2267709' user.Id);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOnThenOffAgain,The following statement contains a magic number: user = db.Users.Insert(Name: "Frak"' Password: "true"' Age: 200);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithIdentityInsertOnThenOffAgain,The following statement contains a magic number: Assert.Less(2267709' user.Id);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithStaticTypeObject,The following statement contains a magic number: var user = new User {Name = "Zaphod"' Password = "zarquon"' Age = 42};
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithStaticTypeObject,The following statement contains a magic number: Assert.AreEqual(42' actual.Age);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithStaticTypeObjects,The following statement contains a magic number: var users = new[]                              {                                  new User { Name = "Slartibartfast"' Password = "bistromathics"' Age = 777 }'                                  new User { Name = "Wowbagger"' Password = "teatime"' Age = int.MaxValue }                              };
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithStaticTypeObjects,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithStaticTypeObjects,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithStaticTypeObjectsAndNoReturn,The following statement contains a magic number: var users = new[]                              {                                  new User { Name = "Slartibartfast"' Password = "bistromathics"' Age = 777 }'                                  new User { Name = "Wowbagger"' Password = "teatime"' Age = int.MaxValue }                              };
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithStaticTypeObjectsAndNoReturn,The following statement contains a magic number: Assert.AreEqual(777' slartibartfast.Age);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithDynamicTypeObject,The following statement contains a magic number: user.Age = 42000000;
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestInsertWithDynamicTypeObject,The following statement contains a magic number: Assert.AreEqual(42000000' actual.Age);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithDynamicTypeObjects,The following statement contains a magic number: user1.Age = 777;
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithDynamicTypeObjects,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithDynamicTypeObjects,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithErrorCallback,The following statement contains a magic number: user1.Age = 777;
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestMultiInsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestTransactionMultiInsertWithErrorCallback,The following statement contains a magic number: user1.Age = 777;
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestTransactionMultiInsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,InsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\InsertTests.cs,TestTransactionMultiInsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,NaturalJoinTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\NaturalJoinTest.cs,CustomerDotOrdersDotOrderDateShouldReturnOneRow,The following statement contains a magic number: var row = db.Customers.Find(db.Customers.Orders.OrderDate == new DateTime(2010' 10' 10));
Magic Number,Simple.Data.SqlTest,NaturalJoinTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\NaturalJoinTest.cs,CustomerDotOrdersDotOrderDateShouldReturnOneRow,The following statement contains a magic number: var row = db.Customers.Find(db.Customers.Orders.OrderDate == new DateTime(2010' 10' 10));
Magic Number,Simple.Data.SqlTest,NaturalJoinTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\NaturalJoinTest.cs,CustomerDotOrdersDotOrderDateShouldReturnOneRow,The following statement contains a magic number: var row = db.Customers.Find(db.Customers.Orders.OrderDate == new DateTime(2010' 10' 10));
Magic Number,Simple.Data.SqlTest,NaturalJoinTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\NaturalJoinTest.cs,CustomerDotNameAndCustomerDotOrdersDotOrderDateAndCustomerDotOrdersDotOrderItemsDotItemDotNameShouldReturnOneRow,The following statement contains a magic number: var customer = db.Customers.Find(db.Customers.Name == "Test" &&                                               db.Customers.Orders.OrderDate == new DateTime(2010' 10' 10) &&                                               db.Customers.Orders.OrderItems.Item.Name == "Widget");
Magic Number,Simple.Data.SqlTest,NaturalJoinTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\NaturalJoinTest.cs,CustomerDotNameAndCustomerDotOrdersDotOrderDateAndCustomerDotOrdersDotOrderItemsDotItemDotNameShouldReturnOneRow,The following statement contains a magic number: var customer = db.Customers.Find(db.Customers.Name == "Test" &&                                               db.Customers.Orders.OrderDate == new DateTime(2010' 10' 10) &&                                               db.Customers.Orders.OrderItems.Item.Name == "Widget");
Magic Number,Simple.Data.SqlTest,NaturalJoinTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\NaturalJoinTest.cs,CustomerDotNameAndCustomerDotOrdersDotOrderDateAndCustomerDotOrdersDotOrderItemsDotItemDotNameShouldReturnOneRow,The following statement contains a magic number: var customer = db.Customers.Find(db.Customers.Name == "Test" &&                                               db.Customers.Orders.OrderDate == new DateTime(2010' 10' 10) &&                                               db.Customers.Orders.OrderItems.Item.Name == "Widget");
Magic Number,Simple.Data.SqlTest,ProcedureTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\ProcedureTest.cs,GetCustomerCountAsOutputTest,The following statement contains a magic number: Assert.AreEqual(42' actual.OutputValues["Count"]);
Magic Number,Simple.Data.SqlTest,ProcedureTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\ProcedureTest.cs,GetCustomerAndOrdersStillWorksAfterZeroRecordCallTest,The following statement contains a magic number: db.GetCustomerAndOrders(1000);
Magic Number,Simple.Data.SqlTest,ProcedureTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\ProcedureTest.cs,ScalarFunctionIsCalledCorrectly,The following statement contains a magic number: Assert.AreEqual(42' results.ReturnValue);
Magic Number,Simple.Data.SqlTest,ProcedureTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\ProcedureTest.cs,CallProcedureWithDataTable,The following statement contains a magic number: Assert.AreEqual(3' actual.Count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,CountWithNoCriteriaShouldSelectThree,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,CountWithCriteriaShouldSelectTwo,The following statement contains a magic number: int count = db.Users.GetCount(db.Users.Age > 30);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,CountWithCriteriaShouldSelectTwo,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ExistsWithValidCriteriaShouldReturnTrue,The following statement contains a magic number: Assert.AreEqual(true' db.Users.Exists(db.Users.Age > 30));
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromOneToTen,The following statement contains a magic number: var query = db.PagingTest.QueryById(1.to(100)).Take(10);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromOneToTen,The following statement contains a magic number: var query = db.PagingTest.QueryById(1.to(100)).Take(10);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromElevenToTwenty,The following statement contains a magic number: var query = db.PagingTest.QueryById(1.to(100)).Skip(10).Take(10);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromElevenToTwenty,The following statement contains a magic number: var query = db.PagingTest.QueryById(1.to(100)).Skip(10).Take(10);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromElevenToTwenty,The following statement contains a magic number: var query = db.PagingTest.QueryById(1.to(100)).Skip(10).Take(10);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromElevenToTwenty,The following statement contains a magic number: int index = 11;
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromOneHundredToNinetyOne,The following statement contains a magic number: var query = db.PagingTest.QueryById(1.to(100)).OrderByDescending(db.PagingTest.Id).Skip(0).Take(10);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromOneHundredToNinetyOne,The following statement contains a magic number: var query = db.PagingTest.QueryById(1.to(100)).OrderByDescending(db.PagingTest.Id).Skip(0).Take(10);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,ShouldSelectFromOneHundredToNinetyOne,The following statement contains a magic number: int index = 100;
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount,The following statement contains a magic number: var list = db.PagingTest.QueryById(1.to(50))                  .Take(10)                  .WithTotalCount(out count)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount,The following statement contains a magic number: var list = db.PagingTest.QueryById(1.to(50))                  .Take(10)                  .WithTotalCount(out count)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount,The following statement contains a magic number: Assert.AreEqual(10' list.Count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount,The following statement contains a magic number: Assert.AreEqual(50' count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectShouldGiveCount,The following statement contains a magic number: List<dynamic> list = db.PagingTest.QueryById(1.to(50))                  .Select(db.PagingTest.Id)                  .WithTotalCount(out count)                  .Take(10)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectShouldGiveCount,The following statement contains a magic number: List<dynamic> list = db.PagingTest.QueryById(1.to(50))                  .Select(db.PagingTest.Id)                  .WithTotalCount(out count)                  .Take(10)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectShouldGiveCount,The following statement contains a magic number: Assert.AreEqual(50' count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectShouldGiveCount,The following statement contains a magic number: Assert.AreEqual(10' list.Count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectAndOrderByShouldGiveCount,The following statement contains a magic number: List<dynamic> list = db.PagingTest.QueryById(1.to(50))                  .Select(db.PagingTest.Id)                  .OrderByDescending(db.PagingTest.Id)                  .WithTotalCount(out count)                  .Take(10)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectAndOrderByShouldGiveCount,The following statement contains a magic number: List<dynamic> list = db.PagingTest.QueryById(1.to(50))                  .Select(db.PagingTest.Id)                  .OrderByDescending(db.PagingTest.Id)                  .WithTotalCount(out count)                  .Take(10)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectAndOrderByShouldGiveCount,The following statement contains a magic number: Assert.AreEqual(50' count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountWithExplicitSelectAndOrderByShouldGiveCount,The following statement contains a magic number: Assert.AreEqual(10' list.Count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount_ObsoleteFutureVersion,The following statement contains a magic number: var list = db.PagingTest.QueryById(1.to(50))                  .WithTotalCount(out count)                  .Take(10)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount_ObsoleteFutureVersion,The following statement contains a magic number: var list = db.PagingTest.QueryById(1.to(50))                  .WithTotalCount(out count)                  .Take(10)                  .ToList();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount_ObsoleteFutureVersion,The following statement contains a magic number: Assert.AreEqual(10' list.Count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithTotalCountShouldGiveCount_ObsoleteFutureVersion,The following statement contains a magic number: Assert.AreEqual(50' count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,HavingWithMinDateShouldReturnCorrectRow,The following statement contains a magic number: var row =                  db.GroupTestMaster.Query().Having(db.GroupTestMaster.GroupTestDetail.Date.Min() >=                                                    new DateTime(2000' 1' 1))                                                    .FirstOrDefault();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,HavingWithMaxDateShouldReturnCorrectRow,The following statement contains a magic number: var row =                  db.GroupTestMaster.Query().Having(db.GroupTestMaster.GroupTestDetail.Date.Max() <                                                    new DateTime(2009' 1' 1))                                                    .FirstOrDefault();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,HavingWithCountShouldReturnCorrectRow,The following statement contains a magic number: var row = db.GroupTestMaster.Query()                  .Having(db.GroupTestMaster.GroupTestDetail.Id.Count() == 2)                  .FirstOrDefault();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,HavingWithAverageShouldReturnCorrectRow,The following statement contains a magic number: var row = db.GroupTestMaster.Query()                  .Having(db.GroupTestMaster.GroupTestDetail.Number.Average() == 2)                  .FirstOrDefault();
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseShouldPreselectDetailTablesAsCollections,The following statement contains a magic number: Assert.AreEqual(2' notes.Count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010'10'10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010'10'10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010'10'10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseContainingAliasShouldReturnResults,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders_1.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseContainingAliasShouldReturnResults,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders_1.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseContainingAliasShouldReturnResults,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders_1.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseContainingAliasShouldReturnResults,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders_2.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseContainingAliasShouldReturnResults,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders_2.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,WithClauseContainingAliasShouldReturnResults,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders_2.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,SelfJoinShouldNotThrowException,The following statement contains a magic number: Assert.AreEqual(3' employees.Count);
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,CanFetchMoreThanOneHundredRows,The following statement contains a magic number: db.Customers.Insert(Enumerable.Range(0' 200).Select(n => new Customer {Name = "Customer " + n}));
Magic Number,Simple.Data.SqlTest,QueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\QueryTest.cs,CanFetchMoreThanOneHundredRows,The following statement contains a magic number: Assert.GreaterOrEqual(customers.Count' 200);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,TestFindAllByExcludedPartialName,The following statement contains a magic number: Assert.AreEqual(2' users.Count());
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,TestAllCount,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,TestAllWithSkipCount,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,WithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,NamedParameterAndWithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,NamedParameterAndWithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,NamedParameterAndWithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,ExpressionAndWithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,ExpressionAndWithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,FindTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\FindTests.cs,ExpressionAndWithClauseShouldCastToStaticTypeWithCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' actual.Orders.Single().OrderDate);
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestOrderDetail,The following statement contains a magic number: var order = db.Orders.FindByOrderDate(new DateTime(2010'10'10));
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestOrderDetail,The following statement contains a magic number: var order = db.Orders.FindByOrderDate(new DateTime(2010'10'10));
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestOrderDetail,The following statement contains a magic number: var order = db.Orders.FindByOrderDate(new DateTime(2010'10'10));
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestOrderDetailFromList,The following statement contains a magic number: var orders = db.Orders.FindAllByOrderDate(new DateTime(2010'10'10));
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestOrderDetailFromList,The following statement contains a magic number: var orders = db.Orders.FindAllByOrderDate(new DateTime(2010'10'10));
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestOrderDetailFromList,The following statement contains a magic number: var orders = db.Orders.FindAllByOrderDate(new DateTime(2010'10'10));
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestComplexObjectCreation,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' customer.Orders.First().OrderDate);
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestComplexObjectCreation,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' customer.Orders.First().OrderDate);
Magic Number,Simple.Data.SqlTest,OrderDetailTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\OrderDetailTests.cs,TestComplexObjectCreation,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 10' 10)' customer.Orders.First().OrderDate);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyLimitUsingTop,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyLimit(sql' 5);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyLimitUsingTopWithDistinct,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyLimit(sql' 5);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderBy,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[] {"[dbo].[d].[a]"}' 5' 10);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderBy,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[] {"[dbo].[d].[a]"}' 5' 10);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderByKeysIfNotAlreadyOrdered,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[] {"[dbo].[d].[a]"}' 10' 20);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldApplyPagingUsingOrderByKeysIfNotAlreadyOrdered,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[] {"[dbo].[d].[a]"}' 10' 20);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldCopeWithAliasedColumns,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[]{"[dbo].[d].[a]"}' 20' 5);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldCopeWithAliasedColumns,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[]{"[dbo].[d].[a]"}' 20' 5);
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldCopeWithColumnsThatEndInFrom,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[] {"[dbo].[PromoPosts].[Id]"}' 0' 25).Single();
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldExcludeLeftJoinedTablesFromSubSelect,The following statement contains a magic number: var pagedSql = new SqlQueryPager().ApplyPaging(sql' new[] {"[dbo].[PromoPosts].[Id]"}' 0' 25).Single();
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldThrowIfTableHasNoPrimaryKey,The following statement contains a magic number: Assert.Throws<AdoAdapterException>(                  () => new SqlQueryPager().ApplyPaging(sql' keys' 5' 10).ToList()              );
Magic Number,Simple.Data.SqlTest,SqlQueryPagerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SqlQueryPagerTest.cs,ShouldThrowIfTableHasNoPrimaryKey,The following statement contains a magic number: Assert.Throws<AdoAdapterException>(                  () => new SqlQueryPager().ApplyPaging(sql' keys' 5' 10).ToList()              );
Magic Number,Simple.Data.SqlTest,TransactionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\TransactionTests.cs,TestCommit,The following statement contains a magic number: tx.OrderItems.Insert(OrderId: order.OrderId' ItemId: 1' Quantity: 3);
Magic Number,Simple.Data.SqlTest,TransactionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\TransactionTests.cs,TestCommit,The following statement contains a magic number: Assert.AreEqual(2' db.Orders.All().ToList().Count);
Magic Number,Simple.Data.SqlTest,TransactionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\TransactionTests.cs,TestCommit,The following statement contains a magic number: Assert.AreEqual(2' db.OrderItems.All().ToList().Count);
Magic Number,Simple.Data.SqlTest,TransactionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\TransactionTests.cs,TestRollback,The following statement contains a magic number: tx.OrderItems.Insert(OrderId: order.OrderId' ItemId: 1' Quantity: 3);
Magic Number,Simple.Data.SqlTest,TransactionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\TransactionTests.cs,TestWithOptionsTransaction,The following statement contains a magic number: var dbWithOptions = DatabaseHelper.Open().WithOptions(new AdoOptions(commandTimeout: 60000));
Magic Number,Simple.Data.SqlTest,TransactionTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\TransactionTests.cs,QueryInsideTransaction,The following statement contains a magic number: tx.Users.Insert(Name: "Arthur"' Age: 42' Password: "Ladida");
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithNamedArguments,The following statement contains a magic number: db.Users.UpdateById(Id: 1' Name: "Ford"' Password: "hoopy"' Age: 29);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithNamedArguments,The following statement contains a magic number: Assert.AreEqual(29' user.Age);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithStaticTypeObject,The following statement contains a magic number: var user = new User { Id = 2' Name = "Zaphod"' Password = "zarquon"' Age = 42 };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithStaticTypeObject,The following statement contains a magic number: var user = new User { Id = 2' Name = "Zaphod"' Password = "zarquon"' Age = 42 };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithStaticTypeObject,The following statement contains a magic number: User actual = db.Users.FindById(2);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithStaticTypeObject,The following statement contains a magic number: Assert.AreEqual(42' actual.Age);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithDynamicTypeObject,The following statement contains a magic number: user.Id = 3;
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithDynamicTypeObject,The following statement contains a magic number: user.Age = 42000000;
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithDynamicTypeObject,The following statement contains a magic number: var actual = db.Users.FindById(3);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithDynamicTypeObject,The following statement contains a magic number: Assert.AreEqual(42000000' actual.Age);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var blob = new Blob                             {                                 Id = 1'                                 Data = new byte[] {9' 8' 7' 6' 5' 4' 3' 2' 1' 0}                             };
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithVarBinaryMaxColumn,The following statement contains a magic number: var newData = blob.Data = new byte[] {0'1'2'3'4'5'6'7'8'9};
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateAllWithNoMatchingRows,The following statement contains a magic number: db.test.SchemaTable.UpdateAll(db.test.SchemaTable.Id == 1138' Description: "Updated");
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateAllWithNoMatchingRows,The following statement contains a magic number: var test = db.test.SchemaTable.FindById(1138);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateByInputIsNotMutated,The following statement contains a magic number: Assert.AreEqual(4' user.Keys.Count);
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdatingACriteriaColumn,The following statement contains a magic number: var user = db.Users.Insert(Age: 42' Name: "Z1"' Password: "argh");
Magic Number,Simple.Data.SqlTest,UpdateTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpdateTests.cs,TestUpdateWithOriginalUsingAnonymousObjects,The following statement contains a magic number: var user = db.Users.Insert(Age: 54' Name: "YZ1"' Password: "argh");
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithNamedArgumentsAndNewObject,The following statement contains a magic number: var user = db.Users.UpsertById(Id: 0' Name: "Ford Prefect"' Password: "Foo"' Age: 42);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithNamedArgumentsAndNewObject,The following statement contains a magic number: Assert.AreEqual(42' user.Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithStaticTypeObject,The following statement contains a magic number: var user = new User {Id = 2' Name = "Charlie"' Password = "foobar"' Age = 42};
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithStaticTypeObject,The following statement contains a magic number: var user = new User {Id = 2' Name = "Charlie"' Password = "foobar"' Age = 42};
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithStaticTypeObject,The following statement contains a magic number: Assert.AreEqual(2' actual.Id);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithStaticTypeObject,The following statement contains a magic number: Assert.AreEqual(42' actual.Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertByWithStaticTypeObject,The following statement contains a magic number: var user = new User {Id = 2' Name = "Charlie"' Password = "foobar"' Age = 42};
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertByWithStaticTypeObject,The following statement contains a magic number: var user = new User {Id = 2' Name = "Charlie"' Password = "foobar"' Age = 42};
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertByWithStaticTypeObject,The following statement contains a magic number: Assert.AreEqual(2' actual.Id);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertByWithStaticTypeObject,The following statement contains a magic number: Assert.AreEqual(42' actual.Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForExistingRecords,The following statement contains a magic number: var users = new[]                              {                                  new User { Id = 1' Name = "Slartibartfast"' Password = "bistromathics"' Age = 777 }'                                  new User { Id = 2' Name = "Wowbagger"' Password = "teatime"' Age = int.MaxValue }                              };
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForExistingRecords,The following statement contains a magic number: var users = new[]                              {                                  new User { Id = 1' Name = "Slartibartfast"' Password = "bistromathics"' Age = 777 }'                                  new User { Id = 2' Name = "Wowbagger"' Password = "teatime"' Age = int.MaxValue }                              };
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForExistingRecords,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForExistingRecords,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForExistingRecords,The following statement contains a magic number: Assert.AreEqual(2' actuals[1].Id);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForNewRecords,The following statement contains a magic number: var users = new[]                              {                                  new User { Name = "Slartibartfast"' Password = "bistromathics"' Age = 777 }'                                  new User { Name = "Wowbagger"' Password = "teatime"' Age = int.MaxValue }                              };
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForNewRecords,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForNewRecords,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForMixedRecords,The following statement contains a magic number: var users = new[]                              {                                  new User { Id = 1' Name = "Slartibartfast"' Password = "bistromathics"' Age = 777 }'                                  new User { Name = "Wowbagger"' Password = "teatime"' Age = int.MaxValue }                              };
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForMixedRecords,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsForMixedRecords,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsAndNoReturn,The following statement contains a magic number: var users = new[]                              {                                  new User { Name = "Slartibartfast"' Password = "bistromathics"' Age = 777 }'                                  new User { Name = "Wowbagger"' Password = "teatime"' Age = int.MaxValue }                              };
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithStaticTypeObjectsAndNoReturn,The following statement contains a magic number: Assert.AreEqual(777' slartibartfast.Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithDynamicTypeObject,The following statement contains a magic number: user.Age = 42000000;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertWithDynamicTypeObject,The following statement contains a magic number: Assert.AreEqual(42000000' actual.Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithDynamicTypeObjects,The following statement contains a magic number: user1.Age = 777;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithDynamicTypeObjects,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithDynamicTypeObjects,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithErrorCallback,The following statement contains a magic number: user1.Age = 777;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithErrorCallbackUsingTransaction,The following statement contains a magic number: user1.Age = 777;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithErrorCallbackUsingTransaction,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestMultiUpsertWithErrorCallbackUsingTransaction,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestTransactionMultiUpsertWithErrorCallback,The following statement contains a magic number: user1.Age = 777;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestTransactionMultiUpsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(2' actuals.Count);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestTransactionMultiUpsertWithErrorCallback,The following statement contains a magic number: Assert.AreEqual(777' actuals[0].Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertUserBySecondaryField,The following statement contains a magic number: var id = db.Users.UpsertByName(new User() { Age = 20' Name = "Black sheep"' Password = "Bah" }).Id;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertUserBySecondaryField,The following statement contains a magic number: Assert.AreEqual(20' actual.Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertUserByTwoSecondaryFields,The following statement contains a magic number: var id = db.Users.UpsertByNameAndPassword(new User() { Age = 20' Name = "Black sheep"' Password = "Bah" }).Id;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertUserByTwoSecondaryFields,The following statement contains a magic number: Assert.AreEqual(20' actual.Age);
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertExisting,The following statement contains a magic number: var id = db.Users.UpsertByNameAndPassword(new User() { Age = 20' Name = "Black sheep"' Password = "Bah" }).Id;
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertExisting,The following statement contains a magic number: db.Users.UpsertById(new User() { Id = id' Age = 12' Name = "Dog"' Password = "Bark" });
Magic Number,Simple.Data.SqlTest,UpsertTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\UpsertTests.cs,TestUpsertExisting,The following statement contains a magic number: Assert.AreEqual(12' actual.Age);
Magic Number,Simple.Data.SqlTest.SchemaTests,DataTypeTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SchemaTests\DataTypeTests.cs,TestDecimalCanBeRetrievedCorrectly,The following statement contains a magic number: Assert.AreEqual(1.234567' value);
Magic Number,Simple.Data.SqlTest.SchemaTests,DataTypeTests,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.SqlTest\SchemaTests\DataTypeTests.cs,TestDecimalCanBeInsertedCorrectly,The following statement contains a magic number: var decimalTest = new { Value = 12.345678 };
