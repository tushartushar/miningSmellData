Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,TryInvokeMember,Cyclomatic complexity of the method is 16
Complex Method,Simple.Data,ObjectReference,C:\repos\markrendle_Simple.Data\Simple.Data\ObjectReference.cs,TryInvokeMember,Cyclomatic complexity of the method is 8
Complex Method,Simple.Data.QueryPolyfills,ObjectMaths,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\ObjectMaths.cs,Increment,Cyclomatic complexity of the method is 13
Complex Method,Simple.Data.QueryPolyfills,ObjectMaths,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\ObjectMaths.cs,Add,Cyclomatic complexity of the method is 14
Complex Method,Simple.Data.QueryPolyfills,ObjectMaths,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\ObjectMaths.cs,Divide,Cyclomatic complexity of the method is 13
Complex Method,Simple.Data.QueryPolyfills,WhereClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\WhereClauseHandler.cs,Resolve,Cyclomatic complexity of the method is 9
Long Parameter List,Simple.Data,AdapterMethodDynamicInvoker,C:\repos\markrendle_Simple.Data\Simple.Data\AdapterMethodDynamicInvoker.cs,TryInvokeMemberWithNamedParameters,The method has 5 parameters. Parameters: binder' args' result' method' parameters
Long Parameter List,Simple.Data,DatabaseRunner,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseRunner.cs,UpsertMany,The method has 5 parameters. Parameters: tableName' list' keyFieldNames' isResultRequired' errorCallback
Long Parameter List,Simple.Data,InMemoryAdapter,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,ConfigureJoin,The method has 6 parameters. Parameters: masterTableName' masterKey' masterPropertyName' detailTableName' detailKey' detailPropertyName
Long Parameter List,Simple.Data,InMemoryAdapter,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,Upsert,The method has 5 parameters. Parameters: tableName' dict' criteriaExpression' isResultRequired' adapterTransaction
Long Parameter List,Simple.Data,InMemoryAdapter,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,UpsertMany,The method has 6 parameters. Parameters: tableName' list' keyFieldNames' adapterTransaction' isResultRequired' errorCallback
Long Parameter List,Simple.Data,InMemoryAdapter,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,UpsertMany,The method has 5 parameters. Parameters: tableName' list' adapterTransaction' isResultRequired' errorCallback
Long Parameter List,Simple.Data,InMemoryAdapter,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,InsertMany,The method has 5 parameters. Parameters: tableName' data' transaction' onError' resultRequired
Long Parameter List,Simple.Data,JoinInfo,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,JoinInfo,The method has 6 parameters. Parameters: masterTableName' masterKey' masterPropertyName' detailTableName' detailKey' detailPropertyName
Long Parameter List,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,BuildCollectionCreatorExpression,The method has 5 parameters. Parameters: genericType' creatorInstance' collection' createCollection' addMethod
Long Parameter List,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,BuildComplexTypeCollectionPopulator,The method has 6 parameters. Parameters: collection' genericType' addMethod' createCollection' creatorInstance' block
Long Parameter List,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,BuildSimpleTypeCollectionPopulator,The method has 6 parameters. Parameters: collection' genericType' addMethod' createCollection' creatorInstance' block
Long Parameter List,Simple.Data,FunctionReference,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionReference.cs,FunctionReference,The method has 5 parameters. Parameters: name' argument' isAggregate' alias' additionalArguments
Long Parameter List,Simple.Data,RunStrategy,C:\repos\markrendle_Simple.Data\Simple.Data\RunStrategy.cs,UpsertMany,The method has 5 parameters. Parameters: tableName' list' keyFieldNames' isResultRequired' errorCallback
Long Parameter List,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,UpsertMany,The method has 5 parameters. Parameters: tableName' list' keyFieldNames' isResultRequired' errorCallback
Long Parameter List,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,Upsert,The method has 5 parameters. Parameters: tableName' dict' criteriaExpression' isResultRequired' transaction
Long Parameter List,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,UpsertMany,The method has 6 parameters. Parameters: tableName' list' keyFieldNames' transaction' isResultRequired' errorCallback
Long Parameter List,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,UpsertManyWithResults,The method has 6 parameters. Parameters: tableName' list' transaction' transactionAdapter' criteriaFields' errorCallback
Long Parameter List,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,UpsertManyWithoutResults,The method has 6 parameters. Parameters: tableName' list' transaction' transactionAdapter' criteriaFields' errorCallback
Long Parameter List,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,UpsertMany,The method has 5 parameters. Parameters: tableName' list' transaction' isResultRequired' errorCallback
Long Parameter List,Simple.Data,IAdapterWithTransactions,C:\repos\markrendle_Simple.Data\Simple.Data\IAdapterWithTransactions.cs,InsertMany,The method has 5 parameters. Parameters: tableName' data' transaction' onError' resultRequired
Long Parameter List,Simple.Data,IAdapterWithTransactions,C:\repos\markrendle_Simple.Data\Simple.Data\IAdapterWithTransactions.cs,Upsert,The method has 5 parameters. Parameters: tableName' dict' criteriaExpression' isResultRequired' adapterTransaction
Long Parameter List,Simple.Data,IAdapterWithTransactions,C:\repos\markrendle_Simple.Data\Simple.Data\IAdapterWithTransactions.cs,UpsertMany,The method has 6 parameters. Parameters: tableName' list' keyFieldNames' adapterTransaction' isResultRequired' errorCallback
Long Parameter List,Simple.Data,IAdapterWithTransactions,C:\repos\markrendle_Simple.Data\Simple.Data\IAdapterWithTransactions.cs,UpsertMany,The method has 5 parameters. Parameters: tableName' list' adapterTransaction' isResultRequired' errorCallback
Long Parameter List,Simple.Data,TransactionRunner,C:\repos\markrendle_Simple.Data\Simple.Data\TransactionRunner.cs,UpsertMany,The method has 5 parameters. Parameters: tableName' list' keyFieldNames' isResultRequired' errorCallback
Long Parameter List,Simple.Data.Commands,UpsertByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpsertByCommand.cs,UpsertByKeyFields,The method has 6 parameters. Parameters: tableName' dataStrategy' entity' keyFieldNames' isResultRequired' errorCallback
Long Parameter List,Simple.Data.Commands,InsertCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\InsertCommand.cs,InsertEntity,The method has 5 parameters. Parameters: entity' dataStrategy' tableName' onError' resultRequired
Long Identifier,Simple.Data,DatabaseOpenerMethods,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseOpenerMethods.cs,,The length of the parameter _openConnectionWithProviderAndSchema is 36.
Long Identifier,Simple.Data.Extensions,BinderExtensions,C:\repos\markrendle_Simple.Data\Simple.Data\Extensions\BinderExtensions.cs,,The length of the parameter TypeOfICSharpInvokeMemberBinder is 31.
Long Statement,Simple.Data,AdapterMethodDynamicInvoker,C:\repos\markrendle_Simple.Data\Simple.Data\AdapterMethodDynamicInvoker.cs,TryInvokeMember,The length of the statement  "                if (parameters.Any(p => p.RawDefaultValue != DBNull.Value) && binder.CallInfo.ArgumentNames.Any(s => !string.IsNullOrWhiteSpace(s))) " is 132.
Long Statement,Simple.Data,BinderHelper,C:\repos\markrendle_Simple.Data\Simple.Data\BinderHelper.cs,ArgumentsToDictionary,The length of the statement  "                .Select((kvp' i) => kvp.Key == null ? new KeyValuePair<string' object>("_" + i.ToString()' kvp.Value ?? DBNull.Value) : kvp) " is 124.
Long Statement,Simple.Data,ConcreteTypeCreator,C:\repos\markrendle_Simple.Data\Simple.Data\ConcreteTypeCreator.cs,BuildCreator,The length of the statement  "            var creator = new ConcreteTypeCreator(new Lazy<Func<IDictionary<string' object>' object>>(() => BuildLambda(targetType)' LazyThreadSafetyMode.PublicationOnly)); " is 160.
Long Statement,Simple.Data,DatabaseRunner,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseRunner.cs,InsertMany,The length of the statement  "            return _adapter.InsertMany(tableName' data' (dict' exception) => onError(new SimpleRecord(dict)' exception)' resultRequired); " is 125.
Long Statement,Simple.Data,DatabaseRunner,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseRunner.cs,UpsertMany,The length of the statement  "            return _adapter.UpsertMany(tableName' list' isResultRequired' (dict' exception) => errorCallback(new SimpleRecord(dict)' exception)); " is 133.
Long Statement,Simple.Data,DatabaseRunner,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseRunner.cs,UpsertMany,The length of the statement  "            return _adapter.UpsertMany(tableName' list' keyFieldNames' isResultRequired' (dict' exception) => errorCallback(new SimpleRecord(dict)' exception)); " is 148.
Long Statement,Simple.Data,InMemoryAdapter,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,Execute,The length of the statement  "            if (!_functions.ContainsKey(functionName)) throw new InvalidOperationException(string.Format("Function '{0}' not found."' functionName)); " is 137.
Long Statement,Simple.Data,InMemoryAdapter,C:\repos\markrendle_Simple.Data\Simple.Data\InMemoryAdapter.cs,Execute,The length of the statement  "            if (dict != null) return new List<IEnumerable<IDictionary<string' object>>> { new List<IDictionary<string' object>> { dict } }; " is 127.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,BuildCollectionCreatorExpression,The length of the statement  "            var isDictionaryCollection = BuildComplexTypeCollectionPopulator(collection' genericType' addMethod' createCollection' creatorInstance' out dictionaryBlock); " is 157.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,BuildCollectionCreatorExpression,The length of the statement  "            var isObjectcollection = BuildSimpleTypeCollectionPopulator(collection' genericType' addMethod' createCollection' creatorInstance' out objectBlock); " is 148.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,CreateTrySimpleAssign,The length of the statement  "            else if (_property.PropertyType.IsGenericType && _property.PropertyType.GetGenericTypeDefinition() == typeof(Nullable<>)) " is 121.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,CreateTrySimpleAssign,The length of the statement  "                                                            Expression.Convert(Expression.Call(typeof (Enum).GetMethod("Parse"' new[] {typeof(Type)' typeof(string)' typeof(bool)})' " is 120.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,CreateTrySimpleAssign,The length of the statement  "                                                                                               Expression.Call(_itemProperty' typeof(object).GetMethod("ToString"))' Expression.Constant(true))' _property.PropertyType))' " is 123.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,CreateTrySimpleArrayAssign,The length of the statement  "            var createArrayMethod = typeof (PropertySetterBuilder).GetMethod("CreateArray"' BindingFlags.Static | BindingFlags.NonPublic) " is 125.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,CreateTrySimpleArrayAssign,The length of the statement  "                                                        Expression.Convert(Expression.Call(typeof (Enum).GetMethod("Parse"' new[] {typeof(Type)' typeof(string)' typeof(bool)})' " is 120.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,CreateTrySimpleArrayAssign,The length of the statement  "                                                                                           Expression.Call(_itemProperty' typeof(object).GetMethod("ToString"))' Expression.Constant(true))' _property.PropertyType))' " is 123.
Long Statement,Simple.Data,PropertySetterBuilder,C:\repos\markrendle_Simple.Data\Simple.Data\PropertySetterBuilder.cs,SafeConvert,The length of the statement  "            if (source is string && targetType == typeof(Guid)) return TypeDescriptor.GetConverter(typeof(Guid)).ConvertFromInvariantString(source.ToString()); " is 147.
Long Statement,Simple.Data,FunctionReference,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionReference.cs,Equals,The length of the statement  "            return Equals(other._name' _name) && Equals(other._argument' _argument) && other._isAggregate.Equals(_isAggregate) && Equals(other.GetAlias()' GetAlias()); " is 155.
Long Statement,Simple.Data,MathReference,C:\repos\markrendle_Simple.Data\Simple.Data\MathReference.cs,Equals,The length of the statement  "            return Equals(other._leftOperand' _leftOperand) && Equals(other._rightOperand' _rightOperand) && Equals(other._operator' _operator); " is 132.
Long Statement,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,ForUpdate,The length of the statement  "            return new SimpleQuery(this' _clauses.Where(c => !(c is ForUpdateClause)).Append(new ForUpdateClause(skipLockedRows)).ToArray()); " is 129.
Long Statement,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,TryInvokeMember,The length of the statement  "            if (binder.Name.Equals("leftjoin"' StringComparison.OrdinalIgnoreCase) || binder.Name.Equals("outerjoin"' StringComparison.OrdinalIgnoreCase)) " is 142.
Long Statement,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,TryInvokeMember,The length of the statement  "            if (binder.Name.StartsWith("with"' StringComparison.OrdinalIgnoreCase) && !binder.Name.Equals("WithTotalCount"' StringComparison.OrdinalIgnoreCase)) " is 148.
Long Statement,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,TryInvokeMember,The length of the statement  "            if (binder.Name.Equals("where"' StringComparison.InvariantCultureIgnoreCase) || binder.Name.Equals("replacewhere"' StringComparison.InvariantCultureIgnoreCase)) " is 160.
Long Statement,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,ParseWith,The length of the statement  "            var withClause = new WithClause(new ObjectReference(objectName' new ObjectReference(_tableName' _dataStrategy)' _dataStrategy)); " is 128.
Long Statement,Simple.Data,DynamicSchema,C:\repos\markrendle_Simple.Data\Simple.Data\DynamicSchema.cs,TryInvokeMember,The length of the statement  "                var command = new ExecuteFunctionCommand(_dataStrategy.GetDatabase()' adapterWithFunctions' string.Format("{0}.{1}"' _name' binder.Name)' " is 137.
Long Statement,Simple.Data,ExpressionHelper,C:\repos\markrendle_Simple.Data\Simple.Data\ExpressionHelper.cs,CriteriaPairToExpression,The length of the statement  "            return new SimpleExpression(new ObjectReference(pair.Key' new ObjectReference(tableName))' pair.Value' SimpleExpressionType.Equal); " is 131.
Long Statement,Simple.Data,DatabaseOpener,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseOpener.cs,OpenDefaultMethod,The length of the statement  "            return new Database(AdapterFactory.Create("Ado"' new { ConnectionName = "Simple.Data.Properties.Settings.DefaultConnectionString"' SchemaName = schemaName })); " is 159.
Long Statement,Simple.Data,DatabaseOpener,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseOpener.cs,OpenConnectionMethod,The length of the statement  "            return new Database(AdapterFactory.Create("Ado"' new { ConnectionString = connectionString' ProviderName = providerName })); " is 124.
Long Statement,Simple.Data,DatabaseOpener,C:\repos\markrendle_Simple.Data\Simple.Data\DatabaseOpener.cs,OpenConnectionAndSchemaMethod,The length of the statement  "            return new Database(AdapterFactory.Create("Ado"' new { ConnectionString = connectionString' ProviderName = providerName' SchemaName = schemaName })); " is 149.
Long Statement,Simple.Data,DynamicTable,C:\repos\markrendle_Simple.Data\Simple.Data\DynamicTable.cs,TryGetMember,The length of the statement  "            result = new ObjectReference(binder.Name' new ObjectReference(_tableName' (_schema != null ? new ObjectReference(_schema.GetName()) : null)' _dataStrategy)); " is 157.
Long Statement,Simple.Data,DynamicTable,C:\repos\markrendle_Simple.Data\Simple.Data\DynamicTable.cs,As,The length of the statement  "            return new ObjectReference(_tableName' (_schema != null ? new ObjectReference(_schema.GetName()) : null)' _dataStrategy' alias); " is 128.
Long Statement,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,Upsert,The length of the statement  "            if (transactionAdapter == null) throw new NotSupportedException("Transactions are not supported with current adapter."); " is 120.
Long Statement,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,UpsertMany,The length of the statement  "            if (transactionAdapter == null) throw new NotSupportedException("Transactions are not supported with current adapter."); " is 120.
Long Statement,Simple.Data,Adapter,C:\repos\markrendle_Simple.Data\Simple.Data\Adapter.cs,UpsertMany,The length of the statement  "            if (transactionAdapter == null) throw new NotSupportedException("Transactions are not supported with current adapter."); " is 120.
Long Statement,Simple.Data,MefHelper,C:\repos\markrendle_Simple.Data\Simple.Data\MefHelper.cs,Compose,The length of the statement  "                if (exports.Count > 1) throw new SimpleDataException("Multiple ADO Providers found; specify provider name or remove unwanted assemblies."); " is 139.
Long Statement,Simple.Data,MefHelper,C:\repos\markrendle_Simple.Data\Simple.Data\MefHelper.cs,Compose,The length of the statement  "                    if (exports.Count > 1) throw new SimpleDataException("Multiple ADO Providers found; specify provider name or remove unwanted assemblies."); " is 139.
Long Statement,Simple.Data,MethodNameParser,C:\repos\markrendle_Simple.Data\Simple.Data\MethodNameParser.cs,ParseFromBinder,The length of the statement  "            if (binder.Name.Equals("findby"' StringComparison.OrdinalIgnoreCase) || binder.Name.Equals("find_by"' StringComparison.OrdinalIgnoreCase)) " is 138.
Long Statement,Simple.Data,TransactionRunner,C:\repos\markrendle_Simple.Data\Simple.Data\TransactionRunner.cs,InsertMany,The length of the statement  "            return _adapter.InsertMany(tableName' data' _adapterTransaction' (dict' exception) => onError(new SimpleRecord(dict)' exception)' resultRequired); " is 146.
Long Statement,Simple.Data,TransactionRunner,C:\repos\markrendle_Simple.Data\Simple.Data\TransactionRunner.cs,UpsertMany,The length of the statement  "            return _adapter.UpsertMany(tableName' list' _adapterTransaction' isResultRequired' (dict' exception) => errorCallback(new SimpleRecord(dict)' exception)); " is 154.
Long Statement,Simple.Data,TransactionRunner,C:\repos\markrendle_Simple.Data\Simple.Data\TransactionRunner.cs,UpsertMany,The length of the statement  "            return _adapter.UpsertMany(tableName' list' keyFieldNames' _adapterTransaction' isResultRequired' (dict' exception) => errorCallback(new SimpleRecord(dict)' exception)); " is 169.
Long Statement,Simple.Data.Commands,GetCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\GetCommand.cs,IsCommandFor,The length of the statement  "            return method.Equals("get"' StringComparison.OrdinalIgnoreCase) || method.Equals("getscalar"' StringComparison.OrdinalIgnoreCase); " is 130.
Long Statement,Simple.Data.Commands,GetCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\GetCommand.cs,Execute,The length of the statement  "            return binder.Name.Equals("get"' StringComparison.OrdinalIgnoreCase) ? result : ((IDictionary<string' object>) result).First().Value; " is 133.
Long Statement,Simple.Data.Commands,GetCountByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\GetCountByCommand.cs,IsCommandFor,The length of the statement  "            return method.StartsWith("getcountby"' StringComparison.InvariantCultureIgnoreCase) || method.StartsWith("get_count_by"' StringComparison.InvariantCultureIgnoreCase); " is 166.
Long Statement,Simple.Data.Commands,GetCountCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\GetCountCommand.cs,IsCommandFor,The length of the statement  "            return method.Equals("getcount"' StringComparison.InvariantCultureIgnoreCase) || method.Equals("get_count"' StringComparison.InvariantCultureIgnoreCase); " is 153.
Long Statement,Simple.Data.Commands,ExistsByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\ExistsByCommand.cs,Execute,The length of the statement  "            var criteriaDictionary = ArgumentHelper.CreateCriteriaDictionary(binder' args' "ExistsBy"' "exists_by"' "AnyBy"' "any_by"); " is 123.
Long Statement,Simple.Data.Commands,ExistsCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\ExistsCommand.cs,IsCommandFor,The length of the statement  "            return method.Equals("exists"' StringComparison.InvariantCultureIgnoreCase) || method.Equals("any"' StringComparison.InvariantCultureIgnoreCase); " is 145.
Long Statement,Simple.Data.Commands,ResultHelper,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\ResultHelper.cs,TypeResult,The length of the statement  "            if (list != null) return new SimpleResultSet(list.Select(d => d.ToDynamicRecord(table.GetQualifiedName()' dataStrategy))); " is 122.
Long Statement,Simple.Data.Commands,QueryByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\QueryByCommand.cs,CreateSimpleQuery,The length of the statement  "            var criteriaExpression = ExpressionHelper.CriteriaDictionaryToExpression(table.GetQualifiedName()' MethodNameParser.ParseFromBinder(binder' args)); " is 147.
Long Statement,Simple.Data.Commands,UpdateCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpdateCommand.cs,Execute,The length of the statement  "            if (args.Length == 0 || args.Length > 2) throw new ArgumentException("Incorrect number of arguments to Update method."); " is 120.
Long Statement,Simple.Data.Commands,UpdateCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpdateCommand.cs,UpdateUsingOriginalValues,The length of the statement  "                if (originalValuesList == null) throw new InvalidOperationException("Parameter type mismatch; both parameters to Update should be same type."); " is 143.
Long Statement,Simple.Data.Commands,UpdateCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpdateCommand.cs,UpdateUsingOriginalValues,The length of the statement  "            if (originalValuesDict == null) throw new InvalidOperationException("Parameter type mismatch; both parameters to Update should be same type."); " is 143.
Long Statement,Simple.Data.Commands,UpdateCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpdateCommand.cs,ObjectToDictionary,The length of the statement  "                var dictionaries = originals.Select(o => ObjectToDictionary(o) as IDictionary<string'object>).Where(o => o != null && o.Count > 0).ToList(); " is 140.
Long Statement,Simple.Data.Commands,UpsertCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpsertCommand.cs,UpsertUsingKeys,The length of the statement  "            if (key == null) throw new InvalidOperationException(string.Format("No key columns defined for table \"{0}\""'table.GetQualifiedName())); " is 137.
Long Statement,Simple.Data.Commands,UpsertCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpsertCommand.cs,ObjectToDictionary,The length of the statement  "                var dictionaries = originals.Select(o => ObjectToDictionary(o) as IDictionary<string'object>).Where(o => o != null && o.Count > 0).ToList(); " is 140.
Long Statement,Simple.Data.Commands,FindAllByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\FindAllByCommand.cs,IsCommandFor,The length of the statement  "            return method.StartsWith("FindAllBy") || method.StartsWith("find_all_by_"' StringComparison.InvariantCultureIgnoreCase); " is 120.
Long Statement,Simple.Data.Commands,FindByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\FindByCommand.cs,CreateDelegate,The length of the statement  "                var func = adapter.OptimizingDelegateFactory.CreateFindOneDelegate(adapter' table.GetQualifiedName()' criteriaExpression); " is 122.
Long Statement,Simple.Data.Commands,DeleteByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\DeleteByCommand.cs,IsCommandFor,The length of the statement  "            return method.Equals("delete"' StringComparison.InvariantCultureIgnoreCase) || method.StartsWith("deleteby"' StringComparison.InvariantCultureIgnoreCase); " is 154.
Long Statement,Simple.Data.Commands,DeleteByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\DeleteByCommand.cs,GetCriteriaExpression,The length of the statement  "            if (criteria.Count == 0) throw new InvalidOperationException("No criteria specified for Delete. To delete all data' use DeleteAll()."); " is 135.
Long Statement,Simple.Data.QueryPolyfills,DictionaryQueryRunner,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\DictionaryQueryRunner.cs,Run,The length of the statement  "                Func<SimpleQueryClauseBase' IEnumerable<IDictionary<string' object>>' IEnumerable<IDictionary<string' object>>> handler; " is 120.
Long Statement,Simple.Data.QueryPolyfills,DictionaryQueryRunner,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\DictionaryQueryRunner.cs,RunHavingClauses,The length of the statement  "                source = source.Select(d => d.Where(kvp => !kvp.Key.StartsWith(AutoColumnPrefix)).ToDictionary(kvp => kvp.Key' kvp => kvp.Value)); " is 130.
Long Statement,Simple.Data.QueryPolyfills,ObjectMaths,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\ObjectMaths.cs,Add,The length of the statement  "            throw new ArgumentException(string.Format("Cannot add object of types '{0}' and '{1}'."' value1.GetType().FullName' value2.GetType().FullName)); " is 144.
Long Statement,Simple.Data.QueryPolyfills,WhereClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\WhereClauseHandler.cs,FunctionExpressionToWhereClause,The length of the statement  "            if (ReferenceEquals(function' null)) throw new InvalidOperationException("Expression type of function but no function supplied."); " is 130.
Long Statement,Simple.Data.QueryPolyfills,WhereClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\WhereClauseHandler.cs,FunctionExpressionToWhereClause,The length of the statement  "                    return d => Resolve(d' arg.LeftOperand).Count > 0 && Resolve(d' arg.LeftOperand).OfType<string>().All(input => !regex.IsMatch(input)); " is 134.
Long Statement,Simple.Data.QueryPolyfills,WhereClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\WhereClauseHandler.cs,Resolve,The length of the statement  "            if (keys.Length == 2 && !HomogenizedEqualityComparer.DefaultInstance.Equals(keys[0].Singularize()' _mainTableName.Singularize())) " is 129.
Virtual Method Call from Constructor,Simple.Data,DataStrategyWithOptions,C:\repos\markrendle_Simple.Data\Simple.Data\DataStrategyWithOptions.cs,DataStrategyWithOptions,The constructor "DataStrategyWithOptions" calls a virtual method "GetAdapter".
Virtual Method Call from Constructor,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,SimpleQuery,The constructor "SimpleQuery" calls a virtual method "GetAdapter".
Virtual Method Call from Constructor,Simple.Data.QueryPolyfills,SelectClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\SelectClauseHandler.cs,SelectClauseHandler,The constructor "SelectClauseHandler" calls a virtual method "GetAliasOrName".
Empty Catch Block,Simple.Data,CastEnumerator,C:\repos\markrendle_Simple.Data\Simple.Data\CastEnumerable.cs,MoveNext,The method has an empty catch block.
Empty Catch Block,Simple.Data,CastEnumerator,C:\repos\markrendle_Simple.Data\Simple.Data\CastEnumerable.cs,MoveNext,The method has an empty catch block.
Empty Catch Block,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,TryInvokeMember,The method has an empty catch block.
Empty Catch Block,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,TryInvokeMember,The method has an empty catch block.
Magic Number,Simple.Data,FunctionSignature,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionSignature.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int hashCode = _name.GetHashCode()*397;                  for (int i = 0; i < _parameters.Count; i++)                  {                      hashCode ^= _parameters[i].GetHashCode();                  }                  return hashCode;              }
Magic Number,Simple.Data,Parameter,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionSignature.cs,GetHashCode,The following statement contains a magic number: unchecked                  {                      int result = _type.GetHashCode();                      result = (result*397) ^ (_name != null ? _name.GetHashCode() : 0);                      result = (result*397) ^ _size;                      return result;                  }
Magic Number,Simple.Data,Parameter,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionSignature.cs,GetHashCode,The following statement contains a magic number: unchecked                  {                      int result = _type.GetHashCode();                      result = (result*397) ^ (_name != null ? _name.GetHashCode() : 0);                      result = (result*397) ^ _size;                      return result;                  }
Magic Number,Simple.Data,FunctionReference,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionReference.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (_name != null ? _name.GetHashCode() : 0);                  result = (result*397) ^ (_argument != null ? _argument.GetHashCode() : 0);                  result = (result*397) ^ _isAggregate.GetHashCode();                  result = (result*397) ^ (GetAlias() != null ? GetAlias().GetHashCode() : 0);                  return result;              }
Magic Number,Simple.Data,FunctionReference,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionReference.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (_name != null ? _name.GetHashCode() : 0);                  result = (result*397) ^ (_argument != null ? _argument.GetHashCode() : 0);                  result = (result*397) ^ _isAggregate.GetHashCode();                  result = (result*397) ^ (GetAlias() != null ? GetAlias().GetHashCode() : 0);                  return result;              }
Magic Number,Simple.Data,FunctionReference,C:\repos\markrendle_Simple.Data\Simple.Data\FunctionReference.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (_name != null ? _name.GetHashCode() : 0);                  result = (result*397) ^ (_argument != null ? _argument.GetHashCode() : 0);                  result = (result*397) ^ _isAggregate.GetHashCode();                  result = (result*397) ^ (GetAlias() != null ? GetAlias().GetHashCode() : 0);                  return result;              }
Magic Number,Simple.Data,MathReference,C:\repos\markrendle_Simple.Data\Simple.Data\MathReference.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (_leftOperand != null ? _leftOperand.GetHashCode() : 0);                  result = (result*397) ^ (_rightOperand != null ? _rightOperand.GetHashCode() : 0);                  result = (result*397) ^ _operator.GetHashCode();                  return result;              }
Magic Number,Simple.Data,MathReference,C:\repos\markrendle_Simple.Data\Simple.Data\MathReference.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (_leftOperand != null ? _leftOperand.GetHashCode() : 0);                  result = (result*397) ^ (_rightOperand != null ? _rightOperand.GetHashCode() : 0);                  result = (result*397) ^ _operator.GetHashCode();                  return result;              }
Magic Number,Simple.Data,Range,C:\repos\markrendle_Simple.Data\Simple.Data\Range.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (_start.GetHashCode() * 397) ^ _end.GetHashCode();              }
Magic Number,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,ParseWith,The following statement contains a magic number: var objectName = binder.Name.Substring(4);
Magic Number,Simple.Data,SimpleQuery,C:\repos\markrendle_Simple.Data\Simple.Data\SimpleQuery.cs,ParseJoin,The following statement contains a magic number: if (binder.CallInfo.ArgumentNames.Any(s => !string.IsNullOrWhiteSpace(s)))              {                  joinExpression = ExpressionHelper.CriteriaDictionaryToExpression(tableToJoin'                                                                                   binder.NamedArgumentsToDictionary(args));              }              else if (args.Length == 2)              {                  joinExpression = args[1] as SimpleExpression;              }
Magic Number,Simple.Data,ObjectReference,C:\repos\markrendle_Simple.Data\Simple.Data\ObjectReference.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return ((_name != null ? _name.GetHashCode() : 0)*397) ^ (!ReferenceEquals(_owner' null) ? _owner.GetHashCode() : 0);              }
Magic Number,Simple.Data,MethodNameParser,C:\repos\markrendle_Simple.Data\Simple.Data\MethodNameParser.cs,RemoveCommandPart,The following statement contains a magic number: return methodName.Substring(methodName.IndexOf("By"' StringComparison.Ordinal) + 2);
Magic Number,Simple.Data.Commands,UpdateCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpdateCommand.cs,Execute,The following statement contains a magic number: if (args.Length == 0 || args.Length > 2) throw new ArgumentException("Incorrect number of arguments to Update method.");
Magic Number,Simple.Data.Commands,UpsertByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpsertByCommand.cs,Execute,The following statement contains a magic number: if (binder.HasSingleUnnamedArgument() || args.Length == 2 && args[1] is ErrorCallback)              {                  result = UpsertByKeyFields(table.GetQualifiedName()' dataStrategy' args[0]'                                           MethodNameParser.ParseCriteriaNamesFromMethodName(binder.Name)'                                           !binder.IsResultDiscarded()'                                           args.Length == 2 ? (ErrorCallback)args[1] : ((item' exception) => false));              }              else              {                  var criteria = MethodNameParser.ParseFromBinder(binder' args);                  var criteriaExpression = ExpressionHelper.CriteriaDictionaryToExpression(table.GetQualifiedName()'                                                                                           criteria);                  var data = binder.NamedArgumentsToDictionary(args);                  result = dataStrategy.Run.Upsert(table.GetQualifiedName()' data' criteriaExpression' !binder.IsResultDiscarded());              }
Magic Number,Simple.Data.Commands,UpsertByCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpsertByCommand.cs,Execute,The following statement contains a magic number: if (binder.HasSingleUnnamedArgument() || args.Length == 2 && args[1] is ErrorCallback)              {                  result = UpsertByKeyFields(table.GetQualifiedName()' dataStrategy' args[0]'                                           MethodNameParser.ParseCriteriaNamesFromMethodName(binder.Name)'                                           !binder.IsResultDiscarded()'                                           args.Length == 2 ? (ErrorCallback)args[1] : ((item' exception) => false));              }              else              {                  var criteria = MethodNameParser.ParseFromBinder(binder' args);                  var criteriaExpression = ExpressionHelper.CriteriaDictionaryToExpression(table.GetQualifiedName()'                                                                                           criteria);                  var data = binder.NamedArgumentsToDictionary(args);                  result = dataStrategy.Run.Upsert(table.GetQualifiedName()' data' criteriaExpression' !binder.IsResultDiscarded());              }
Magic Number,Simple.Data.Commands,UpsertCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpsertCommand.cs,Execute,The following statement contains a magic number: if (binder.CallInfo.ArgumentNames.Count > 0 && binder.CallInfo.ArgumentNames.All(s => !string.IsNullOrWhiteSpace(s)))              {                  objects = new object[] {binder.NamedArgumentsToDictionary(args)};              }              else if (args.Length == 0 || args.Length > 2)              {                  throw new ArgumentException("Incorrect number of arguments to Upsert method.");              }              else              {                  objects = args;              }
Magic Number,Simple.Data.Commands,UpsertCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\UpsertCommand.cs,UpsertUsingKeys,The following statement contains a magic number: if (list != null)              {                  ErrorCallback errorCallback = (args.Length == 2 ? args[1] as ErrorCallback : null) ??                   ((item' exception) => false);                  return dataStrategy.Run.UpsertMany(table.GetQualifiedName()' list' isResultRequired' errorCallback);              }
Magic Number,Simple.Data.Commands,InsertCommand,C:\repos\markrendle_Simple.Data\Simple.Data\Commands\InsertCommand.cs,DoInsert,The following statement contains a magic number: if (args.Length == 2)              {                  var onError = args[1] as ErrorCallback;                  if (onError != null)                  {                      return InsertEntity(args[0]' dataStrategy' tableName' onError' !binder.IsResultDiscarded());                  }              }
Magic Number,Simple.Data.QueryPolyfills,DictionaryEqualityComparer,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\DictionaryEqualityComparer.cs,GetHashCode,The following statement contains a magic number: return obj.Aggregate(0'                                   (acc' kvp) => (((acc * 397) ^ kvp.Key.GetHashCode()) * 397) ^ (kvp.Value ?? DBNull.Value).GetHashCode());
Magic Number,Simple.Data.QueryPolyfills,DictionaryEqualityComparer,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\DictionaryEqualityComparer.cs,GetHashCode,The following statement contains a magic number: return obj.Aggregate(0'                                   (acc' kvp) => (((acc * 397) ^ kvp.Key.GetHashCode()) * 397) ^ (kvp.Value ?? DBNull.Value).GetHashCode());
Magic Number,Simple.Data.QueryPolyfills,WhereClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\WhereClauseHandler.cs,Resolve,The following statement contains a magic number: if (keys.Length > 2)              {                  if (_mainTableName.Contains("."))                  {                      keys = keys.Skip(1).ToArray();                      keys[0] = _mainTableName;                  }              }
Magic Number,Simple.Data.QueryPolyfills,WhereClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\WhereClauseHandler.cs,Resolve,The following statement contains a magic number: if (keys.Length > 2)              {                  return ResolveSubs(dict' objectReference.GetOwner()' key).ToList();              }
Magic Number,Simple.Data.QueryPolyfills,WhereClauseHandler,C:\repos\markrendle_Simple.Data\Simple.Data\QueryPolyfills\WhereClauseHandler.cs,Resolve,The following statement contains a magic number: if (keys.Length == 2 && !HomogenizedEqualityComparer.DefaultInstance.Equals(keys[0].Singularize()' _mainTableName.Singularize()))              {                  var joinedDict = dict[keys[0]] as IDictionary<string' object>;                  if (joinedDict != null && joinedDict.ContainsKey(keys[1]))                  {                      return new[] { joinedDict[keys[1]] };                  }                    var joinedDicts = dict[keys[0]] as IEnumerable<IDictionary<string' object>>;                  if (joinedDicts != null)                  {                      return joinedDicts.Select(d => d.ContainsKey(keys[1]) ? d[keys[1]] : null).ToArray();                  }              }
