Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Simple.Data.UnitTest,StubAdapterWithTransaction,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\BeginTransactionWithIsolataionLevelTest.cs,InsertMany,The method has 5 parameters. Parameters: tableName' data' transaction' onError' resultRequired
Long Statement,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SkipAndTakeWithCountShouldSkipAndTakeAndGiveCount,The length of the statement  "            var runner = new DictionaryQueryRunner("FooTable"' SkipTakeSource()' new WithCountClause(n => count = n)' new SkipClause(1)' new TakeClause(1)); " is 144.
Long Statement,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The length of the statement  "            var selectClause = new SelectClause(new SimpleReference[] { new ObjectReference("Id"' tableRef)' new ObjectReference("Name"' tableRef) }); " is 138.
Long Statement,Simple.Data.UnitTest,SimpleRecordConvertTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleRecordConvertTest.cs,CanConvertWithSubItemToFoo,The length of the statement  "            dynamic source = new SimpleRecord(new Dictionary<string' object> {{"X"' "Bar"}' {"Y"' new Dictionary<string'object> { {"X"' "Quux"}}}}); " is 136.
Magic Number,Simple.Data.UnitTest,BinderHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\BinderHelperTest.cs,NamedArgumentsToDictionaryShouldApplyNamesToLastArguments,The following statement contains a magic number: var binder = new TestInvokeMemberBinder("Test"' false' new CallInfo(2' "Foo"));
Magic Number,Simple.Data.UnitTest,BinderHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\BinderHelperTest.cs,NamedArgumentsToDictionaryShouldApplyNamesToLastArguments,The following statement contains a magic number: var actual = binder.NamedArgumentsToDictionary(new object[] {1' 2});
Magic Number,Simple.Data.UnitTest,BinderHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\BinderHelperTest.cs,NamedArgumentsToDictionaryShouldApplyNamesToLastArguments,The following statement contains a magic number: Assert.AreEqual(2' actual["Foo"]);
Magic Number,Simple.Data.UnitTest,BinderHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\BinderHelperTest.cs,ArgumentsToDictionaryShouldApplyOrdinalNamesToFirstArguments,The following statement contains a magic number: var binder = new TestInvokeMemberBinder("Test"' false' new CallInfo(2' "Foo"));
Magic Number,Simple.Data.UnitTest,BinderHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\BinderHelperTest.cs,ArgumentsToDictionaryShouldApplyOrdinalNamesToFirstArguments,The following statement contains a magic number: var actual = binder.ArgumentsToDictionary(new object[] { 1' 2 });
Magic Number,Simple.Data.UnitTest,BinderHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\BinderHelperTest.cs,ArgumentsToDictionaryShouldReturnInputParameterWhenInputParameterIsDictionary,The following statement contains a magic number: var input = new Dictionary<string' object> { { "Test1"' 1 }' { "Test2"' 2 } };
Magic Number,Simple.Data.UnitTest,ConcreteCollectionTypeCreatorTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ConcreteCollectionTypeCreatorTest.cs,ListTest,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,Simple.Data.UnitTest,ConcreteCollectionTypeCreatorTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ConcreteCollectionTypeCreatorTest.cs,SetTest,The following statement contains a magic number: Assert.AreEqual(2' @set.Count);
Magic Number,Simple.Data.UnitTest,ConcreteCollectionTypeCreatorTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ConcreteCollectionTypeCreatorTest.cs,ArrayListTest,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,Simple.Data.UnitTest,ConcreteTypeCreatorTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ConcreteTypeCreatorTest.cs,CanConvertDateTimeToNullableDateTime,The following statement contains a magic number: var expected = new DateTime(2011'9'8);
Magic Number,Simple.Data.UnitTest,ConcreteTypeCreatorTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ConcreteTypeCreatorTest.cs,CanConvertDateTimeToNullableDateTime,The following statement contains a magic number: var expected = new DateTime(2011'9'8);
Magic Number,Simple.Data.UnitTest,ConcreteTypeCreatorTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ConcreteTypeCreatorTest.cs,CanConvertDateTimeToNullableDateTime,The following statement contains a magic number: var expected = new DateTime(2011'9'8);
Magic Number,Simple.Data.UnitTest,DictionaryClonerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryClonerTest.cs,NestedDictionaryShouldBeCloned,The following statement contains a magic number: var nested = new Dictionary<string' object> { { "Answer"' 42 } };
Magic Number,Simple.Data.UnitTest,DictionaryClonerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryClonerTest.cs,NestedDictionaryShouldBeCloned,The following statement contains a magic number: Assert.AreEqual(42' nestedClone["Answer"]);
Magic Number,Simple.Data.UnitTest,DictionaryClonerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryClonerTest.cs,NestedDictionariesShouldBeCloned,The following statement contains a magic number: var nested = new List<Dictionary<string' object>> { new Dictionary<string' object> { { "Answer"' 42 } } };
Magic Number,Simple.Data.UnitTest,DictionaryClonerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryClonerTest.cs,NestedDictionariesShouldBeCloned,The following statement contains a magic number: Assert.AreEqual(42' nestedClone[0]["Answer"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,DistinctShouldRemoveDuplicateRows,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,ShouldNotRemoveDistinctRows,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SkipShouldSkip,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SkipShouldSkip,The following statement contains a magic number: Assert.AreEqual(2' actual[1]["Row"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,TakeShouldTake,The following statement contains a magic number: var runner = new DictionaryQueryRunner("FooTable"' SkipTakeSource()' new TakeClause(2));
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,TakeShouldTake,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SkipAndTakeWithCountShouldSkipAndTakeAndGiveCount,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(2' actual[0].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(2' actual[1].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(2' actual[1]["Id"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(2' actual[2].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(2' actual[2].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(3' actual[2]["Id"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(3' actual[2]["Id"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual("Charlie"' actual[2]["Name"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(2' actual[3].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(2' actual[3].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(4' actual[3]["Id"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual(4' actual[3]["Id"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectShouldRestrictColumnList,The following statement contains a magic number: Assert.AreEqual("David"' actual[3]["Name"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(2' actual[0].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(5' actual[0]["NameLength"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(2' actual[1].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(3' actual[1]["NameLength"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(2' actual[2].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(2' actual[2].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual("Charlie"' actual[2]["Name"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(7' actual[2]["NameLength"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(7' actual[2]["NameLength"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(2' actual[3].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(2' actual[3].Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual("David"' actual[3]["Name"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(5' actual[3]["NameLength"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectLengthShouldUseLengthFunction,The following statement contains a magic number: Assert.AreEqual(5' actual[3]["NameLength"]);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNullShouldWorkWhenValueExistsAndIsNull,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Value"' null }                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Value"' 42 }                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNullShouldWorkWhenValueDoesNotExist,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Value"' 42 }                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Array"' tableRef) == new byte[] { 1' 2' 3' 4});
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Array"' tableRef) == new byte[] { 1' 2' 3' 4});
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Array"' tableRef) == new byte[] { 1' 2' 3' 4});
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,BasicWhereNotEqualShouldWork,The following statement contains a magic number: Assert.AreEqual(3' actual.Count);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotNullShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Value"' null }                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Value"' 42 }                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Array"' tableRef) != new byte[] { 1' 2' 3' 4 });
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Array"' tableRef) != new byte[] { 1' 2' 3' 4 });
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Array"' tableRef) != new byte[] { 1' 2' 3' 4 });
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,WhereNotEqualWithByteArrayShouldWork,The following statement contains a magic number: var data = new List<IDictionary<string' object>>                             {                                 new Dictionary<string' object>                                     {                                         {"Name"' "Steve"}' { "Array"' new byte[] { 1' 2' 3' 4}}                                     }'                                 new Dictionary<string' object>                                     {                                         {"Name"' "Dave"}' { "Array"' new byte[] { 2' 3' 4}}                                     }'                             };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,BasicWhereGreaterThanShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Weight"' tableRef) > 200M);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,BasicWhereLessThanShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Weight"' tableRef) < 150M);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,BasicWhereGreaterThanOrEqualShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Weight"' tableRef) >= 250M);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,BasicWhereLessThanOrEqualShouldWork,The following statement contains a magic number: var whereClause = new WhereClause(new ObjectReference("Weight"' tableRef) <= 100M);
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SkipTakeSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                   { "Row"' 2 }                               };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                  {"Id"' 1}' { "Type"' "A"}' {"Name"'"Alice"}' {"Weight"' 100M}                               };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                  {"Id"' 2}' { "Type"' "A"}' {"Name"'"Bob"}' {"Weight"' 150M}                               };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                  {"Id"' 2}' { "Type"' "A"}' {"Name"'"Bob"}' {"Weight"' 150M}                               };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                  {"Id"' 3}' { "Type"' "B"}' {"Name"'"Charlie"}' {"Weight"' 200M}                               };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                  {"Id"' 3}' { "Type"' "B"}' {"Name"'"Charlie"}' {"Weight"' 200M}                               };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                  {"Id"' 4}' { "Type"' "B"}' {"Name"'"David"}' {"Weight"' 250M}                               };
Magic Number,Simple.Data.UnitTest,DictionaryQueryRunnerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DictionaryQueryRunnerTest.cs,SelectSource,The following statement contains a magic number: yield return new Dictionary<string' object>                               {                                  {"Id"' 4}' { "Type"' "B"}' {"Name"'"David"}' {"Weight"' 250M}                               };
Magic Number,Simple.Data.UnitTest,DynamicEnumerableTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DynamicEnumerableTest.cs,TestCast,The following statement contains a magic number: Assert.AreEqual(2' strings.Count());
Magic Number,Simple.Data.UnitTest,DynamicRecordTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DynamicRecordTest.cs,DynamicRecordDictionaryConstructorTest,The following statement contains a magic number: IDictionary<string' object> data = new Dictionary<string' object>                                                     {                                                         { "Name"' "Bob" }'                                                         { "Age"' 42 }                                                     };
Magic Number,Simple.Data.UnitTest,DynamicRecordTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DynamicRecordTest.cs,DynamicRecordDictionaryConstructorTest,The following statement contains a magic number: Assert.AreEqual(42' target.Age);
Magic Number,Simple.Data.UnitTest,DynamicRecordTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DynamicRecordTest.cs,DynamicCastTest,The following statement contains a magic number: target.Age = 42;
Magic Number,Simple.Data.UnitTest,DynamicRecordTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DynamicRecordTest.cs,DynamicCastTest,The following statement contains a magic number: Assert.AreEqual(42' user.Age);
Magic Number,Simple.Data.UnitTest,DynamicRecordTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DynamicRecordTest.cs,DynamicCastShouldReturnSameObjectOnSubsequentCalls,The following statement contains a magic number: target.Age = 42;
Magic Number,Simple.Data.UnitTest,DynamicReferenceTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\DynamicReferenceTest.cs,GetAllObjectNamesTest,The following statement contains a magic number: Assert.AreEqual("Column"' names[2]);
Magic Number,Simple.Data.UnitTest,ExpressionHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ExpressionHelperTest.cs,DictionaryToExpressionTest,The following statement contains a magic number: var dict = new Dictionary<string' object>                             {                                 { "foo"' 1 }'                                 { "bar"' 2 }                             };
Magic Number,Simple.Data.UnitTest,ExpressionHelperTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\ExpressionHelperTest.cs,DictionaryToExpressionTest,The following statement contains a magic number: Assert.AreEqual(2' actualSecond.RightOperand);
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Size"' 6}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnSingleKeyWorks,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: var source = new List<IDictionary<string' object>>                               {                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 1}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "A"}' {"Size"' 2}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 3}}'                                   new Dictionary<string' object> {{"Id"' 1}' {"Type"' "B"}' {"Size"' 4}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 5}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "A"}' {"Size"' 6}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 7}}'                                   new Dictionary<string' object> {{"Id"' 2}' {"Type"' "B"}' {"Size"' 8}}'                               };
Magic Number,Simple.Data.UnitTest,GroupingHandlerTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\GroupingHandlerTest.cs,GroupingOnDoubleKeyWorks,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,Simple.Data.UnitTest,PromiseTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\PromiseTest.cs,PromiseShouldHaveValueAfterSetActionIsCalled,The following statement contains a magic number: setAction(42);
Magic Number,Simple.Data.UnitTest,PromiseTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\PromiseTest.cs,PromiseShouldHaveValueAfterSetActionIsCalled,The following statement contains a magic number: Assert.AreEqual(42' actual.Value);
Magic Number,Simple.Data.UnitTest,PromiseTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\PromiseTest.cs,PromiseShouldImplicitlyCastToType,The following statement contains a magic number: setAction(42);
Magic Number,Simple.Data.UnitTest,PromiseTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\PromiseTest.cs,PromiseShouldImplicitlyCastToType,The following statement contains a magic number: Assert.AreEqual(42' actual);
Magic Number,Simple.Data.UnitTest,PromiseTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\PromiseTest.cs,PromiseShouldSpinWhenValueAccessedButNotSet,The following statement contains a magic number: Assert.AreEqual(42' actual.Value);
Magic Number,Simple.Data.UnitTest,MathReferenceTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MathReferenceTest.cs,MathReferenceWithLessThanMakesExpression,The following statement contains a magic number: AssertHelper(Db.foo.id / 2 < 1' SimpleExpressionType.LessThan' 1);
Magic Number,Simple.Data.UnitTest,MathReferenceTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MathReferenceTest.cs,MathReferenceWithLessThanOrEqualMakesExpression,The following statement contains a magic number: AssertHelper(Db.foo.id % 2 <= 1' SimpleExpressionType.LessThanOrEqual' 1);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,IteratorShouldRun,The following statement contains a magic number: Func<Maybe<int>> iterator = () => ++n < 10 ? n : Maybe<int>.None;
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeEqualityTrueTest,The following statement contains a magic number: var first = Maybe.Some(42);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeEqualityTrueTest,The following statement contains a magic number: var second = Maybe.Some(42);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeEqualityFalseTest,The following statement contains a magic number: var first = Maybe.Some(42);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeEqualityFalseTest,The following statement contains a magic number: var second = Maybe.Some(43);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeInequalityFalseTest,The following statement contains a magic number: var first = Maybe.Some(42);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeInequalityFalseTest,The following statement contains a magic number: var second = Maybe.Some(42);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeInequalityTrueTest,The following statement contains a magic number: var first = Maybe.Some(42);
Magic Number,Simple.Data.UnitTest,MaybeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\MaybeTest.cs,SomeInequalityTrueTest,The following statement contains a magic number: var second = Maybe.Some(43);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,IntRangeTest,The following statement contains a magic number: var range = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,IntRangeTest,The following statement contains a magic number: Assert.AreEqual(10' range.End);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,StringToDateRangeTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011'1'1)' range.Start);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,StringToDateRangeTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011'1'31)' range.End);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,StringToDateRangeTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011'1'31)' range.End);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeToStringTest,The following statement contains a magic number: var range = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeEqualityTest,The following statement contains a magic number: var range1 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeEqualityTest,The following statement contains a magic number: var range2 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeAsObjectEqualityTest,The following statement contains a magic number: object range1 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeAsObjectEqualityTest,The following statement contains a magic number: object range2 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeEqualityOperatorTestTrue,The following statement contains a magic number: var range1 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeEqualityOperatorTestTrue,The following statement contains a magic number: var range2 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeEqualityOperatorTestFalse,The following statement contains a magic number: var range1 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeEqualityOperatorTestFalse,The following statement contains a magic number: var range2 = 1.to(9);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeInequalityOperatorTestFalse,The following statement contains a magic number: var range1 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeInequalityOperatorTestFalse,The following statement contains a magic number: var range2 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeInequalityOperatorTestTrue,The following statement contains a magic number: var range1 = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,RangeInequalityOperatorTestTrue,The following statement contains a magic number: var range2 = 1.to(9);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,AsEnumerableFromIRange,The following statement contains a magic number: IRange range = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,AsEnumerableFromIRange,The following statement contains a magic number: Assert.AreEqual(10' enumerator.Current);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,AsEnumerable,The following statement contains a magic number: var range = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,AsEnumerable,The following statement contains a magic number: Assert.AreEqual(10' enumerator.Current);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,AsEnumerableWithStep,The following statement contains a magic number: var range = 1.to(10);
Magic Number,Simple.Data.UnitTest,RangeTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\RangeTest.cs,AsEnumerableWithStep,The following statement contains a magic number: i < 11
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,AndOperatorCombinesTwoExpressions,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,AndOperatorCombinesTwoExpressions,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,OrOperatorCombinesTwoExpressions,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,OrOperatorCombinesTwoExpressions,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundOperatorsRespectParentheses_AndOrAnd,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundOperatorsRespectParentheses_AndOrAnd,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundOperatorsRespectParentheses_AndOrAnd,The following statement contains a magic number: var expr3 = new SimpleExpression(3' 3' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundOperatorsRespectParentheses_AndOrAnd,The following statement contains a magic number: var expr3 = new SimpleExpression(3' 3' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundOperatorsRespectParentheses_AndOrAnd,The following statement contains a magic number: var expr4 = new SimpleExpression(4' 4' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundOperatorsRespectParentheses_AndOrAnd,The following statement contains a magic number: var expr4 = new SimpleExpression(4' 4' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionsEvaluateAndOperatorsFirst,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionsEvaluateAndOperatorsFirst,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionsEvaluateAndOperatorsFirst,The following statement contains a magic number: var expr3 = new SimpleExpression(3' 3' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionsEvaluateAndOperatorsFirst,The following statement contains a magic number: var expr3 = new SimpleExpression(3' 3' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionsEvaluateAndOperatorsFirst,The following statement contains a magic number: var expr4 = new SimpleExpression(4' 4' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionsEvaluateAndOperatorsFirst,The following statement contains a magic number: var expr4 = new SimpleExpression(4' 4' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: var expr2 = new SimpleExpression(2' 2' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: var expr3 = new SimpleExpression(3' 3' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: var expr3 = new SimpleExpression(3' 3' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: var expr4 = new SimpleExpression(4' 4' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: var expr4 = new SimpleExpression(4' 4' SimpleExpressionType.Equal);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: Assert.AreEqual(expr2' GetExpression(actual' 2).RightOperand);
Magic Number,Simple.Data.UnitTest,SimpleExpressionTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleExpressionTest.cs,CompoundExpressionEvaluationOrderHelper,The following statement contains a magic number: Assert.AreEqual(expr1' GetExpression(actual' 2).LeftOperand);
Magic Number,Simple.Data.UnitTest,SimpleListAsListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListAsListTest.cs,CopyToZeroBasedShouldCopyAllElements,The following statement contains a magic number: var array = new object[2];
Magic Number,Simple.Data.UnitTest,SimpleListAsListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListAsListTest.cs,CopyToNonZeroBasedShouldCopyElementsFromIndex,The following statement contains a magic number: var array = new object[3];
Magic Number,Simple.Data.UnitTest,SimpleListAsListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListAsListTest.cs,CopyToNonZeroBasedShouldCopyElementsFromIndex,The following statement contains a magic number: Assert.AreEqual(entry1' array[2]);
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,ElementAtOrDefaultReturnsCorrectElement,The following statement contains a magic number: var list = new SimpleList(Strings(2));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,ElementAtOrDefaultReturnsNullForOutOfRange,The following statement contains a magic number: Assert.IsNull(list.ElementAtOrDefault(2));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,ElementAtReturnsCorrectElement,The following statement contains a magic number: var list = new SimpleList(Strings(2));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,ElementAtThrowsForOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => list.ElementAt(2));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,FirstReturnsFirstElement,The following statement contains a magic number: var list = new SimpleList(Strings(10));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,FirstOrDefaultReturnsFirstElement,The following statement contains a magic number: var list = new SimpleList(Strings(10));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,LastReturnsLastElement,The following statement contains a magic number: var list = new SimpleList(Strings(10));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,LastOrDefaultReturnsLastElement,The following statement contains a magic number: var list = new SimpleList(Strings(10));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,SingleThrowsOnListWithMoreThanOneElement,The following statement contains a magic number: var list = new SimpleList(Strings(2));
Magic Number,Simple.Data.UnitTest,SimpleListTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleListTest.cs,SingleOrDefaultThrowsOnListWithMoreThanOneElement,The following statement contains a magic number: var list = new SimpleList(Strings(2));
Magic Number,Simple.Data.UnitTest,SimpleQueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleQueryTest.cs,SkipShouldSetSkipCount,The following statement contains a magic number: query = query.Skip(42);
Magic Number,Simple.Data.UnitTest,SimpleQueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleQueryTest.cs,SkipShouldSetSkipCount,The following statement contains a magic number: Assert.AreEqual(42' query.Clauses.OfType<SkipClause>().First().Count);
Magic Number,Simple.Data.UnitTest,SimpleQueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleQueryTest.cs,TakeShouldSetTakeCount,The following statement contains a magic number: query = query.Take(42);
Magic Number,Simple.Data.UnitTest,SimpleQueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleQueryTest.cs,TakeShouldSetTakeCount,The following statement contains a magic number: Assert.AreEqual(42' query.Clauses.OfType<TakeClause>().First().Count);
Magic Number,Simple.Data.UnitTest,SimpleQueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleQueryTest.cs,ThenByShouldModifyOrderAscending,The following statement contains a magic number: Assert.AreEqual(2' actual.Length);
Magic Number,Simple.Data.UnitTest,SimpleQueryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleQueryTest.cs,ThenByDescendingShouldModifyOrderAscending,The following statement contains a magic number: Assert.AreEqual(2' actual.Length);
Magic Number,Simple.Data.UnitTest,SimpleRecordAsDictionaryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleRecordAsDictionaryTest.cs,CopyToZeroBasedShouldCopyAllElements,The following statement contains a magic number: var array = new KeyValuePair<string'object>[2];
Magic Number,Simple.Data.UnitTest,SimpleRecordAsDictionaryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleRecordAsDictionaryTest.cs,CopyToNonZeroBasedShouldCopyElementsFromIndex,The following statement contains a magic number: var array = new KeyValuePair<string'object>[3];
Magic Number,Simple.Data.UnitTest,SimpleRecordAsDictionaryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleRecordAsDictionaryTest.cs,CopyToNonZeroBasedShouldCopyElementsFromIndex,The following statement contains a magic number: Assert.AreEqual(entry1' array[2]);
Magic Number,Simple.Data.UnitTest,SimpleRecordAsDictionaryTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleRecordAsDictionaryTest.cs,KeysShouldContainKeys,The following statement contains a magic number: Assert.AreEqual(2' target.Keys.Count);
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,FirstReturnsFirstElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,FirstOrDefaultReturnsFirstElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,FirstWithCriteriaReturnsMatch,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,FirstWithFailingCriteriaThrows,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,FirstOrDefaultWithCriteriaReturnsMatch,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,FirstOrDefaultWithFailingCriteriaReturnsNull,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,LastReturnsLastElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,LastOrDefaultReturnsLastElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,LastWithCriteriaReturnsMatch,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,LastWithFailingCriteriaThrows,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,LastOrDefaultWithCriteriaReturnsMatch,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,LastOrDefaultWithFailingCriteriaReturnsNull,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleThrowsOnListWithMoreThanOneElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(2));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleOrDefaultThrowsOnListWithMoreThanOneElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(2));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleWithCriteriaMatchingOneRecordReturnsMatch,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleWithCriteriaMatchingMultipleRecordsThrows,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleWithFailingCriteriaThrows,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleOrDefaultWithCriteriaReturnsMatch,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleOrDefaultWithFailingCriteriaReturnsNull,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,SingleOrDefaultWithCriteriaMatchingMultipleRecordsThrows,The following statement contains a magic number: var list = new SimpleResultSet(Records(20));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,GenericFirstReturnsFirstElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,GenericFirstOrDefaultReturnsFirstElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,GenericLastReturnsLastElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,GenericLastOrDefaultReturnsLastElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(10));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,GenericSingleThrowsOnListWithMoreThanOneElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(2));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,GenericSingleOrDefaultThrowsOnListWithMoreThanOneElement,The following statement contains a magic number: var list = new SimpleResultSet(Records(2));
Magic Number,Simple.Data.UnitTest,SimpleResultSetTest,D:\research\architectureSmells\repos\markrendle_Simple.Data\Simple.Data.UnitTest\SimpleResultSetTest.cs,CastToGenericCreatesTypedListWithSubTypes,The following statement contains a magic number: Assert.AreEqual(2' result.List.Count);
