Implementation smell,Namespace,Class,File,Method,Description
Complex Method,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,Seek,Cyclomatic complexity of the method is 9
Complex Method,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUTF8StringSafe,Cyclomatic complexity of the method is 12
Complex Method,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUTF8StringSafe,Cyclomatic complexity of the method is 9
Complex Method,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,Cyclomatic complexity of the method is 9
Complex Method,devTool,Server,C:\repos\vans163_LKEmu\devTool\Server\Server.cs,Send,Cyclomatic complexity of the method is 8
Long Parameter List,devTool,Server,C:\repos\vans163_LKEmu\devTool\Server\Server.cs,Send,The method has 5 parameters.
Long Statement,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The length of the statement  "			Console.WriteLine (string.Format ("Recv {0} - {1}:  {2}"' packet.Length' DateTime.Now.ToLocalTime ().TimeOfDay.ToString ().Remove (10' 4)' packet.ToFormatedHexString ())); " is 171.
Long Statement,devTool,ConnectionDataEventArgs,C:\repos\vans163_LKEmu\devTool\Server\ConnectionDataEventArgs.cs,ToString,The length of the statement  "	return Connection.RemoteEndPoint != null ? string.Format ("{0}: {1} bytes"' Connection.RemoteEndPoint' Data.Count ()) : string.Format ("Not Connected: {0} bytes"' Data.Count ()); " is 178.
Long Statement,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUInt32,The length of the statement  "	return (uint)((m_Data [m_Index++] << 24) | (m_Data [m_Index++] << 16) | (m_Data [m_Index++] << 8) | m_Data [m_Index++]); " is 120.
Long Statement,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteBigUniNull,The length of the statement  "	m_Stream.Position += Encoding.BigEndianUnicode.GetBytes (value' 0' length' m_Stream.GetBuffer ()' (int)m_Stream.Position); " is 122.
Long Statement,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteBigUniFixed,The length of the statement  "		m_Stream.Position += Encoding.BigEndianUnicode.GetBytes (value' 0' length' m_Stream.GetBuffer ()' (int)m_Stream.Position); " is 122.
Long Statement,devTool,Logger,C:\repos\vans163_LKEmu\devTool\Util\Logger.cs,LogLine,The length of the statement  "		sw.WriteLine ("[ " + DateTime.Now.TimeOfDay.ToString ().Remove (DateTime.Now.TimeOfDay.ToString ().IndexOf ('.') + 3) + " ]  " + line); " is 135.
Empty Catch Block,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The method has an empty catch block.
Empty Catch Block,devTool,Connection,C:\repos\vans163_LKEmu\devTool\Server\Connection.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,devTool,Connection,C:\repos\vans163_LKEmu\devTool\Server\Connection.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,devTool,Connection,C:\repos\vans163_LKEmu\devTool\Server\Connection.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,devTool,Server,C:\repos\vans163_LKEmu\devTool\Server\Server.cs,OnDisconnecte,The method has an empty catch block.
Empty Catch Block,devTool,Server,C:\repos\vans163_LKEmu\devTool\Server\Server.cs,acceptCallback,The method has an empty catch block.
Empty Catch Block,devTool,Server,C:\repos\vans163_LKEmu\devTool\Server\Server.cs,acceptCallback,The method has an empty catch block.
Empty Catch Block,devTool,Server,C:\repos\vans163_LKEmu\devTool\Server\Server.cs,killServer,The method has an empty catch block.
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: for (var i = 0; i < nospace.Count (); i += 2)  	arr [i / 2] = Convert.ToByte (nospace.Substring (i' 2)' 16);  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: for (var i = 0; i < nospace.Count (); i += 2)  	arr [i / 2] = Convert.ToByte (nospace.Substring (i' 2)' 16);  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: for (var i = 0; i < nospace.Count (); i += 2)  	arr [i / 2] = Convert.ToByte (nospace.Substring (i' 2)' 16);  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: for (var i = 0; i < nospace.Count (); i += 2)  	arr [i / 2] = Convert.ToByte (nospace.Substring (i' 2)' 16);  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: i += 2
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: arr [i / 2] = Convert.ToByte (nospace.Substring (i' 2)' 16);  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: arr [i / 2] = Convert.ToByte (nospace.Substring (i' 2)' 16);  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: arr [i / 2] = Convert.ToByte (nospace.Substring (i' 2)' 16);  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: if (inthead) {  	arr [0] = Convert.ToByte (nospace.Substring (0' 2));  }  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,button1_Click,The following statement contains a magic number: arr [0] = Convert.ToByte (nospace.Substring (0' 2));  
Magic Number,devTool,Form1,C:\repos\vans163_LKEmu\devTool\Form1.cs,richTextBox1_TextChanged,The following statement contains a magic number: label1.Text = (nospace.Count () / 2).ToString ();  
Magic Number,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,IOClient,The following statement contains a magic number: this.mm_stream = new PacketWriter (255);  
Magic Number,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The following statement contains a magic number: while (incomingStream.IsPacketAvailable ()) {  	var packet = incomingStream.PopPacket ();  	try {  		//   Logger.LogIncomingPacket(message);   		Console.WriteLine (string.Format ("Recv {0} - {1}:  {2}"' packet.Length' DateTime.Now.ToLocalTime ().TimeOfDay.ToString ().Remove (10' 4)' packet.ToFormatedHexString ()));  		HandleIncoming (packet);  	}  	catch (NotImplementedException) {  	}  	catch (Exception ee) {  		Console.WriteLine (string.Format ("Unknown incoming Packet exception: {0}"' ee.StackTrace));  	}  }  
Magic Number,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The following statement contains a magic number: while (incomingStream.IsPacketAvailable ()) {  	var packet = incomingStream.PopPacket ();  	try {  		//   Logger.LogIncomingPacket(message);   		Console.WriteLine (string.Format ("Recv {0} - {1}:  {2}"' packet.Length' DateTime.Now.ToLocalTime ().TimeOfDay.ToString ().Remove (10' 4)' packet.ToFormatedHexString ()));  		HandleIncoming (packet);  	}  	catch (NotImplementedException) {  	}  	catch (Exception ee) {  		Console.WriteLine (string.Format ("Unknown incoming Packet exception: {0}"' ee.StackTrace));  	}  }  
Magic Number,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The following statement contains a magic number: try {  	//   Logger.LogIncomingPacket(message);   	Console.WriteLine (string.Format ("Recv {0} - {1}:  {2}"' packet.Length' DateTime.Now.ToLocalTime ().TimeOfDay.ToString ().Remove (10' 4)' packet.ToFormatedHexString ()));  	HandleIncoming (packet);  }  catch (NotImplementedException) {  }  catch (Exception ee) {  	Console.WriteLine (string.Format ("Unknown incoming Packet exception: {0}"' ee.StackTrace));  }  
Magic Number,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The following statement contains a magic number: try {  	//   Logger.LogIncomingPacket(message);   	Console.WriteLine (string.Format ("Recv {0} - {1}:  {2}"' packet.Length' DateTime.Now.ToLocalTime ().TimeOfDay.ToString ().Remove (10' 4)' packet.ToFormatedHexString ()));  	HandleIncoming (packet);  }  catch (NotImplementedException) {  }  catch (Exception ee) {  	Console.WriteLine (string.Format ("Unknown incoming Packet exception: {0}"' ee.StackTrace));  }  
Magic Number,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The following statement contains a magic number: Console.WriteLine (string.Format ("Recv {0} - {1}:  {2}"' packet.Length' DateTime.Now.ToLocalTime ().TimeOfDay.ToString ().Remove (10' 4)' packet.ToFormatedHexString ()));  
Magic Number,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,Parse,The following statement contains a magic number: Console.WriteLine (string.Format ("Recv {0} - {1}:  {2}"' packet.Length' DateTime.Now.ToLocalTime ().TimeOfDay.ToString ().Remove (10' 4)' packet.ToFormatedHexString ()));  
Magic Number,devTool,ArrayExtensions,C:\repos\vans163_LKEmu\devTool\Server\ArrayExtensions.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < res.Length; ++i) {  	string temp = String.Concat (str [i * 2]' str [i * 2 + 1]);  	res [i] = Convert.ToByte (temp' 16);  }  
Magic Number,devTool,ArrayExtensions,C:\repos\vans163_LKEmu\devTool\Server\ArrayExtensions.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < res.Length; ++i) {  	string temp = String.Concat (str [i * 2]' str [i * 2 + 1]);  	res [i] = Convert.ToByte (temp' 16);  }  
Magic Number,devTool,ArrayExtensions,C:\repos\vans163_LKEmu\devTool\Server\ArrayExtensions.cs,ToByteArray,The following statement contains a magic number: for (int i = 0; i < res.Length; ++i) {  	string temp = String.Concat (str [i * 2]' str [i * 2 + 1]);  	res [i] = Convert.ToByte (temp' 16);  }  
Magic Number,devTool,ArrayExtensions,C:\repos\vans163_LKEmu\devTool\Server\ArrayExtensions.cs,ToByteArray,The following statement contains a magic number: res [i] = Convert.ToByte (temp' 16);  
Magic Number,devTool,EnumerableExtensions,C:\repos\vans163_LKEmu\devTool\Server\EnumerableExtensions.cs,Dump,The following statement contains a magic number: foreach (byte value in collection) {  	if (i > 0 && ((i % 16) == 0)) {  		output.Append (hex);  		output.Append (' ');  		output.Append (text);  		output.Append (Environment.NewLine);  		hex.Clear ();  		text.Clear ();  	}  	hex.Append (value.ToString ("X2"));  	hex.Append (' ');  	text.Append (string.Format ("{0}"' (char.IsWhiteSpace ((char)value) && (char)value != ' ') ? '.' : (char)value));  	// prettify text  	++i;  }  
Magic Number,devTool,EnumerableExtensions,C:\repos\vans163_LKEmu\devTool\Server\EnumerableExtensions.cs,Dump,The following statement contains a magic number: if (i > 0 && ((i % 16) == 0)) {  	output.Append (hex);  	output.Append (' ');  	output.Append (text);  	output.Append (Environment.NewLine);  	hex.Clear ();  	text.Clear ();  }  
Magic Number,devTool,EnumerableExtensions,C:\repos\vans163_LKEmu\devTool\Server\EnumerableExtensions.cs,Dump,The following statement contains a magic number: if (text.Length < 16) {  	hexstring = hexstring.PadRight (48);  	// pad the hex representation in-case it's smaller than a regular 16 value line.  }  
Magic Number,devTool,EnumerableExtensions,C:\repos\vans163_LKEmu\devTool\Server\EnumerableExtensions.cs,Dump,The following statement contains a magic number: if (text.Length < 16) {  	hexstring = hexstring.PadRight (48);  	// pad the hex representation in-case it's smaller than a regular 16 value line.  }  
Magic Number,devTool,EnumerableExtensions,C:\repos\vans163_LKEmu\devTool\Server\EnumerableExtensions.cs,Dump,The following statement contains a magic number: hexstring = hexstring.PadRight (48);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,PacketReader,The following statement contains a magic number: m_Index = fixedSize ? 1 : 3;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadInt32,The following statement contains a magic number: if ((m_Index + 4) > m_Size)  	return 0;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadInt32,The following statement contains a magic number: return (m_Data [m_Index++]) | (m_Data [m_Index++] << 8) | (m_Data [m_Index++] << 16) | m_Data [m_Index++] << 24;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadInt32,The following statement contains a magic number: return (m_Data [m_Index++]) | (m_Data [m_Index++] << 8) | (m_Data [m_Index++] << 16) | m_Data [m_Index++] << 24;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadInt32,The following statement contains a magic number: return (m_Data [m_Index++]) | (m_Data [m_Index++] << 8) | (m_Data [m_Index++] << 16) | m_Data [m_Index++] << 24;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadInt16,The following statement contains a magic number: if ((m_Index + 2) > m_Size)  	return 0;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadInt16,The following statement contains a magic number: return (short)((m_Data [m_Index++]) | m_Data [m_Index++] << 8);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUInt32,The following statement contains a magic number: if ((m_Index + 4) > m_Size)  	return 0;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((m_Data [m_Index++] << 24) | (m_Data [m_Index++] << 16) | (m_Data [m_Index++] << 8) | m_Data [m_Index++]);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((m_Data [m_Index++] << 24) | (m_Data [m_Index++] << 16) | (m_Data [m_Index++] << 8) | m_Data [m_Index++]);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUInt32,The following statement contains a magic number: return (uint)((m_Data [m_Index++] << 24) | (m_Data [m_Index++] << 16) | (m_Data [m_Index++] << 8) | m_Data [m_Index++]);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUInt16,The following statement contains a magic number: if ((m_Index + 2) > m_Size)  	return 0;  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUInt16,The following statement contains a magic number: return (ushort)((m_Data [m_Index++] << 8) | m_Data [m_Index++]);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUnicodeStringLE,The following statement contains a magic number: while ((m_Index + 1) < m_Size && (c = (m_Data [m_Index++] | (m_Data [m_Index++] << 8))) != 0)  	sb.Append ((char)c);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUnicodeStringLESafe,The following statement contains a magic number: while ((m_Index + 1) < bound && (c = (m_Data [m_Index++] | (m_Data [m_Index++] << 8))) != 0) {  	if (IsSafeChar (c))  		sb.Append ((char)c);  }  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUnicodeStringLESafe,The following statement contains a magic number: while ((m_Index + 1) < m_Size && (c = (m_Data [m_Index++] | (m_Data [m_Index++] << 8))) != 0) {  	if (IsSafeChar (c))  		sb.Append ((char)c);  }  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUnicodeStringSafe,The following statement contains a magic number: while ((m_Index + 1) < m_Size && (c = ((m_Data [m_Index++] << 8) | m_Data [m_Index++])) != 0) {  	if (IsSafeChar (c))  		sb.Append ((char)c);  }  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUnicodeString,The following statement contains a magic number: while ((m_Index + 1) < m_Size && (c = ((m_Data [m_Index++] << 8) | m_Data [m_Index++])) != 0)  	sb.Append ((char)c);  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUnicodeStringSafe,The following statement contains a magic number: while ((m_Index + 1) < bound && (c = ((m_Data [m_Index++] << 8) | m_Data [m_Index++])) != 0) {  	if (IsSafeChar (c))  		sb.Append ((char)c);  }  
Magic Number,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,ReadUnicodeString,The following statement contains a magic number: while ((m_Index + 1) < bound && (c = ((m_Data [m_Index++] << 8) | m_Data [m_Index++])) != 0)  	sb.Append ((char)c);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,CreateInstance,The following statement contains a magic number: return CreateInstance (32);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [1] = (byte)(value >> 8);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Stream.Write (m_Buffer' 0' 2);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [1] = (byte)(value >> 8);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Stream.Write (m_Buffer' 0' 2);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [3] = (byte)(value >> 24);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [3] = (byte)(value >> 24);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [2] = (byte)(value >> 16);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [2] = (byte)(value >> 16);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [1] = (byte)(value >> 8);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Stream.Write (m_Buffer' 0' 4);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [3] = (byte)(value >> 24);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [3] = (byte)(value >> 24);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [2] = (byte)(value >> 16);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [2] = (byte)(value >> 16);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Buffer [1] = (byte)(value >> 8);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,Write,The following statement contains a magic number: m_Stream.Write (m_Buffer' 0' 4);  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteUTF8Null,The following statement contains a magic number: foreach (var ch in strarr) {  	if (ch > 255)  		unicnt++;  }  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteUTF8Null,The following statement contains a magic number: if (ch > 255)  	unicnt++;  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteLittleUniNull,The following statement contains a magic number: m_Stream.SetLength (m_Stream.Length + ((length + 1) * 2));  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteLittleUniNull,The following statement contains a magic number: m_Stream.Position += 2;  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteLittleUniFixed,The following statement contains a magic number: size *= 2;  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteLittleUniFixed,The following statement contains a magic number: if ((length * 2) >= size)  	m_Stream.Position += Encoding.Unicode.GetBytes (value' 0' length' m_Stream.GetBuffer ()' (int)m_Stream.Position);  else {  	Encoding.Unicode.GetBytes (value' 0' length' m_Stream.GetBuffer ()' (int)m_Stream.Position);  	m_Stream.Position += size;  }  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteBigUniNull,The following statement contains a magic number: m_Stream.SetLength (m_Stream.Length + ((length + 1) * 2));  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteBigUniNull,The following statement contains a magic number: m_Stream.Position += 2;  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteBigUniFixed,The following statement contains a magic number: size *= 2;  
Magic Number,devTool,PacketWriter,C:\repos\vans163_LKEmu\devTool\Server\net\PacketWriter.cs,WriteBigUniFixed,The following statement contains a magic number: if ((length * 2) >= size)  	m_Stream.Position += Encoding.BigEndianUnicode.GetBytes (value' 0' length' m_Stream.GetBuffer ()' (int)m_Stream.Position);  else {  	Encoding.BigEndianUnicode.GetBytes (value' 0' length' m_Stream.GetBuffer ()' (int)m_Stream.Position);  	m_Stream.Position += size;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: mLoopItr = (data.Count () - 1) >> 2;  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	try {  		var_c = data [loop3 + 1];  	}  	catch {  		var_c = 0;  	}  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  	try {  		var_a = data [loop3 + 3];  	}  	catch {  		var_a = 0;  	}  	var_e = Convert.ToByte ((var_d << 2) & 0xFF);  	var_f = Convert.ToByte (var_c >> 4);  	// ret[x * 3] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_c << 4) & 0xFF);  	var_f = Convert.ToByte (var_b >> 2);  	//    ret[x * 3 + 1] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	var_e = Convert.ToByte ((var_b << 6) & 0xFF);  	var_f = var_a;  	//  ret[x * 3 + 2] = Convert.ToByte(var_e | var_f);  	temp.Add (Convert.ToByte (var_e | var_f));  	loop3 += 4;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: try {  	var_b = data [loop3 + 2];  }  catch {  	var_b = 0;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: var_b = data [loop3 + 2];  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: try {  	var_a = data [loop3 + 3];  }  catch {  	var_a = 0;  }  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: var_a = data [loop3 + 3];  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: var_e = Convert.ToByte ((var_d << 2) & 0xFF);  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: var_f = Convert.ToByte (var_c >> 4);  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: var_e = Convert.ToByte ((var_c << 4) & 0xFF);  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: var_f = Convert.ToByte (var_b >> 2);  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: var_e = Convert.ToByte ((var_b << 6) & 0xFF);  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: loop3 += 4;  
Magic Number,devTool,Stream,C:\repos\vans163_LKEmu\devTool\Server\net\Stream.cs,Decrypt,The following statement contains a magic number: temp = temp.Take (i + 2).ToList<Byte> ();  
Magic Number,devTool,AddItemToInventory2,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,AddItemToInventory2,The following statement contains a magic number: m_Stream.Write ((short)02);  
Magic Number,devTool,AddItemToInventory2,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,AddItemToInventory2,The following statement contains a magic number: m_Stream.Write ((byte)02);  
Magic Number,devTool,AddItemToInventory2,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,AddItemToInventory2,The following statement contains a magic number: m_Stream.Write ((short)02);  
Magic Number,devTool,LoadWorld,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,LoadWorld,The following statement contains a magic number: m_Stream.Write ((int)5);  
Magic Number,devTool,LoadWorld,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,LoadWorld,The following statement contains a magic number: m_Stream.Fill (4);  
Magic Number,devTool,LoadWorld,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,LoadWorld,The following statement contains a magic number: m_Stream.Write ((short)10);  
Magic Number,devTool,LoadWorld,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,LoadWorld,The following statement contains a magic number: m_Stream.Write ((short)10);  
Magic Number,devTool,LoadWorld,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,LoadWorld,The following statement contains a magic number: m_Stream.Fill (10);  
Magic Number,devTool,LoadWorld,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,LoadWorld,The following statement contains a magic number: m_Stream.Write ((byte)3);  
Magic Number,devTool,LoadWorld,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,LoadWorld,The following statement contains a magic number: m_Stream.Fill (4);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Packet,The following statement contains a magic number: m_Length = 32;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: mLoopItr = data.Count () / 3;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: if (data.Count () % 3 != 0)  	mLoopItr++;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: for (int x = 0; x < mLoopItr; x++) {  	var_d = data [loop3];  	if (loop3 + 1 < data.Count ())  		try {  			var_c = data [loop3 + 1];  		}  		catch {  			var_c = 0;  		}  	if (loop3 + 2 < data.Count ())  		try {  			var_b = data [loop3 + 2];  		}  		catch {  			var_b = 0;  		}  	ret [x * 4] = Convert.ToByte (var_d >> 2);  	var_e = Convert.ToByte ((var_d & 3) << 4);  	var_f = Convert.ToByte (var_c >> 4);  	ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  	var_e = Convert.ToByte ((var_c & 0x0F) << 2);  	var_f = Convert.ToByte (var_b >> 6);  	ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  	ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  	ret [x * 4] += 0x3B;  	ret [x * 4 + 1] += 0x3B;  	ret [x * 4 + 2] += 0x3B;  	ret [x * 4 + 3] += 0x3B;  	loop3 += 3;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: if (loop3 + 2 < data.Count ())  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: if (loop3 + 2 < data.Count ())  	try {  		var_b = data [loop3 + 2];  	}  	catch {  		var_b = 0;  	}  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: try {  	var_b = data [loop3 + 2];  }  catch {  	var_b = 0;  }  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: var_b = data [loop3 + 2];  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4] = Convert.ToByte (var_d >> 2);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4] = Convert.ToByte (var_d >> 2);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: var_e = Convert.ToByte ((var_d & 3) << 4);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: var_e = Convert.ToByte ((var_d & 3) << 4);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: var_f = Convert.ToByte (var_c >> 4);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 1] = Convert.ToByte (var_e | var_f);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: var_e = Convert.ToByte ((var_c & 0x0F) << 2);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: var_f = Convert.ToByte (var_b >> 6);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 2] = Convert.ToByte (var_e | var_f);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 3] = Convert.ToByte (var_b & 0x3F);  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4] += 0x3B;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 1] += 0x3B;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 2] += 0x3B;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 2] += 0x3B;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 3] += 0x3B;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: ret [x * 4 + 3] += 0x3B;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: loop3 += 3;  
Magic Number,devTool,Packet,C:\repos\vans163_LKEmu\devTool\Server\Packets\Packets.cs,Encrypt,The following statement contains a magic number: Array.Resize (ref ret' size + 2);  
Magic Number,devTool,Server,C:\repos\vans163_LKEmu\devTool\Server\Server.cs,Listen,The following statement contains a magic number: Listener.Listen (10);  
Magic Number,devTool,Logger,C:\repos\vans163_LKEmu\devTool\Util\Logger.cs,LogLine,The following statement contains a magic number: lock (WriteLock) {  	StreamWriter sw = new StreamWriter (path' true);  	sw.WriteLine ("[ " + DateTime.Now.TimeOfDay.ToString ().Remove (DateTime.Now.TimeOfDay.ToString ().IndexOf ('.') + 3) + " ]  " + line);  	sw.Close ();  	sw.Dispose ();  }  
Magic Number,devTool,Logger,C:\repos\vans163_LKEmu\devTool\Util\Logger.cs,LogLine,The following statement contains a magic number: sw.WriteLine ("[ " + DateTime.Now.TimeOfDay.ToString ().Remove (DateTime.Now.TimeOfDay.ToString ().IndexOf ('.') + 3) + " ]  " + line);  
Missing Default,devTool,IOClient,C:\repos\vans163_LKEmu\devTool\Server\Game\IOClient.cs,HandleIncoming,The following switch statement is missing a default case: switch (data [0]) {  case 0x34:  	// Keep Alive  	keepalive = Program.tickcount.ElapsedMilliseconds;  	break;  case 0x03:  	//  case 0xFF:  	SendPacket (new CloseLogin ().Compile ());  	SendPacket (new LoadWorld ().Compile ());  	break;  }  
Missing Default,devTool,PacketReader,C:\repos\vans163_LKEmu\devTool\Server\net\PacketReader.cs,Seek,The following switch statement is missing a default case: switch (origin) {  case SeekOrigin.Begin:  	m_Index = offset;  	break;  case SeekOrigin.Current:  	m_Index += offset;  	break;  case SeekOrigin.End:  	m_Index = m_Size - offset;  	break;  }  
