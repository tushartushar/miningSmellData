Implementation smell,Namespace,Class,File,Method,Description
Long Method,NServiceKit.Redis.Tests.Examples,BlogPostExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BlogPostExample.cs,Show_a_list_of_recent_posts_and_comments,The method has 120 lines of code.
Long Method,NServiceKit.Redis.Tests.Examples.BestPractice,BlogPostMigrations,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BestPractice\BlogPostMigrations.cs,Automatically_migrate_to_new_Schema,The method has 105 lines of code.
Long Method,NServiceKit.Redis.Tests.Examples.BestPractice,BlogPostMigrations,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BestPractice\BlogPostMigrations.cs,Manually_migrate_to_new_Schema_using_a_custom_tranlation,The method has 143 lines of code.
Long Method,NServiceKit.Redis.Tests.Examples.BestPractice,BlogPostBestPractice,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,Show_a_list_of_recent_posts_and_comments,The method has 135 lines of code.
Long Parameter List,NServiceKit.Redis.Tests,CachedUserSessionManager,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\UserSessionRedisClientTests.cs,StoreClientSession,The method has 6 parameters. Parameters: userId' userName' shardId' ipAddress' base64ClientModulus' userClientGlobalId
Long Parameter List,NServiceKit.Redis.Tests,UserClientSession,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\UserSessionRedisClientTests.cs,UserClientSession,The method has 5 parameters. Parameters: sessionId' userId' ipAddress' base64ClientModulus' userClientGlobalId
Long Statement,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The length of the statement  "			Assert.That(Redis.GetAllItemsFromSortedSet(SortedSetKey)' Is.EquivalentTo(new List<string> { "sortedsetitem1"' "sortedsetitem2"' "sortedsetitem3" })); " is 150.
Long Statement,NServiceKit.Redis.Tests,RedisBenchmarkTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBenchmarkTests.cs,Measure_pipeline_speedup,The length of the statement  "            Debug.WriteLine(String.Format("Time for pipelining {0} Set(key'value) operations: {1} ms"' total' sw.ElapsedMilliseconds)); " is 123.
Long Statement,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_AddRangeToSortedSetWithScores_and_GetAllFromSet,The length of the statement  "			var count = Redis.AddRangeToSortedSetWithScores(SetId' storeMembers.Select(x => new KeyValuePair<string' double>(x' 1)).ToList()); " is 130.
Long Statement,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_AddRangeToSortedSetWithScores_and_GetAllWithScoresFromSortedSet,The length of the statement  "			var count = Redis.AddRangeToSortedSetWithScores(SetId' storeMembers.Select(x => new KeyValuePair<string' double>(x' i++)).ToList()); " is 132.
Long Statement,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_AddRangeToList_and_GetSortedItems,The length of the statement  "            var members = Redis.GetSortedItemsFromList(ListId' new SortOptions { SortAlpha = true' SortDesc = true' Skip = 1' Take = 2 }); " is 126.
Long Statement,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_GetValues_JSON_strings,The length of the statement  "	        var val = "{\"AuthorId\":0'\"Created\":\"\\/Date(1345961754013)\\/\"'\"Name\":\"test\"'\"Base64\":\"BQELAAEBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAViA/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP8BWAFYgP8BWAFYAViA/wFYAVgBWID/AVgBWAFYgP8BWAFYAViA/4D/gP+A/4D/AVgBWID/gP8BWID/gP8BWID/gP+A/wFYgP+A/4D/gP8BWID/gP+A/4D/gP+A/wFYAViA/4D/AViA/4D/AVgBWAFYgP8BWAFYAViA/4D/AViA/4D/gP+A/4D/gP8BWAFYgP+A/wFYgP+A/wFYgP+A/4D/gP+A/wFYgP+A/wFYgP+A/4D/gP+A/4D/AVgBWID/gP8BWID/gP8BWAFYAViA/wFYAVgBWID/gP8BWID/gP+A/4D/gP+A/wFYAViA/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP8BWAFYgP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/AVgBWID/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/wFYAViA/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP8BWAFYgP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/AVgBWID/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/wFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}"; " is 1185.
Long Statement,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The length of the statement  "				IncrementKeyInsideLock(key' lockKey' i' new RedisClient(TestConfig.SingleHost) { NamespacePrefix = Redis.NamespacePrefix })); " is 125.
Long Statement,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_ACQUIRED); " is 123.
Long Statement,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_NOT_ACQUIRED); " is 127.
Long Statement,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_RECOVERED); " is 124.
Long Statement,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_ACQUIRED); " is 123.
Long Statement,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The length of the statement  "			Assert.That(Redis.GetAllItemsFromSortedSet(SortedSetKey)' Is.EquivalentTo(new List<string> { "sortedsetitem1"' "sortedsetitem2"' "sortedsetitem3" })); " is 150.
Long Statement,NServiceKit.Redis.Tests,RedisUtilTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisUtilTests.cs,Can_Calculate_Lexical_Score,The length of the statement  "			Debug.WriteLine(String.Format("Lexical Score of '{0}' is: {1}"' nextMinScore' RedisClient.GetLexicalScore(nextMinScore))); " is 122.
Long Statement,NServiceKit.Redis.Tests.Generic,Answer,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Equals,The length of the statement  "			return other.Id == Id && other.QuestionId == QuestionId && Equals(other.UserId' UserId) && Equals(other.Content' Content); " is 122.
Long Statement,NServiceKit.Redis.Tests.Examples,SimpleExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimpleExamples.cs,Store_and_retrieve_some_blogs,The length of the statement  "				//Recursively print the values of the POCO (For T.Dump() Extension method see: http://www.servicestack.net/mythz_blog/?p=202) " is 125.
Empty Catch Block,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Cannot_Start_a_Disposed_MqHost,The method has an empty catch block.
Empty Catch Block,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Cannot_Stop_a_Disposed_MqHost,The method has an empty catch block.
Empty Catch Block,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Cannot_Start_a_Disposed_MqHost,The method has an empty catch block.
Empty Catch Block,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Cannot_Stop_a_Disposed_MqHost,The method has an empty catch block.
Empty Catch Block,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Cannot_Start_a_Disposed_MqHost,The method has an empty catch block.
Empty Catch Block,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Cannot_Stop_a_Disposed_MqHost,The method has an empty catch block.
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Can_infer_utf8_bytes,The following statement contains a magic number: var cmd = "GET" + 2 + "\r\n";
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Convert_int,The following statement contains a magic number: var test = 1234;
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Convert_int,The following statement contains a magic number: Debug.WriteLine(BitConverter.ToString(1234.ToString().ToUtf8Bytes()));
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,GetCmdBytes2,The following statement contains a magic number: var cmdBytes = new byte[1 + strLines.Length + 2];
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,GetCmdBytes2,The following statement contains a magic number: cmdBytes[cmdBytes.Length - 2] = 0x0D;
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var res1 = GetCmdBytes1('$'' 1234);
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var res2 = GetCmdBytes2('$'' 1234);
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var ticks1 = PerfUtils.Measure(1000000' () => GetCmdBytes1('$'' 2));
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var ticks1 = PerfUtils.Measure(1000000' () => GetCmdBytes1('$'' 2));
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var ticks2 = PerfUtils.Measure(1000000' () => GetCmdBytes2('$'' 2));
Magic Number,NServiceKit.Redis.Tests,AdhocClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var ticks2 = PerfUtils.Measure(1000000' () => GetCmdBytes2('$'' 2));
Magic Number,NServiceKit.Redis.Tests,DiagnosticTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\DiagnosticTests.cs,RandomBytes,The following statement contains a magic number: bytes[i] = (byte)rnd.Next(254);
Magic Number,NServiceKit.Redis.Tests,RedisExtensionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisExtensionTests.cs,Can_Parse_Host,The following statement contains a magic number: Assert.AreEqual(6123' ep.Port);
Magic Number,NServiceKit.Redis.Tests,RedisExtensionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisExtensionTests.cs,Host_May_Contain_AtChar,The following statement contains a magic number: Assert.AreEqual(6123' ep.Port);
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_recover_from_server_terminated_client_connection,The following statement contains a magic number: const int SleepHoldingClientMs = 5;
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_recover_from_server_terminated_client_connection,The following statement contains a magic number: const int loop = 1000;
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_recover_from_server_terminated_client_connection,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_MqServer_recover_from_server_terminated_client_connections,The following statement contains a magic number: var mqHost = new RedisMqServer(clientManager' retryCount: 2);
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_MqServer_recover_from_server_terminated_client_connections,The following statement contains a magic number: 10.Times(i =>                  {                      ThreadPool.QueueUserWorkItem(x => {                           using (var client = mqHost.CreateMessageQueueClient())                          {                              "Publish: {0}...".Print(i);                              client.Publish(new Incr { Value = i });                                                            Thread.Sleep(10);                          }                      });              });
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_MqServer_recover_from_server_terminated_client_connections,The following statement contains a magic number: 10.Times(i =>                  {                      ThreadPool.QueueUserWorkItem(x => {                           using (var client = mqHost.CreateMessageQueueClient())                          {                              "Publish: {0}...".Print(i);                              client.Publish(new Incr { Value = i });                                                            Thread.Sleep(10);                          }                      });              });
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_MqServer_recover_from_server_terminated_client_connections,The following statement contains a magic number: 20.Times(i =>              {                  using (var client = mqHost.CreateMessageQueueClient())                  {                      "Publish: {0}...".Print(i);                      client.Publish(new Incr { Value = i });                  }                    Thread.Sleep(2000);              });
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_MqServer_recover_from_server_terminated_client_connections,The following statement contains a magic number: 20.Times(i =>              {                  using (var client = mqHost.CreateMessageQueueClient())                  {                      "Publish: {0}...".Print(i);                      client.Publish(new Incr { Value = i });                  }                    Thread.Sleep(2000);              });
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_failover_at_runtime,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_failover_at_runtime,The following statement contains a magic number: Assert.That(localIncr + failoverIncr' Is.EqualTo(100));
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,RunInLoop,The following statement contains a magic number: 10.Times(i =>              {                  ThreadPool.QueueUserWorkItem(_ =>                  {                      while (Interlocked.Decrement(ref iterations) >= 0)                      {                          using (var client = clientManager.GetClient())                          {                              try                              {                                  var result = client.Increment("test:failover"' 1);                                  Interlocked.Increment(ref count);                                  if (count % (iterations / 10) == 0)                                      lock (clientManager)                                          Console.WriteLine("count: {0}' errors: {1}"' count' errors);                              }                              catch (Exception ex)                              {                                  Interlocked.Increment(ref errors);                              }                              Thread.Sleep(sleepMs);                          }                      }                        if (callback != null)                      {                          callback();                          callback = null;                      }                  });              });
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,RunInLoop,The following statement contains a magic number: 10.Times(i =>              {                  ThreadPool.QueueUserWorkItem(_ =>                  {                      while (Interlocked.Decrement(ref iterations) >= 0)                      {                          using (var client = clientManager.GetClient())                          {                              try                              {                                  var result = client.Increment("test:failover"' 1);                                  Interlocked.Increment(ref count);                                  if (count % (iterations / 10) == 0)                                      lock (clientManager)                                          Console.WriteLine("count: {0}' errors: {1}"' count' errors);                              }                              catch (Exception ex)                              {                                  Interlocked.Increment(ref errors);                              }                              Thread.Sleep(sleepMs);                          }                      }                        if (callback != null)                      {                          callback();                          callback = null;                      }                  });              });
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_failover_MqServer_at_runtime,The following statement contains a magic number: const int iterations = 100;
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_failover_MqServer_at_runtime,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_failover_MqServer_at_runtime,The following statement contains a magic number: Assert.That(received' Is.EqualTo(100));
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,Can_failover_MqServer_at_runtime,The following statement contains a magic number: Assert.That(map.Count' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,RunMqInLoop,The following statement contains a magic number: 10.Times(i =>              {                  ThreadPool.QueueUserWorkItem(_ =>                  {                      while (Interlocked.Decrement(ref iterations) >= 0)                      {                          using (var client = mqServer.CreateMessageQueueClient())                          {                              try                              {                                  var redis = (RedisNativeClient)((RedisMessageQueueClient)client).ReadWriteClient;                                    client.Publish(new Msg { Host = redis.Host + ":" + redis.Port });                                  Interlocked.Increment(ref count);                                  if (count % (iterations / 10) == 0)                                      lock (mqServer)                                          "count: {0}' errors: {1}".Print(count' errors);                              }                              catch (Exception ex)                              {                                  Interlocked.Increment(ref errors);                              }                              Thread.Sleep(sleepMs);                          }                      }                        lock (mqServer)                      {                          if (callback != null)                          {                              callback();                              callback = null;                          }                      }                  });              });
Magic Number,NServiceKit.Redis.Tests,RedisFailoverTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisFailoverTests.cs,RunMqInLoop,The following statement contains a magic number: 10.Times(i =>              {                  ThreadPool.QueueUserWorkItem(_ =>                  {                      while (Interlocked.Decrement(ref iterations) >= 0)                      {                          using (var client = mqServer.CreateMessageQueueClient())                          {                              try                              {                                  var redis = (RedisNativeClient)((RedisMessageQueueClient)client).ReadWriteClient;                                    client.Publish(new Msg { Host = redis.Host + ":" + redis.Port });                                  Interlocked.Increment(ref count);                                  if (count % (iterations / 10) == 0)                                      lock (mqServer)                                          "count: {0}' errors: {1}".Print(count' errors);                              }                              catch (Exception ex)                              {                                  Interlocked.Increment(ref errors);                              }                              Thread.Sleep(sleepMs);                          }                      }                        lock (mqServer)                      {                          if (callback != null)                          {                              callback();                              callback = null;                          }                      }                  });              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Spin10>(m => {                  var sw = Stopwatch.StartNew();                  while (sw.ElapsedMilliseconds < 10) Thread.SpinWait(100000);                  return new Spin10 { Id = counter.Spin10++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Spin10>(m => {                  var sw = Stopwatch.StartNew();                  while (sw.ElapsedMilliseconds < 10) Thread.SpinWait(100000);                  return new Spin10 { Id = counter.Spin10++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Spin100>(m => {                  var sw = Stopwatch.StartNew();                  while (sw.ElapsedMilliseconds < 100) Thread.SpinWait(100000);                  return new Spin100 { Id = counter.Spin100++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Spin100>(m => {                  var sw = Stopwatch.StartNew();                  while (sw.ElapsedMilliseconds < 100) Thread.SpinWait(100000);                  return new Spin100 { Id = counter.Spin100++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Spin1000>(m => {                  var sw = Stopwatch.StartNew();                  while (sw.ElapsedMilliseconds < 1000) Thread.SpinWait(100000);                  return new Spin1000 { Id = counter.Spin1000++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Spin1000>(m => {                  var sw = Stopwatch.StartNew();                  while (sw.ElapsedMilliseconds < 1000) Thread.SpinWait(100000);                  return new Spin1000 { Id = counter.Spin1000++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,Run_for_5_seconds,The following statement contains a magic number: RunFor(TimeSpan.FromSeconds(5));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,Run_for_10_seconds,The following statement contains a magic number: RunFor(TimeSpan.FromSeconds(10));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSpinServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSpinServerTests.cs,Run_for_30_seconds,The following statement contains a magic number: RunFor(TimeSpan.FromSeconds(30));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSleepServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSleepServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Sleep10>(m => {                  Thread.Sleep(10);                  return new Sleep10 { Id = counter.Sleep10++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSleepServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSleepServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Sleep100>(m => {                  Thread.Sleep(100);                  return new Sleep100 { Id = counter.Sleep100++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSleepServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSleepServerTests.cs,CreateServer,The following statement contains a magic number: mqServer.RegisterHandler<Sleep1000>(m => {                  Thread.Sleep(1000);                  return new Sleep1000 { Id = counter.Sleep1000++ };              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSleepServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSleepServerTests.cs,Run_for_5_seconds,The following statement contains a magic number: RunFor(TimeSpan.FromSeconds(5));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSleepServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSleepServerTests.cs,Run_for_10_seconds,The following statement contains a magic number: RunFor(TimeSpan.FromSeconds(10));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerSleepServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerSleepServerTests.cs,Run_for_30_seconds,The following statement contains a magic number: RunFor(TimeSpan.FromSeconds(30));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Utils_publish_Reverse_messages,The following statement contains a magic number: var mqHost = new RedisMqHost(TestConfig.BasicClientManger' 2);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Utils_publish_Rot13_messages,The following statement contains a magic number: var mqHost = new RedisMqHost(TestConfig.BasicClientManger' 2);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(4));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(4));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 5.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Stop()));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(rot13Called' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: 5.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Stop()));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Assert.That(mqHost.BgThreadCount' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Cannot_Stop_a_Disposed_MqHost,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: var retryCount = 3;
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(2 + 1));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: 5.Times(x => mqClient.Publish(new AlwaysThrows { Value = "#" + x }));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesFailed' Is.EqualTo((1 + 5) * totalRetries));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(6));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(2 + 2));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(2 + 2));
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: var incr = new Incr { Value = 5 };
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_receive_and_process_standard_request_reply_combo,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_BlockingPop_from_multiple_queues,The following statement contains a magic number: const int noOf = 5;
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_BlockingPop_from_multiple_queues,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state => {                  Thread.Sleep(100);                  var i = 0;                  var client = RedisClient.New();                  foreach (var queueName in queueNames)                  {                      var msgName = "msg:" + i++;                      Debug.WriteLine("SEND " + msgName);                      client.PrependItemToList(queueName' msgName);                  }              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_BlockingPop_from_multiple_queues,The following statement contains a magic number: noOf.Times(x => {                  Debug.WriteLine("Blocking... " + x);                  var result = server.BlockingDequeueItemFromLists(queueNames' TimeSpan.FromSeconds(3));                  Debug.WriteLine("RECV: " + result.Dump());              });
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_handle_requests_concurrently_in_2_threads,The following statement contains a magic number: RunHandlerOnMultipleThreads(noOfThreads: 2' msgs: 10);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_handle_requests_concurrently_in_2_threads,The following statement contains a magic number: RunHandlerOnMultipleThreads(noOfThreads: 2' msgs: 10);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_handle_requests_concurrently_in_3_threads,The following statement contains a magic number: RunHandlerOnMultipleThreads(noOfThreads: 3' msgs: 10);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_handle_requests_concurrently_in_3_threads,The following statement contains a magic number: RunHandlerOnMultipleThreads(noOfThreads: 3' msgs: 10);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_handle_requests_concurrently_in_4_threads,The following statement contains a magic number: RunHandlerOnMultipleThreads(noOfThreads: 4' msgs: 10);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,Can_handle_requests_concurrently_in_4_threads,The following statement contains a magic number: RunHandlerOnMultipleThreads(noOfThreads: 4' msgs: 10);
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,RunHandlerOnMultipleThreads,The following statement contains a magic number: var dto = new Wait { ForMs = 100 };
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,RunHandlerOnMultipleThreads,The following statement contains a magic number: const double buffer = 1.1;
Magic Number,NServiceKit.Redis.Tests,RedisMqServerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqServerTests.cs,RunHandlerOnMultipleThreads,The following statement contains a magic number: var sleepForMs = (int)((msgs * 100 / (double)noOfThreads) * buffer);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Utils_publish_Reverse_messages,The following statement contains a magic number: var mqHost = new RedisMqHost(new BasicRedisClientManager()' 2' null);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Utils_publish_Rot13_messages,The following statement contains a magic number: var mqHost = new RedisMqHost(new BasicRedisClientManager()' 2' null);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(4));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(4));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 5.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Stop()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(rot13Called' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: 5.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Stop()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Assert.That(mqHost.BgThreadCount' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Cannot_Stop_a_Disposed_MqHost,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: var retryCount = 3;
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(2 + 1));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: 5.Times(x => mqClient.Publish(new AlwaysThrows { Value = "#" + x }));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesFailed' Is.EqualTo((1 + 5) * totalRetries));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(6));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(2 + 2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(2 + 2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: var incr = new Incr { Value = 5 };
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostPoolTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostPoolTests.cs,Can_receive_and_process_standard_request_reply_combo,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,CreateMqHost,The following statement contains a magic number: return CreateMqHost(2);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Utils_publish_Reverse_messages,The following statement contains a magic number: mqHost = new RedisMqHost(TestConfig.BasicClientManger' 2' null);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Utils_publish_Reverse_messages,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Utils_publish_Rot13_messages,The following statement contains a magic number: mqHost = new RedisMqHost(TestConfig.BasicClientManger' 2' null);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Utils_publish_Rot13_messages,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(4));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_messages_sent_before_it_was_started,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(4));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 5.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Stop()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_process_all_messages_and_Starts_Stops_correctly_with_multiple_threads_racing,The following statement contains a magic number: Assert.That(rot13Called' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: 5.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Start()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: 10.Times(x => ThreadPool.QueueUserWorkItem(y => mqHost.Stop()));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Only_allows_1_BgThread_to_run_at_a_time,The following statement contains a magic number: Assert.That(mqHost.BgThreadCount' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Cannot_Stop_a_Disposed_MqHost,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: var retryCount = 3;
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(2 + 1));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: 5.Times(x => mqClient.Publish(new AlwaysThrows { Value = "#" + x }));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesFailed' Is.EqualTo((1 + 5) * totalRetries));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(mqHost.GetStats().TotalMessagesProcessed' Is.EqualTo(6));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(2 + 2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Does_retry_messages_with_errors_by_RetryCount,The following statement contains a magic number: Assert.That(reverseCalled' Is.EqualTo(2 + 2));
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: var incr = new Incr { Value = 5 };
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests,RedisMqHostTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisMqHostTests.cs,Can_receive_and_process_standard_request_reply_combo,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests,CultureInfoTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\CultureInfoTests.cs,Can_AddItemToSortedSet_in_different_Culture,The following statement contains a magic number: Redis.AddItemToSortedSet("somekey1"' "somevalue"' 66121.202);
Magic Number,NServiceKit.Redis.Tests,CultureInfoTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\CultureInfoTests.cs,Can_AddItemToSortedSet_in_different_Culture,The following statement contains a magic number: Assert.That(score' Is.EqualTo(66121.202));
Magic Number,NServiceKit.Redis.Tests,ObjectSerializerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ObjectSerializerTests.cs,Can_serialize_object_with_optimized_serializer,The following statement contains a magic number: float testFloat = 320.0f;
Magic Number,NServiceKit.Redis.Tests,RedisClientEvalTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(3141591));
Magic Number,NServiceKit.Redis.Tests,RedisClientEvalTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientEvalTests.cs,Can_EvalSha_int,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(3141591));
Magic Number,NServiceKit.Redis.Tests,RedisClientEvalTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int_with_args,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(3141591));
Magic Number,NServiceKit.Redis.Tests,RedisClientEvalTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int_with_keys_and_args,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(50));
Magic Number,NServiceKit.Redis.Tests,RedisClientEvalTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int2,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(30));
Magic Number,NServiceKit.Redis.Tests,RedisClientEvalTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientEvalTests.cs,Can_create_ZPop_with_lua,The following statement contains a magic number: var alphabet = 26.Times(c => ((char)('A' + c)).ToString());
Magic Number,NServiceKit.Redis.Tests,RedisClientEvalTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientEvalTests.cs,Can_create_ZRevPop_with_lua,The following statement contains a magic number: var alphabet = 26.Times(c => ((char)('A' + c)).ToString());
Magic Number,NServiceKit.Redis.Tests,RedisClientsManagerExtensionsTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_Exec_Func_double,The following statement contains a magic number: double value = redisManager.Exec(r =>  			{  				r.AddItemToSortedSet("zset"' "value"' 1.1d);  				return r.GetItemScoreInSortedSet("zset"' "value");  			});
Magic Number,NServiceKit.Redis.Tests,RedisClientsManagerExtensionsTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_Exec_Func_double,The following statement contains a magic number: Assert.That(value' Is.EqualTo(1.1d));
Magic Number,NServiceKit.Redis.Tests,RedisClientsManagerExtensionsTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_IList,The following statement contains a magic number: var expected = new[] {             		ModelWithIdAndName.Create(1)'             		ModelWithIdAndName.Create(2)'             		ModelWithIdAndName.Create(3)'             	};
Magic Number,NServiceKit.Redis.Tests,RedisClientsManagerExtensionsTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_IList,The following statement contains a magic number: var expected = new[] {             		ModelWithIdAndName.Create(1)'             		ModelWithIdAndName.Create(2)'             		ModelWithIdAndName.Create(3)'             	};
Magic Number,NServiceKit.Redis.Tests,RedisClientsManagerExtensionsTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_List,The following statement contains a magic number: var expected = new[] {             		ModelWithIdAndName.Create(1)'             		ModelWithIdAndName.Create(2)'             		ModelWithIdAndName.Create(3)'             	};
Magic Number,NServiceKit.Redis.Tests,RedisClientsManagerExtensionsTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_List,The following statement contains a magic number: var expected = new[] {             		ModelWithIdAndName.Create(1)'             		ModelWithIdAndName.Create(2)'             		ModelWithIdAndName.Create(3)'             	};
Magic Number,NServiceKit.Redis.Tests,RedisPipelineCommonTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineCommonTests.cs,Can_Set_and_Expire_key_in_atomic_transaction,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_hash_operations_in_pipeline,The following statement contains a magic number: Assert.AreEqual(members[i]' fieldBytes[i / 2]);
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_hash_operations_in_pipeline,The following statement contains a magic number: Assert.AreEqual(members[i + 1]' valueBytes[i / 2]);
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_multiple_setexs_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => ((RedisNativeClient)r).SetEx(keys[index0]' 100' GetBytes(values[index0])));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_multiple_setexs_in_pipeline,The following statement contains a magic number: i < 3
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_multiple_setexs_in_pipeline,The following statement contains a magic number: i < 3
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<long> { 1' 2 }));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.GetItemFromList(ListKey' 4)' x => item4 = x);
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: Assert.That(Redis.GetListCount(ListKey)' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPipelineTests.cs,Can_call_operation_not_supported_on_older_servers_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => ((RedisNativeClient)r).SetEx(Key + "key"'5'temp));
Magic Number,NServiceKit.Redis.Tests,RedisBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBasicPersistenceProviderTests.cs,OnBeforeEachTest,The following statement contains a magic number: 5.Times(i => testModels.Add(  				new TestModel { Id = Guid.NewGuid()' Name = "Name" + i' Age = 20 + i }));
Magic Number,NServiceKit.Redis.Tests,RedisBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBasicPersistenceProviderTests.cs,OnBeforeEachTest,The following statement contains a magic number: 5.Times(i => testModels.Add(  				new TestModel { Id = Guid.NewGuid()' Name = "Name" + i' Age = 20 + i }));
Magic Number,NServiceKit.Redis.Tests,RedisBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBasicPersistenceProviderTests.cs,Can_GetByIds,The following statement contains a magic number: var evenTestModels = testModels.Where(x => x.Age % 2 == 0)  				.OrderBy(x => x.Id).ToList();
Magic Number,NServiceKit.Redis.Tests,RedisBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBasicPersistenceProviderTests.cs,Can_DeleteByIds,The following statement contains a magic number: var evenTestModels = testModels.Where(x => x.Age % 2 == 0)  				.OrderBy(x => x.Id).ToList();
Magic Number,NServiceKit.Redis.Tests,TestModel,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBasicPersistenceProviderTests.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,NServiceKit.Redis.Tests,TestModel,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBasicPersistenceProviderTests.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Age;
Magic Number,NServiceKit.Redis.Tests,RedisBenchmarkTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBenchmarkTests.cs,Measure_pipeline_speedup,The following statement contains a magic number: int total = 500;
Magic Number,NServiceKit.Redis.Tests,RedisBenchmarkTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBenchmarkTests.cs,Compare_sort_nosort_to_smembers_mget,The following statement contains a magic number: int total = 25;
Magic Number,NServiceKit.Redis.Tests,RedisBenchmarkTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBenchmarkTests.cs,Compare_sort_nosort_to_smembers_mget,The following statement contains a magic number: int count = 20;
Magic Number,NServiceKit.Redis.Tests,RedisBenchmarkTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisBenchmarkTests.cs,Compare_sort_nosort_to_smembers_mget,The following statement contains a magic number: byte fixedValue = 124;
Magic Number,NServiceKit.Redis.Tests,RedisClientHashTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientHashTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringIntMap = new Dictionary<string' int> {       			{"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}       		};
Magic Number,NServiceKit.Redis.Tests,RedisClientHashTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientHashTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringIntMap = new Dictionary<string' int> {       			{"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}       		};
Magic Number,NServiceKit.Redis.Tests,RedisClientHashTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientHashTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringIntMap = new Dictionary<string' int> {       			{"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}       		};
Magic Number,NServiceKit.Redis.Tests,RedisClientHashTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientHashTests.cs,Can_increment_Hash_field,The following statement contains a magic number: stringIntMap["two"] += 10;
Magic Number,NServiceKit.Redis.Tests,RedisClientHashTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientHashTests.cs,Can_increment_Hash_field,The following statement contains a magic number: Redis.IncrementValueInHash(HashId' "two"' 10);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringDoubleMap = new Dictionary<string' double> {       			{"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}       		};
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringDoubleMap = new Dictionary<string' double> {       			{"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}       		};
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringDoubleMap = new Dictionary<string' double> {       			{"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}       		};
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: var i = 10;
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSet(SetId' "three")' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSet(SetId' "four")' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSetDesc(SetId' "one")' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSetDesc(SetId' "two")' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_IntersectBetweenSetsWithWeights,The following statement contains a magic number: Redis.AddItemToSortedSet(set1Name' "three"' 3.0);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_IntersectBetweenSetsWithWeights,The following statement contains a magic number: Redis.AddItemToSortedSet(set1Name' "four"' 2.0);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_IntersectBetweenSetsWithWeights,The following statement contains a magic number: Redis.AddItemToSortedSet(set2Name' "four"' 2.0);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_IntersectBetweenSetsWithWeights,The following statement contains a magic number: Redis.StoreIntersectFromSortedSetsWithWeights(storeSetName'                   new KeyValuePair<string' double>(set1Name' 1.0)'                  new KeyValuePair<string' double>(set2Name' 3.0)              );
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_IntersectBetweenSetsWithWeights,The following statement contains a magic number: Assert.AreEqual(2' intersectingMembers.Count);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_IntersectBetweenSetsWithWeights,The following statement contains a magic number: Assert.AreEqual(6.0' intersectingMembers["three"]);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_IntersectBetweenSetsWithWeights,The following statement contains a magic number: Assert.AreEqual(8.0' intersectingMembers["four"]);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Redis.AddItemToSortedSet(set1Name' "one"' 10.0);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Redis.AddItemToSortedSet(set1Name' "three"' 3.0);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Redis.AddItemToSortedSet(set1Name' "four"' 2.0);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Redis.AddItemToSortedSet(set2Name' "four"' 2.0);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Redis.StoreUnionFromSortedSetsWithWeights(storeSetName'                  new KeyValuePair<string' double>(set1Name' 1.0)'                  new KeyValuePair<string' double>(set2Name' 3.0)              );
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Assert.AreEqual(3' intersectingMembers.Count);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Assert.AreEqual(6.0' intersectingMembers["three"]);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Assert.AreEqual(8.0' intersectingMembers["four"]);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_Store_UnionBetweenSetsWithWeights,The following statement contains a magic number: Assert.AreEqual(10.0' intersectingMembers["one"]);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: var currentScore = Redis.IncrementItemInSortedSet(SetId' "one"' 2);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: stringDoubleMap["one"] = stringDoubleMap["one"] + 2;
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: currentScore = Redis.IncrementItemInSortedSet(SetId' "four"' -2);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: stringDoubleMap["four"] = stringDoubleMap["four"] - 2;
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_WorkInSortedSetUnderDifferentCulture,The following statement contains a magic number: Redis.AddItemToSortedSet(SetId' "key"' 123.22);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_WorkInSortedSetUnderDifferentCulture,The following statement contains a magic number: Assert.AreEqual(123.22' map["key"]);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_get_index_and_score_from_SortedSet,The following statement contains a magic number: const double initialScore = 10d;
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_enumerate_large_ICollection_Set,The following statement contains a magic number: const int setSize = 2500;
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_add_large_score_to_sortedset,The following statement contains a magic number: Redis.AddItemToSortedSet(SetId' "value"' 12345678901234567890d);
Magic Number,NServiceKit.Redis.Tests,RedisClientSortedSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSortedSetTests.cs,Can_add_large_score_to_sortedset,The following statement contains a magic number: Assert.That(score' Is.EqualTo(12345678901234567890d));
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_loop_through_ReadWrite_hosts,The following statement contains a magic number: AssertClientHasHost(client3' testReadWriteHosts[2]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_loop_through_ReadWrite_hosts,The following statement contains a magic number: AssertClientHasHost(client4' testReadWriteHosts[3]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_loop_through_ReadOnly_hosts,The following statement contains a magic number: AssertClientHasHost(client3' testReadOnlyHosts[2]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Can_have_different_pool_size_and_host_configurations,The following statement contains a magic number: const int poolSizeMultiplier = 4;
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: Action func = delegate {  					Thread.Sleep(delay + TimeSpan.FromSeconds(0.5));  					client4.Dispose();  				};
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client3' testReadWriteHosts[2]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client4' testReadWriteHosts[3]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client5' testReadWriteHosts[3]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadOnly_clients_pool,The following statement contains a magic number: Action func = delegate {  					Thread.Sleep(delay + TimeSpan.FromSeconds(0.5));  					client3.Dispose();  				};
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadOnly_clients_pool,The following statement contains a magic number: AssertClientHasHost(client3' testReadOnlyHosts[2]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadOnly_clients_pool,The following statement contains a magic number: AssertClientHasHost(client4' testReadOnlyHosts[2]);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: Assert.That(entry.Value' Is.GreaterThanOrEqualTo(5)' "Host has unproportianate distrobution: " + entry.Value);
Magic Number,NServiceKit.Redis.Tests,PooledRedisClientManagerTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\PooledRedisClientManagerTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: Assert.That(entry.Value' Is.LessThanOrEqualTo(30)' "Host has unproportianate distrobution: " + entry.Value);
Magic Number,NServiceKit.Redis.Tests,RedisCacheClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisCacheClientTests.cs,Can_Set_and_Get_key_with_all_byte_values,The following statement contains a magic number: var value = new byte[256];
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_GetItemFromList,The following statement contains a magic number: var storeMember3 = storeMembers[2];
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_GetItemFromList,The following statement contains a magic number: var item3 = Redis.GetItemFromList(ListId' 2);
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_SetItemInList,The following statement contains a magic number: storeMembers[2] = "five";
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_SetItemInList,The following statement contains a magic number: Redis.SetItemInList(ListId' 2' "five");
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_enumerate_large_list,The following statement contains a magic number: const int listSize = 2500;
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: storeMembers.RemoveAt(2);
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: list.RemoveAt(2);
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_AddRangeToList_and_GetSortedItems,The following statement contains a magic number: var members = Redis.GetSortedItemsFromList(ListId' new SortOptions { SortAlpha = true' SortDesc = true' Skip = 1' Take = 2 });
Magic Number,NServiceKit.Redis.Tests,RedisClientListTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientListTests.cs,Can_AddRangeToList_and_GetSortedItems,The following statement contains a magic number: AssertAreEqual(members' storeMembers.OrderByDescending(s => s).Skip(1).Take(2).ToList());
Magic Number,NServiceKit.Redis.Tests,RedisClientSetTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientSetTests.cs,Can_enumerate_large_ICollection_Set,The following statement contains a magic number: const int setSize = 2500;
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_and_Get_key_with_all_byte_values,The following statement contains a magic number: var value = new byte[256];
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,GetKeys_returns_matching_collection,The following statement contains a magic number: Assert.That(matchingKeys.Count' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_delete_keys,The following statement contains a magic number: 10.Times(i => keysMap.Add("key" + i' "val" + i));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_delete_keys,The following statement contains a magic number: 10.Times(i => Assert.That(Redis.ContainsKey("key" + i)' Is.True));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_delete_keys,The following statement contains a magic number: 10.Times(i => Assert.That(Redis.ContainsKey("key" + i)' Is.False));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_get_RandomKey,The following statement contains a magic number: Redis.Db = 15;
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_get_RandomKey,The following statement contains a magic number: 10.Times(i => keysMap.Add(Redis.NamespacePrefix + "key" + i' "val" + i));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Expire,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_ExpireAt,The following statement contains a magic number: var in2Secs = unixNow + 2;
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_ExpireAt,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Redis.Expire("key"' 10);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Assert.That(ttl.TotalSeconds' Is.GreaterThanOrEqualTo(9));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Thread.Sleep(1700);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Assert.That(ttl.TotalSeconds' Is.LessThanOrEqualTo(9));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_get_Keys_with_pattern,The following statement contains a magic number: 5.Times(i => Redis.SetEntry("k1:" + i' "val"));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_get_Keys_with_pattern,The following statement contains a magic number: 5.Times(i => Redis.SetEntry("k2:" + i' "val"));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_get_Keys_with_pattern,The following statement contains a magic number: Assert.That(keys.Length' Is.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_GetAll,The following statement contains a magic number: 10.Times(i => keysMap.Add("key" + i' "val" + i));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The following statement contains a magic number: var asyncResults = 5.TimesAsync(i =>  				IncrementKeyInsideLock(key' lockKey' i' new RedisClient(TestConfig.SingleHost) { NamespacePrefix = Redis.NamespacePrefix }));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The following statement contains a magic number: asyncResults.WaitAll(TimeSpan.FromSeconds(5));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The following statement contains a magic number: Assert.That(val' Is.EqualTo(1 + 5));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,IncrementKeyInsideLock,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_AcquireLock_TimeOut,The following statement contains a magic number: var waitFor = TimeSpan.FromMilliseconds(1000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The following statement contains a magic number: int lockTimeout = 2;
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The following statement contains a magic number: Thread.Sleep(lockTimeout * 1000 + 1000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The following statement contains a magic number: Thread.Sleep(lockTimeout * 1000 + 1000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_store_multiple_keys,The following statement contains a magic number: var keys = 5.Times(x => "key" + x);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_store_multiple_keys,The following statement contains a magic number: var vals = 5.Times(x => "val" + x);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_store_Dictionary,The following statement contains a magic number: var keys = 5.Times(x => "key" + x);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_store_Dictionary,The following statement contains a magic number: var vals = 5.Times(x => "val" + x);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_get_showlog,The following statement contains a magic number: var log = redis.GetSlowlog(10);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_change_db_at_runtime,The following statement contains a magic number: redis.ChangeDb(2);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_MilliSeconds,The following statement contains a magic number: Redis.SetEntry("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_MilliSeconds,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_exists,The following statement contains a magic number: Redis.SetEntryIfExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1500));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_exists,The following statement contains a magic number: Redis.SetEntryIfExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_exists,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_not_exists,The following statement contains a magic number: Redis.SetEntryIfNotExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000));
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_not_exists,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_not_exists,The following statement contains a magic number: Redis.SetEntryIfNotExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000));
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>  				{                      Thread.Sleep(100); // to be sure that we have subscribers  					using (var redisClient = CreateRedisClient())  					{  						Log("Publishing '{0}' to '{1}'"' message' channelName);  						redisClient.PublishMessage(channelName' message);  					}  				});
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message_using_wildcard,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                      using (var redisClient = CreateRedisClient())                      {                          Log("Publishing '{0}' to '{1}'"' message' channelName);                          redisClient.PublishMessage(channelName' message);                      }                  });
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message_using_wildcard,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_multiple_message,The following statement contains a magic number: const int publishMessageCount = 5;
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_multiple_message,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>  				{                      Thread.Sleep(100); // to be sure that we have subscribers    					using (var redisClient = CreateRedisClient())  					{  						for (var i = 0; i < publishMessageCount; i++)  						{  							var message = messagePrefix + i;  							Log("Publishing '{0}' to '{1}'"' message' channelName);  							redisClient.PublishMessage(channelName' message);  						}  					}  				});
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_multiple_message,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_message_to_multiple_channels,The following statement contains a magic number: const int publishChannelCount = 5;
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_message_to_multiple_channels,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>  				{                      Thread.Sleep(100); // to be sure that we have subscribers    					using (var redisClient = CreateRedisClient())  					{  						foreach (var channel in channels)  						{  							Log("Publishing '{0}' to '{1}'"' message' channel);  							redisClient.PublishMessage(channel' message);  						}  					}  				});
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_message_to_multiple_channels,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_to_channel_pattern,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>  				{                      Thread.Sleep(100); // to be sure that we have subscribers    					using (var redisClient = CreateRedisClient())  					{  						Log("Publishing msg...");  						redisClient.Publish(PrefixedKey("CHANNEL4:TITLE1")' "hello".ToUtf8Bytes());  					}  				});
Magic Number,NServiceKit.Redis.Tests,RedisPubSubTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_to_multiplechannel_pattern,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                        using (var redisClient = CreateRedisClient())                      {                          Log("Publishing msg...");                          redisClient.Publish(PrefixedKey("CHANNEL5:BODY")' "hello".ToUtf8Bytes());                      }                  });
Magic Number,NServiceKit.Redis.Tests,RedisTransactionCommonTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionCommonTests.cs,Can_Set_and_Expire_key_in_atomic_transaction,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<long> { 1' 2 }));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.GetItemFromList(ListKey' 4)' x => item4 = x);
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: Assert.That(Redis.GetListCount(ListKey)' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_multiple_setexs_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => ((RedisNativeClient)r).SetEx(keys[index0]' 100' GetBytes(values[index0])));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_multiple_setexs_in_transaction,The following statement contains a magic number: i < 3
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_multiple_setexs_in_transaction,The following statement contains a magic number: i < 3
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Can_call_operation_not_supported_on_older_servers_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => ((RedisNativeClient)r).SetEx(Key'5'temp));
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Transaction_can_issue_watch,The following statement contains a magic number: Redis.Set(Key' 7);
Magic Number,NServiceKit.Redis.Tests,RedisTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisTransactionTests.cs,Transaction_can_issue_watch,The following statement contains a magic number: trans.QueueCommand(r => r.Set(KeySquared' 2));
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var deleteIds = new List<int> { 2' 4 };
Magic Number,NServiceKit.Redis.Tests,RedisPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var deleteIds = new List<int> { 2' 4 };
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {   					new IntAndString {Id = 2' Letter = "B"}'  					new IntAndString {Id = 3' Letter = "C"}'  					new IntAndString {Id = 4' Letter = "D"}'  					new IntAndString {Id = 5' Letter = "E"}'  				};
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {   					new IntAndString {Id = 2' Letter = "B"}'  					new IntAndString {Id = 3' Letter = "C"}'  					new IntAndString {Id = 4' Letter = "D"}'  					new IntAndString {Id = 5' Letter = "E"}'  				};
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {   					new IntAndString {Id = 2' Letter = "B"}'  					new IntAndString {Id = 3' Letter = "C"}'  					new IntAndString {Id = 4' Letter = "D"}'  					new IntAndString {Id = 5' Letter = "E"}'  				};
Magic Number,NServiceKit.Redis.Tests,ValueTypeExamples,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {   					new IntAndString {Id = 2' Letter = "B"}'  					new IntAndString {Id = 3' Letter = "C"}'  					new IntAndString {Id = 4' Letter = "D"}'  					new IntAndString {Id = 5' Letter = "E"}'  				};
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueueUpdate,The following statement contains a magic number: i < numMessages / 2
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueueUpdate,The following statement contains a magic number: var batch = queue.Dequeue(numMessages / 2);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueueUpdate,The following statement contains a magic number: i < numMessages / 2
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: var batch = queue.Dequeue(numMessages/2);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: i < numMessages/2
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: Assert.AreEqual(numMessages/2' batch.DequeueItems.Count);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: batch = queue.Dequeue(2*numMessages);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: Assert.AreEqual(batch.DequeueItems.Count' numMessages/2);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: const int numMessages = 6;
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: var batch = queue.Dequeue(0' numMessages' numMessages / 2);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: i < numMessages / 2
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: batch = queue.Dequeue(0'numMessages'2 * numMessages);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: Assert.AreEqual(batch.Count' numMessages/2);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: Assert.AreEqual(batch[i].Value' messages[i + numMessages/2]);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: i < numMessages/2
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSimpleWorkQueue,The following statement contains a magic number: int numMessages = 6;
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSimpleWorkQueue,The following statement contains a magic number: var batch = queue.Dequeue(numMessages*2);
Magic Number,NServiceKit.Redis.Tests,QueueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\QueueTests.cs,TestSimpleWorkQueue,The following statement contains a magic number: batch = queue.Dequeue(numMessages * 2);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: var mqHost = CreateMqHostPool(threadCount: 3);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking,The following statement contains a magic number: var mqHost = CreateMqHostPool(threadCount: 5);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking,The following statement contains a magic number: mqHost.RegisterHandler<IncrBlocking>(m =>              {                  called++;                  mqHost.CreateMessageQueueClient().Publish(new IncrBlocking { Value = m.GetBody().Value + 1 });                  Thread.Sleep(100);                  return null;              });
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking_and_non_blocking,The following statement contains a magic number: mqHost.RegisterHandler<IncrBlocking>(m =>              {                  blocking++;                  mqHost.CreateMessageQueueClient().Publish(new IncrBlocking { Value = m.GetBody().Value + 1 });                  Thread.Sleep(100);                  return null;              }' 5);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking_and_non_blocking,The following statement contains a magic number: mqHost.RegisterHandler<IncrBlocking>(m =>              {                  blocking++;                  mqHost.CreateMessageQueueClient().Publish(new IncrBlocking { Value = m.GetBody().Value + 1 });                  Thread.Sleep(100);                  return null;              }' 5);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking_and_non_blocking,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_messages_throughput,The following statement contains a magic number: const int BlockFor = 100;
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_messages_throughput,The following statement contains a magic number: const int NoOfThreads = 5;
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_messages_throughput,The following statement contains a magic number: const int SendEvery = BlockFor / NoOfThreads / 4;
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_messages_throughput,The following statement contains a magic number: DateTime.Now - startedAt < TimeSpan.FromSeconds(10)
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_and_NonBlocking_messages_throughput,The following statement contains a magic number: const int BlockFor = 100;
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_and_NonBlocking_messages_throughput,The following statement contains a magic number: const int NoOfThreads = 5;
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_and_NonBlocking_messages_throughput,The following statement contains a magic number: const int SendBlockingMsgEvery = BlockFor / NoOfThreads / 4;
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_and_NonBlocking_messages_throughput,The following statement contains a magic number: mqHost.RegisterHandler<Incr>(m =>              {                  nonBlocking++;                  return null;              }' 3);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_and_NonBlocking_messages_throughput,The following statement contains a magic number: stopWatch.ElapsedMilliseconds < 10 * 1000
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostPoolBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostPoolBenchmarks.cs,Test_Blocking_and_NonBlocking_messages_throughput,The following statement contains a magic number: stopWatch.ElapsedMilliseconds < 10 * 1000
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostBenchmarks.cs,CreateMqHost,The following statement contains a magic number: return CreateMqHost(2);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostBenchmarks.cs,Can_receive_and_process_same_reply_responses,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking,The following statement contains a magic number: mqHost.RegisterHandler<IncrBlocking>(m =>              {                  called++;                  mqHost.CreateMessageQueueClient().Publish(new IncrBlocking { Value = m.GetBody().Value + 1 });                  Thread.Sleep(100);                  return null;              });
Magic Number,NServiceKit.Redis.Tests.Benchmarks,RedisMqHostBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\RedisMqHostBenchmarks.cs,Can_receive_and_process_same_reply_responses_blocking,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests.Benchmarks,DoubleSerializationBenchmarks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Benchmarks\DoubleSerializationBenchmarks.cs,Compare_double_serializers,The following statement contains a magic number: var initalVal = 0.3333333333333333d;
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestExtra,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestExtra.cs,Can_Remove_value_from_IList,The following statement contains a magic number: var equalItem = new CustomType() { CustomId = 4 };
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientTests.cs,Can_Expire,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientTests.cs,Can_ExpireAt,The following statement contains a magic number: var in2Secs = DateTime.Now.AddSeconds(2);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientTests.cs,Can_ExpireAt,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: redisQuestions.Db = 10;
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>            	{            		Answer.Create(1' question1.Id)'            		Answer.Create(2' question1.Id)'            		Answer.Create(3' question1.Id)'            		Answer.Create(4' question1.Id)'            		Answer.Create(5' question1.Id)'            	};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>            	{            		Answer.Create(1' question1.Id)'            		Answer.Create(2' question1.Id)'            		Answer.Create(3' question1.Id)'            		Answer.Create(4' question1.Id)'            		Answer.Create(5' question1.Id)'            	};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>            	{            		Answer.Create(1' question1.Id)'            		Answer.Create(2' question1.Id)'            		Answer.Create(3' question1.Id)'            		Answer.Create(4' question1.Id)'            		Answer.Create(5' question1.Id)'            	};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>            	{            		Answer.Create(1' question1.Id)'            		Answer.Create(2' question1.Id)'            		Answer.Create(3' question1.Id)'            		Answer.Create(4' question1.Id)'            		Answer.Create(5' question1.Id)'            	};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Can_DeleteRelatedEntity,The following statement contains a magic number: var answerToDelete = q1Answers[3];
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Can_GetLatestFromRecentsList,The following statement contains a magic number: var latest3Answers = redisAnswers.GetLatestFromRecentsList(0' 3);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedClientAppTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Can_GetEarliestFromRecentsList,The following statement contains a magic number: var earliest3Answers = redisAnswers.GetEarliestFromRecentsList(0' 3);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSet(typedSet' modelFactory.CreateInstance(3)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.SetContainsItem(typedSet' modelFactory.CreateInstance(3))' b => containsItem = b);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(4)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(5)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(6)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<int> { 1' 2 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedList.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(typedSet.GetAll()' Is.EquivalentTo(new List<Shipper>     				{     					modelFactory.CreateInstance(3)     				}));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.GetItemFromList(typedList' 4)' x => item4 = x);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>          		{  	        		modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedPipelineTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>          		{  	        		modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_3_Times_in_transaction,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSet(typedSet' modelFactory.CreateInstance(3)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.SetContainsItem(typedSet' modelFactory.CreateInstance(3))' b => containsItem = b);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(4)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(5)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(6)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<int> { 1' 2 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedList.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(typedSet.GetAll()' Is.EquivalentTo(new List<Shipper>     				{     					modelFactory.CreateInstance(3)     				}));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>          		{  	        		modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.GetItemFromList(typedList' 4)' x => item4 = x);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>          		{  	        		modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>          		{  	        		modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)          		});
Magic Number,NServiceKit.Redis.Tests.Generic,RedisTypedTransactionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_operation_not_supported_on_older_servers_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => ((RedisNativeClient)r).SetEx("key"' 5' temp));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetItemFromList,The following statement contains a magic number: var storeMember3 = storeMembers[2];
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetItemFromList,The following statement contains a magic number: var item3 = redis.GetItemFromList(List' 2);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_SetItemInList,The following statement contains a magic number: storeMembers[2] = Factory.NonExistingValue;
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_SetItemInList,The following statement contains a magic number: redis.SetItemInList(List' 2' Factory.NonExistingValue);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_enumerate_large_list,The following statement contains a magic number: const int listSize = 2500;
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: storeMembers.RemoveAt(2);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: List.RemoveAt(2);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetRangeFromList,The following statement contains a magic number: var range = List.GetRange(1' 3);
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientListTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetRangeFromList,The following statement contains a magic number: var expected = storeMembers.Skip(1).Take(3).ToList();
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: storeMembers2.Insert(0' Factory.CreateInstance(4));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {  				Factory.CreateInstance(1)'  				Factory.CreateInstance(5)'  				Factory.CreateInstance(7)'  				Factory.CreateInstance(11)'  			};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {  				Factory.CreateInstance(1)'  				Factory.CreateInstance(5)'  				Factory.CreateInstance(7)'  				Factory.CreateInstance(11)'  			};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {  				Factory.CreateInstance(1)'  				Factory.CreateInstance(5)'  				Factory.CreateInstance(7)'  				Factory.CreateInstance(11)'  			};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: Assert.That(diffMembers' Is.EquivalentTo(  				new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: Assert.That(diffMembers' Is.EquivalentTo(  				new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: storeMembers2.Insert(0' Factory.CreateInstance(4));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {  				Factory.CreateInstance(1)'  				Factory.CreateInstance(5)'  				Factory.CreateInstance(7)'  				Factory.CreateInstance(11)'  			};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {  				Factory.CreateInstance(1)'  				Factory.CreateInstance(5)'  				Factory.CreateInstance(7)'  				Factory.CreateInstance(11)'  			};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {  				Factory.CreateInstance(1)'  				Factory.CreateInstance(5)'  				Factory.CreateInstance(7)'  				Factory.CreateInstance(11)'  			};
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: Assert.That(storeSet' Is.EquivalentTo(  				new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: Assert.That(storeSet' Is.EquivalentTo(  				new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientSetTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_enumerate_large_ICollection_Set,The following statement contains a magic number: const int setSize = 2500;
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientTests.cs,Can_Set_and_Get_key_with_all_byte_values,The following statement contains a magic number: var value = new byte[256];
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientTests.cs,Can_SetBit_And_GetBit_And_BitCount,The following statement contains a magic number: const int offset = 100;
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientTests.cs,Can_Store_Complex_Entity_As_Hash,The following statement contains a magic number: var entity = new ComplexShipper()              {                  CompanyName = "Test Company"'                  Phone = "0123456789"'                  SomeIds = new List<long>() { 123' 456' 789 }'                  Addresses =                      new Dictionary<string' string>()                          {                              { "Home"' "1 Some Street' some town" }'                              { "Work"' "2 Office Street' City" }                          }              };
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientTests.cs,Can_Store_Complex_Entity_As_Hash,The following statement contains a magic number: var entity = new ComplexShipper()              {                  CompanyName = "Test Company"'                  Phone = "0123456789"'                  SomeIds = new List<long>() { 123' 456' 789 }'                  Addresses =                      new Dictionary<string' string>()                          {                              { "Home"' "1 Some Street' some town" }'                              { "Work"' "2 Office Street' City" }                          }              };
Magic Number,NServiceKit.Redis.Tests.Generic,RedisClientTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisClientTests.cs,Can_Store_Complex_Entity_As_Hash,The following statement contains a magic number: var entity = new ComplexShipper()              {                  CompanyName = "Test Company"'                  Phone = "0123456789"'                  SomeIds = new List<long>() { 123' 456' 789 }'                  Addresses =                      new Dictionary<string' string>()                          {                              { "Home"' "1 Some Street' some town" }'                              { "Work"' "2 Office Street' City" }                          }              };
Magic Number,NServiceKit.Redis.Tests.Generic,RedisPersistenceProviderTestsBase<T>,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Generic\RedisPersistenceProviderTestsBase.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var deleteIds = new[] { ids[1]' ids[3] };
Magic Number,NServiceKit.Redis.Tests.Examples,SimpleLocks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimpleLocks.cs,Use_multiple_redis_clients_to_safely_execute,The following statement contains a magic number: const int noOfClients = 5;
Magic Number,NServiceKit.Redis.Tests.Examples,SimpleLocks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimpleLocks.cs,Use_multiple_redis_clients_to_safely_execute,The following statement contains a magic number: var actionFn = (Action)delegate  				{  					var redisClient = new RedisClient(TestConfig.SingleHost);  					using (redisClient.AcquireLock("testlock"))  					{  						Debug.WriteLine(String.Format("client {0} acquired lock"' clientNo));  						var counter = redisClient.Get<int>("atomic-counter");    						//Add an artificial delay to demonstrate locking behaviour  						Thread.Sleep(100);    						redisClient.Set("atomic-counter"' counter + 1);  						Debug.WriteLine(String.Format("client {0} released lock"' clientNo));  					}  				};
Magic Number,NServiceKit.Redis.Tests.Examples,SimpleLocks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimpleLocks.cs,Acquiring_lock_with_timeout,The following statement contains a magic number: var waitFor = TimeSpan.FromSeconds(2);
Magic Number,NServiceKit.Redis.Tests.Examples,SimpleLocks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimpleLocks.cs,SimulateLockTimeout,The following statement contains a magic number: var waitFor = TimeSpan.FromMilliseconds(20);
Magic Number,NServiceKit.Redis.Tests.Examples,SimpleLocks,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimpleLocks.cs,SimulateLockTimeout,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,NServiceKit.Redis.Tests.Examples,SimplePubSub,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimplePubSub.cs,Publish_and_receive_5_messages,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>  				{  					Thread.Sleep(200);  					Debug.WriteLine("Begin publishing messages...");    					using (var redisPublisher = new RedisClient(TestConfig.SingleHost))  					{  						for (var i = 1; i <= PublishMessageCount; i++)  						{  							var message = MessagePrefix + i;  							Debug.WriteLine(String.Format("Publishing '{0}' to '{1}'"' message' ChannelName));  							redisPublisher.PublishMessage(ChannelName' message);  						}  					}  				});
Magic Number,NServiceKit.Redis.Tests.Examples,SimplePubSub,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimplePubSub.cs,Publish_5_messages_to_3_clients,The following statement contains a magic number: const int noOfClients = 3;
Magic Number,NServiceKit.Redis.Tests.Examples,SimplePubSub,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimplePubSub.cs,Publish_5_messages_to_3_clients,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,NServiceKit.Redis.Tests.Examples,SimplePubSub,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\SimplePubSub.cs,Publish_5_messages_to_3_clients,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,NServiceKit.Redis.Tests.Examples,BlogPostExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BlogPostExample.cs,Show_a_list_of_recent_posts_and_comments,The following statement contains a magic number: recentPosts.Trim(0' 2);
Magic Number,NServiceKit.Redis.Tests.Examples,BlogPostExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BlogPostExample.cs,Show_a_list_of_recent_posts_and_comments,The following statement contains a magic number: recentComments.Trim(0' 2);
Magic Number,NServiceKit.Redis.Tests.Examples,BlogPostExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BlogPostExample.cs,Show_a_TagCloud,The following statement contains a magic number: var tagCloud = redisClient.GetRangeWithScoresFromSortedSetDesc("urn:TagCloud"' 0' 4);
Magic Number,NServiceKit.Redis.Tests.Issues,PooledRedisClientManagerIssues,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Stuff,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,NServiceKit.Redis.Tests.Issues,PooledRedisClientManagerIssues,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Issue37_Cannot_add_unknown_client_back_to_pool_exception,The following statement contains a magic number: var threads = new Thread[100];
Magic Number,NServiceKit.Redis.Tests.Issues,PooledRedisClientManagerIssues,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Issue37_Cannot_add_unknown_client_back_to_pool_exception,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,NServiceKit.Redis.Tests.Issues,PooledRedisClientManagerIssues,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Issue37_Cannot_add_unknown_client_back_to_pool_exception,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,NServiceKit.Redis.Tests.Issues,TransactionIssueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\TransactionIssueTests.cs,Can_Get_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: 5.Times(x => Redis.Set("foo" + x' x));
Magic Number,NServiceKit.Redis.Tests.Issues,TransactionIssueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\TransactionIssueTests.cs,Can_Get_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(keys' Has.Count.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests.Issues,TransactionIssueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\TransactionIssueTests.cs,Can_Get_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(dict' Has.Count.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests.Issues,TransactionIssueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\TransactionIssueTests.cs,Can_GetValues_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: 5.Times(x => Redis.Set("foo" + x' x));
Magic Number,NServiceKit.Redis.Tests.Issues,TransactionIssueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\TransactionIssueTests.cs,Can_GetValues_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(keys' Has.Count.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests.Issues,TransactionIssueTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Issues\TransactionIssueTests.cs,Can_GetValues_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(values' Has.Count.EqualTo(5));
Magic Number,NServiceKit.Redis.Tests.Examples.BestPractice,BlogRepository,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,StoreNewBlogPosts,The following statement contains a magic number: recentPosts.Trim(0' 4);
Magic Number,NServiceKit.Redis.Tests.Examples.BestPractice,BlogRepository,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,StoreNewBlogPosts,The following statement contains a magic number: recentComments.Trim(0' 4);
Magic Number,NServiceKit.Redis.Tests.Examples.BestPractice,BlogPostBestPractice,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,Show_a_TagCloud,The following statement contains a magic number: var tagCloud = repository.GetTopTags(5);
Magic Number,NServiceKit.Redis.Tests.Integration,IntegrationTestBase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\IntegrationTestBase.cs,RunSimultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,NServiceKit.Redis.Tests.Integration,IntegrationTestBase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\IntegrationTestBase.cs,RunSimultaneously,The following statement contains a magic number: Debug.WriteLine(String.Format("Time Taken: {0}"' (Stopwatch.GetTimestamp() - before) / 1000));
Magic Number,NServiceKit.Redis.Tests.Integration,IntegrationTestBase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\IntegrationTestBase.cs,CheckHostCountMap,The following statement contains a magic number: entry.Value < 5
Magic Number,NServiceKit.Redis.Tests.Integration,IntegrationTestBase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\IntegrationTestBase.cs,CheckHostCountMap,The following statement contains a magic number: entry.Value > 60
Magic Number,NServiceKit.Redis.Tests.Integration,IntegrationTestBase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\IntegrationTestBase.cs,CheckHostCountMap,The following statement contains a magic number: hostCount != 64
Magic Number,NServiceKit.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,NServiceKit.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: Debug.WriteLine(String.Format("Time Taken: {0}"' (Stopwatch.GetTimestamp() - before) / 1000));
Magic Number,NServiceKit.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_sequentially,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,NServiceKit.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_sequentially,The following statement contains a magic number: Debug.WriteLine(String.Format("Time Taken: {0}"' (Stopwatch.GetTimestamp() - before) / 1000));
Magic Number,NServiceKit.Redis.Tests.Integration,RedisRegressionTestRun,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\RedisRegressionTestRun.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,NServiceKit.Redis.Tests.Integration,RedisRegressionTestRun,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\RedisRegressionTestRun.cs,Can_run_series_of_operations_sequentially,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,NServiceKit.Redis.Tests.Integration,RedisRegressionTestRun,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Integration\RedisRegressionTestRun.cs,UseClient,The following statement contains a magic number: var differentDbs = new[] { 1' 0' 2 };
Magic Number,NServiceKit.Redis.Tests.Support,TcpClientExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: var connection = new TcpClientWithTimeout(  				"www.google.com"' 80' TimeSpan.FromSeconds(5)).Connect();
Magic Number,NServiceKit.Redis.Tests.Support,TcpClientExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: var connection = new TcpClientWithTimeout(  				"www.google.com"' 80' TimeSpan.FromSeconds(5)).Connect();
Magic Number,NServiceKit.Redis.Tests.Support,TcpClientExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: var readbuf = new byte[10];
Magic Number,NServiceKit.Redis.Tests.Support,TcpClientExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: stream.ReadTimeout = 10000;
Magic Number,NServiceKit.Redis.Tests.Support,TcpClientExample,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.Redis\tests\NServiceKit.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: stream.Read(readbuf' 0' 10);
