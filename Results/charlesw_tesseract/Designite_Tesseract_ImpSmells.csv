Implementation smell,Namespace,Class,File,Method,Description
Complex Method,InteropDotNet,InteropRuntimeImplementer,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\InteropRuntimeImplementer.cs,ImplementConstructor,Cyclomatic complexity of the method is 8
Long Parameter List,Tesseract,TesseractEngine,C:\repos\charlesw_tesseract\src\Tesseract\TesseractEngine.cs,TesseractEngine,The method has 6 parameters. Parameters: datapath' language' engineMode' configFiles' initialOptions' setOnlyNonDebugVariables
Long Parameter List,Tesseract,TesseractEngine,C:\repos\charlesw_tesseract\src\Tesseract\TesseractEngine.cs,Initialise,The method has 6 parameters. Parameters: datapath' language' engineMode' configFiles' initialValues' setOnlyNonDebugVariables
Long Parameter List,Tesseract,Page,C:\repos\charlesw_tesseract\src\Tesseract\Page.cs,Page,The method has 5 parameters. Parameters: engine' image' imageName' regionOfInterest' pageSegmentMode
Long Parameter List,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeOtsuAdaptiveThreshold,The method has 5 parameters. Parameters: sx' sy' smoothx' smoothy' scorefract
Long Parameter List,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,Rotate,The method has 5 parameters. Parameters: angle' method' fillColor' width' height
Long Parameter List,InteropDotNet,InteropRuntimeImplementer,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\InteropRuntimeImplementer.cs,DefineMethod,The method has 5 parameters. Parameters: typeBuilder' name' attributes' returnType' infoArray
Long Parameter List,Tesseract.Interop,ITessApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,BaseApiInit,The method has 10 parameters. Parameters: handle' datapath' language' mode' configs' configs_size' vars_vec' vars_values' vars_vec_size' set_only_non_debug_params
Long Parameter List,Tesseract.Interop,ITessApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,BaseApiSetRectangle,The method has 5 parameters. Parameters: handle' left' top' width' height
Long Parameter List,Tesseract.Interop,ITessApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,PageIteratorBaseline,The method has 6 parameters. Parameters: handle' level' x1' y1' x2' y2
Long Parameter List,Tesseract.Interop,ITessApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,PageIteratorBoundingBox,The method has 6 parameters. Parameters: handle' level' left' top' right' bottom
Long Parameter List,Tesseract.Interop,ITessApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,PageIteratorGetImage,The method has 6 parameters. Parameters: handle' level' padding' originalImage' left' top
Long Parameter List,Tesseract.Interop,ITessApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,PageIteratorOrientation,The method has 5 parameters. Parameters: handle' orientation' writing_direction' textLineOrder' deskew_angle
Long Parameter List,Tesseract.Interop,TessApi,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,BaseApiInit,The method has 7 parameters. Parameters: handle' datapath' language' mode' configFiles' initialValues' setOnlyNonDebugParams
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixDeskewGeneral,The method has 8 parameters. Parameters: pix' redSweep' sweepRange' sweepDelta' redSearch' thresh' pAngle' pConf
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixRotate,The method has 6 parameters. Parameters: pixs' angle' type' fillColor' width' heigh
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixOtsuAdaptiveThreshold,The method has 8 parameters. Parameters: pix' sx' sy' smoothx' smoothy' scorefract' ppixth' ppixd
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixSauvolaBinarize,The method has 8 parameters. Parameters: pix' whsize' factor' addborder' ppixm' ppixsd' ppixth' ppixd
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixSauvolaBinarizeTiled,The method has 7 parameters. Parameters: pix' whsize' factor' nx' ny' ppixth' ppixd
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapAddNewColor,The method has 5 parameters. Parameters: cmap' redValue' greenValue' blueValue' colorIndex
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapAddNearestColor,The method has 5 parameters. Parameters: cmap' redValue' greenValue' blueValue' colorIndex
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapUsableColor,The method has 5 parameters. Parameters: cmap' redValue' greenValue' blueValue' usable
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapGetColor,The method has 5 parameters. Parameters: cmap' index' redValue' blueValue' greenValue
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapResetColor,The method has 5 parameters. Parameters: cmap' index' redValue' blueValue' greenValue
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapGetIndex,The method has 5 parameters. Parameters: cmap' redValue' blueValue' greenValue' index
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapGetNearestIndex,The method has 5 parameters. Parameters: cmap' rVal' bVal' gVal' index
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapGetExtremeValue,The method has 5 parameters. Parameters: cmap' type' rVal' gVal' bVal
Long Parameter List,Tesseract.Interop,ILeptonicaApiSignatures,C:\repos\charlesw_tesseract\src\Tesseract\Interop\LeptonicaApi.cs,pixcmapSerializeToMemory,The method has 5 parameters. Parameters: cmap' components' colorCount' colorData' colorDataLength
Long Statement,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The length of the statement  "                default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap"); " is 138.
Long Statement,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataQBit,The length of the statement  "            *wordPtr &= (byte)~(0xF0 >> (4 * (index & 1))); // clears qbit located at index' note like bit the qbit corresponding to the first pixel is the most significant (0xF0) " is 167.
Long Statement,Tesseract,PixArray,C:\repos\charlesw_tesseract\src\Tesseract\PixArray.cs,GetPix,The length of the statement  "			Guard.Require("accessType"' accessType == PixArrayAccessType.Clone || accessType == PixArrayAccessType.Copy' "Access type must be either copy or clone but was {0}."' accessType); " is 178.
Long Statement,Tesseract,TesseractEngine,C:\repos\charlesw_tesseract\src\Tesseract\TesseractEngine.cs,Process,The length of the statement  "            if (processCount > 0) throw new InvalidOperationException("Only one image can be processed at once. Please make sure you dispose of the page once your finished with it."); " is 171.
Long Statement,Tesseract,TesseractEngine,C:\repos\charlesw_tesseract\src\Tesseract\TesseractEngine.cs,GetTessDataPrefix,The length of the statement  "                trace.TraceEvent(TraceEventType.Error' 0' "Failed to detect if the environment variable 'TESSDATA_PREFIX' is set: {0}"' e.Message); " is 131.
Long Statement,Tesseract,TesseractEngine,C:\repos\charlesw_tesseract\src\Tesseract\TesseractEngine.cs,Initialise,The length of the statement  "            // do some minor processing on datapath to fix some common errors (this basically mirrors what tesseract does as of 3.04) " is 121.
Long Statement,Tesseract,TesseractEngine,C:\repos\charlesw_tesseract\src\Tesseract\TesseractEngine.cs,Initialise,The length of the statement  "            if (Interop.TessApi.BaseApiInit(handle' datapath' language' (int)engineMode' configFiles ?? new List<string>()' initialValues ?? new Dictionary<string' object>()' setOnlyNonDebugVariables) != 0) { " is 196.
Long Statement,Tesseract,Page,C:\repos\charlesw_tesseract\src\Tesseract\Page.cs,AnalyseLayout,The length of the statement  "            Guard.Verify(PageSegmentMode != PageSegMode.OsdOnly' "Cannot analyse image layout when using OSD only page segmentation' please use DetectBestOrientation instead."); " is 165.
Long Statement,Tesseract,Page,C:\repos\charlesw_tesseract\src\Tesseract\Page.cs,Recognize,The length of the statement  "            Guard.Verify(PageSegmentMode != PageSegMode.OsdOnly' "Cannot OCR image when using OSD only page segmentation' please use DetectBestOrientation instead."); " is 154.
Long Statement,Tesseract,Page,C:\repos\charlesw_tesseract\src\Tesseract\Page.cs,Recognize,The length of the statement  "                            trace.TraceEvent(TraceEventType.Error' 2' "Failed to save the thresholded image to '{0}'.\nError: {1}"' filePath' error.Message); " is 129.
Long Statement,Tesseract,PageIterator,C:\repos\charlesw_tesseract\src\Tesseract\PageIterator.cs,GetImage,The length of the statement  "            return Pix.Create(Interop.TessApi.Native.PageIteratorGetImage(handle' level' padding' page.Image.Handle' out x' out y)); " is 120.
Long Statement,Tesseract,PageIterator,C:\repos\charlesw_tesseract\src\Tesseract\PageIterator.cs,TryGetBoundingBox,The length of the statement  "            if (handle.Handle != IntPtr.Zero && Interop.TessApi.Native.PageIteratorBoundingBox(handle' level' out x1' out y1' out x2' out y2) != 0) " is 135.
Long Statement,Tesseract,PageIterator,C:\repos\charlesw_tesseract\src\Tesseract\PageIterator.cs,TryGetBaseline,The length of the statement  "            if (handle.Handle != IntPtr.Zero && Interop.TessApi.Native.PageIteratorBaseline(handle' level' out x1' out y1' out x2' out y2) != 0) " is 132.
Long Statement,Tesseract,PageIterator,C:\repos\charlesw_tesseract\src\Tesseract\PageIterator.cs,GetProperties,The length of the statement  "            Interop.TessApi.Native.PageIteratorOrientation(handle' out orientation' out writing_direction' out textLineOrder' out deskew_angle); " is 132.
Long Statement,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,Create,The length of the statement  "            if (handle == IntPtr.Zero) throw new InvalidOperationException("Failed to create pix' this normally occurs because the requested image size is too large' please check Standard Error Output."); " is 192.
Long Statement,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeOtsuAdaptiveThreshold,The length of the statement  "            int result = Interop.LeptonicaApi.Native.pixOtsuAdaptiveThreshold(handle' sx' sy' smoothx' smoothy' scorefract' out ppixth' out ppixd); " is 135.
Long Statement,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The length of the statement  "            Guard.Require("whsize"' whsize < maxWhSize' "The window half-width (whsize) must be less than {0} for this image."' maxWhSize); " is 127.
Long Statement,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The length of the statement  "            int result = Interop.LeptonicaApi.Native.pixSauvolaBinarize(handle' whsize' factor' addborder ? 1 : 0' out ppixm' out ppixsd' out ppixth' out ppixd); " is 149.
Long Statement,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The length of the statement  "            Guard.Require("whsize"' whsize < maxWhSize' "The window half-width (whsize) must be less than {0} for this image."' maxWhSize); " is 127.
Long Statement,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The length of the statement  "            int result = Interop.LeptonicaApi.Native.pixSauvolaBinarizeTiled(handle' whsize' factor' nx' ny' out ppixth' out ppixd); " is 120.
Long Statement,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,Deskew,The length of the statement  "            var resultPixHandle = Interop.LeptonicaApi.Native.pixDeskewGeneral(handle' sweep.Reduction' sweep.Range' sweep.Delta' redSearch' thresh' out pAngle' out pConf); " is 160.
Long Statement,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataByte,The length of the statement  "			// Must do direct size comparison to detect x64 process' since in this will be jited out and results in a lot faster code (e.g. 6x faster for image conversion) " is 159.
Long Statement,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataByte,The length of the statement  "			// Must do direct size comparison to detect x64 process' since in this will be jited out and results in a lot faster code (e.g. 6x faster for image conversion) " is 159.
Long Statement,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataTwoByte,The length of the statement  "			// Must do direct size comparison to detect x64 process' since in this will be jited out and results in a lot faster code (e.g. 6x faster for image conversion) " is 159.
Long Statement,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataTwoByte,The length of the statement  "			// Must do direct size comparison to detect x64 process' since in this will be jited out and results in a lot faster code (e.g. 6x faster for image conversion) " is 159.
Long Statement,InteropDotNet,InteropRuntimeImplementer,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\InteropRuntimeImplementer.cs,CreateInstance,The length of the statement  "            var assemblyBuilder = Thread.GetDomain().DefineDynamicAssembly(new AssemblyName(assemblyName)' AssemblyBuilderAccess.Run); " is 122.
Long Statement,InteropDotNet,InteropRuntimeImplementer,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\InteropRuntimeImplementer.cs,BuildMethods,The length of the statement  "                    throw new Exception(string.Format("Method '{0}' of interface '{1}' should be marked with the RuntimeDllImport attribute"' " is 121.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\LibraryLoader.cs,LoadLibrary,The length of the statement  "                        throw new DllNotFoundException(string.Format("Failed to find library \"{0}\" for platform {1}."' fileName' platformName)); " is 122.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\LibraryLoader.cs,CheckCustomSearchPath,The length of the statement  "                LibraryLoaderTrace.TraceInformation("Checking custom search location '{0}' for '{1}' on platform {2}."' baseDirectory' fileName' platformName); " is 143.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\LibraryLoader.cs,CheckExecutingAssemblyDomain,The length of the statement  "            LibraryLoaderTrace.TraceInformation("Checking executing application domain location '{0}' for '{1}' on platform {2}."' baseDirectory' fileName' platformName); " is 158.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\LibraryLoader.cs,CheckCurrentAppDomain,The length of the statement  "            LibraryLoaderTrace.TraceInformation("Checking current application domain location '{0}' for '{1}' on platform {2}."' baseDirectory' fileName' platformName); " is 156.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\LibraryLoader.cs,CheckCurrentAppDomainBin,The length of the statement  "                LibraryLoaderTrace.TraceInformation("Checking current application domain's bin location '{0}' for '{1}' on platform {2}."' baseDirectory' fileName' platformName); " is 162.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\LibraryLoader.cs,CheckCurrentAppDomainBin,The length of the statement  "                LibraryLoaderTrace.TraceInformation("No bin directory exists under the current application domain's location' skipping."); " is 122.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\LibraryLoader.cs,CheckWorkingDirecotry,The length of the statement  "            LibraryLoaderTrace.TraceInformation("Checking working directory '{0}' for '{1}' on platform {2}."' baseDirectory' fileName' platformName); " is 138.
Long Statement,InteropDotNet,UnixLibraryLoaderLogic,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\UnixLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                    LibraryLoaderTrace.TraceInformation("Successfully loaded native library \"{0}\"' handle = {1}."' fileName' libraryHandle); " is 122.
Long Statement,InteropDotNet,UnixLibraryLoaderLogic,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\UnixLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to load native library \"{0}\".\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' fileName' lastError' e.ToString()); " is 201.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\WindowsLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                    LibraryLoaderTrace.TraceInformation("Successfully loaded native library \"{0}\"' handle = {1}."' fileName' libraryHandle); " is 122.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\WindowsLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to load native library \"{0}\".\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' fileName' lastError' e.ToString()); " is 201.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\WindowsLibraryLoaderLogic.cs,FreeLibrary,The length of the statement  "                    LibraryLoaderTrace.TraceError("Failed to free native library with handle {0}.\r\nCheck windows event log."' libraryHandle); " is 123.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\WindowsLibraryLoaderLogic.cs,FreeLibrary,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to free native library with handle {0}.\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' libraryHandle' lastError' e.ToString()); " is 214.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\WindowsLibraryLoaderLogic.cs,GetProcAddress,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to free native library with handle {0}.\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' libraryHandle' lastError' e.ToString()); " is 214.
Long Statement,Tesseract.Interop,OSResult,C:\repos\charlesw_tesseract\src\Tesseract\Interop\OSResult.cs,GetBestOrientation,The length of the statement  "                default: throw new InvalidOperationException("Best orientation must be between 0 and 3 but was " + _bestResult.OrientationId + "."); " is 132.
Long Statement,Tesseract.Interop,TessApi,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,BaseApiInit,The length of the statement  "            Guard.Require("handle"' handle.Handle != IntPtr.Zero' "Handle for BaseApi' created through BaseApiCreate is required."); " is 120.
Long Statement,Tesseract.Interop,TessApi,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,BaseApiInit,The length of the statement  "                Guard.Require("initialValues"' pair.Value != null' "Variable '{0}': The type '{1}' is not supported."' pair.Key' pair.Value.GetType()); " is 135.
Long Statement,Tesseract.Interop,TessApi,C:\repos\charlesw_tesseract\src\Tesseract\Interop\BaseApi.cs,ChoiceIteratorGetUTF8Text,The length of the statement  "            Guard.Require("choiceIteratorHandle"' choiceIteratorHandle.Handle != IntPtr.Zero' "ChoiceIterator Handle cannot be a null IntPtr and is required"); " is 147.
Complex Conditional,Tesseract,TesseractEngine,C:\repos\charlesw_tesseract\src\Tesseract\TesseractEngine.cs,Process,The conditional expression  "region.X1 < 0 || region.Y1 < 0 || region.X2 > image.Width || region.Y2 > image.Height"  is complex.
Complex Conditional,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,Create,The conditional expression  "!(depth == 1 || depth == 2 || depth == 4 || depth == 8)"  is complex.
Complex Conditional,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The conditional expression  "!(depth == 1 || depth == 2 || depth == 4 || depth == 8)"  is complex.
Complex Conditional,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The conditional expression  "!(depth == 1 || depth == 2 || depth == 4 || depth == 8)"  is complex.
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The following statement contains a magic number: switch (bitmap.PixelFormat) {                  case System.Drawing.Imaging.PixelFormat.Format1bppIndexed: return 1;                  case System.Drawing.Imaging.PixelFormat.Format4bppIndexed: return 4;                  case System.Drawing.Imaging.PixelFormat.Format8bppIndexed: return 8;                  case System.Drawing.Imaging.PixelFormat.Format16bppArgb1555:                    case System.Drawing.Imaging.PixelFormat.Format16bppGrayScale:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb555:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb565: return 16;                  case System.Drawing.Imaging.PixelFormat.Format24bppRgb: return 24;                  case System.Drawing.Imaging.PixelFormat.Format32bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppPArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppRgb: return 32;                  case System.Drawing.Imaging.PixelFormat.Format48bppRgb: return 48;                  case System.Drawing.Imaging.PixelFormat.Format64bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format64bppPArgb: return 64;                  default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap");              }
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The following statement contains a magic number: switch (bitmap.PixelFormat) {                  case System.Drawing.Imaging.PixelFormat.Format1bppIndexed: return 1;                  case System.Drawing.Imaging.PixelFormat.Format4bppIndexed: return 4;                  case System.Drawing.Imaging.PixelFormat.Format8bppIndexed: return 8;                  case System.Drawing.Imaging.PixelFormat.Format16bppArgb1555:                    case System.Drawing.Imaging.PixelFormat.Format16bppGrayScale:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb555:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb565: return 16;                  case System.Drawing.Imaging.PixelFormat.Format24bppRgb: return 24;                  case System.Drawing.Imaging.PixelFormat.Format32bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppPArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppRgb: return 32;                  case System.Drawing.Imaging.PixelFormat.Format48bppRgb: return 48;                  case System.Drawing.Imaging.PixelFormat.Format64bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format64bppPArgb: return 64;                  default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap");              }
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The following statement contains a magic number: switch (bitmap.PixelFormat) {                  case System.Drawing.Imaging.PixelFormat.Format1bppIndexed: return 1;                  case System.Drawing.Imaging.PixelFormat.Format4bppIndexed: return 4;                  case System.Drawing.Imaging.PixelFormat.Format8bppIndexed: return 8;                  case System.Drawing.Imaging.PixelFormat.Format16bppArgb1555:                    case System.Drawing.Imaging.PixelFormat.Format16bppGrayScale:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb555:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb565: return 16;                  case System.Drawing.Imaging.PixelFormat.Format24bppRgb: return 24;                  case System.Drawing.Imaging.PixelFormat.Format32bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppPArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppRgb: return 32;                  case System.Drawing.Imaging.PixelFormat.Format48bppRgb: return 48;                  case System.Drawing.Imaging.PixelFormat.Format64bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format64bppPArgb: return 64;                  default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap");              }
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The following statement contains a magic number: switch (bitmap.PixelFormat) {                  case System.Drawing.Imaging.PixelFormat.Format1bppIndexed: return 1;                  case System.Drawing.Imaging.PixelFormat.Format4bppIndexed: return 4;                  case System.Drawing.Imaging.PixelFormat.Format8bppIndexed: return 8;                  case System.Drawing.Imaging.PixelFormat.Format16bppArgb1555:                    case System.Drawing.Imaging.PixelFormat.Format16bppGrayScale:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb555:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb565: return 16;                  case System.Drawing.Imaging.PixelFormat.Format24bppRgb: return 24;                  case System.Drawing.Imaging.PixelFormat.Format32bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppPArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppRgb: return 32;                  case System.Drawing.Imaging.PixelFormat.Format48bppRgb: return 48;                  case System.Drawing.Imaging.PixelFormat.Format64bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format64bppPArgb: return 64;                  default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap");              }
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The following statement contains a magic number: switch (bitmap.PixelFormat) {                  case System.Drawing.Imaging.PixelFormat.Format1bppIndexed: return 1;                  case System.Drawing.Imaging.PixelFormat.Format4bppIndexed: return 4;                  case System.Drawing.Imaging.PixelFormat.Format8bppIndexed: return 8;                  case System.Drawing.Imaging.PixelFormat.Format16bppArgb1555:                    case System.Drawing.Imaging.PixelFormat.Format16bppGrayScale:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb555:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb565: return 16;                  case System.Drawing.Imaging.PixelFormat.Format24bppRgb: return 24;                  case System.Drawing.Imaging.PixelFormat.Format32bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppPArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppRgb: return 32;                  case System.Drawing.Imaging.PixelFormat.Format48bppRgb: return 48;                  case System.Drawing.Imaging.PixelFormat.Format64bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format64bppPArgb: return 64;                  default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap");              }
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The following statement contains a magic number: switch (bitmap.PixelFormat) {                  case System.Drawing.Imaging.PixelFormat.Format1bppIndexed: return 1;                  case System.Drawing.Imaging.PixelFormat.Format4bppIndexed: return 4;                  case System.Drawing.Imaging.PixelFormat.Format8bppIndexed: return 8;                  case System.Drawing.Imaging.PixelFormat.Format16bppArgb1555:                    case System.Drawing.Imaging.PixelFormat.Format16bppGrayScale:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb555:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb565: return 16;                  case System.Drawing.Imaging.PixelFormat.Format24bppRgb: return 24;                  case System.Drawing.Imaging.PixelFormat.Format32bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppPArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppRgb: return 32;                  case System.Drawing.Imaging.PixelFormat.Format48bppRgb: return 48;                  case System.Drawing.Imaging.PixelFormat.Format64bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format64bppPArgb: return 64;                  default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap");              }
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetBPP,The following statement contains a magic number: switch (bitmap.PixelFormat) {                  case System.Drawing.Imaging.PixelFormat.Format1bppIndexed: return 1;                  case System.Drawing.Imaging.PixelFormat.Format4bppIndexed: return 4;                  case System.Drawing.Imaging.PixelFormat.Format8bppIndexed: return 8;                  case System.Drawing.Imaging.PixelFormat.Format16bppArgb1555:                    case System.Drawing.Imaging.PixelFormat.Format16bppGrayScale:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb555:                  case System.Drawing.Imaging.PixelFormat.Format16bppRgb565: return 16;                  case System.Drawing.Imaging.PixelFormat.Format24bppRgb: return 24;                  case System.Drawing.Imaging.PixelFormat.Format32bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppPArgb:                  case System.Drawing.Imaging.PixelFormat.Format32bppRgb: return 32;                  case System.Drawing.Imaging.PixelFormat.Format48bppRgb: return 48;                  case System.Drawing.Imaging.PixelFormat.Format64bppArgb:                  case System.Drawing.Imaging.PixelFormat.Format64bppPArgb: return 64;                  default: throw new ArgumentException(String.Format("The bitmap's pixel format of {0} was not recognised."' bitmap.PixelFormat)' "bitmap");              }
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetDataBit,The following statement contains a magic number: return (byte)((*(data + (index >> 3)) >> (index & 0x7)) & 1);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataBit,The following statement contains a magic number: byte* wordPtr = data + (index >> 3);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataBit,The following statement contains a magic number: *wordPtr &= (byte)~(0x80 >> (index & 7));
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataBit,The following statement contains a magic number: *wordPtr |= (byte)((value & 1) << (7 - (index & 7)));
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataBit,The following statement contains a magic number: *wordPtr |= (byte)((value & 1) << (7 - (index & 7)));
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,GetDataQBit,The following statement contains a magic number: return (byte)((*(data + (index >> 1)) >> (4 * (index & 1))) & 0xF);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataQBit,The following statement contains a magic number: *wordPtr &= (byte)~(0xF0 >> (4 * (index & 1)));
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataQBit,The following statement contains a magic number: *wordPtr |= (byte)((value & 0x0F) << (4 - (4 * (index & 1))));
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,SetDataQBit,The following statement contains a magic number: *wordPtr |= (byte)((value & 0x0F) << (4 - (4 * (index & 1))));
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: var red = ((val & 0x7C00) >> 10);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: var green = ((val & 0x3E0) >> 5);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: var red = ((val & 0xF800) >> 11);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: var green = ((val & 0x7E0) >> 5);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertRgb565ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 2 | green >> 4) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  0xFF;
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: var alpha = ((val & 0x8000) >> 15);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: var red = ((val & 0x7C00) >> 10);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: var green = ((val & 0x3E0) >> 5);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,ConvertArgb1555ToRGBA,The following statement contains a magic number: return ((red << 3 | red >> 2) << 24) |                  ((green << 3 | green >> 2) << 16) |                  ((blue << 3 | blue >> 2) << 8) |                  ((alpha << 8) - alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,EncodeAsRGBA,The following statement contains a magic number: return (uint)((red << 24) |                  (green << 16) |                  (blue << 8) |                  alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,EncodeAsRGBA,The following statement contains a magic number: return (uint)((red << 24) |                  (green << 16) |                  (blue << 8) |                  alpha);
Magic Number,Tesseract,BitmapHelper,C:\repos\charlesw_tesseract\src\Tesseract\BitmapHelper.cs,EncodeAsRGBA,The following statement contains a magic number: return (uint)((red << 24) |                  (green << 16) |                  (blue << 8) |                  alpha);
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,GetPixDepth,The following statement contains a magic number: switch (pixelFormat) {                  case PixelFormat.Format1bppIndexed:                      return 1;                    case PixelFormat.Format8bppIndexed:                      return 8;                    case PixelFormat.Format32bppArgb:                  case PixelFormat.Format24bppRgb:                      return 32;                    default:                      throw new InvalidOperationException(String.Format("Source bitmap's pixel format {0} is not supported."' pixelFormat));              }
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,GetPixDepth,The following statement contains a magic number: switch (pixelFormat) {                  case PixelFormat.Format1bppIndexed:                      return 1;                    case PixelFormat.Format8bppIndexed:                      return 8;                    case PixelFormat.Format32bppArgb:                  case PixelFormat.Format24bppRgb:                      return 32;                    default:                      throw new InvalidOperationException(String.Format("Source bitmap's pixel format {0} is not supported."' pixelFormat));              }
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,TransferDataFormat1bppIndexed,The following statement contains a magic number: var width = imgData.Width / 8;
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,TransferDataFormat24bppRgb,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      byte* pixelPtr = imgLine + x * 3;                      byte blue = pixelPtr[0];                      byte green = pixelPtr[1];                      byte red = pixelPtr[2];                      PixData.SetDataFourByte(pixLine' x' BitmapHelper.EncodeAsRGBA(red' green' blue' 255));                  }              }
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,TransferDataFormat24bppRgb,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      byte* pixelPtr = imgLine + x * 3;                      byte blue = pixelPtr[0];                      byte green = pixelPtr[1];                      byte red = pixelPtr[2];                      PixData.SetDataFourByte(pixLine' x' BitmapHelper.EncodeAsRGBA(red' green' blue' 255));                  }              }
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,TransferDataFormat24bppRgb,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      byte* pixelPtr = imgLine + x * 3;                      byte blue = pixelPtr[0];                      byte green = pixelPtr[1];                      byte red = pixelPtr[2];                      PixData.SetDataFourByte(pixLine' x' BitmapHelper.EncodeAsRGBA(red' green' blue' 255));                  }              }
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,TransferDataFormat32bppArgb,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      byte* pixelPtr = imgLine + (x << 2);                      byte blue = *pixelPtr;                      byte green = *(pixelPtr + 1);                      byte red = *(pixelPtr + 2);                      byte alpha = *(pixelPtr + 3);                      PixData.SetDataFourByte(pixLine' x' BitmapHelper.EncodeAsRGBA(red' green' blue' alpha));                  }              }
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,TransferDataFormat32bppArgb,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      byte* pixelPtr = imgLine + (x << 2);                      byte blue = *pixelPtr;                      byte green = *(pixelPtr + 1);                      byte red = *(pixelPtr + 2);                      byte alpha = *(pixelPtr + 3);                      PixData.SetDataFourByte(pixLine' x' BitmapHelper.EncodeAsRGBA(red' green' blue' alpha));                  }              }
Magic Number,Tesseract,BitmapToPixConverter,C:\repos\charlesw_tesseract\src\Tesseract\BitmapToPixConverter.cs,TransferDataFormat32bppArgb,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      byte* pixelPtr = imgLine + (x << 2);                      byte blue = *pixelPtr;                      byte green = *(pixelPtr + 1);                      byte red = *(pixelPtr + 2);                      byte alpha = *(pixelPtr + 3);                      PixData.SetDataFourByte(pixLine' x' BitmapHelper.EncodeAsRGBA(red' green' blue' alpha));                  }              }
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,FromRgba,The following statement contains a magic number: return new PixColor(                 (byte)((value >> 24) & 0xFF)'                 (byte)((value >> 16) & 0xFF)'                 (byte)((value >> 8) & 0xFF)'                 (byte)(value & 0xFF));
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,FromRgba,The following statement contains a magic number: return new PixColor(                 (byte)((value >> 24) & 0xFF)'                 (byte)((value >> 16) & 0xFF)'                 (byte)((value >> 8) & 0xFF)'                 (byte)(value & 0xFF));
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,FromRgba,The following statement contains a magic number: return new PixColor(                 (byte)((value >> 24) & 0xFF)'                 (byte)((value >> 16) & 0xFF)'                 (byte)((value >> 8) & 0xFF)'                 (byte)(value & 0xFF));
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,FromRgb,The following statement contains a magic number: return new PixColor(                 (byte)((value >> 24) & 0xFF)'                 (byte)((value >> 16) & 0xFF)'                 (byte)((value >> 8) & 0xFF)'                 (byte)0xFF);
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,FromRgb,The following statement contains a magic number: return new PixColor(                 (byte)((value >> 24) & 0xFF)'                 (byte)((value >> 16) & 0xFF)'                 (byte)((value >> 8) & 0xFF)'                 (byte)0xFF);
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,FromRgb,The following statement contains a magic number: return new PixColor(                 (byte)((value >> 24) & 0xFF)'                 (byte)((value >> 16) & 0xFF)'                 (byte)((value >> 8) & 0xFF)'                 (byte)0xFF);
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,GetHashCode,The following statement contains a magic number: unchecked {  				hashCode += 1000000007 * red.GetHashCode();  				hashCode += 1000000009 * blue.GetHashCode();  				hashCode += 1000000021 * green.GetHashCode();  				hashCode += 1000000033 * alpha.GetHashCode();  			}
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,GetHashCode,The following statement contains a magic number: unchecked {  				hashCode += 1000000007 * red.GetHashCode();  				hashCode += 1000000009 * blue.GetHashCode();  				hashCode += 1000000021 * green.GetHashCode();  				hashCode += 1000000033 * alpha.GetHashCode();  			}
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,GetHashCode,The following statement contains a magic number: unchecked {  				hashCode += 1000000007 * red.GetHashCode();  				hashCode += 1000000009 * blue.GetHashCode();  				hashCode += 1000000021 * green.GetHashCode();  				hashCode += 1000000033 * alpha.GetHashCode();  			}
Magic Number,Tesseract,PixColor,C:\repos\charlesw_tesseract\src\Tesseract\PixColor.cs,GetHashCode,The following statement contains a magic number: unchecked {  				hashCode += 1000000007 * red.GetHashCode();  				hashCode += 1000000009 * blue.GetHashCode();  				hashCode += 1000000021 * green.GetHashCode();  				hashCode += 1000000033 * alpha.GetHashCode();  			}
Magic Number,Tesseract,Scew,C:\repos\charlesw_tesseract\src\Tesseract\Scew.cs,GetHashCode,The following statement contains a magic number: unchecked {                  hashCode += 1000000007 * angle.GetHashCode();                  hashCode += 1000000009 * confidence.GetHashCode();              }
Magic Number,Tesseract,Scew,C:\repos\charlesw_tesseract\src\Tesseract\Scew.cs,GetHashCode,The following statement contains a magic number: unchecked {                  hashCode += 1000000007 * angle.GetHashCode();                  hashCode += 1000000009 * confidence.GetHashCode();              }
Magic Number,Tesseract,Page,C:\repos\charlesw_tesseract\src\Tesseract\Page.cs,Recognize,The following statement contains a magic number: if (!runRecognitionPhase) {                  if (Interop.TessApi.Native.BaseApiRecognize(Engine.Handle' new HandleRef(this' IntPtr.Zero)) != 0) {                      throw new InvalidOperationException("Recognition of image failed.");                  }                    runRecognitionPhase = true;                    // now write out the thresholded image if required to do so                  bool tesseditWriteImages;                  if (Engine.TryGetBoolVariable("tessedit_write_images"' out tesseditWriteImages) && tesseditWriteImages) {                      using (Pix thresholdedImage = GetThresholdedImage()) {                          string filePath = Path.Combine(Environment.CurrentDirectory' "tessinput.tif");                          try {                              thresholdedImage.Save(filePath' ImageFormat.TiffG4);                              trace.TraceEvent(TraceEventType.Information' 2' "Successfully saved the thresholded image to '{0}'"' filePath);                          } catch (Exception error) {                              trace.TraceEvent(TraceEventType.Error' 2' "Failed to save the thresholded image to '{0}'.\nError: {1}"' filePath' error.Message);                          }                      }                  }              }
Magic Number,Tesseract,Page,C:\repos\charlesw_tesseract\src\Tesseract\Page.cs,Recognize,The following statement contains a magic number: if (!runRecognitionPhase) {                  if (Interop.TessApi.Native.BaseApiRecognize(Engine.Handle' new HandleRef(this' IntPtr.Zero)) != 0) {                      throw new InvalidOperationException("Recognition of image failed.");                  }                    runRecognitionPhase = true;                    // now write out the thresholded image if required to do so                  bool tesseditWriteImages;                  if (Engine.TryGetBoolVariable("tessedit_write_images"' out tesseditWriteImages) && tesseditWriteImages) {                      using (Pix thresholdedImage = GetThresholdedImage()) {                          string filePath = Path.Combine(Environment.CurrentDirectory' "tessinput.tif");                          try {                              thresholdedImage.Save(filePath' ImageFormat.TiffG4);                              trace.TraceEvent(TraceEventType.Information' 2' "Successfully saved the thresholded image to '{0}'"' filePath);                          } catch (Exception error) {                              trace.TraceEvent(TraceEventType.Error' 2' "Failed to save the thresholded image to '{0}'.\nError: {1}"' filePath' error.Message);                          }                      }                  }              }
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeOtsuAdaptiveThreshold,The following statement contains a magic number: Guard.Verify(Depth == 8' "Image must have a depth of 8 bits per pixel to be binerized using Otsu.");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeOtsuAdaptiveThreshold,The following statement contains a magic number: Guard.Require("sx"' sx >= 16' "The sx parameter must be greater than or equal to 16");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeOtsuAdaptiveThreshold,The following statement contains a magic number: Guard.Require("sy"' sy >= 16' "The sy parameter must be greater than or equal to 16");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The following statement contains a magic number: Guard.Verify(Depth == 8' "Source image must be 8bpp");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The following statement contains a magic number: Guard.Require("whsize"' whsize >= 2' "The window half-width (whsize) must be greater than 2.");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvola,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The following statement contains a magic number: Guard.Verify(Depth == 8' "Source image must be 8bpp");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The following statement contains a magic number: Guard.Require("whsize"' whsize >= 2' "The window half-width (whsize) must be greater than 2.");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,BinarizeSauvolaTiled,The following statement contains a magic number: int maxWhSize = Math.Min((Width - 3) / 2' (Height - 3) / 2);
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,ConvertRGBToGray,The following statement contains a magic number: Guard.Verify(Depth == 32' "The source image must have a depth of 32 (32 bpp).");
Magic Number,Tesseract,Pix,C:\repos\charlesw_tesseract\src\Tesseract\Pix.cs,Rotate,The following statement contains a magic number: var rotations = 2 * angle / Math.PI;
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,Create,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,Create,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,Create,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (levels < 2 || levels > (2 << depth))                  throw new ArgumentOutOfRangeException("levels"' "Depth must be 2 and 2^depth (inclusive).");
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (levels < 2 || levels > (2 << depth))                  throw new ArgumentOutOfRangeException("levels"' "Depth must be 2 and 2^depth (inclusive).");
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixColormap,C:\repos\charlesw_tesseract\src\Tesseract\PixColormap.cs,CreateLinear,The following statement contains a magic number: if (!(depth == 1 || depth == 2 || depth == 4 || depth == 8)) {                  throw new ArgumentOutOfRangeException("depth"' "Depth must be 1' 2' 4' or 8 bpp.");              }
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,EncodeAsRGBA,The following statement contains a magic number: return (uint)((red << 24) |                  (green << 16) |                  (blue << 8) |                  alpha);
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,EncodeAsRGBA,The following statement contains a magic number: return (uint)((red << 24) |                  (green << 16) |                  (blue << 8) |                  alpha);
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,EncodeAsRGBA,The following statement contains a magic number: return (uint)((red << 24) |                  (green << 16) |                  (blue << 8) |                  alpha);
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataBit,The following statement contains a magic number: return (*(data + ((index) >> 5)) >> (31 - ((index) & 31))) & 1;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataBit,The following statement contains a magic number: return (*(data + ((index) >> 5)) >> (31 - ((index) & 31))) & 1;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataBit,The following statement contains a magic number: return (*(data + ((index) >> 5)) >> (31 - ((index) & 31))) & 1;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataBit,The following statement contains a magic number: uint* wordPtr = data + ((index) >> 5);
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataBit,The following statement contains a magic number: *wordPtr &= ~(0x80000000 >> ((index) & 31));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataBit,The following statement contains a magic number: *wordPtr |= (value << (31 - ((index) & 31)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataBit,The following statement contains a magic number: *wordPtr |= (value << (31 - ((index) & 31)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataDIBit,The following statement contains a magic number: return (*(data + ((index) >> 4)) >> (2 * (15 - ((index) & 15)))) & 3;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataDIBit,The following statement contains a magic number: return (*(data + ((index) >> 4)) >> (2 * (15 - ((index) & 15)))) & 3;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataDIBit,The following statement contains a magic number: return (*(data + ((index) >> 4)) >> (2 * (15 - ((index) & 15)))) & 3;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataDIBit,The following statement contains a magic number: return (*(data + ((index) >> 4)) >> (2 * (15 - ((index) & 15)))) & 3;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataDIBit,The following statement contains a magic number: return (*(data + ((index) >> 4)) >> (2 * (15 - ((index) & 15)))) & 3;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataDIBit,The following statement contains a magic number: uint* wordPtr = data + ((index) >> 4);
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataDIBit,The following statement contains a magic number: *wordPtr &= ~(0xc0000000 >> (2 * ((index) & 15)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataDIBit,The following statement contains a magic number: *wordPtr &= ~(0xc0000000 >> (2 * ((index) & 15)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataDIBit,The following statement contains a magic number: *wordPtr |= (((value) & 3) << (30 - 2 * ((index) & 15)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataDIBit,The following statement contains a magic number: *wordPtr |= (((value) & 3) << (30 - 2 * ((index) & 15)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataDIBit,The following statement contains a magic number: *wordPtr |= (((value) & 3) << (30 - 2 * ((index) & 15)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataDIBit,The following statement contains a magic number: *wordPtr |= (((value) & 3) << (30 - 2 * ((index) & 15)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataQBit,The following statement contains a magic number: return (*(data + ((index) >> 3)) >> (4 * (7 - ((index) & 7)))) & 0xf;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataQBit,The following statement contains a magic number: return (*(data + ((index) >> 3)) >> (4 * (7 - ((index) & 7)))) & 0xf;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataQBit,The following statement contains a magic number: return (*(data + ((index) >> 3)) >> (4 * (7 - ((index) & 7)))) & 0xf;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataQBit,The following statement contains a magic number: return (*(data + ((index) >> 3)) >> (4 * (7 - ((index) & 7)))) & 0xf;
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataQBit,The following statement contains a magic number: uint* wordPtr = data + ((index) >> 3);
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataQBit,The following statement contains a magic number: *wordPtr &= ~(0xf0000000 >> (4 * ((index) & 7)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataQBit,The following statement contains a magic number: *wordPtr &= ~(0xf0000000 >> (4 * ((index) & 7)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataQBit,The following statement contains a magic number: *wordPtr |= (((value) & 15) << (28 - 4 * ((index) & 7)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataQBit,The following statement contains a magic number: *wordPtr |= (((value) & 15) << (28 - 4 * ((index) & 7)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataQBit,The following statement contains a magic number: *wordPtr |= (((value) & 15) << (28 - 4 * ((index) & 7)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataQBit,The following statement contains a magic number: *wordPtr |= (((value) & 15) << (28 - 4 * ((index) & 7)));
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataByte,The following statement contains a magic number: if(IntPtr.Size == 8) {          		return *((byte*)((ulong)((byte*)data + index) ^ 3));  			} else {              	return *((byte*)((uint)((byte*)data + index) ^ 3));  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataByte,The following statement contains a magic number: if(IntPtr.Size == 8) {          		return *((byte*)((ulong)((byte*)data + index) ^ 3));  			} else {              	return *((byte*)((uint)((byte*)data + index) ^ 3));  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataByte,The following statement contains a magic number: if(IntPtr.Size == 8) {          		return *((byte*)((ulong)((byte*)data + index) ^ 3));  			} else {              	return *((byte*)((uint)((byte*)data + index) ^ 3));  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataByte,The following statement contains a magic number: if(IntPtr.Size == 8) {  				*(byte*)((ulong)((byte*)data + index) ^ 3) = (byte)value;  			} else {  			 	*(byte*)((uint)((byte*)data + index) ^ 3) = (byte)value;  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataByte,The following statement contains a magic number: if(IntPtr.Size == 8) {  				*(byte*)((ulong)((byte*)data + index) ^ 3) = (byte)value;  			} else {  			 	*(byte*)((uint)((byte*)data + index) ^ 3) = (byte)value;  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataByte,The following statement contains a magic number: if(IntPtr.Size == 8) {  				*(byte*)((ulong)((byte*)data + index) ^ 3) = (byte)value;  			} else {  			 	*(byte*)((uint)((byte*)data + index) ^ 3) = (byte)value;  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataTwoByte,The following statement contains a magic number: if(IntPtr.Size == 8) {                  return *(ushort*)((ulong)((ushort*)data + index) ^ 2);  			} else {                  return *(ushort*)((uint)((ushort*)data + index) ^ 2);  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataTwoByte,The following statement contains a magic number: if(IntPtr.Size == 8) {                  return *(ushort*)((ulong)((ushort*)data + index) ^ 2);  			} else {                  return *(ushort*)((uint)((ushort*)data + index) ^ 2);  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,GetDataTwoByte,The following statement contains a magic number: if(IntPtr.Size == 8) {                  return *(ushort*)((ulong)((ushort*)data + index) ^ 2);  			} else {                  return *(ushort*)((uint)((ushort*)data + index) ^ 2);  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataTwoByte,The following statement contains a magic number: if(IntPtr.Size == 8) {      			*(ushort*)((ulong)((ushort*)data + index) ^ 2) = (ushort)value;  			} else {             		*(ushort*)((uint)((ushort*)data + index) ^ 2) = (ushort)value;  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataTwoByte,The following statement contains a magic number: if(IntPtr.Size == 8) {      			*(ushort*)((ulong)((ushort*)data + index) ^ 2) = (ushort)value;  			} else {             		*(ushort*)((uint)((ushort*)data + index) ^ 2) = (ushort)value;  			}
Magic Number,Tesseract,PixData,C:\repos\charlesw_tesseract\src\Tesseract\PixData.cs,SetDataTwoByte,The following statement contains a magic number: if(IntPtr.Size == 8) {      			*(ushort*)((ulong)((ushort*)data + index) ^ 2) = (ushort)value;  			} else {             		*(ushort*)((uint)((ushort*)data + index) ^ 2) = (ushort)value;  			}
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,Convert,The following statement contains a magic number: try {                  // TODO: Set X and Y resolution                    // transfer pixel data                  if ((pixelFormat & PixelFormat.Indexed) == PixelFormat.Indexed) {                      TransferPalette(pix' img);                  }                    // transfer data                  pixData = pix.GetData();                  imgData = img.LockBits(new Rectangle(0' 0' img.Width' img.Height)' ImageLockMode.WriteOnly' pixelFormat);                                    if (depth == 32) {                      TransferData32(pixData' imgData' includeAlpha ? 0 : 255);                  } else if (depth == 16) {                      TransferData16(pixData' imgData);                  } else if (depth == 8) {                      TransferData8(pixData' imgData);                  } else if (depth == 1) {                      TransferData1(pixData' imgData);                  }                  return img;              } catch (Exception) {                  img.Dispose();                  throw;              } finally {                  if (imgData != null) {                      img.UnlockBits(imgData);                  }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,Convert,The following statement contains a magic number: try {                  // TODO: Set X and Y resolution                    // transfer pixel data                  if ((pixelFormat & PixelFormat.Indexed) == PixelFormat.Indexed) {                      TransferPalette(pix' img);                  }                    // transfer data                  pixData = pix.GetData();                  imgData = img.LockBits(new Rectangle(0' 0' img.Width' img.Height)' ImageLockMode.WriteOnly' pixelFormat);                                    if (depth == 32) {                      TransferData32(pixData' imgData' includeAlpha ? 0 : 255);                  } else if (depth == 16) {                      TransferData16(pixData' imgData);                  } else if (depth == 8) {                      TransferData8(pixData' imgData);                  } else if (depth == 1) {                      TransferData1(pixData' imgData);                  }                  return img;              } catch (Exception) {                  img.Dispose();                  throw;              } finally {                  if (imgData != null) {                      img.UnlockBits(imgData);                  }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,Convert,The following statement contains a magic number: try {                  // TODO: Set X and Y resolution                    // transfer pixel data                  if ((pixelFormat & PixelFormat.Indexed) == PixelFormat.Indexed) {                      TransferPalette(pix' img);                  }                    // transfer data                  pixData = pix.GetData();                  imgData = img.LockBits(new Rectangle(0' 0' img.Width' img.Height)' ImageLockMode.WriteOnly' pixelFormat);                                    if (depth == 32) {                      TransferData32(pixData' imgData' includeAlpha ? 0 : 255);                  } else if (depth == 16) {                      TransferData16(pixData' imgData);                  } else if (depth == 8) {                      TransferData8(pixData' imgData);                  } else if (depth == 1) {                      TransferData1(pixData' imgData);                  }                  return img;              } catch (Exception) {                  img.Dispose();                  throw;              } finally {                  if (imgData != null) {                      img.UnlockBits(imgData);                  }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,Convert,The following statement contains a magic number: try {                  // TODO: Set X and Y resolution                    // transfer pixel data                  if ((pixelFormat & PixelFormat.Indexed) == PixelFormat.Indexed) {                      TransferPalette(pix' img);                  }                    // transfer data                  pixData = pix.GetData();                  imgData = img.LockBits(new Rectangle(0' 0' img.Width' img.Height)' ImageLockMode.WriteOnly' pixelFormat);                                    if (depth == 32) {                      TransferData32(pixData' imgData' includeAlpha ? 0 : 255);                  } else if (depth == 16) {                      TransferData16(pixData' imgData);                  } else if (depth == 8) {                      TransferData8(pixData' imgData);                  } else if (depth == 1) {                      TransferData1(pixData' imgData);                  }                  return img;              } catch (Exception) {                  img.Dispose();                  throw;              } finally {                  if (imgData != null) {                      img.UnlockBits(imgData);                  }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,TransferData32,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      var pixVal = PixColor.FromRgba(pixLine[x]);                        byte* pixelPtr = imgLine + (x << 2);                      pixelPtr[0] = pixVal.Blue;                      pixelPtr[1] = pixVal.Green;                      pixelPtr[2] = pixVal.Red;                      pixelPtr[3] = (byte)(alphaMask | pixVal.Alpha); // Allow user to include alpha or not                   }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,TransferData32,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      var pixVal = PixColor.FromRgba(pixLine[x]);                        byte* pixelPtr = imgLine + (x << 2);                      pixelPtr[0] = pixVal.Blue;                      pixelPtr[1] = pixVal.Green;                      pixelPtr[2] = pixVal.Red;                      pixelPtr[3] = (byte)(alphaMask | pixVal.Alpha); // Allow user to include alpha or not                   }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,TransferData32,The following statement contains a magic number: for (int y = 0; y < height; y++) {                  byte* imgLine = (byte*)imgData.Scan0 + (y * imgData.Stride);                  uint* pixLine = (uint*)pixData.Data + (y * pixData.WordsPerLine);                    for (int x = 0; x < width; x++) {                      var pixVal = PixColor.FromRgba(pixLine[x]);                        byte* pixelPtr = imgLine + (x << 2);                      pixelPtr[0] = pixVal.Blue;                      pixelPtr[1] = pixVal.Green;                      pixelPtr[2] = pixVal.Red;                      pixelPtr[3] = (byte)(alphaMask | pixVal.Alpha); // Allow user to include alpha or not                   }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,TransferData1,The following statement contains a magic number: var width = imgData.Width/8;
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,TransferPalette,The following statement contains a magic number: if (colormap != null && colormap.Count <= maxColors) {                  var colormapCount = colormap.Count;                  for (int i = 0; i < colormapCount; i++) {                      pallete.Entries[i] = (SD.Color)colormap[i];                  }              } else {                  for (int i = 0; i < maxColors; i++) {                      var value = (byte)(i * 255 / lastColor);                      pallete.Entries[i] = SD.Color.FromArgb(value' value' value);                  }              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,GetPixelFormat,The following statement contains a magic number: switch (pix.Depth) {                  case 1: return PixelFormat.Format1bppIndexed;                  //case 2: return PixelFormat.Format4bppIndexed;                  //case 4: return PixelFormat.Format4bppIndexed;                  case 8: return PixelFormat.Format8bppIndexed;                  case 16: return PixelFormat.Format16bppGrayScale;                  case 32: return PixelFormat.Format32bppArgb;                  default: throw new InvalidOperationException(String.Format("Pix depth {0} is not supported."' pix.Depth));              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,GetPixelFormat,The following statement contains a magic number: switch (pix.Depth) {                  case 1: return PixelFormat.Format1bppIndexed;                  //case 2: return PixelFormat.Format4bppIndexed;                  //case 4: return PixelFormat.Format4bppIndexed;                  case 8: return PixelFormat.Format8bppIndexed;                  case 16: return PixelFormat.Format16bppGrayScale;                  case 32: return PixelFormat.Format32bppArgb;                  default: throw new InvalidOperationException(String.Format("Pix depth {0} is not supported."' pix.Depth));              }
Magic Number,Tesseract,PixToBitmapConverter,C:\repos\charlesw_tesseract\src\Tesseract\PixToBitmapConverter.cs,GetPixelFormat,The following statement contains a magic number: switch (pix.Depth) {                  case 1: return PixelFormat.Format1bppIndexed;                  //case 2: return PixelFormat.Format4bppIndexed;                  //case 4: return PixelFormat.Format4bppIndexed;                  case 8: return PixelFormat.Format8bppIndexed;                  case 16: return PixelFormat.Format16bppGrayScale;                  case 32: return PixelFormat.Format32bppArgb;                  default: throw new InvalidOperationException(String.Format("Pix depth {0} is not supported."' pix.Depth));              }
Magic Number,Tesseract,Rect,C:\repos\charlesw_tesseract\src\Tesseract\Rect.cs,GetHashCode,The following statement contains a magic number: unchecked {                  hashCode += 1000000007 * x.GetHashCode();                  hashCode += 1000000009 * y.GetHashCode();                  hashCode += 1000000021 * width.GetHashCode();                  hashCode += 1000000033 * height.GetHashCode();              }
Magic Number,Tesseract,Rect,C:\repos\charlesw_tesseract\src\Tesseract\Rect.cs,GetHashCode,The following statement contains a magic number: unchecked {                  hashCode += 1000000007 * x.GetHashCode();                  hashCode += 1000000009 * y.GetHashCode();                  hashCode += 1000000021 * width.GetHashCode();                  hashCode += 1000000033 * height.GetHashCode();              }
Magic Number,Tesseract,Rect,C:\repos\charlesw_tesseract\src\Tesseract\Rect.cs,GetHashCode,The following statement contains a magic number: unchecked {                  hashCode += 1000000007 * x.GetHashCode();                  hashCode += 1000000009 * y.GetHashCode();                  hashCode += 1000000021 * width.GetHashCode();                  hashCode += 1000000033 * height.GetHashCode();              }
Magic Number,Tesseract,Rect,C:\repos\charlesw_tesseract\src\Tesseract\Rect.cs,GetHashCode,The following statement contains a magic number: unchecked {                  hashCode += 1000000007 * x.GetHashCode();                  hashCode += 1000000009 * y.GetHashCode();                  hashCode += 1000000021 * width.GetHashCode();                  hashCode += 1000000033 * height.GetHashCode();              }
Magic Number,InteropDotNet,InteropRuntimeImplementer,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\InteropRuntimeImplementer.cs,ImplementMethodDelegate,The following statement contains a magic number: ctorBuilder.DefineParameter(2' ParameterAttributes.HasDefault' "method");
Magic Number,InteropDotNet,InteropRuntimeImplementer,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\InteropRuntimeImplementer.cs,LdArg,The following statement contains a magic number: switch (index)              {                  case 0:                      ilGen.Emit(OpCodes.Ldarg_0);                      break;                  case 1:                      ilGen.Emit(OpCodes.Ldarg_1);                      break;                  case 2:                      ilGen.Emit(OpCodes.Ldarg_2);                      break;                  case 3:                      ilGen.Emit(OpCodes.Ldarg_3);                      break;                  default:                      ilGen.Emit(OpCodes.Ldarg' index);                      break;              }
Magic Number,InteropDotNet,InteropRuntimeImplementer,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\InteropRuntimeImplementer.cs,LdArg,The following statement contains a magic number: switch (index)              {                  case 0:                      ilGen.Emit(OpCodes.Ldarg_0);                      break;                  case 1:                      ilGen.Emit(OpCodes.Ldarg_1);                      break;                  case 2:                      ilGen.Emit(OpCodes.Ldarg_2);                      break;                  case 3:                      ilGen.Emit(OpCodes.Ldarg_3);                      break;                  default:                      ilGen.Emit(OpCodes.Ldarg' index);                      break;              }
Magic Number,InteropDotNet,SystemManager,C:\repos\charlesw_tesseract\src\Tesseract\InteropDotNet\SystemManager.cs,GetOperatingSystem,The following statement contains a magic number: switch (pid)              {                  case (int)PlatformID.Win32NT:                  case (int)PlatformID.Win32S:                  case (int)PlatformID.Win32Windows:                  case (int)PlatformID.WinCE:                      return OperatingSystem.Windows;                  case (int)PlatformID.Unix:                  case 128:                      return OperatingSystem.Unix;                  case (int)PlatformID.MacOSX:                      return OperatingSystem.MacOSX;                  default:                      return OperatingSystem.Unknown;              }
Magic Number,Tesseract.Interop,HostProcessInfo,C:\repos\charlesw_tesseract\src\Tesseract\Interop\HostProcessInfo.cs,HostProcessInfo,The following statement contains a magic number: Is64Bit = IntPtr.Size == 8;
Magic Number,Tesseract.Interop,OSResult,C:\repos\charlesw_tesseract\src\Tesseract\Interop\OSResult.cs,Init,The following statement contains a magic number: fixed (float* orientationsPtr = _orientations) {                  fixed (float* scriptsNAPtr = _scriptsNA) {                      for (int i = 0; i < 4; ++i) {                          for (int j = 0; j < kMaxNumberOfScripts; ++j) {                              scriptsNAPtr[i * kMaxNumberOfScripts + j] = 0f;                          }                          orientationsPtr[i] = 0f;                      }                  }              }
Magic Number,Tesseract.Interop,OSResult,C:\repos\charlesw_tesseract\src\Tesseract\Interop\OSResult.cs,GetBestOrientation,The following statement contains a magic number: switch (_bestResult.OrientationId) {                  case 0: orientation = Orientation.PageUp; break;                  case 1: orientation = Orientation.PageRight; break;                  case 2: orientation = Orientation.PageDown; break;                  case 3: orientation = Orientation.PageLeft; break;                  default: throw new InvalidOperationException("Best orientation must be between 0 and 3 but was " + _bestResult.OrientationId + ".");              }
Magic Number,Tesseract.Interop,OSResult,C:\repos\charlesw_tesseract\src\Tesseract\Interop\OSResult.cs,GetBestOrientation,The following statement contains a magic number: switch (_bestResult.OrientationId) {                  case 0: orientation = Orientation.PageUp; break;                  case 1: orientation = Orientation.PageRight; break;                  case 2: orientation = Orientation.PageDown; break;                  case 3: orientation = Orientation.PageLeft; break;                  default: throw new InvalidOperationException("Best orientation must be between 0 and 3 but was " + _bestResult.OrientationId + ".");              }
