Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tesseract.Tests.Leptonica.PixTests,DataAccessTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\PixTests\PixDataAccessTests.cs,CanReadAndWriteData,Cyclomatic complexity of the method is 9
Long Statement,Tesseract.Tests,AnalyseResultTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\AnalyseResultTests.cs,GetImage,The length of the statement  "                            var elementImgFilename = String.Format(@"AnalyseResult\GetImage\ResultIterator_Image_{0}_{1}_at_({2}'{3}).png"' level' padding' x' y); " is 134.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanParseText,The length of the statement  "                            "This is a lot of 12 point text to test the\ncor code and see if it works on all types\nof file format.\n\nThe quick brown dog jumped over the\nlazy fox. The quick brown dog jumped\nover the lazy fox. The quick brown dog\njumped over the lazy fox. The quick\nbrown dog jumped over the lazy fox.\n\n"; " is 300.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanProcessBitmap,The length of the statement  "                            "This is a lot of 12 point text to test the\ncor code and see if it works on all types\nof file format.\n\nThe quick brown dog jumped over the\nlazy fox. The quick brown dog jumped\nover the lazy fox. The quick brown dog\njumped over the lazy fox. The quick\nbrown dog jumped over the lazy fox.\n\n"; " is 300.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanProcessDifferentRegionsInSameImage,The length of the statement  "                            "The quick brown dog jumped over the\nlazy fox. The quick brown dog jumped\nover the lazy fox. The quick brown dog\njumped over the lazy fox. The quick\nbrown dog jumped over the lazy fox.\n\n"; " is 194.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanProcessMultiplePixs,The length of the statement  "                                "This is a lot of 12 point text to test the\ncor code and see if it works on all types\nof file format.\n\nThe quick brown dog jumped over the\nlazy fox. The quick brown dog jumped\nover the lazy fox. The quick brown dog\njumped over the lazy fox. The quick\nbrown dog jumped over the lazy fox.\n\n"; " is 300.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanProcessScaledBitmap,The length of the statement  "                                "This is a lot of 12 point text to test the\ncor code and see if it works on all types\nof file format.\n\nThe quick brown dog jumped over the\nlazy fox. The quick brown dog jumped\nover the lazy fox. The quick brown dog\njumped over the lazy fox. The quick\nbrown dog jumped over the lazy fox."; " is 296.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,Initialise_CanLoadConfigFile,The length of the statement  "                            "This is a Iot of 12 point text to test the\nocr code and see if it works on all types\nof file format.\n\nThe quick brown dog jumped over the\nlazy fox. The quick brown dog jumped\nover the lazy fox. The quick brown dog\njumped over the lazy fox. The quick\nbrown dog jumped over the lazy fox.\n\n"; " is 300.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,Initialise_CanPassInitVariables,The length of the statement  "            using (var engine = new TesseractEngine(DataPath' "eng"' EngineMode.Default' Enumerable.Empty<string>()' initVars' false)) { " is 124.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The length of the statement  "                                            output.AppendFormat(CultureInfo.InvariantCulture' "<block confidence=\"{0:P}\" bounds=\"{1}' {2}' {3}' {4}\">"' confidence' bounds.X1' bounds.Y1' bounds.X2' bounds.Y2); " is 168.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The length of the statement  "                                            output.AppendFormat(CultureInfo.InvariantCulture' "<para confidence=\"{0:P}\" bounds=\"{1}' {2}' {3}' {4}\">"' confidence' bounds.X1' bounds.Y1' bounds.X2' bounds.Y2); " is 167.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The length of the statement  "                                            output.AppendFormat(CultureInfo.InvariantCulture' "<line confidence=\"{0:P}\" bounds=\"{1}' {2}' {3}' {4}\">"' confidence' bounds.X1' bounds.Y1' bounds.X2' bounds.Y2); " is 167.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The length of the statement  "                                            output.AppendFormat(CultureInfo.InvariantCulture' "<word confidence=\"{0:P}\" bounds=\"{1}' {2}' {3}' {4}\">"' confidence' bounds.X1' bounds.Y1' bounds.X2' bounds.Y2); " is 167.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The length of the statement  "                                                output.AppendFormat(CultureInfo.InvariantCulture' "<symbol text=\"{0}\" confidence=\"{1:P}\">"' iter.GetText(PageIteratorLevel.Symbol)' symbolConfidence); " is 154.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The length of the statement  "                                                    output.AppendFormat(CultureInfo.InvariantCulture' "<choice text=\"{0}\" confidence\"{1:P}\"/>"' choiceIter.GetText()' choiceConfidence); " is 136.
Long Statement,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The length of the statement  "                                                output.AppendFormat(CultureInfo.InvariantCulture' "<symbol text=\"{0}\" confidence=\"{1:P}\"/>"' iter.GetText(PageIteratorLevel.Symbol)' symbolConfidence); " is 155.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoTextFile,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a Text file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 145.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoPdfFile,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a PDF file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 144.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoPdfFile1,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a PDF file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 144.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderMultiplePageDocumentToPdfFile,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a PDF file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 144.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderMultiplePageDocumentToPdfFile1,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a PDF file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 144.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoHOcrFile,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a HOCR file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 145.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoUnlvFile,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a Unlv file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 145.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoBoxFile,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a Box file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 144.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoMultipleOutputFormats,The length of the statement  "            List<RenderedFormat> formats = new List<RenderedFormat> { RenderedFormat.HOCR' RenderedFormat.PDF' RenderedFormat.TEXT }; " is 121.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoMultipleOutputFormats,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a PDF file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 144.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoMultipleOutputFormats,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a HOCR file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 145.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderResultsIntoMultipleOutputFormats,The length of the statement  "            Assert.That(File.Exists(expectedOutputFilename)' $"Expected a TEXT file \"{expectedOutputFilename}\" to have been created; but none was found."); " is 145.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderMultiplePageDocumentIntoMultipleResultRenderers,The length of the statement  "            using (var renderer = new AggregateResultRenderer(ResultRenderer.CreatePdfRenderer(resultPath' DataPath)' ResultRenderer.CreateTextRenderer(resultPath))) { " is 155.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderMultiplePageDocumentIntoMultipleResultRenderers,The length of the statement  "            Assert.That(File.Exists(expectedPdfOutputFilename)' $"Expected a PDF file \"{expectedPdfOutputFilename}\" to have been created; but non was found."); " is 149.
Long Statement,Tesseract.Tests,ResultRendererTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\ResultRendererTests.cs,CanRenderMultiplePageDocumentIntoMultipleResultRenderers,The length of the statement  "            Assert.That(File.Exists(expectedTxtOutputFilename)' $"Expected a Text file \"{expectedTxtOutputFilename}\" to have been created; but non was found."); " is 150.
Long Statement,Tesseract.Tests.Leptonica,ConvertBitmapToPixTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ConvertBitmapToPixTests.cs,AssertAreEquivalent,The length of the statement  "                        Assert.That(destPixel' Is.EqualTo(sourcePixel)' "Expected pixel at <{0}'{1}> to be same in both source and dest."' x' y); " is 121.
Long Statement,Tesseract.Tests.Leptonica,ConvertBitmapToPixTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ConvertBitmapToPixTests.cs,AssertAreEquivalent,The length of the statement  "                        Assert.That(destPixel' Is.EqualTo(sourcePixel).Using<PixColor>((c1' c2) => (c1.Red == c2.Red && c1.Blue == c2.Blue && c1.Green == c2.Green) ? 0 : 1)' "Expected pixel at <{0}'{1}> to be same in both source and dest."' x' y); " is 223.
Long Statement,Tesseract.Tests.Leptonica.PixTests,ImageManipulationTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\PixTests\ImageManipulationTests.cs,DescewTest,The length of the statement  "                using (var descewedImage = sourcePix.Deskew(new ScewSweep(range: 45)' Pix.DefaultBinarySearchReduction' Pix.DefaultBinaryThreshold' out scew)) " is 142.
Magic Number,Tesseract.Tests,AnalyseResultTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\AnalyseResultTests.cs,AnalyseLayout_RotatedImage,The following statement contains a magic number: angle == 180f
Magic Number,Tesseract.Tests,AnalyseResultTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\AnalyseResultTests.cs,CanDetectOrientationForMode,The following statement contains a magic number: Assert.That(orientation' Is.EqualTo(180));
Magic Number,Tesseract.Tests,AnalyseResultTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\AnalyseResultTests.cs,ExpectedOrientation,The following statement contains a magic number: rotation = rotation % 360f;
Magic Number,Tesseract.Tests,AnalyseResultTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\AnalyseResultTests.cs,ExpectedOrientation,The following statement contains a magic number: rotation = rotation < 0 ? rotation + 360 : rotation;
Magic Number,Tesseract.Tests,AnalyseResultTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\AnalyseResultTests.cs,ExpectedOrientation,The following statement contains a magic number: rotation >= 315 || rotation < 45
Magic Number,Tesseract.Tests,AnalyseResultTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\AnalyseResultTests.cs,ExpectedOrientation,The following statement contains a magic number: rotation >= 315 || rotation < 45
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanProcessDifferentRegionsInSameImage,The following statement contains a magic number: page.RegionOfInterest = Rect.FromCoords(0' 188' img.Width' img.Height);
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanGetSegmentedRegions,The following statement contains a magic number: int expectedCount = 8;
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,CanProcessMultiplePixs,The following statement contains a magic number: i < 3
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The following statement contains a magic number: var confidence = iter.GetConfidence(PageIteratorLevel.Block) / 100;
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The following statement contains a magic number: var confidence = iter.GetConfidence(PageIteratorLevel.Para) / 100;
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The following statement contains a magic number: var confidence = iter.GetConfidence(PageIteratorLevel.TextLine) / 100;
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The following statement contains a magic number: var confidence = iter.GetConfidence(PageIteratorLevel.Word) / 100;
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The following statement contains a magic number: var symbolConfidence = iter.GetConfidence(PageIteratorLevel.Symbol)/100;
Magic Number,Tesseract.Tests,EngineTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\EngineTests.cs,WriteResultsToString,The following statement contains a magic number: var choiceConfidence = choiceIter.GetConfidence()/100;
Magic Number,Tesseract.Tests.Leptonica,ColorTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ColorTests.cs,Color_CastColorToNetColor,The following statement contains a magic number: var color = new PixColor(100' 150' 200);
Magic Number,Tesseract.Tests.Leptonica,ColorTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ColorTests.cs,Color_CastColorToNetColor,The following statement contains a magic number: var color = new PixColor(100' 150' 200);
Magic Number,Tesseract.Tests.Leptonica,ColorTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ColorTests.cs,Color_CastColorToNetColor,The following statement contains a magic number: var color = new PixColor(100' 150' 200);
Magic Number,Tesseract.Tests.Leptonica,ConvertBitmapToPixTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ConvertBitmapToPixTests.cs,Convert_ScaledBitmapToPix,The following statement contains a magic number: Assert.That(BitmapHelper.GetBPP(scaledSource)' Is.EqualTo(32));
Magic Number,Tesseract.Tests.Leptonica,ConvertBitmapToPixTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ConvertBitmapToPixTests.cs,Convert_BitmapToPix,The following statement contains a magic number: depth < 16
Magic Number,Tesseract.Tests.Leptonica,ConvertBitmapToPixTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ConvertBitmapToPixTests.cs,Convert_BitmapToPix_Format8bppIndexed,The following statement contains a magic number: Assert.That(BitmapHelper.GetBPP(source)' Is.EqualTo(8));
Magic Number,Tesseract.Tests.Leptonica,ConvertBitmapToPixTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\ConvertBitmapToPixTests.cs,Convert_PixToBitmap,The following statement contains a magic number: bool hasPalette = depth < 16 && !isGrayscale;
Magic Number,Tesseract.Tests.Leptonica,LeptonicaPerformanceTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\LeptonicaPerformanceTests.cs,ConvertToBitmap,The following statement contains a magic number: const double BaseRunTime = 793.382;
Magic Number,Tesseract.Tests.Leptonica,LeptonicaPerformanceTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\LeptonicaPerformanceTests.cs,ConvertToBitmap,The following statement contains a magic number: const int Runs = 1000;
Magic Number,Tesseract.Tests.Leptonica,LeptonicaPerformanceTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\LeptonicaPerformanceTests.cs,ConvertToBitmap,The following statement contains a magic number: Assert.That(delta' Is.EqualTo(1.0).Within(0.25));
Magic Number,Tesseract.Tests.Leptonica.PixTests,ImageManipulationTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\PixTests\ImageManipulationTests.cs,DescewTest,The following statement contains a magic number: Assert.That(scew.Angle' Is.EqualTo(-9.953125F).Within(0.00001));
Magic Number,Tesseract.Tests.Leptonica.PixTests,ImageManipulationTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\PixTests\ImageManipulationTests.cs,DescewTest,The following statement contains a magic number: Assert.That(scew.Angle' Is.EqualTo(-9.953125F).Within(0.00001));
Magic Number,Tesseract.Tests.Leptonica.PixTests,ImageManipulationTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\PixTests\ImageManipulationTests.cs,DescewTest,The following statement contains a magic number: Assert.That(scew.Confidence' Is.EqualTo(3.782913F).Within(0.00001));
Magic Number,Tesseract.Tests.Leptonica.PixTests,ImageManipulationTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\PixTests\ImageManipulationTests.cs,DescewTest,The following statement contains a magic number: Assert.That(scew.Confidence' Is.EqualTo(3.782913F).Within(0.00001));
Magic Number,Tesseract.Tests.Leptonica.PixTests,ImageManipulationTests,D:\research\architectureSmells\repos\charlesw_tesseract\src\Tesseract.Tests\Leptonica\PixTests\ImageManipulationTests.cs,ConvertRGBToGrayTest,The following statement contains a magic number: Assert.That(grayscaleImage.Depth' Is.EqualTo(8));
