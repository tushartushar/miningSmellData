Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,NavigateErrorStatus,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\NavigateErrorStatus.cs,NavigateErrorStatus,The method has 200 lines of code.
Complex Method,Microsoft.IdentityModel.Clients.ActiveDirectory,PlatformInformation,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\PlatformInformation.cs,AddPromptBehaviorQueryParameter,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.IdentityModel.Clients.ActiveDirectory.Native,NCryptNative,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\Native\NCryptNative.cs,SignHash,The method has 5 parameters.
Long Identifier,Microsoft.IdentityModel.Clients.ActiveDirectory,PlatformInformation,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\PlatformInformation.cs,AddPromptBehaviorQueryParameter,The length of the parameter authorizationRequestParameters is 30.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,CreateDeviceAuthChallengeResponse,The length of the statement  "	DeviceAuthJWTResponse response = new DeviceAuthJWTResponse (challengeData ["SubmitUrl"]' challengeData ["nonce"]' Convert.ToBase64String (certificate.GetRawCertData ())); " is 170.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,CreateDeviceAuthChallengeResponse,The length of the statement  "	string signedJwt = string.Format (CultureInfo.CurrentCulture' "{0}.{1}"' response.GetResponseToSign ()' Base64UrlEncoder.Encode (sig)); " is 135.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,FindCertificate,The length of the statement  "				throw new AdalException (AdalError.DeviceCertificateNotFound' string.Format (CultureInfo.CurrentCulture' AdalErrorMessage.DeviceCertificateNotFoundTemplate' "Cert Authorities:" + challengeData ["CertAuthorities"])); " is 215.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,FindCertificate,The length of the statement  "				throw new AdalException (AdalError.DeviceCertificateNotFound' string.Format (CultureInfo.CurrentCulture' AdalErrorMessage.DeviceCertificateNotFoundTemplate' "Cert thumbprint:" + challengeData ["CertThumbprint"])); " is 213.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,CryptographyHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\CryptographyHelper.cs,SignWithCertificate,The length of the statement  "		throw new ArgumentOutOfRangeException ("rawData"' string.Format (CultureInfo.InvariantCulture' AdalErrorMessage.CertificateKeySizeTooSmallTemplate' ClientAssertionCertificate.MinKeySizeInBits)); " is 194.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,CryptographyHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\CryptographyHelper.cs,SignWithCertificate,The length of the statement  "	RSACryptoServiceProvider rsa = x509Key.GetAsymmetricAlgorithm (SecurityAlgorithms.RsaSha256Signature' true) as RSACryptoServiceProvider; " is 136.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,CryptographyHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\CryptographyHelper.cs,GetCryptoProviderForSha256,The length of the statement  "	// ProviderType == 1(PROV_RSA_FULL) and providerType == 12(PROV_RSA_SCHANNEL) are provider types that only support SHA1. Change them to PROV_RSA_AES=24 that supports SHA2 also. " is 176.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,CryptographyHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\CryptographyHelper.cs,GetCryptoProviderForSha256,The length of the statement  "	if ((rsaProvider.CspKeyContainerInfo.ProviderType == 1 || rsaProvider.CspKeyContainerInfo.ProviderType == 12) && !rsaProvider.CspKeyContainerInfo.HardwareDevice) { " is 163.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,X509Native,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\Native\X509Native.cs,AcquireCngPrivateKey,The length of the statement  "	Debug.Assert (!certificateContext.IsClosed && !certificateContext.IsInvalid' "!certificateContext.IsClosed && !certificateContext.IsInvalid"); " is 142.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory,X509Native,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\Native\X509Native.cs,AcquireCngPrivateKey,The length of the statement  "		if (!UnsafeNativeMethods.CryptAcquireCertificatePrivateKey (certificateContext' AcquireCertificateKeyOptions.AcquireOnlyNCryptKeys' IntPtr.Zero' out privateKey' out keySpec' out freeKey)) { " is 189.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Native,Win32Native,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\Native\Win32Native.cs,FormatMessageFromLibrary,The length of the statement  "			int result = UnsafeNativeMethods.FormatMessage (FormatMessageFlags.AllocateBuffer | FormatMessageFlags.FromModule | FormatMessageFlags.FromSystem' module' message' 0' ref messageBuffer' 0' IntPtr.Zero); " is 202.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,CustomWebBrowser,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\CustomWebBrowser.cs,CreateSink,The length of the statement  "		this.webBrowserEventCookie = new AxHost.ConnectionPointCookie (activeXInstance' this.webBrowserEvent' typeof(NativeWrapper.DWebBrowserEvents2)); " is 144.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,SilentWebUI,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\SilentWebUI.cs,UIDoneHandler,The length of the statement  "	// WM_QUIT message from ExitThread will delayed' if Dispose will create a set of new messages (we suspect that it happens). " is 123.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,SilentWindowsFormsAuthenticationDialog,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\SilentWindowsFormsAuthenticationDialog.cs,HasLoginPage,The length of the statement  "		where 0 == String.Compare (element.GetAttribute ("type")' "password"' true' CultureInfo.CurrentCulture) && element.Enabled && element.OffsetRectangle.Height > 0 && element.OffsetRectangle.Width > 0 " is 197.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WebUI,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WebUI.cs,AcquireAuthorizationAsync,The length of the statement  "				Task.Factory.StartNew (sendAuthorizeRequest' CancellationToken.None' TaskCreationOptions.None' staTaskScheduler).Wait (); " is 121.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,WebBrowserNavigatingHandler,The length of the statement  "		PlatformPlugin.Logger.Verbose (null' string.Format (CultureInfo.CurrentCulture' " Navigating to '{0}'."' EncodingHelper.UrlDecode (e.Url.ToString ()))); " is 152.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,WebBrowserNavigatedHandler,The length of the statement  "		PlatformPlugin.Logger.Verbose (null' string.Format (CultureInfo.CurrentCulture' " Navigated to '{0}'."' EncodingHelper.UrlDecode (e.Url.ToString ()))); " is 151.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,CheckForClosingUrl,The length of the statement  "	if (url.Authority.Equals (this.desiredCallbackUri.Authority' StringComparison.CurrentCultureIgnoreCase) && url.AbsolutePath.Equals (this.desiredCallbackUri.AbsolutePath' StringComparison.CurrentCulture)) { " is 205.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,CheckForClosingUrl,The length of the statement  "	if (!canClose && !whiteListedSchemes.Contains (url.Scheme.ToLower (CultureInfo.CurrentCulture)) && !url.AbsoluteUri.Equals ("about:blank"' StringComparison.CurrentCultureIgnoreCase) && !url.Scheme.Equals ("https"' StringComparison.CurrentCultureIgnoreCase) && !url.Scheme.Equals ("javascript"' StringComparison.CurrentCultureIgnoreCase)) { " is 339.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,StopWebBrowser,The length of the statement  "			PlatformPlugin.Logger.Verbose (null' string.Format (CultureInfo.CurrentCulture' " WebBrowser state: IsBusy: {0}' ReadyState: {1}' Created: {2}' Disposing: {3}' IsDisposed: {4}' IsOffline: {5}"' this.webBrowser.IsBusy' this.webBrowser.ReadyState' this.webBrowser.Created' this.webBrowser.Disposing' this.webBrowser.IsDisposed' this.webBrowser.IsOffline)); " is 354.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,StopWebBrowser,The length of the statement  "			PlatformPlugin.Logger.Verbose (null' string.Format (CultureInfo.CurrentCulture' " WebBrowser state (after Stop): IsBusy: {0}' ReadyState: {1}' Created: {2}' Disposing: {3}' IsDisposed: {4}' IsOffline: {5}"' this.webBrowser.IsBusy' this.webBrowser.ReadyState' this.webBrowser.Created' this.webBrowser.Disposing' this.webBrowser.IsDisposed' this.webBrowser.IsOffline)); " is 367.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,CreateExceptionForAuthenticationUiFailed,The length of the statement  "		return new AdalServiceException (AdalError.AuthenticationUiFailed' string.Format (CultureInfo.CurrentCulture' " The browser based authentication dialog failed to complete. Reason: {0}"' NavigateErrorStatus.Messages [statusCode])) { " is 231.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,CreateExceptionForAuthenticationUiFailed,The length of the statement  "	return new AdalServiceException (AdalError.AuthenticationUiFailed' string.Format (CultureInfo.CurrentCulture' " The browser based authentication dialog failed to complete for an unknown reason. StatusCode: {0}"' statusCode)) { " is 226.
Long Statement,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialog,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WinFormWebAuthenticationDialog.cs,SetBrowserControlZoom,The length of the statement  "		int hResult = cmdTarget.Exec (IntPtr.Zero' OLECMDID_OPTICAL_ZOOM' OLECMDEXECOPT_DONTPROMPTUSER' commandInput' IntPtr.Zero); " is 123.
Complex Conditional,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,CheckForClosingUrl,The conditional expression  "!canClose && !whiteListedSchemes.Contains (url.Scheme.ToLower (CultureInfo.CurrentCulture)) && !url.AbsoluteUri.Equals ("about:blank"' StringComparison.CurrentCultureIgnoreCase) && !url.Scheme.Equals ("https"' StringComparison.CurrentCultureIgnoreCase) && !url.Scheme.Equals ("javascript"' StringComparison.CurrentCultureIgnoreCase)"  is complex.
Empty Catch Block,Microsoft.IdentityModel.Clients.ActiveDirectory,PlatformInformation,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\PlatformInformation.cs,IsDomainJoined,The method has an empty catch block.
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,AdalEventSource,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\..\ADAL.Common\AdalEventSource.cs,Information,The following statement contains a magic number: WriteEvent (2' message);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,AdalEventSource,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\..\ADAL.Common\AdalEventSource.cs,Warning,The following statement contains a magic number: WriteEvent (3' message);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,AdalEventSource,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\..\ADAL.Common\AdalEventSource.cs,Error,The following statement contains a magic number: WriteEvent (4' message);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,FindCertificate,The following statement contains a magic number: try {  	store.Open (OpenFlags.ReadOnly);  	var certCollection = store.Certificates;  	X509Certificate2Collection signingCert = null;  	if (challengeData.ContainsKey ("CertAuthorities")) {  		string[] certAuthorities = challengeData ["CertAuthorities"].Split (new[] {  			";"  		}' StringSplitOptions.None);  		foreach (var certAuthority in certAuthorities) {  			//reverse the tokenized string and replace "'" with " + "  			string[] dNames = certAuthority.Split (new[] {  				"'"  			}' StringSplitOptions.None);  			string distinguishedIssuerName = dNames [dNames.Length - 1];  			for (int i = dNames.Length - 2; i >= 0; i--) {  				distinguishedIssuerName += " + " + dNames [i].Trim ();  			}  			signingCert = certCollection.Find (X509FindType.FindByIssuerDistinguishedName' distinguishedIssuerName' false);  			if (signingCert.Count > 0) {  				break;  			}  		}  		if (signingCert == null || signingCert.Count == 0) {  			throw new AdalException (AdalError.DeviceCertificateNotFound' string.Format (CultureInfo.CurrentCulture' AdalErrorMessage.DeviceCertificateNotFoundTemplate' "Cert Authorities:" + challengeData ["CertAuthorities"]));  		}  	} else {  		signingCert = certCollection.Find (X509FindType.FindByThumbprint' challengeData ["CertThumbprint"]' false);  		if (signingCert.Count == 0) {  			throw new AdalException (AdalError.DeviceCertificateNotFound' string.Format (CultureInfo.CurrentCulture' AdalErrorMessage.DeviceCertificateNotFoundTemplate' "Cert thumbprint:" + challengeData ["CertThumbprint"]));  		}  	}  	return signingCert [0];  } finally {  	store.Close ();  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,FindCertificate,The following statement contains a magic number: if (challengeData.ContainsKey ("CertAuthorities")) {  	string[] certAuthorities = challengeData ["CertAuthorities"].Split (new[] {  		";"  	}' StringSplitOptions.None);  	foreach (var certAuthority in certAuthorities) {  		//reverse the tokenized string and replace "'" with " + "  		string[] dNames = certAuthority.Split (new[] {  			"'"  		}' StringSplitOptions.None);  		string distinguishedIssuerName = dNames [dNames.Length - 1];  		for (int i = dNames.Length - 2; i >= 0; i--) {  			distinguishedIssuerName += " + " + dNames [i].Trim ();  		}  		signingCert = certCollection.Find (X509FindType.FindByIssuerDistinguishedName' distinguishedIssuerName' false);  		if (signingCert.Count > 0) {  			break;  		}  	}  	if (signingCert == null || signingCert.Count == 0) {  		throw new AdalException (AdalError.DeviceCertificateNotFound' string.Format (CultureInfo.CurrentCulture' AdalErrorMessage.DeviceCertificateNotFoundTemplate' "Cert Authorities:" + challengeData ["CertAuthorities"]));  	}  } else {  	signingCert = certCollection.Find (X509FindType.FindByThumbprint' challengeData ["CertThumbprint"]' false);  	if (signingCert.Count == 0) {  		throw new AdalException (AdalError.DeviceCertificateNotFound' string.Format (CultureInfo.CurrentCulture' AdalErrorMessage.DeviceCertificateNotFoundTemplate' "Cert thumbprint:" + challengeData ["CertThumbprint"]));  	}  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,FindCertificate,The following statement contains a magic number: foreach (var certAuthority in certAuthorities) {  	//reverse the tokenized string and replace "'" with " + "  	string[] dNames = certAuthority.Split (new[] {  		"'"  	}' StringSplitOptions.None);  	string distinguishedIssuerName = dNames [dNames.Length - 1];  	for (int i = dNames.Length - 2; i >= 0; i--) {  		distinguishedIssuerName += " + " + dNames [i].Trim ();  	}  	signingCert = certCollection.Find (X509FindType.FindByIssuerDistinguishedName' distinguishedIssuerName' false);  	if (signingCert.Count > 0) {  		break;  	}  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,DeviceAuthHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\DeviceAuthHelper.cs,FindCertificate,The following statement contains a magic number: for (int i = dNames.Length - 2; i >= 0; i--) {  	distinguishedIssuerName += " + " + dNames [i].Trim ();  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,CryptographyHelper,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\CryptographyHelper.cs,GetCryptoProviderForSha256,The following statement contains a magic number: if ((rsaProvider.CspKeyContainerInfo.ProviderType == 1 || rsaProvider.CspKeyContainerInfo.ProviderType == 12) && !rsaProvider.CspKeyContainerInfo.HardwareDevice) {  	CspParameters csp = new CspParameters {  		ProviderType = PROV_RSA_AES'  		KeyContainerName = rsaProvider.CspKeyContainerInfo.KeyContainerName'  		KeyNumber = (int)rsaProvider.CspKeyContainerInfo.KeyNumber  	};  	if (rsaProvider.CspKeyContainerInfo.MachineKeyStore) {  		csp.Flags = CspProviderFlags.UseMachineKeyStore;  	}  	//  	// If UseExistingKey is not specified' the CLR will generate a key for a non-existent group.  	// With this flag' a CryptographicException is thrown instead.  	//  	csp.Flags |= CspProviderFlags.UseExistingKey;  	return new RSACryptoServiceProvider (csp);  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,PlatformInformation,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\PlatformInformation.cs,GetUserPrincipalNameAsync,The following statement contains a magic number: return await Task.Factory.StartNew (() => {  	const int NameUserPrincipal = 8;  	uint userNameSize = 0;  	NativeMethods.GetUserNameEx (NameUserPrincipal' null' ref userNameSize);  	if (userNameSize == 0) {  		throw new AdalException (AdalError.GetUserNameFailed' new Win32Exception (Marshal.GetLastWin32Error ()));  	}  	StringBuilder sb = new StringBuilder ((int)userNameSize);  	if (!NativeMethods.GetUserNameEx (NameUserPrincipal' sb' ref userNameSize)) {  		throw new AdalException (AdalError.GetUserNameFailed' new Win32Exception (Marshal.GetLastWin32Error ()));  	}  	return sb.ToString ();  }).ConfigureAwait (false);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,SecureClientSecret,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\SecureClientSecret.cs,ApplyTo,The following statement contains a magic number: for (int i = 0; i < secureString.Length; i++) {  	output [i] = (char)Marshal.ReadInt16 (secureStringPtr' i * 2);  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,SecureClientSecret,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\SecureClientSecret.cs,ApplyTo,The following statement contains a magic number: output [i] = (char)Marshal.ReadInt16 (secureStringPtr' i * 2);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,UserPasswordCredential,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\UserPasswordCredential.cs,PasswordToCharArray,The following statement contains a magic number: if (SecurePassword != null) {  	var output = new char[SecurePassword.Length];  	IntPtr secureStringPtr = Marshal.SecureStringToCoTaskMemUnicode (SecurePassword);  	for (int i = 0; i < SecurePassword.Length; i++) {  		output [i] = (char)Marshal.ReadInt16 (secureStringPtr' i * 2);  	}  	Marshal.ZeroFreeCoTaskMemUnicode (secureStringPtr);  	return output;  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,UserPasswordCredential,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\UserPasswordCredential.cs,PasswordToCharArray,The following statement contains a magic number: for (int i = 0; i < SecurePassword.Length; i++) {  	output [i] = (char)Marshal.ReadInt16 (secureStringPtr' i * 2);  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory,UserPasswordCredential,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\UserPasswordCredential.cs,PasswordToCharArray,The following statement contains a magic number: output [i] = (char)Marshal.ReadInt16 (secureStringPtr' i * 2);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,SilentWebUI,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\SilentWebUI.cs,WaitForCompletionOrTimeout,The following statement contains a magic number: if (initialized) {  	// Calculate time remaining after time spend on initialization.  	// There are 10 000 ticks in each millisecond.  	long elapsedTimeSinceStart = (DateTime.Now.Ticks - navigationStartTime) / 10000;  	navigationOverallTimeout -= elapsedTimeSinceStart;  	bool completedNormally = uiThread.Join (navigationOverallTimeout > 0 ? (int)navigationOverallTimeout : 0);  	if (!completedNormally) {  		PlatformPlugin.Logger.Information (null' "Silent login thread did not complete on time.");  		// The invisible dialog has failed to complete in the allotted time.  		// Attempt a graceful shutdown.  		this.formsSyncContext.Post (state => this.dialog.CloseBrowser ()' null);  	}  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,WebBrowserNavigateErrorHandler,The following statement contains a magic number: if (e.StatusCode >= 300 && e.StatusCode < 400) {  	// we could get redirect flows here as well.  	return;  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,WebBrowserNavigateErrorHandler,The following statement contains a magic number: if (e.StatusCode >= 300 && e.StatusCode < 400) {  	// we could get redirect flows here as well.  	return;  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser.Location = new Point (0' 25);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser.MinimumSize = new Size (20' 20);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser.MinimumSize = new Size (20' 20);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser.Size = new Size (UIWidth' 565);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,InitializeComponent,The following statement contains a magic number: this.webBrowserPanel.TabIndex = 2;  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new SizeF (6' 13);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialogBase,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WindowsFormsWebAuthenticationDialogBase.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new SizeF (6' 13);  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialog,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WinFormWebAuthenticationDialog.cs,SetBrowserZoom,The following statement contains a magic number: if (NativeWrapper.NativeMethods.IsProcessDPIAware () && 100 != windowsZoomPercent && !this.zoomed) {  	// There is a bug in some versions of the IE browser control that causes it to   	// ignore scaling unless it is changed.  	this.SetBrowserControlZoom (windowsZoomPercent - 1);  	this.SetBrowserControlZoom (windowsZoomPercent);  	this.zoomed = true;  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialog,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WinFormWebAuthenticationDialog.cs,SetBrowserControlZoom,The following statement contains a magic number: if (cmdTarget != null) {  	const int OLECMDID_OPTICAL_ZOOM = 63;  	const int OLECMDEXECOPT_DONTPROMPTUSER = 2;  	object[] commandInput =  {  		zoomPercent  	};  	int hResult = cmdTarget.Exec (IntPtr.Zero' OLECMDID_OPTICAL_ZOOM' OLECMDEXECOPT_DONTPROMPTUSER' commandInput' IntPtr.Zero);  	Marshal.ThrowExceptionForHR (hResult);  }  
Magic Number,Microsoft.IdentityModel.Clients.ActiveDirectory.Internal,WindowsFormsWebAuthenticationDialog,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\WinFormWebAuthenticationDialog.cs,SetBrowserControlZoom,The following statement contains a magic number: if (cmdTarget != null) {  	const int OLECMDID_OPTICAL_ZOOM = 63;  	const int OLECMDEXECOPT_DONTPROMPTUSER = 2;  	object[] commandInput =  {  		zoomPercent  	};  	int hResult = cmdTarget.Exec (IntPtr.Zero' OLECMDID_OPTICAL_ZOOM' OLECMDEXECOPT_DONTPROMPTUSER' commandInput' IntPtr.Zero);  	Marshal.ThrowExceptionForHR (hResult);  }  
Missing Default,Microsoft.IdentityModel.Clients.ActiveDirectory,PlatformInformation,F:\newReposMay17\AzureAD_azure-activedirectory-library-for-dotnet\src\ADAL.PCL.Desktop\PlatformInformation.cs,AddPromptBehaviorQueryParameter,The following switch statement is missing a default case: switch (promptBehavior) {  case PromptBehavior.Always:  	authorizationRequestParameters [OAuthParameter.Prompt] = PromptValue.Login;  	break;  case PromptBehavior.RefreshSession:  	authorizationRequestParameters [OAuthParameter.Prompt] = PromptValue.RefreshSession;  	break;  case PromptBehavior.Never:  	authorizationRequestParameters [OAuthParameter.Prompt] = PromptValue.AttemptNone;  	break;  }  
