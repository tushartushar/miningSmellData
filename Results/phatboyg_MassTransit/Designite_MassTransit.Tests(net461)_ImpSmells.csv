Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MassTransit.Tests.Serialization,ContainerClass,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,MassTransit.Tests.Serialization,DictionaryContainerClass,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,Equals,Cyclomatic complexity of the method is 11
Complex Method,MassTransit.Tests.Serialization,PrimitiveHashSetClass,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,MassTransit.Tests.Serialization,PrimitiveSetClass,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,MassTransit.Tests.Serialization,PrimitiveArrayClass,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,MassTransit.Tests.Serialization,GenericArrayClass<T>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,Equals,Cyclomatic complexity of the method is 10
Long Parameter List,MassTransit.Tests,ValuesImpl,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,ValuesImpl,The method has 5 parameters. Parameters: stringValue' intValue' dateTimeValue' nullableValue' nullableDecimalValue
Long Parameter List,ReceivingObserver_Specs,ReceiveObserver,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ReceiveObserver_Specs.cs,ReceiveObserver,The method has 5 parameters. Parameters: preReceive' postReceive' receiveFault' postConsume' consumeFault
Long Parameter List,MassTransit.Tests.Saga.Messages,RegisterUser,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Saga\Messages\RegisterUser.cs,RegisterUser,The method has 5 parameters. Parameters: correlationId' username' password' displayName' email
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Catching_a_fault,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\CatchFault_Specs.cs,Should_receive_the_caught_fault_response,The length of the statement  "            var startFaulted = await Bus.Request<Start' StartFaulted>(InputQueueAddress' message' TestCancellationToken' TestTimeout); " is 122.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,When_combining_events_into_a_single_event,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\CompositeEvent_Specs.cs,Should_have_called_combined_event,The length of the statement  "            Task<ConsumeContext<CompleteMessage>> received = ConnectPublishHandler<CompleteMessage>(x => x.Message.CorrelationId == message.CorrelationId); " is 143.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Correlation_a_state_machine_by_guid,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\CorrelateGuid_Specs.cs,Should_properly_map_to_the_instance,The length of the statement  "            Guid? saga = await _repository.ShouldContainSaga(state => state.TransactionId == id && state.CurrentState == _machine.Active' TestTimeout); " is 139.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Correlation_a_state_machine_by_guid,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\CorrelateGuid_Specs.cs,Should_properly_map_to_the_instance,The length of the statement  "            saga = await _repository.ShouldContainSaga(state => state.TransactionId == id && state.CurrentState == _machine.Final' TestTimeout); " is 132.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Triggering_a_change_event_from_a_transition,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\EnterEvent_Specs.cs,Should_handle_a_double_state,The length of the statement  "            Guid? saga = await _repository.ShouldContainSaga(x => x.CorrelationId == sagaId && Equals(x.CurrentState' _machine.RunningFaster)' TestTimeout); " is 144.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,When_a_state_machine_instance_is_created,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Initiator_Specs.cs,Should_receive_the_published_message,The length of the statement  "            Assert.AreEqual(received.SourceAddress' InputQueueAddress' "The published message should have the input queue source address"); " is 127.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,When_a_state_machine_instance_is_created,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Initiator_Specs.cs,Should_receive_the_published_message,The length of the statement  "                await _repository.ShouldContainSaga(x => x.CorrelationId == message.CorrelationId && Equals(x.CurrentState' _machine.Running)' TestTimeout); " is 140.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,InMemoryDeadlock_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\InMemoryDeadlock_Specs.cs,Should_not_deadlock_on_the_repository,The length of the statement  "            Guid? saga = await _repository.ShouldContainSaga(state => state.CorrelationId == id && state.CurrentState == _machine.Active' TestTimeout); " is 139.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,InMemoryDeadlock_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\InMemoryDeadlock_Specs.cs,Should_not_deadlock_on_the_repository,The length of the statement  "            Guid? saga2 = await _repository.ShouldContainSaga(state => state.CorrelationId == id && state.CurrentState == _machine.Active' TestTimeout); " is 140.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Configuring_a_message_in_a_saga,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Message_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "                cfg.SagaMessage<Start>(m => m.UseExecute(context => _consumerMessage.TrySetResult(Tuple.Create(context.Saga' context.Message)))); " is 129.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,When_an_existing_instance_is_not_found,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\MissingInstance_Specs.cs,Should_publish_the_event_of_the_missing_instance,The length of the statement  "            var (status' notFound) = await requestClient.GetResponse<Status' InstanceNotFound>(new CheckStatus("A")' TestCancellationToken); " is 128.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Publishing_a_message_from_a_saga_state_machine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Publish_Specs.cs,Should_receive_the_published_message,The length of the statement  "            Assert.AreEqual(received.SourceAddress' InputQueueAddress' "The published message should have the input queue source address"); " is 127.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Publishing_a_message_from_a_saga_state_machine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Publish_Specs.cs,Should_receive_the_published_message,The length of the statement  "                await _repository.ShouldContainSaga(x => x.CorrelationId == message.CorrelationId && Equals(x.CurrentState' _machine.Running)' TestTimeout); " is 140.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,When_a_saga_goes_straight_to_finalized,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\RemoveWhen_Specs.cs,Should_remove_the_saga_once_completed,The length of the statement  "            var response = await Bus.Request<Ask' Answer>(InputQueueAddress' new Ask {CorrelationId = sagaId}' TestCancellationToken); " is 122.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Sending_a_message_from_a_state_machine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Send_Specs.cs,Should_receive_the_published_message,The length of the statement  "            Assert.AreEqual(InputQueueAddress' received.SourceAddress' "The published message should have the input queue source address"); " is 127.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Sending_a_message_from_a_state_machine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Send_Specs.cs,Should_receive_the_published_message,The length of the statement  "                await _repository.ShouldContainSaga(x => x.CorrelationId == message.CorrelationId && Equals(x.CurrentState' _machine.Running)' TestTimeout); " is 140.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Using_a_simple_state_machine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\SimpleStateMachine_Specs.cs,Should_handle_a_double_state,The length of the statement  "                await _repository.ShouldContainSaga(x => x.CorrelationId == sagaId && Equals(x.CurrentState' _machine.Final)' TestTimeout); " is 123.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Using_a_simple_state_machine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\SimpleStateMachine_Specs.cs,Should_handle_the_initial_state,The length of the statement  "                await _repository.ShouldContainSaga(x => x.CorrelationId == sagaId && Equals(x.CurrentState' _machine.Running)' TestTimeout); " is 125.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Using_the_testing_framework_built_into_masstransit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Testing_Specs.cs,Should_handle_the_initial_state,The length of the statement  "            StateMachineSagaTestHarness<Instance' TestStateMachine> saga = harness.StateMachineSaga<Instance' TestStateMachine>(_machine); " is 126.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,Using_the_testing_framework_built_into_masstransit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Testing_Specs.cs,Should_handle_the_stop_state,The length of the statement  "            StateMachineSagaTestHarness<Instance' TestStateMachine> saga = harness.StateMachineSaga<Instance' TestStateMachine>(_machine); " is 126.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,When_a_message_is_not_correlated,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\UncorrelatedMessage_Specs.cs,Should_start_and_handle_the_status_request,The length of the statement  "            var startupComplete = await Bus.Request<Start' StartupComplete>(InputQueueAddress' new Start("A"' Guid.NewGuid())' TestCancellationToken); " is 138.
Long Statement,MassTransit.Tests.AutomatonymousIntegration,When_a_message_is_not_correlated,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\UncorrelatedMessage_Specs.cs,Should_start_and_handle_the_status_request_awaited,The length of the statement  "            var startupComplete = await Bus.Request<Start' StartupComplete>(InputQueueAddress' new Start("B"' Guid.NewGuid())' TestCancellationToken); " is 138.
Long Statement,MassTransit.Tests,Publishing_from_a_handler,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ConversationId_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "            _handled = Handler<PingMessage>(configurator' context => context.RespondAsync(new PongMessage(context.Message.CorrelationId))); " is 127.
Long Statement,MassTransit.Tests,A_fault_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\FaultPoly_Specs.cs,Should_have_the_fault_message_type,The length of the statement  "            Assert.That(TypeMetadataCache<Fault<UpdateMemberAddress>>.MessageTypeNames' Contains.Item(MessageUrn.ForType(typeof(Fault<UpdateMemberAddress>))));" is 147.
Long Statement,MassTransit.Tests,A_fault_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\FaultPoly_Specs.cs,Should_have_the_fault_base_message_type,The length of the statement  "            Assert.That(TypeMetadataCache<Fault<UpdateMemberAddress>>.MessageTypeNames' Contains.Item(MessageUrn.ForType(typeof(Fault<MemberUpdateCommand>))));" is 147.
Long Statement,MassTransit.Tests,A_fault_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\FaultPoly_Specs.cs,Should_have_the_fault_message_class_type,The length of the statement  "            Assert.That(TypeMetadataCache<Fault<MemberAddressUpdated>>.MessageTypeNames' Contains.Item(MessageUrn.ForType(typeof(Fault<MemberAddressUpdated>))));" is 149.
Long Statement,MassTransit.Tests,A_fault_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\FaultPoly_Specs.cs,Should_have_the_fault_base_message_class_type,The length of the statement  "            Assert.That(TypeMetadataCache<Fault<MemberAddressUpdated>>.MessageTypeNames' Contains.Item(MessageUrn.ForType(typeof(Fault<MemberUpdateEvent>))));" is 146.
Long Statement,MassTransit.Tests,Running_two_in_memory_transports,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\InMemoryDuo_Specs.cs,Should_keep_em_separated,The length of the statement  "            ConsumerTestHarness<RelayConsumer> internalConsumer = internalHarness.Consumer(() => new RelayConsumer(externalHarness.Bus)); " is 125.
Long Statement,MassTransit.Tests,Running_two_in_memory_transports,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\InMemoryDuo_Specs.cs,Should_keep_em_separated,The length of the statement  "            ConsumerTestHarness<RelayConsumer> externalConsumer = externalHarness.Consumer(() => new RelayConsumer(internalHarness.Bus)); " is 125.
Long Statement,MassTransit.Tests,Sending_a_request_to_a_queue,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MessageContext_Specs.cs,Setup,The length of the statement  "            _request = Bus.Request<PingMessage' PongMessage>(InputQueueAddress' new PingMessage()' TestCancellationToken' TestTimeout' x => " is 127.
Long Statement,MassTransit.Tests,Sending_a_request_with_two_handlers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MessageContext_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "            _ping = Handler<PingMessage>(configurator' async x => await x.RespondAsync(new PingNotSupported(x.Message.CorrelationId))); " is 123.
Long Statement,MassTransit.Tests,Using_the_multi_test_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MultiTestConsumer_Specs.cs,Should_distinguish_multiple_events,The length of the statement  "                Assert.IsTrue(consumer.Received.Select<PingMessage>(received => received.Context.Message.CorrelationId == pingMessage.CorrelationId).Any()); " is 140.
Long Statement,MassTransit.Tests,Using_the_multi_test_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MultiTestConsumer_Specs.cs,Should_distinguish_multiple_events,The length of the statement  "                Assert.IsTrue(consumer.Received.Select<PingMessage>(received => received.Context.Message.CorrelationId == pingMessage2.CorrelationId).Any()); " is 141.
Long Statement,MassTransit.Tests,Using_the_multi_test_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MultiTestConsumer_Specs.cs,Should_show_that_the_specified_type_was_received,The length of the statement  "                Assert.IsTrue(consumer.Received.Select<PongMessage>(received => received.Context.Message.CorrelationId == pingMessage.CorrelationId).Any()); " is 140.
Long Statement,MassTransit.Tests,Publishing_a_message_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\PublishHeader_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "            _handled = Handler<PingMessage>(configurator' context => context.Publish(new PongMessage(context.Message.CorrelationId))); " is 122.
Long Statement,MassTransit.Tests,Using_the_new_request_client_syntax,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_throw_the_request_exception,The length of the statement  "            Assert.That(async () => await client.GetResponse<Value>(new GetValue {BlowUp = true})' Throws.TypeOf<RequestFaultException>()); " is 127.
Long Statement,MassTransit.Tests,Using_the_new_request_client_syntax,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_throw_the_request_exception_including_fault,The length of the statement  "                Assert.That(exception.Fault.Exceptions.First().ExceptionType' Is.EqualTo(TypeMetadataCache<IntentionalTestException>.ShortName)); " is 129.
Long Statement,MassTransit.Tests,Using_the_new_request_client_syntax,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_throw_a_timeout_exception,The length of the statement  "            Assert.That(async () => await client.GetResponse<Value>(new GetValue {Discard = true})' Throws.TypeOf<RequestTimeoutException>()); " is 130.
Long Statement,MassTransit.Tests,Using_the_new_request_client_syntax,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_throw_a_timeout_exception_with_milliseconds,The length of the statement  "            Assert.That(async () => await client.GetResponse<Value>(new GetValue {Discard = true})' Throws.TypeOf<RequestTimeoutException>()); " is 130.
Long Statement,MassTransit.Tests,Using_the_new_request_client_syntax,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_throw_canceled_exception_when_canceled,The length of the statement  "                Assert.That(async () => await client.GetResponse<Value>(new GetValue {Discard = true}' source.Token)' Throws.TypeOf<TaskCanceledException>()); " is 142.
Long Statement,MassTransit.Tests,Using_the_new_request_client_syntax,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_throw_canceled_exception_when_already_canceled,The length of the statement  "                Assert.That(async () => await client.GetResponse<Value>(new GetValue {Discard = true}' source.Token)' Throws.TypeOf<TaskCanceledException>()); " is 142.
Long Statement,MassTransit.Tests,Using_the_request_with_multiple_result_types,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_match_the_second_result,The length of the statement  "            var (registered' existing) = await client.GetResponse<MemberRegistered' ExistingMemberFound>(new RegisterMember() {MemberId = "Johnny5"}); " is 138.
Long Statement,MassTransit.Tests.Configuration,TestMessageSendTopology<T>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\SendSpecification_Specs.cs,Apply,The length of the statement  "                builder.AddFilter(new RetryFilter<SendContext<T>>(new ImmediateRetryPolicy(new AllExceptionFilter()' 5)' new RetryObservable())); " is 129.
Long Statement,MassTransit.Tests.Conventional,Configuring_a_consumer_by_default_conventions,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Conventional\ConventionConsumer_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "            configurator.Consumer(typeof(DefaultConventionHandlers)' type => new DefaultConventionHandlers(_receivedA' _receivedB)); " is 120.
Long Statement,MassTransit.Tests.Conventional,CustomMethodConsumerMessageFilter<TConsumer;TMessage>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Conventional\CustomMethodConsumerMessageFilter.cs,Send,The length of the statement  "                    $"Consumer type {TypeMetadataCache<TConsumer>.ShortName} is not a consumer of message type {TypeMetadataCache<TMessage>.ShortName}"; " is 132.
Long Statement,MassTransit.Tests.Courier,Executing_a_faulting_routing_slip_with_compensating_activities,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\FaultActivityEvent_Specs.cs,Setup,The length of the statement  "            _secondActivityCompleted = SubscribeHandler<RoutingSlipActivityCompleted>(x => x.Message.ActivityName.Equals("SecondTest")); " is 124.
Long Statement,MassTransit.Tests.Courier,When_an_activity_faults,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\Fault_Specs.cs,Should_capture_a_thrown_exception,The length of the statement  "            Task<ConsumeContext<RoutingSlipFaulted>> handled = ConnectPublishHandler<RoutingSlipFaulted>(x => x.Message.TrackingNumber == builder.TrackingNumber); " is 150.
Long Statement,MassTransit.Tests.Courier,When_an_activity_faults,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\Fault_Specs.cs,Should_compensate_both_activities,The length of the statement  "            Task<ConsumeContext<RoutingSlipFaulted>> handled = ConnectPublishHandler<RoutingSlipFaulted>(x => x.Message.TrackingNumber == builder.TrackingNumber); " is 150.
Long Statement,MassTransit.Tests.Courier,When_an_activity_faults,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\Fault_Specs.cs,Should_publish_the_faulted_routing_slip_event,The length of the statement  "            Task<ConsumeContext<RoutingSlipFaulted>> handled = ConnectPublishHandler<RoutingSlipFaulted>(x => x.Message.TrackingNumber == builder.TrackingNumber); " is 150.
Long Statement,MassTransit.Tests.Courier,When_an_activity_faults,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\Fault_Specs.cs,Should_publish_the_faulted_routing_slip_event,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompensated>> compensated = ConnectPublishHandler<RoutingSlipActivityCompensated>( " is 121.
Long Statement,MassTransit.Tests.Courier,When_an_activity_adds_a_subscription,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ItinerarySubscription_Specs.cs,ConfigureInMemoryBus,The length of the statement  "                    context => context.Message.TrackingNumber == _trackingNumber && context.Message.ActivityName.Equals(testActivity.Name)); " is 120.
Long Statement,MassTransit.Tests.Courier,When_an_activity_adds_a_subscription,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ItinerarySubscription_Specs.cs,ConfigureInMemoryBus,The length of the statement  "                    context => context.Message.TrackingNumber == _trackingNumber && context.Message.ActivityName.Equals(reviseActivity.Name)); " is 122.
Long Statement,MassTransit.Tests.Courier,When_an_activity_adds_a_subscription,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ItinerarySubscription_Specs.cs,SetupActivities,The length of the statement  "                x.AddSubscription(InputQueueAddress' RoutingSlipEvents.ActivityCompleted | RoutingSlipEvents.Supplemental' RoutingSlipEventContents.All' " is 136.
Long Statement,MassTransit.Tests.Courier,Using_message_data_arguments,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\MessageDataArguments_Specs.cs,SetupActivities,The length of the statement  "            var context = AddActivityContext<SetLargeVariableActivity' SetLargeVariableArguments>(() => new SetLargeVariableActivity());" is 124.
Long Statement,MassTransit.Tests.Courier,Storing_an_object_graph_as_a_variable_or_argument,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ObjectGraph_Specs.cs,SetupActivities,The length of the statement  "                () => new ObjectGraphTestActivity(_intValue' _stringValue' _decimalValue' new[] { "Albert"' "Chris" }' _argumentsDictionary)); " is 126.
Long Statement,MassTransit.Tests.Courier,When_partitioning_by_activity_arguments,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\PartitionActivity_Specs.cs,SetupActivities,The length of the statement  "            AddActivityContext<TestActivity' TestArguments' TestLog>(() => new TestActivity()' h => h.UsePartitioner(_partitioner' args => args.Arguments.Value)' " is 149.
Long Statement,MassTransit.Tests.Courier,When_using_retry_middleware_for_courier,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\RetryActivity_Specs.cs,Should_publish_the_faulted_routing_slip_event,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompensated>> compensated = ConnectPublishHandler<RoutingSlipActivityCompensated>( " is 121.
Long Statement,MassTransit.Tests.Courier,When_using_retry_middleware_for_courier,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\RetryActivity_Specs.cs,Should_retry_and_eventually_compensate,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompensated>> compensated = ConnectPublishHandler<RoutingSlipActivityCompensated>( " is 121.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_complete_the_additional_item,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompleted>> testActivityCompleted = ConnectPublishHandler<RoutingSlipActivityCompleted>( " is 127.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_complete_the_additional_item,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompleted>> reviseActivityCompleted = ConnectPublishHandler<RoutingSlipActivityCompleted>( " is 129.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_complete_the_additional_item,The length of the statement  "                context => context.Message.TrackingNumber == trackingNumber && context.Message.ActivityName.Equals(reviseActivity.Name)); " is 121.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_continue_with_the_source_itinerary,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompleted>> testActivityCompleted = ConnectPublishHandler<RoutingSlipActivityCompleted>( " is 127.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_continue_with_the_source_itinerary,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompleted>> reviseActivityCompleted = ConnectPublishHandler<RoutingSlipActivityCompleted>( " is 129.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_continue_with_the_source_itinerary,The length of the statement  "                context => context.Message.TrackingNumber == trackingNumber && context.Message.ActivityName.Equals(reviseActivity.Name)); " is 121.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_immediately_complete_an_empty_list,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompleted>> testActivityCompleted = ConnectPublishHandler<RoutingSlipActivityCompleted>( " is 127.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_immediately_complete_an_empty_list,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompleted>> reviseActivityCompleted = ConnectPublishHandler<RoutingSlipActivityCompleted>( " is 129.
Long Statement,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_immediately_complete_an_empty_list,The length of the statement  "                context => context.Message.TrackingNumber == trackingNumber && context.Message.ActivityName.Equals(reviseActivity.Name)); " is 121.
Long Statement,MassTransit.Tests.Courier,A_routing_slip_event_subscription,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\Subscription_Specs.cs,Should_serialize_properly,The length of the statement  "            builder.AddSubscription(new Uri("loopback://localhost/events")' RoutingSlipEvents.Completed | RoutingSlipEvents.Faulted); " is 121.
Long Statement,MassTransit.Tests.Courier,Subscription_without_variables,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\Subscription_Specs.cs,Should_serialize_and_deserialize_properly,The length of the statement  "            builder.AddSubscription(new Uri("loopback://localhost/events")' RoutingSlipEvents.Completed | RoutingSlipEvents.Faulted); " is 121.
Long Statement,MassTransit.Tests.Courier,When_an_activity_uses_an_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\UriArgument_Specs.cs,Should_compensate_with_the_log,The length of the statement  "            Task<ConsumeContext<RoutingSlipActivityCompensated>> activityCompensated = SubscribeHandler<RoutingSlipActivityCompensated>(); " is 126.
Long Statement,NoLog,An_excessive_fault_storm,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ExcessiveAsyncFault_Specs.cs,Should_not_explode_the_task_library,The length of the statement  "                IReceivedMessage<Fault<PingMessage>>[] messages = _consumer.Received.Select<Fault<PingMessage>>().Take(limit).ToArray(); " is 120.
Long Statement,NoLog,An_excessive_fault_storm,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ExcessiveAsyncFault_Specs.cs,Should_not_explode_the_task_library,The length of the statement  "                    messages.Select(x => x.Context.Message.Exceptions[0].ExceptionType == TypeMetadataCache<IntentionalTestException>.ShortName).Count()); " is 134.
Long Statement,MassTransit.Tests.Initializers,Initializing_a_regular_class,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Class_Specs.cs,Should_initialize_a_fault,The length of the statement  "                Fault = new FaultEvent<Top>(topContext.Message' NewId.NextGuid()' HostMetadataCache.Host' new IntentionalTestException()'" is 121.
Long Statement,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_exception,The length of the statement  "            Assert.That(_response.Message.Exception.ExceptionType' Is.EqualTo(TypeMetadataCache<IntentionalTestException>.ShortName));" is 122.
Long Statement,DataBus_Specs,Receiving_a_large_message_with_data_bytes,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MessageData\DataBus_Specs.cs,Should_load_the_data_from_the_repository,The length of the statement  "                var message = new MessageWithByteArrayImpl {Bytes = new ConstantMessageData<byte[]>(dataAddress' nextGuid.ToByteArray())}; " is 122.
Long Statement,MassTransit.Tests.MessageData,Storing_message_data_on_the_file_system,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MessageData\FileSystem_Specs.cs,Should_generate_the_folder_and_file,The length of the statement  "            Console.WriteLine("Path: {0}"' Path.Combine(property.Address.Segments.SelectMany(x => x.Split(new []{':'})).ToArray())); " is 120.
Long Statement,MassTransit.Tests.Pipeline,Specifying_a_circuit_breaker,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\CircuitBreaker_Specs.cs,Should_allow_the_first_call,The length of the statement  "            IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x => " is 130.
Long Statement,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_prevent_too_many_threads_at_one_time,The length of the statement  "            IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x => " is 130.
Long Statement,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_allow_just_enough_threads_at_once,The length of the statement  "            IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x => " is 130.
Long Statement,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_only_do_n_messages_per_interval,The length of the statement  "            IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x => " is 130.
Long Statement,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_count_success_and_failure_as_same,The length of the statement  "            IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x => " is 130.
Long Statement,MassTransit.Tests.Pipeline,Configuring_a_message_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Message_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "                cfg.ConsumerMessage<PingMessage>(m => m.UseExecute(context => _consumerMessage.TrySetResult(Tuple.Create(context.Consumer' context.Message)))); " is 143.
Long Statement,MassTransit.Tests.Pipeline,Configuring_a_message_in_an_instance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Message_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "                cfg.ConsumerMessage<PingMessage>(m => m.UseExecute(context => _consumerMessage.TrySetResult(Tuple.Create(context.Consumer' context.Message)))); " is 143.
Long Statement,MassTransit.Tests.Pipeline,Partitioning_a_consumer_by_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\PartitionByKey_Specs.cs,Should_use_a_partitioner_for_consistency,The length of the statement  "            await Task.WhenAll(Enumerable.Range(0' Limit).Select(index => Bus.Publish(new PartitionedMessage {CorrelationId = NewId.NextGuid()}))); " is 135.
Long Statement,ObserverTests,Connecting_a_send_observer_to_the_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SendObserver_Specs.cs,Should_not_invoke_post_sent_on_exception,The length of the statement  "                    Assert.That(async () => await InputQueueSendEndpoint.Send(new PingMessage()' Pipe.Execute<SendContext>(x => x.Serializer = null))' " is 130.
Long Statement,ObserverTests,Connecting_a_send_observer_to_the_bus_A,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SendObserver_Specs.cs,Should_not_invoke_post_sent_on_exception,The length of the statement  "                    Assert.That(async () => await InputQueueSendEndpoint.Send(new PingMessage()' Pipe.Execute<SendContext>(x => x.Serializer = null))' " is 130.
Long Statement,ReceivingObserver_Specs,Receiving_messages_at_the_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ReceiveObserver_Specs.cs,GetObserver,The length of the statement  "                return new ReceiveObserver(GetTask<ReceiveContext>()' GetTask<ReceiveContext>()' GetTask<Tuple<ReceiveContext' Exception>>()' " is 125.
Long Statement,ReceivingObserver_Specs,Receiving_messages_at_the_endpoint_by_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ReceiveObserver_Specs.cs,GetObserver,The length of the statement  "                return new ReceiveObserver(GetTask<ReceiveContext>()' GetTask<ReceiveContext>()' GetTask<Tuple<ReceiveContext' Exception>>()' " is 125.
Long Statement,ReceivingObserver_Specs,Receiving_messages_at_the_endpoint_badly,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ReceiveObserver_Specs.cs,GetObserver,The length of the statement  "                return new ReceiveObserver(GetTask<ReceiveContext>()' GetTask<ReceiveContext>()' GetTask<Tuple<ReceiveContext' Exception>>()' " is 125.
Long Statement,MassTransit.Tests.Saga,Configuring_a_message_in_a_saga,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Saga\MessageSaga_Specs.cs,ConfigureInMemoryReceiveEndpoint,The length of the statement  "                cfg.SagaMessage<PingMessage>(m => m.UseExecute(context => _consumerMessage.TrySetResult(Tuple.Create(context.Saga' context.Message)))); " is 135.
Long Statement,MassTransit.Tests.Serialization,Deserializing_an_enumerable_property,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\IEnumerable_Specs.cs,Should_deserialize_the_enumerable_type,The length of the statement  "            EnumerableMessageType message = new EnumerableMessageTypeImpl {Items = new[] {new MessageItem {Value = "Frank"}' new MessageItem {Value = "Mary"}}}; " is 148.
Long Statement,MassTransit.Tests.Serialization,ComplaintAddedImpl,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Interface_Specs.cs,Equals,The length of the statement  "            return AddedBy.Equals(other.AddedBy) && other.AddedAt.Equals(AddedAt) && Equals(other.Subject' Subject) && Equals(other.Body' Body) " is 131.
Long Statement,MassTransit.Tests.Serialization,When_serializing_decimals,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Should_deserialize_correctly,The length of the statement  "            var serializedMessage = JsonConvert.SerializeObject(message' MassTransit.Serialization.JsonMessageSerializer.SerializerSettings); " is 129.
Long Statement,MassTransit.Tests.Serialization,When_serializing_decimals,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Should_deserialize_correctly,The length of the statement  "            var deserializedMessage = JsonConvert.DeserializeObject<MessageA>(serializedMessage' MassTransit.Serialization.JsonMessageSerializer.DeserializerSettings); " is 155.
Long Statement,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The length of the statement  "                var transportMessage = new InMemoryTransportMessage(Guid.NewGuid()' data' Serializer.ContentType.MediaType' TypeMetadataCache<SerializationTestMessage>.ShortName); " is 163.
Long Statement,MassTransit.Tests.Serialization,SerializationTest,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\SerializationTest.cs,Return,The length of the statement  "            var message = new InMemoryTransportMessage(Guid.NewGuid()' serializedMessageData' Serializer.ContentType.MediaType' TypeMetadataCache<T>.ShortName); " is 148.
Empty Catch Block,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_count_success_and_failure_as_same,The method has an empty catch block.
Magic Number,MassTransit.Audit.Tests,Audit_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Audit\Audit_Specs.cs,Should_audit_sent_messages,The following statement contains a magic number: _store.Count(x => x.Result.Metadata.ContextType == "Send").ShouldBe(3);
Magic Number,MassTransit.Audit.Tests,Audit_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Audit\Audit_Specs.cs,Should_audit_consumed_messages,The following statement contains a magic number: _store.Count(x => x.Result.Metadata.ContextType == "Consume").ShouldBe(2);
Magic Number,MassTransit.Tests.Audit,InMemoryAuditStore,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Audit\InMemoryAuditStore.cs,InMemoryAuditStore,The following statement contains a magic number: var cacheSettings = new CacheSettings(10000' TimeSpan.FromMinutes(1)' TimeSpan.FromMinutes(60));
Magic Number,MassTransit.Tests.Audit,InMemoryAuditStore,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Audit\InMemoryAuditStore.cs,InMemoryAuditStore,The following statement contains a magic number: var cacheSettings = new CacheSettings(10000' TimeSpan.FromMinutes(1)' TimeSpan.FromMinutes(60));
Magic Number,MassTransit.Tests.AutomatonymousIntegration,Correlation_a_state_machine_by_guid,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\CorrelateGuid_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.StateMachineSaga(_machine' _repository' x =>              {                  x.Message<BeginTransaction>(m => m.UsePartitioner(4' p => p.Message.TransactionId));              });
Magic Number,MassTransit.Tests.AutomatonymousIntegration,When_an_exception_is_filtered,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\FilterFault_Specs.cs,Should_be_able_to_observe_its_own_event_fault,The following statement contains a magic number: Guid? saga = await _repository.ShouldContainSaga(x => x.CorrelationId == message.CorrelationId                  && GetCurrentState(x) == _machine.WaitingToStart' TimeSpan.FromSeconds(8));
Magic Number,MassTransit.Tests.AutomatonymousIntegration,When_an_exception_is_filtered,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\FilterFault_Specs.cs,Should_be_able_to_observe_its_own_event_fault,The following statement contains a magic number: saga = await _repository.ShouldContainSaga(x => x.CorrelationId == message.CorrelationId                  && GetCurrentState(x) == _machine.WaitingToStart && x.StartAttempts == 1' TimeSpan.FromSeconds(8));
Magic Number,MassTransit.Tests.AutomatonymousIntegration,When_an_exception_is_filtered,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\FilterFault_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.UseRetry(x =>              {                  x.Ignore<NotSupportedException>();                  x.Immediate(2);              });
Magic Number,MassTransit.Tests.AutomatonymousIntegration,When_an_event_is_defined_as_ignored_for_state,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Ignore_Specs.cs,Should_not_throw_an_exception_when_receiving_ignored_event,The following statement contains a magic number: var faultMessage = await GetFaultMessage(TimeSpan.FromSeconds(3));
Magic Number,MassTransit.Tests.AutomatonymousIntegration,When_an_event_is_defined_as_ignored_for_state,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Ignore_Specs.cs,GetFaultMessage,The following statement contains a magic number: await Task.Delay(10).ConfigureAwait(false);
Magic Number,MassTransit.Tests.AutomatonymousIntegration,InMemoryDeadlock_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\InMemoryDeadlock_Specs.cs,Should_not_deadlock_on_the_repository,The following statement contains a magic number: await Task.Delay(990);
Magic Number,MassTransit.Tests.AutomatonymousIntegration,DeadlockStateMachine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\InMemoryDeadlock_Specs.cs,DeadlockStateMachine,The following statement contains a magic number: During(Active'                      When(Complete)                          .ThenAsync(async context =>                          {                              await Console.Out.WriteLineAsync($"Completing: {context.Instance.CorrelationId}");                              await Task.Delay(1000);                              await Console.Out.WriteLineAsync($"Completed: {context.Instance.CorrelationId}");                          })                          .Finalize()'                      When(Cancel)                          .ThenAsync(async context =>                          {                              await Console.Out.WriteLineAsync($"Canceling: {context.Instance.CorrelationId}");                              await Task.Delay(1000);                              await Console.Out.WriteLineAsync($"Canceled: {context.Instance.CorrelationId}");                          })                          .Finalize());
Magic Number,MassTransit.Tests.AutomatonymousIntegration,DeadlockStateMachine,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\InMemoryDeadlock_Specs.cs,DeadlockStateMachine,The following statement contains a magic number: During(Active'                      When(Complete)                          .ThenAsync(async context =>                          {                              await Console.Out.WriteLineAsync($"Completing: {context.Instance.CorrelationId}");                              await Task.Delay(1000);                              await Console.Out.WriteLineAsync($"Completed: {context.Instance.CorrelationId}");                          })                          .Finalize()'                      When(Cancel)                          .ThenAsync(async context =>                          {                              await Console.Out.WriteLineAsync($"Canceling: {context.Instance.CorrelationId}");                              await Task.Delay(1000);                              await Console.Out.WriteLineAsync($"Canceled: {context.Instance.CorrelationId}");                          })                          .Finalize());
Magic Number,MassTransit.Tests.AutomatonymousIntegration,Partitioning_a_saga,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\Partitioning_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.StateMachineSaga(new TestStateMachine()' _repository' cfg =>              {                  cfg.Message<CreateSaga>(m => m.UsePartitioner(4' p => p.Message.CorrelationId));                  cfg.SagaMessage<CreateSaga>(m => m.Message(mx => mx.UseExecute(context =>                  {                  })));              });
Magic Number,MassTransit.Tests.AutomatonymousIntegration,When_a_saga_goes_straight_to_finalized,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\AutomatonymousIntegration\RemoveWhen_Specs.cs,Should_remove_the_saga_once_completed,The following statement contains a magic number: await Task.Delay(50);
Magic Number,MassTransit.Tests,When_a_batch_limit_is_reached,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: Assert.That(batch.Length' Is.EqualTo(2));
Magic Number,MassTransit.Tests,When_a_batch_limit_is_reached,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>             {                 x.MessageLimit = 2;                  x.Consumer(() => _consumer);             });
Magic Number,MassTransit.Tests,When_I_like_big_batches_and_I_cannot_lie,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: await Task.WhenAll(Enumerable.Range(0' 100).Select(_ => InputQueueSendEndpoint.Send(new PingMessage())));
Magic Number,MassTransit.Tests,When_I_like_big_batches_and_I_cannot_lie,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: Assert.That(batch.Length' Is.EqualTo(100));
Magic Number,MassTransit.Tests,When_I_like_big_batches_and_I_cannot_lie,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,ConfigureInMemoryBus,The following statement contains a magic number: configurator.TransportConcurrencyLimit = 200;
Magic Number,MassTransit.Tests,When_I_like_big_batches_and_I_cannot_lie,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>             {                 x.MessageLimit = 100;                  x.Consumer(() => _consumer);             });
Magic Number,MassTransit.Tests,Receiving_a_single_message_in_a_batch,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>             {                 x.MessageLimit = 2;                 x.TimeLimit = TimeSpan.FromMilliseconds(500);                  x.Consumer(() => _consumer);             });
Magic Number,MassTransit.Tests,Receiving_a_single_message_in_a_batch,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>             {                 x.MessageLimit = 2;                 x.TimeLimit = TimeSpan.FromMilliseconds(500);                  x.Consumer(() => _consumer);             });
Magic Number,MassTransit.Tests,Using_a_batch_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>             {                 x.MessageLimit = 2;                 x.TimeLimit = TimeSpan.FromMilliseconds(500);                  x.Consumer(() => _consumer);             });
Magic Number,MassTransit.Tests,Using_a_batch_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Batch_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>             {                 x.MessageLimit = 2;                 x.TimeLimit = TimeSpan.FromMilliseconds(500);                  x.Consumer(() => _consumer);             });
Magic Number,MassTransit.Tests,When_using_the_binary_serializer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BinarySerializer_Specs.cs,Should_be_possibile_to_send_and_consume_faults,The following statement contains a magic number: var completedTask = await Task.WhenAny(faultTask' Task.Delay(2000));
Magic Number,MassTransit.Tests,When_sending_messages_using_the_binary_serializer_between_multiple_bus_istances,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BinarySerializer_Specs.cs,Should_be_able_to_consume_messages_polymorphically_if_the_receiving_bus_support_the_binary_serializer,The following statement contains a magic number: var head = new ListNode {Value = 100};
Magic Number,MassTransit.Tests,When_sending_messages_using_the_binary_serializer_between_multiple_bus_istances,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BinarySerializer_Specs.cs,Should_be_able_to_consume_messages_polymorphically_if_the_receiving_bus_support_the_binary_serializer,The following statement contains a magic number: var tail = new ListNode {Next = head' Value = 200};
Magic Number,MassTransit.Tests,When_sending_messages_using_the_binary_serializer_between_multiple_bus_istances,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BinarySerializer_Specs.cs,Should_be_able_to_consume_messages_polymorphically_if_the_receiving_bus_support_the_binary_serializer,The following statement contains a magic number: var messageToSend = new Derived()                 {                     PropBase = 10'                     PropDerived = 20'                     Head = head                 };
Magic Number,MassTransit.Tests,When_sending_messages_using_the_binary_serializer_between_multiple_bus_istances,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BinarySerializer_Specs.cs,Should_be_able_to_consume_messages_polymorphically_if_the_receiving_bus_support_the_binary_serializer,The following statement contains a magic number: var messageToSend = new Derived()                 {                     PropBase = 10'                     PropDerived = 20'                     Head = head                 };
Magic Number,MassTransit.Tests,When_sending_messages_using_the_binary_serializer_between_multiple_bus_istances,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BinarySerializer_Specs.cs,Should_be_able_to_consume_messages_polymorphically_if_the_receiving_bus_support_the_binary_serializer,The following statement contains a magic number: var completedTask = await Task.WhenAny(consumed.Task' Task.Delay(250));
Magic Number,MassTransit.Tests,BusActivityMonitor_Specs<TConsumer>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BusActivityMonitor_Specs.cs,Should_detect_inactivity,The following statement contains a magic number: var timeout = await _activityMonitor.AwaitBusInactivity(TimeSpan.FromSeconds(10)).ConfigureAwait(false);
Magic Number,MassTransit.Tests,BusActivityMonitor_Specs<TConsumer>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BusActivityMonitor_Specs.cs,ConnectObservers,The following statement contains a magic number: _activityMonitor = bus.CreateBusActivityMonitor(TimeSpan.FromMilliseconds(500));
Magic Number,MassTransit.Tests,BusActivityMonitor_Specs<TConsumer>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\BusActivityMonitor_Specs.cs,ActivityTask,The following statement contains a magic number: i < 10
Magic Number,MassTransit.Tests,Using_the_circuit_breaker,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\CircuitBreaker_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.UseCircuitBreaker(x => x.ResetInterval = TimeSpan.FromSeconds(30));
Magic Number,MassTransit.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ConcurrencyLimitKnob_Specs.cs,Should_allow_reconfiguration,The following statement contains a magic number: var response = await client.GetResponse<ConcurrencyLimitUpdated>(new              {                  ConcurrencyLimit = 16'                  Timestamp = DateTime.UtcNow              });
Magic Number,MassTransit.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ConcurrencyLimitKnob_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.UseConcurrencyLimit(32' _management);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Should_include_nullable_long,The following statement contains a magic number: Assert.AreEqual(123' _values.LongValue.Value);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Should_include_nullable_timespan,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(5)' _values.TimeSpanValue.Value);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Should_include_nullable_timespan_as_string,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMilliseconds(20)' _values.TimeSpanValueAsString.Value);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Should_include_the_bag_of_dicts,The following statement contains a magic number: Assert.AreEqual(2' _values.BagOfDicts.Count);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Should_include_the_integer,The following statement contains a magic number: Assert.AreEqual(27' _values.IntValue);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Should_include_the_list_of_sub_values,The following statement contains a magic number: Assert.AreEqual(2' _values.ListOfSubValues.Count);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Should_include_the_sub_values,The following statement contains a magic number: Assert.AreEqual(2' _values.SubValues.Length);
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Setup,The following statement contains a magic number: _dictionary = new Dictionary<string' object>              {                  {"IntValue"' 27}'                  {"StringValue"' "Hello"}'                  {"LongValue"' (long?)123}'                  {"TimeSpanValue"' TimeSpan.FromSeconds(5)}'                  {"TimeSpanValueAsString"' "00:00:00.0200000"}'                  {"ValueType"' ValueType.Integer}'                  {"ValueTypeAsInt"' 2}'                  {"ValueTypeAsString"' "String"}'                  {                      "SubValue"' new Dictionary<string' object>                      {                          {"A"' "A"}'                          {"B"' "B"}                      }                  }'                  {"StringValues"' new object[] {"A"' "B"' "C"}}'                  {                      "SubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "ListOfSubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "BagOfDicts"' new object[]                      {                          new object[] {"First"' "One"}'                          new object[] {"Second"' "Two"}'                      }                  }              };
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Setup,The following statement contains a magic number: _dictionary = new Dictionary<string' object>              {                  {"IntValue"' 27}'                  {"StringValue"' "Hello"}'                  {"LongValue"' (long?)123}'                  {"TimeSpanValue"' TimeSpan.FromSeconds(5)}'                  {"TimeSpanValueAsString"' "00:00:00.0200000"}'                  {"ValueType"' ValueType.Integer}'                  {"ValueTypeAsInt"' 2}'                  {"ValueTypeAsString"' "String"}'                  {                      "SubValue"' new Dictionary<string' object>                      {                          {"A"' "A"}'                          {"B"' "B"}                      }                  }'                  {"StringValues"' new object[] {"A"' "B"' "C"}}'                  {                      "SubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "ListOfSubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "BagOfDicts"' new object[]                      {                          new object[] {"First"' "One"}'                          new object[] {"Second"' "Two"}'                      }                  }              };
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Setup,The following statement contains a magic number: _dictionary = new Dictionary<string' object>              {                  {"IntValue"' 27}'                  {"StringValue"' "Hello"}'                  {"LongValue"' (long?)123}'                  {"TimeSpanValue"' TimeSpan.FromSeconds(5)}'                  {"TimeSpanValueAsString"' "00:00:00.0200000"}'                  {"ValueType"' ValueType.Integer}'                  {"ValueTypeAsInt"' 2}'                  {"ValueTypeAsString"' "String"}'                  {                      "SubValue"' new Dictionary<string' object>                      {                          {"A"' "A"}'                          {"B"' "B"}                      }                  }'                  {"StringValues"' new object[] {"A"' "B"' "C"}}'                  {                      "SubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "ListOfSubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "BagOfDicts"' new object[]                      {                          new object[] {"First"' "One"}'                          new object[] {"Second"' "Two"}'                      }                  }              };
Magic Number,MassTransit.Tests,Converting_a_dictionary_to_an_object,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\DictionaryToObject_Specs.cs,Setup,The following statement contains a magic number: _dictionary = new Dictionary<string' object>              {                  {"IntValue"' 27}'                  {"StringValue"' "Hello"}'                  {"LongValue"' (long?)123}'                  {"TimeSpanValue"' TimeSpan.FromSeconds(5)}'                  {"TimeSpanValueAsString"' "00:00:00.0200000"}'                  {"ValueType"' ValueType.Integer}'                  {"ValueTypeAsInt"' 2}'                  {"ValueTypeAsString"' "String"}'                  {                      "SubValue"' new Dictionary<string' object>                      {                          {"A"' "A"}'                          {"B"' "B"}                      }                  }'                  {"StringValues"' new object[] {"A"' "B"' "C"}}'                  {                      "SubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "ListOfSubValues"' new object[]                      {                          new Dictionary<string' object>                          {                              {"A"' "A"}'                              {"B"' "B"}                          }'                          new Dictionary<string' object>                          {                              {"A"' "1"}'                              {"B"' "2"}                          }                      }                  }'                  {                      "BagOfDicts"' new object[]                      {                          new object[] {"First"' "One"}'                          new object[] {"Second"' "Two"}'                      }                  }              };
Magic Number,MassTransit.Tests,A_faulting_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\FaultPublish_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: _consumer = new PingConsumer(TimeSpan.FromSeconds(5));
Magic Number,MassTransit.Tests,A_faulting_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\FaultPublish_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.UseRetry(r => r.Immediate(5));
Magic Number,MassTransit.Tests,Serializing_an_object_in_a_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\HeaderObject_Specs.cs,Should_properly_serialize_and_deserialize,The following statement contains a magic number: await InputQueueSendEndpoint.Send(new PingMessage()' context =>              {                  context.Headers.Set("Claims-Identity"' new ClaimsIdentityProxy                  {                      IdentityType = "AAD:Claims"'                      IdentityId = 27'                      Claims = new[] {"One"' "two"' "Three"}'                  });              });
Magic Number,MassTransit.Tests,Serializing_an_object_in_a_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\HeaderObject_Specs.cs,Should_properly_serialize_and_deserialize,The following statement contains a magic number: Assert.AreEqual(27' identity.IdentityId);
Magic Number,MassTransit.Tests,Sending_a_message_that_implements_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\InterfaceSubscription_Specs.cs,Should_deliver_the_message_to_an_both_interested_consumers,The following statement contains a magic number: var message = new SomeMessageContract("Joe"' 27);
Magic Number,MassTransit.Tests,Sending_a_message_that_implements_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\InterfaceSubscription_Specs.cs,Should_deliver_the_message_to_an_interested_consumer,The following statement contains a magic number: var message = new SomeMessageContract("Joe"' 27);
Magic Number,MassTransit.Tests,Probing_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Introspection_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(async context =>              {              }' x =>              {                  x.UseRateLimit(100' TimeSpan.FromSeconds(1));                  x.UseConcurrencyLimit(32);              });
Magic Number,MassTransit.Tests,Probing_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Introspection_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(async context =>              {              }' x =>              {                  x.UseRateLimit(100' TimeSpan.FromSeconds(1));                  x.UseConcurrencyLimit(32);              });
Magic Number,MassTransit.Tests,Using_a_JsonToken_to_convert_types,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\JsonToken_Specs.cs,Should_support_int,The following statement contains a magic number: Assert.AreEqual(27' value);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Should_handle_a_dictionary_of_strings,The following statement contains a magic number: Assert.AreEqual(2' values.Length);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Should_handle_a_dictionary_of_values,The following statement contains a magic number: Assert.AreEqual(2' values.Length);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Should_round_trip_successfully,The following statement contains a magic number: Assert.AreEqual(_expected.Names[2]' values.Names[2]);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Should_round_trip_successfully,The following statement contains a magic number: Assert.AreEqual(_expected.Names[2]' values.Names[2]);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Setup,The following statement contains a magic number: _expected = new ValuesImpl("Hello"' 27' new DateTime(2012' 10' 1)' null' 123.45m);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Setup,The following statement contains a magic number: _expected = new ValuesImpl("Hello"' 27' new DateTime(2012' 10' 1)' null' 123.45m);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Setup,The following statement contains a magic number: _expected = new ValuesImpl("Hello"' 27' new DateTime(2012' 10' 1)' null' 123.45m);
Magic Number,MassTransit.Tests,Creating_a_dictionary_from_an_interface,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ObjectToDictionary_Specs.cs,Setup,The following statement contains a magic number: _expected = new ValuesImpl("Hello"' 27' new DateTime(2012' 10' 1)' null' 123.45m);
Magic Number,MassTransit.Tests,Sending_messages_through_the_outbox,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Outbox_Specs.cs,Should_not_receive_the_response,The following statement contains a magic number: Assert.That(async () =>                  {                      var response = await Bus.Request<PingMessage' PongMessage>(InputQueueAddress' new PingMessage()' TestCancellationToken'                          RequestTimeout.After(s: 3));                  }'                  Throws.TypeOf<RequestFaultException>());
Magic Number,MassTransit.Tests,Sending_messages_through_the_outbox,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Outbox_Specs.cs,Should_not_receive_the_response,The following statement contains a magic number: Assert.That(                  async () => await responseHandler.OrCanceled(new CancellationTokenSource(300).Token)'                  Throws.TypeOf<OperationCanceledException>());
Magic Number,MassTransit.Tests,Using_the_new_request_client_syntax,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_throw_a_timeout_exception_with_milliseconds,The following statement contains a magic number: var client = Bus.CreateRequestClient<GetValue>(InputQueueAddress' 100);
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_cancellation,The following statement contains a magic number: var timeout = TimeSpan.FromMilliseconds(100);
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_cancellation,The following statement contains a magic number: var ctsTimeout = TimeSpan.FromMilliseconds(100);
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_cancellation,The following statement contains a magic number: int numOfLoops = 5;
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_cancellation,The following statement contains a magic number: await client.GetResponse<PongMessage>(new PingMessage()' timeoutReq.Token)                              .OrTimeout(TimeSpan.FromSeconds(5))                              .ConfigureAwait(false);
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_an_earlier_timeout,The following statement contains a magic number: var timeout = TimeSpan.FromMilliseconds(100);
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_an_earlier_timeout,The following statement contains a magic number: var ctsTimeout = TimeSpan.FromMilliseconds(140);
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_an_earlier_timeout,The following statement contains a magic number: int numOfLoops = 5;
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,Should_handle_an_earlier_timeout,The following statement contains a magic number: await client.GetResponse<PongMessage>(new PingMessage()' timeoutReq.Token)                              .OrTimeout(TimeSpan.FromSeconds(5))                              .ConfigureAwait(false);
Magic Number,MassTransit.Tests,Using_the_request_client_with_cancellation_token,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClientNew_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: Handler<PingMessage>(configurator' async context =>              {                  await Task.Delay(500);                  await context.RespondAsync(new PongMessage()' responseContext =>                  {                  });              });
Magic Number,MassTransit.Tests,Sending_a_request_to_a_missing_service_that_times_out,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClient_Specs.cs,Should_timeout,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,MassTransit.Tests,Cancelling_a_request_mid_stream,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClient_Specs.cs,Setup,The following statement contains a magic number: Task.Run(async () =>              {                  await Task.Delay(500);                  cts.Cancel();              });
Magic Number,MassTransit.Tests,Cancelling_a_request_mid_stream,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\RequestClient_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: _ping = Handler<PingMessage>(configurator' async x =>              {                  await Task.Delay(2000);                  await x.RespondAsync(new PongMessage(x.Message.CorrelationId));              });
Magic Number,MassTransit.Tests,When_specifying_retry_for_the_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_only_call_the_handler_once,The following statement contains a magic number: Consumer.Attempts.ShouldBe(6);
Magic Number,MassTransit.Tests,When_specifying_retry_for_the_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Consumer(() => new Consumer()' x =>              {                  x.UseRetry(r => r.Immediate(5));              });
Magic Number,MassTransit.Tests,When_specifying_the_bus_level_retry_policy,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_only_call_the_handler_twice,The following statement contains a magic number: _attempts.ShouldBe(2);
Magic Number,MassTransit.Tests,When_specifying_the_bus_level_retry_policy_for_base_type,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_only_call_the_handler_twice,The following statement contains a magic number: _attempts.ShouldBe(2);
Magic Number,MassTransit.Tests,When_both_levels_of_retry_are_specified,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_only_call_the_inner_policy,The following statement contains a magic number: _attempts.ShouldBe(4);
Magic Number,MassTransit.Tests,When_both_levels_of_retry_are_specified,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_only_call_the_inner_policy,The following statement contains a magic number: _lastCount.ShouldBe(2);
Magic Number,MassTransit.Tests,When_both_levels_of_retry_are_specified,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_only_call_the_inner_policy,The following statement contains a magic number: _lastAttempt.ShouldBe(3);
Magic Number,MassTransit.Tests,When_both_levels_of_retry_are_specified,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.UseRetry(x => x.Immediate(3));
Magic Number,MassTransit.Tests,When_the_retry_is_specified_within_the_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_have_the_proper_counts,The following statement contains a magic number: Consumer.Attempts.ShouldBe(4);
Magic Number,MassTransit.Tests,When_the_retry_is_specified_within_the_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_have_the_proper_counts,The following statement contains a magic number: Consumer.LastCount.ShouldBe(2);
Magic Number,MassTransit.Tests,When_the_retry_is_specified_within_the_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_have_the_proper_counts,The following statement contains a magic number: Consumer.LastAttempt.ShouldBe(3);
Magic Number,MassTransit.Tests,When_the_retry_is_specified_within_the_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Consumer<Consumer>(cfg =>              {                  cfg.UseRetry(x => x.Immediate(3));              });
Magic Number,MassTransit.Tests,When_eventually_you_succeed,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,After_try_trying_again,The following statement contains a magic number: await Task.Delay(100);
Magic Number,MassTransit.Tests,When_eventually_you_succeed,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,After_try_trying_again,The following statement contains a magic number: _attempts.ShouldBe(2);
Magic Number,MassTransit.Tests,When_you_say_deuces_and_stop_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Retry_Specs.cs,Should_cancel_the_retry_and_give_it_up,The following statement contains a magic number: await Task.Delay(100);
Magic Number,MassTransit.Tests,Accessing_payload_from_consume_context_in_send_context,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SendContextMiddleware_Specs.cs,Should_contain_the_same_payloads,The following statement contains a magic number: var sendObserver = new TestSendObserver(TimeSpan.FromSeconds(3));
Magic Number,MassTransit.Tests,Accessing_payload_from_consume_context_in_publish_context,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SendContextMiddleware_Specs.cs,Should_contain_the_same_payloads,The following statement contains a magic number: var publishObserver = new BusTestPublishObserver(TimeSpan.FromSeconds(3));
Magic Number,MassTransit.Tests,SimpleConfiguration_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SimpleConfiguration_Specs.cs,FirstTestName,The following statement contains a magic number: IBusControl busControl = Bus.Factory.                  CreateUsingInMemory(x =>              {                  x.UseTransform<PingMessage>(v =>                  {                  });                    x.UseConcurrencyLimit(3);                  x.UseRateLimit(1000);                  x.UseTransaction();                    x.ReceiveEndpoint("input_queue"' e =>                  {                      e.Saga(new InMemorySagaRepository<SimpleSaga>()' s =>                      {                          s.UseConcurrentMessageLimit(1);                          s.UseRateLimit(1000);                      });                        e.Consumer<MyConsumer>(c =>                      {                          c.UseConcurrentMessageLimit(1);                          c.UseRateLimit(100);                      });                        e.UseTransaction();                      e.UseConcurrencyLimit(7);                      e.UseRateLimit(100);                  });              });
Magic Number,MassTransit.Tests,SimpleConfiguration_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SimpleConfiguration_Specs.cs,FirstTestName,The following statement contains a magic number: IBusControl busControl = Bus.Factory.                  CreateUsingInMemory(x =>              {                  x.UseTransform<PingMessage>(v =>                  {                  });                    x.UseConcurrencyLimit(3);                  x.UseRateLimit(1000);                  x.UseTransaction();                    x.ReceiveEndpoint("input_queue"' e =>                  {                      e.Saga(new InMemorySagaRepository<SimpleSaga>()' s =>                      {                          s.UseConcurrentMessageLimit(1);                          s.UseRateLimit(1000);                      });                        e.Consumer<MyConsumer>(c =>                      {                          c.UseConcurrentMessageLimit(1);                          c.UseRateLimit(100);                      });                        e.UseTransaction();                      e.UseConcurrencyLimit(7);                      e.UseRateLimit(100);                  });              });
Magic Number,MassTransit.Tests,SimpleConfiguration_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SimpleConfiguration_Specs.cs,FirstTestName,The following statement contains a magic number: IBusControl busControl = Bus.Factory.                  CreateUsingInMemory(x =>              {                  x.UseTransform<PingMessage>(v =>                  {                  });                    x.UseConcurrencyLimit(3);                  x.UseRateLimit(1000);                  x.UseTransaction();                    x.ReceiveEndpoint("input_queue"' e =>                  {                      e.Saga(new InMemorySagaRepository<SimpleSaga>()' s =>                      {                          s.UseConcurrentMessageLimit(1);                          s.UseRateLimit(1000);                      });                        e.Consumer<MyConsumer>(c =>                      {                          c.UseConcurrentMessageLimit(1);                          c.UseRateLimit(100);                      });                        e.UseTransaction();                      e.UseConcurrencyLimit(7);                      e.UseRateLimit(100);                  });              });
Magic Number,MassTransit.Tests,SimpleConfiguration_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SimpleConfiguration_Specs.cs,FirstTestName,The following statement contains a magic number: IBusControl busControl = Bus.Factory.                  CreateUsingInMemory(x =>              {                  x.UseTransform<PingMessage>(v =>                  {                  });                    x.UseConcurrencyLimit(3);                  x.UseRateLimit(1000);                  x.UseTransaction();                    x.ReceiveEndpoint("input_queue"' e =>                  {                      e.Saga(new InMemorySagaRepository<SimpleSaga>()' s =>                      {                          s.UseConcurrentMessageLimit(1);                          s.UseRateLimit(1000);                      });                        e.Consumer<MyConsumer>(c =>                      {                          c.UseConcurrentMessageLimit(1);                          c.UseRateLimit(100);                      });                        e.UseTransaction();                      e.UseConcurrencyLimit(7);                      e.UseRateLimit(100);                  });              });
Magic Number,MassTransit.Tests,SimpleConfiguration_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SimpleConfiguration_Specs.cs,FirstTestName,The following statement contains a magic number: IBusControl busControl = Bus.Factory.                  CreateUsingInMemory(x =>              {                  x.UseTransform<PingMessage>(v =>                  {                  });                    x.UseConcurrencyLimit(3);                  x.UseRateLimit(1000);                  x.UseTransaction();                    x.ReceiveEndpoint("input_queue"' e =>                  {                      e.Saga(new InMemorySagaRepository<SimpleSaga>()' s =>                      {                          s.UseConcurrentMessageLimit(1);                          s.UseRateLimit(1000);                      });                        e.Consumer<MyConsumer>(c =>                      {                          c.UseConcurrentMessageLimit(1);                          c.UseRateLimit(100);                      });                        e.UseTransaction();                      e.UseConcurrencyLimit(7);                      e.UseRateLimit(100);                  });              });
Magic Number,MassTransit.Tests,SimpleConfiguration_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\SimpleConfiguration_Specs.cs,FirstTestName,The following statement contains a magic number: IBusControl busControl = Bus.Factory.                  CreateUsingInMemory(x =>              {                  x.UseTransform<PingMessage>(v =>                  {                  });                    x.UseConcurrencyLimit(3);                  x.UseRateLimit(1000);                  x.UseTransaction();                    x.ReceiveEndpoint("input_queue"' e =>                  {                      e.Saga(new InMemorySagaRepository<SimpleSaga>()' s =>                      {                          s.UseConcurrentMessageLimit(1);                          s.UseRateLimit(1000);                      });                        e.Consumer<MyConsumer>(c =>                      {                          c.UseConcurrentMessageLimit(1);                          c.UseRateLimit(100);                      });                        e.UseTransaction();                      e.UseConcurrencyLimit(7);                      e.UseRateLimit(100);                  });              });
Magic Number,MassTransit.Tests,when_getting_static_properties,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\StaticProperty_Specs.cs,Can_get_even_with_private_getter,The following statement contains a magic number: Assert.That(props.Count()' Is.EqualTo(2));
Magic Number,MassTransit.Tests,when_getting_static_properties,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\StaticProperty_Specs.cs,Can_get_private_static_properties,The following statement contains a magic number: Assert.That(props.Count()' Is.EqualTo(2));
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_value_type_property,The following statement contains a magic number: var subject = Task.FromResult(new Subject {Id = 27});
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_value_type_property,The following statement contains a magic number: Assert.That(result' Is.EqualTo(27));
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_nullable_value_type_property,The following statement contains a magic number: var subject = Task.FromResult(new Subject {MemberId = 27});
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_nullable_value_type_property,The following statement contains a magic number: Assert.That(result' Is.EqualTo(27));
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_null_nullable_default_value_for_value_type_property,The following statement contains a magic number: var result = await subject.Select(x => x.MemberId' 27);
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_null_nullable_default_value_for_value_type_property,The following statement contains a magic number: Assert.That(result' Is.EqualTo(27));
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_null_nullable_default_value_provider_for_value_type_property,The following statement contains a magic number: var result = await subject.Select(x => x.MemberId' () => 27);
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_null_nullable_default_value_provider_for_value_type_property,The following statement contains a magic number: Assert.That(result' Is.EqualTo(27));
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_null_nullable_default_value_async_provider_for_value_type_property,The following statement contains a magic number: var result = await subject.Select(x => x.MemberId' () => Task.FromResult(27));
Magic Number,MassTransit.Tests,TaskExtension_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TaskExtension_Specs.cs,Should_return_the_null_nullable_default_value_async_provider_for_value_type_property,The following statement contains a magic number: Assert.That(result' Is.EqualTo(27));
Magic Number,MassTransit.Tests,When_configuring_the_thread_pool_for_a_high_number_of_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Threading_Specs.cs,When_configuring_the_thread_pool_for_a_high_number_of_consumers,The following statement contains a magic number: _before = new Semaphore(0' 100);
Magic Number,MassTransit.Tests,When_configuring_the_thread_pool_for_a_high_number_of_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Threading_Specs.cs,When_configuring_the_thread_pool_for_a_high_number_of_consumers,The following statement contains a magic number: _after = new Semaphore(0' 100);
Magic Number,MassTransit.Tests,When_configuring_the_thread_pool_for_a_high_number_of_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Threading_Specs.cs,Should_scale_threads_to_meet_demand,The following statement contains a magic number: Assert.IsTrue(_before.WaitOne(TimeSpan.FromSeconds(30))' "Consumer thread failed to start");
Magic Number,MassTransit.Tests,When_configuring_the_thread_pool_for_a_high_number_of_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Threading_Specs.cs,Should_scale_threads_to_meet_demand,The following statement contains a magic number: i < 100
Magic Number,MassTransit.Tests,When_configuring_the_thread_pool_for_a_high_number_of_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Threading_Specs.cs,Should_scale_threads_to_meet_demand,The following statement contains a magic number: Assert.IsTrue(_after.WaitOne(TimeSpan.FromSeconds(30))' "Consumer thread failed to complete");
Magic Number,MassTransit.Tests,When_configuring_the_thread_pool_for_a_high_number_of_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Threading_Specs.cs,Should_scale_threads_to_meet_demand,The following statement contains a magic number: i < 100
Magic Number,MassTransit.Tests,TypeCastRetry_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TypeCastRetry_Specs.cs,ConfigureInMemoryBus,The following statement contains a magic number: var sec5 = TimeSpan.FromSeconds(5);
Magic Number,MassTransit.Tests,TypeCastRetry_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\TypeCastRetry_Specs.cs,ConfigureInMemoryBus,The following statement contains a magic number: configurator.UseRetry(x => x.Exponential(2' sec5' sec5' sec5));
Magic Number,MassTransit.Tests.Configuration,When_a_consumer_with_consumes_all_interfaces_is_inspected,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\ConsumesAll_Specs.cs,Should_have_four_subscription_types,The following statement contains a magic number: _factory.Connectors.Count().ShouldBe(4);
Magic Number,MassTransit.Tests.Configuration,When_a_saga_is_inspected,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\SagaConnector_Specs.cs,Should_have_three_subscription_types,The following statement contains a magic number: _factory.Connectors.Count().ShouldBe(3);
Magic Number,MassTransit.Tests.Configuration,When_a_saga_is_inspected,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\SagaConnector_Specs.cs,Should_have_a_c,The following statement contains a magic number: _factory.Connectors.Skip(2).First().MessageType.ShouldBe(typeof(ObservableSagaMessage));
Magic Number,MassTransit.Tests.Configuration,SendSpecification_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\SendSpecification_Specs.cs,Should_properly_use_the_original_specification_plus_more,The following statement contains a magic number: endpointSpecification.GetMessageSpecification<ITraceableMessage>()                  .UsePartitioner(8' x => NewId.NextGuid());
Magic Number,MassTransit.Tests.Configuration,SendSpecification_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\SendSpecification_Specs.cs,Should_properly_use_the_original_specification_plus_topology,The following statement contains a magic number: endpointSpecification.GetMessageSpecification<ITraceableMessage>()                  .UsePartitioner(8' x => NewId.NextGuid());
Magic Number,MassTransit.Tests.Configuration,SendSpecification_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\SendSpecification_Specs.cs,Should_properly_use_the_original_specification_plus_topology_on_type,The following statement contains a magic number: endpointSpecification.GetMessageSpecification<ITraceableMessage>()                  .UsePartitioner(8' x => NewId.NextGuid());
Magic Number,MassTransit.Tests.Configuration,TestMessageSendTopology<T>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Configuration\SendSpecification_Specs.cs,Apply,The following statement contains a magic number: builder.AddFilter(new RetryFilter<SendContext<T>>(new ImmediateRetryPolicy(new AllExceptionFilter()' 5)' new RetryObservable()));
Magic Number,MassTransit.Tests.Conventional,Configuring_a_consumer_by_custom_convention,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Conventional\ConventionConsumer_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.UseMessageRetry(r => r.Interval(1' 100));
Magic Number,MassTransit.Tests.Conventional,Configuring_a_consumer_without_a_matching_convention,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Conventional\ConventionConsumer_Specs.cs,Should_not_find_the_message_handlers,The following statement contains a magic number: Assert.That(async () => await _receivedA.Task.OrTimeout(TimeSpan.FromSeconds(3))' Throws.TypeOf<TimeoutException>());
Magic Number,MassTransit.Tests.Conventional,Configuring_a_consumer_without_a_matching_convention,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Conventional\ConventionConsumer_Specs.cs,Should_not_find_the_message_handlers,The following statement contains a magic number: Assert.That(async () => await _receivedB.Task.OrTimeout(TimeSpan.FromSeconds(3))' Throws.TypeOf<TimeoutException>());
Magic Number,MassTransit.Tests.Courier,Cyclical_references_in_an_argument,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\Builder_Specs.cs,Should_not_crater_the_planet,The following statement contains a magic number: outer.Inners = new Inner[2]              {                  new Inner {Parent = outer' Value = "First"}'                  new Inner {Parent = outer' Value = "Second"}'              };
Magic Number,MassTransit.Tests.Courier,Storing_an_object_graph_as_a_variable_or_argument,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ObjectGraph_Specs.cs,Should_work_for_activity_arguments,The following statement contains a magic number: _intValue = 27;
Magic Number,MassTransit.Tests.Courier,Storing_an_object_graph_as_a_variable_or_argument,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ObjectGraph_Specs.cs,Should_work_for_activity_arguments,The following statement contains a magic number: _decimalValue = 123.45m;
Magic Number,MassTransit.Tests.Courier,When_partitioning_by_activity_arguments,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\PartitionActivity_Specs.cs,ConfigureBus,The following statement contains a magic number: _partitioner = configurator.CreatePartitioner(8);
Magic Number,MassTransit.Tests.Courier,Using_a_routing_slip_for_a_request_response,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\RequestRoutingSlip_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<Request' Response>(Bus' _requestAddress' TimeSpan.FromSeconds(30));
Magic Number,MassTransit.Tests.Courier,Using_a_routing_slip_for_a_request_response_which_faults,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\RequestRoutingSlip_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<Request' Response>(Bus' _requestAddress' TimeSpan.FromSeconds(30));
Magic Number,MassTransit.Tests.Courier,When_using_retry_middleware_for_courier,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\RetryActivity_Specs.cs,ConfigureInMemoryBus,The following statement contains a magic number: configurator.UseMessageRetry(r => r.Immediate(2));
Magic Number,MassTransit.Tests.Courier,When_an_itinerary_is_revised,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Courier\ReviseItinerary_Specs.cs,Should_immediately_complete_an_empty_list,The following statement contains a magic number: testActivityCompleted.Wait(TimeSpan.FromSeconds(3)).ShouldBe(false);
Magic Number,MassTransit.Tests.Diagnostics,Registering_a_performance_counter_observer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Diagnostics\PerformanceCounter_Specs.cs,Should_update_performance_counters,The following statement contains a magic number: i < 1000
Magic Number,MassTransit.Tests.Diagnostics,Registering_a_performance_counter_observer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Diagnostics\PerformanceCounter_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(async context =>              {                  if (Interlocked.Increment(ref value) == 1000)                      _completed.TrySetResult(true);              });
Magic Number,MassTransit.Tests.Diagnostics,StatsD_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Diagnostics\StatsD_Specs.cs,RunSomeDataIn,The following statement contains a magic number: var iterations = 100000;
Magic Number,NoLog,An_excessive_fault_storm,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ExcessiveAsyncFault_Specs.cs,Should_not_explode_the_task_library,The following statement contains a magic number: var limit = 1000;
Magic Number,NoLog,MessageConsumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\ExcessiveAsyncFault_Specs.cs,Consume,The following statement contains a magic number: await Task.Delay(100);
Magic Number,MassTransit.Tests.Groups,Group_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Groups\Group_Specs.cs,It_should_be_easy_to_build_and_send_a_group_of_messages_with_multiple_messages,The following statement contains a magic number: Assert.AreEqual(3' messageGroup.Count());
Magic Number,MassTransit.Tests.Groups,Group_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Groups\Group_Specs.cs,Multiple_groups_should_be_combinable_into_a_single_group,The following statement contains a magic number: Assert.AreEqual(5' messageGroup.Count());
Magic Number,MassTransit.Tests.Initializers,Extracting_contract_from_type,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Contract_Specs.cs,Should_handle_simple_arguments,The following statement contains a magic number: Assert.That(contract.Properties.Length' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Extracting_contract_from_type,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Contract_Specs.cs,Should_create_a_dynamic_type,The following statement contains a magic number: Assert.That(properties.Length' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_dictionary,The following statement contains a magic number: dto.Add(nameof(MessageContract.Id)' 27);
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_dictionary,The following statement contains a magic number: Assert.That(message.Message.Id' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_list,The following statement contains a magic number: var dto = new             {                 Id = 32'                 CustomerId = "CustomerXp"'                 Product = new                 {                     Name = "Foo"'                     Category = "Bar"                 }'                 Orders = new[]                 {                     new                     {                         Id = Guid.NewGuid()'                         Product = new                         {                             Name = "Product"'                             Category = "Category"                         }'                         Quantity = 10'                         Price = 10.0m                     }                 }             };
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_list,The following statement contains a magic number: var dto = new             {                 Id = 32'                 CustomerId = "CustomerXp"'                 Product = new                 {                     Name = "Foo"'                     Category = "Bar"                 }'                 Orders = new[]                 {                     new                     {                         Id = Guid.NewGuid()'                         Product = new                         {                             Name = "Product"'                             Category = "Category"                         }'                         Quantity = 10'                         Price = 10.0m                     }                 }             };
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_list,The following statement contains a magic number: var dto = new             {                 Id = 32'                 CustomerId = "CustomerXp"'                 Product = new                 {                     Name = "Foo"'                     Category = "Bar"                 }'                 Orders = new[]                 {                     new                     {                         Id = Guid.NewGuid()'                         Product = new                         {                             Name = "Product"'                             Category = "Category"                         }'                         Quantity = 10'                         Price = 10.0m                     }                 }             };
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_list,The following statement contains a magic number: Assert.That(message.Message.Id' Is.EqualTo(32));
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_dictionary_sourced_object_property,The following statement contains a magic number: dto.Add(nameof(MessageContract.Id)' 27);
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_work_with_a_dictionary_sourced_object_property,The following statement contains a magic number: Assert.That(message.Message.Contract.Id' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_do_the_right_thing,The following statement contains a magic number: dto.Add(nameof(MessageContract.Id)' 27);
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_do_the_right_thing,The following statement contains a magic number: Assert.That(message.Message.Id' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_properly_handle_the_big_dto,The following statement contains a magic number: order.Amount = 123.45m;
Magic Number,MassTransit.Tests.Initializers,Initializing_using_a_dictionary,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\Expando_Specs.cs,Should_properly_handle_the_big_dto,The following statement contains a magic number: order.Id = 27;
Magic Number,MassTransit.Tests.Initializers,Specifying_a_message_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\HeaderInitializer_Specs.cs,Should_set_the_header_on_send,The following statement contains a magic number: await Bus.Publish<Ping>(new             {                 __ResponseAddress = responseAddress'                 __RequestId = requestId'                 __TimeToLive = 5000'                 __Header_Custom_Header_Value = "Frankie Say Relax"'                 __Header_Custom_Header_Value2 = 27'                 Text = "Hello"             });
Magic Number,MassTransit.Tests.Initializers,Specifying_a_message_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\HeaderInitializer_Specs.cs,Should_set_the_header_on_send,The following statement contains a magic number: await Bus.Publish<Ping>(new             {                 __ResponseAddress = responseAddress'                 __RequestId = requestId'                 __TimeToLive = 5000'                 __Header_Custom_Header_Value = "Frankie Say Relax"'                 __Header_Custom_Header_Value2 = 27'                 Text = "Hello"             });
Magic Number,MassTransit.Tests.Initializers,Specifying_a_message_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\HeaderInitializer_Specs.cs,Should_set_the_header_on_send,The following statement contains a magic number: Assert.That(context.ExpirationTime.Value' Is.GreaterThanOrEqualTo(now + TimeSpan.FromSeconds(5)));
Magic Number,MassTransit.Tests.Initializers,Specifying_a_message_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\HeaderInitializer_Specs.cs,Should_set_the_header_on_send,The following statement contains a magic number: Assert.That(value' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,Creating_a_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_initialize_the_properties,The following statement contains a magic number: var response = await client.GetResponse<ComplexResponse>(new             {                 Name = "Hello"'                 IntValue = 27'                 NullableIntValue = 42             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_initialize_the_properties,The following statement contains a magic number: var response = await client.GetResponse<ComplexResponse>(new             {                 Name = "Hello"'                 IntValue = 27'                 NullableIntValue = 42             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_initialize_the_properties,The following statement contains a magic number: Assert.That(response.Message.IntValue.Value' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,Creating_a_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_initialize_the_properties,The following statement contains a magic number: Assert.That(response.Message.NullableIntValue' Is.EqualTo(42));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Setup,The following statement contains a magic number: _response = await client.GetResponse<SuperComplexResponse>(new             {                 InVar.CorrelationId'                 InVar.Id'                 InVar.Timestamp'                 StringId = InVar.Id'                 StringValue = "Hello"'                 IntValue = 27'                 DateTimeValue = _now'                 NullableValue = 42'                 NotNullableValue = (int?)69'                 NullableDecimalValue = 123.45m'                 Numbers = new[] {12' 24' 36}'                 Names = new[] {"Curly"' "Larry"' "Moe"}'                 Exception = new IntentionalTestException("It Happens")'                 SubValue = new {Text = "Mary"}'                 SubValues = new object[] {new {Text = "Frank"}' new {Text = "Lola"}'}'                 Amount = 867.53m'                 Amounts = Enumerable.Repeat(98.6m' 2)'                 AsyncValue = GetIntResult().Select(x => x.Number)'                 EngineStatus = Status.Started'                 NumberStatus = 12'                 StringStatus = "Started"'                 ServiceAddress = new Uri("http://masstransit-project.com")'                 OtherAddress = "http://github.com"'                 StringAddress = new Uri("loopback://localhost")'                 StringList = new[] {"Frank"' "Estelle"}'                 NewProperty = new SubProperty {NewProperty = "Hello"}'                 Strings = new Dictionary<string' string>                 {                     {"Hello"' "World"}'                     {"Thank You"' "Next"}                 }'                 StringSubValues = new Dictionary<string' object>                 {                     {"A"' new {Text = "Eh"}}'                     {"B"' new {Text = "Bee"}}                 }'                 IntToStrings = new Dictionary<int' long>                 {                     {100' 1000}'                     {200' 2000}'                 }             });
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_int,The following statement contains a magic number: Assert.That(_response.Message.IntValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_nullable_long,The following statement contains a magic number: Assert.That(_response.Message.NullableValue' Is.EqualTo(42));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_long_from_nullable,The following statement contains a magic number: Assert.That(_response.Message.NotNullableValue' Is.EqualTo(69));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_nullable_decimal,The following statement contains a magic number: Assert.That(_response.Message.NullableDecimalValue' Is.EqualTo(123.45m));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_int_to_string_array,The following statement contains a magic number: Assert.That(_response.Message.Numbers.Length' Is.EqualTo(3));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_int_to_string_array,The following statement contains a magic number: Assert.That(_response.Message.Numbers[2]' Is.EqualTo("36"));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_enumerable_decimal,The following statement contains a magic number: Assert.That(_response.Message.Amounts.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_enumerable_decimal,The following statement contains a magic number: Assert.That(_response.Message.Amounts[0]' Is.EqualTo(98.6m));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_enumerable_decimal,The following statement contains a magic number: Assert.That(_response.Message.Amounts[1]' Is.EqualTo(98.6m));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_string_array,The following statement contains a magic number: Assert.That(_response.Message.Names.Length' Is.EqualTo(3));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_string_array,The following statement contains a magic number: Assert.That(_response.Message.Names[2]' Is.EqualTo("Moe"));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_interface_type_array,The following statement contains a magic number: Assert.That(_response.Message.SubValues.Length' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_decimal,The following statement contains a magic number: Assert.That(_response.Message.Amount' Is.EqualTo(867.53m));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_task_of_task_of_int,The following statement contains a magic number: Assert.That(_response.Message.AsyncValue' Is.EqualTo(37));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_lists,The following statement contains a magic number: Assert.That(_response.Message.StringList.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_basic_dictionary,The following statement contains a magic number: Assert.That(_response.Message.Strings.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_object_dictionary,The following statement contains a magic number: Assert.That(_response.Message.StringSubValues.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_conversion_dictionary,The following statement contains a magic number: Assert.That(_response.Message.IntToStrings.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_conversion_dictionary,The following statement contains a magic number: Assert.That(_response.Message.IntToStrings[100]' Is.EqualTo("1000"));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,Should_handle_conversion_dictionary,The following statement contains a magic number: Assert.That(_response.Message.IntToStrings[200]' Is.EqualTo("2000"));
Magic Number,MassTransit.Tests.Initializers,Creating_a_super_complex_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\MessageInitializer_Specs.cs,GetIntResult,The following statement contains a magic number: return (Task.FromResult(37)' "Thirty Seven");
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_property_types,The following statement contains a magic number: var input = new             {                 IntValue = 27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_property_types,The following statement contains a magic number: Assert.That(intValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_property_types,The following statement contains a magic number: var input = new             {                 IntValue = 27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_property_types,The following statement contains a magic number: var longProvider = GetPropertyProvider(input' x => x.IntValue' 69L);
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_property_types,The following statement contains a magic number: Assert.That(longValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_value_to_string_types,The following statement contains a magic number: var input = new             {                 IntValue = 27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_object,The following statement contains a magic number: var input = new             {                 IntValue = 27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_object,The following statement contains a magic number: Assert.That(value' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_multiple_result_types_for_single_property,The following statement contains a magic number: var input = new             {                 IntValue = 27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_multiple_result_types_for_single_property,The following statement contains a magic number: Assert.That(intValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_multiple_result_types_for_single_property,The following statement contains a magic number: var longProvider = GetPropertyProvider(input' x => x.IntValue' 69L);
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_multiple_result_types_for_single_property,The following statement contains a magic number: Assert.That(longValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_result_types,The following statement contains a magic number: var input = new             {                 IntValue = 27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_result_types,The following statement contains a magic number: var provider = GetPropertyProvider(input' x => x.IntValue' Task.FromResult(69));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_result_types,The following statement contains a magic number: Assert.That(intValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_input_types,The following statement contains a magic number: var input = new             {                 IntValue = Task.FromResult(27)'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_input_types,The following statement contains a magic number: var provider = GetPropertyProvider(input' x => x.IntValue' 69);
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_input_types,The following statement contains a magic number: Assert.That(intValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_result_types,The following statement contains a magic number: var input = new             {                 IntValue = 27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_result_types,The following statement contains a magic number: var provider = GetPropertyProvider(input' x => x.IntValue' (int?)69);
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_result_types,The following statement contains a magic number: Assert.That(intValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_result_types,The following statement contains a magic number: var longProvider = GetPropertyProvider(input' x => x.IntValue' (long?)69L);
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_result_types,The following statement contains a magic number: Assert.That(longValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_input_types,The following statement contains a magic number: var input = new             {                 IntValue = (int?)27'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_input_types,The following statement contains a magic number: var provider = GetPropertyProvider(input' x => x.IntValue' 69);
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_input_types,The following statement contains a magic number: Assert.That(intValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_input_types,The following statement contains a magic number: var longProvider = GetPropertyProvider(input' x => x.IntValue' 69L);
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_nullable_input_types,The following statement contains a magic number: Assert.That(longValue' Is.EqualTo(27));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_enumerable,The following statement contains a magic number: var input = new             {                 Decimals = Enumerable.Repeat(98.7m' 2)'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_enumerable,The following statement contains a magic number: var input = new             {                 Decimals = Enumerable.Repeat(98.7m' 2)'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_enumerable,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new[] {98.7m' 98.7m}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_matching_enumerable,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new[] {98.7m' 98.7m}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_arrays,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_arrays,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_lists,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_lists,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_lists,The following statement contains a magic number: Assert.That(listValue' Is.EqualTo(new List<int>             {                 1'                 2'                 3             }));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_lists,The following statement contains a magic number: Assert.That(listValue' Is.EqualTo(new List<int>             {                 1'                 2'                 3             }));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_readonly_lists,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_readonly_lists,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_readonly_lists,The following statement contains a magic number: Assert.That(listValue' Is.EqualTo(new List<int>             {                 1'                 2'                 3             }));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_readonly_lists,The following statement contains a magic number: Assert.That(listValue' Is.EqualTo(new List<int>             {                 1'                 2'                 3             }));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_enumerable,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_enumerable,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_enumerable,The following statement contains a magic number: Assert.That(listValue' Is.EqualTo(new List<int>             {                 1'                 2'                 3             }));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_matching_enumerable,The following statement contains a magic number: Assert.That(listValue' Is.EqualTo(new List<int>             {                 1'                 2'                 3             }));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_with_nullable_types,The following statement contains a magic number: var input = new             {                 IntArray = new int?[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_with_nullable_types,The following statement contains a magic number: var input = new             {                 IntArray = new int?[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_with_nullable_types,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_with_nullable_types,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {Task.FromResult(1)' Task.FromResult(2)' Task.FromResult(3)}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {Task.FromResult(1)' Task.FromResult(2)' Task.FromResult(3)}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays_with_nulls,The following statement contains a magic number: var input = new             {                 IntArray = new[] {Task.FromResult(1)' Task.FromResult(2)' null' Task.FromResult(3)}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays_with_nulls,The following statement contains a magic number: var input = new             {                 IntArray = new[] {Task.FromResult(1)' Task.FromResult(2)' null' Task.FromResult(3)}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays_with_nulls,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 0' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_arrays_with_nulls,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 0' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_to_nullable_types,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_to_nullable_types,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_to_nullable_types,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long?[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_to_nullable_types,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long?[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_to_strings,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_to_strings,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_from_strings,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new int?[] {1' 2' default' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_convertible_arrays_from_strings,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new int?[] {1' 2' default' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_convertible_arrays,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_convertible_arrays,The following statement contains a magic number: var input = new             {                 IntArray = Task.FromResult(new[] {1' 2' 3})'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_convertible_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_convertible_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_result_convertible_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_result_convertible_arrays,The following statement contains a magic number: var input = new             {                 IntArray = new[] {1' 2' 3}'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_result_convertible_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_async_result_convertible_arrays,The following statement contains a magic number: Assert.That(arrayValue' Is.EqualTo(new long[] {1' 2' 3}));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_dictionary,The following statement contains a magic number: Assert.That(dictionary.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_enumerable_key_value_pair,The following statement contains a magic number: Assert.That(dictionary.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_dictionary_type_conversion,The following statement contains a magic number: Assert.That(dictionary.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_dictionary_key_conversion,The following statement contains a magic number: Assert.That(dictionary.Count' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_dictionary_key_conversion,The following statement contains a magic number: Assert.That(dictionary[2]' Is.EqualTo("Two"));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_interface_initializer_nested,The following statement contains a magic number: var input = new             {                 Message = new                 {                     Text = "Hello"' Headers = new object[]                     {                         new {Key = "Format"' Value = "CSV"}'                         new {Key = "Length"' Value = 2457}                     }                 }'             };
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_interface_initializer_nested,The following statement contains a magic number: Assert.That(message.Headers.Length' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_interface_initializer_with_array,The following statement contains a magic number: Assert.That(message.Length' Is.EqualTo(2));
Magic Number,MassTransit.Tests.Initializers,The_property_providers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Initializers\PropertyProvider_Specs.cs,Should_support_interface_initializer_with_dictionary,The following statement contains a magic number: Assert.That(message.Count' Is.EqualTo(2));
Magic Number,DataBus_Specs,Receiving_nested_message_with_data,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MessageData\DataBus_Specs.cs,Should_load_the_data_from_the_repository,The following statement contains a magic number: var message = new Message                  {                      Document = new Document() {Body = new ConstantMessageData<byte[]>(dataAddress' buffer)}'                      Documents = new IDocument[]                      {                          new Document()                          {                              Title = "Hello' World"'                              PageCount = 27'                              Body = new ConstantMessageData<byte[]>(dataAddress' buffer)                          }                      }'                      DocumentList = new List<IDocument>()                      {                          new Document()                          {                              Title = "Hello' World"'                              PageCount = 44'                              Body = new ConstantMessageData<byte[]>(dataAddress' buffer)                          }                      }'                      DocumentIndex = new Dictionary<string' IDocument>()                      {                          {"First"' new Document {Body = new ConstantMessageData<byte[]>(dataAddress' buffer)}}'                          {"Second"' new Document {Body = new ConstantMessageData<byte[]>(dataAddress' buffer)}}'                      }                  };
Magic Number,DataBus_Specs,Receiving_nested_message_with_data,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MessageData\DataBus_Specs.cs,Should_load_the_data_from_the_repository,The following statement contains a magic number: var message = new Message                  {                      Document = new Document() {Body = new ConstantMessageData<byte[]>(dataAddress' buffer)}'                      Documents = new IDocument[]                      {                          new Document()                          {                              Title = "Hello' World"'                              PageCount = 27'                              Body = new ConstantMessageData<byte[]>(dataAddress' buffer)                          }                      }'                      DocumentList = new List<IDocument>()                      {                          new Document()                          {                              Title = "Hello' World"'                              PageCount = 44'                              Body = new ConstantMessageData<byte[]>(dataAddress' buffer)                          }                      }'                      DocumentIndex = new Dictionary<string' IDocument>()                      {                          {"First"' new Document {Body = new ConstantMessageData<byte[]>(dataAddress' buffer)}}'                          {"Second"' new Document {Body = new ConstantMessageData<byte[]>(dataAddress' buffer)}}'                      }                  };
Magic Number,MassTransit.Tests.MessageData,Storing_message_data_on_the_file_system,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\MessageData\FileSystem_Specs.cs,Should_generate_time_based_folder,The following statement contains a magic number: var property = await _repository.PutString("Hello' World."' TimeSpan.FromDays(30));
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (StringValue != null ? StringValue.GetHashCode() : 0);
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ IntValue;
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ LongValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ BoolValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ ByteValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ DecimalValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ DoubleValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ DateTimeValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,PartialSerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\PartialSerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ MaybeMoney.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (StringValue != null ? StringValue.GetHashCode() : 0);
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ IntValue;
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ LongValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ BoolValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ ByteValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ DecimalValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ DoubleValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ DateTimeValue.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ MaybeMoney.GetHashCode();
Magic Number,MassTransit.Tests.Messages,SerializationTestMessage,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Messages\SerializationTestMessage.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ TimeSpanValue.GetHashCode();
Magic Number,MassTransit.Tests.Performance,Performance_of_the_in_memory_transport,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Performance\InMemorySpeed_Specs.cs,Should_be_wicked_fast,The following statement contains a magic number: int limit = 50000;
Magic Number,MassTransit.Tests.Performance,Performance_of_the_in_memory_transport,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Performance\InMemorySpeed_Specs.cs,Should_be_wicked_fast,The following statement contains a magic number: Console.WriteLine("Messages per second: {0}"' count * 1000 / timer.ElapsedMilliseconds);
Magic Number,MassTransit.Tests.Performance,Performance_of_dynamic_interface_implementations,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Performance\InMemorySpeed_Specs.cs,Should_be_also_really_fast,The following statement contains a magic number: int limit = 50000;
Magic Number,MassTransit.Tests.Performance,Performance_of_dynamic_interface_implementations,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Performance\InMemorySpeed_Specs.cs,Should_be_also_really_fast,The following statement contains a magic number: Console.WriteLine("Messages per second: {0}"' count * 1000 / timer.ElapsedMilliseconds);
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_circuit_breaker,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\CircuitBreaker_Specs.cs,Should_allow_the_first_call,The following statement contains a magic number: IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x =>              {                  x.UseCircuitBreaker(v =>                  {                      v.ResetInterval = TimeSpan.FromSeconds(60);                      v.Handle<IntentionalTestException>();                  });                  x.UseExecute(payload =>                  {                      Interlocked.Increment(ref count);                        throw new IntentionalTestException();                  });              });
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_circuit_breaker,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\CircuitBreaker_Specs.cs,Should_allow_the_first_call,The following statement contains a magic number: i < 100
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_circuit_breaker,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\CircuitBreaker_Specs.cs,Should_allow_the_first_call,The following statement contains a magic number: count.ShouldBe(6);
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_prevent_too_many_threads_at_one_time,The following statement contains a magic number: IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x =>              {                  x.UseConcurrencyLimit(1);                  x.UseExecuteAsync(async payload =>                  {                      int current = Interlocked.Increment(ref currentCount);                      while (current > maxCount)                          Interlocked.CompareExchange(ref maxCount' current' maxCount);                        await Task.Delay(10);                        Interlocked.Decrement(ref currentCount);                  });              });
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_prevent_too_many_threads_at_one_time,The following statement contains a magic number: Task[] tasks = Enumerable.Range(0' 50)                  .Select(index => Task.Run(async () => await pipe.Send(context)))                  .ToArray();
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_allow_just_enough_threads_at_once,The following statement contains a magic number: IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x =>              {                  x.UseConcurrencyLimit(32);                  x.UseExecuteAsync(async payload =>                  {                      int current = Interlocked.Increment(ref currentCount);                      while (current > maxCount)                          Interlocked.CompareExchange(ref maxCount' current' maxCount);                        await Task.Delay(10);                        Interlocked.Decrement(ref currentCount);                  });              });
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_allow_just_enough_threads_at_once,The following statement contains a magic number: IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x =>              {                  x.UseConcurrencyLimit(32);                  x.UseExecuteAsync(async payload =>                  {                      int current = Interlocked.Increment(ref currentCount);                      while (current > maxCount)                          Interlocked.CompareExchange(ref maxCount' current' maxCount);                        await Task.Delay(10);                        Interlocked.Decrement(ref currentCount);                  });              });
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_allow_just_enough_threads_at_once,The following statement contains a magic number: Task[] tasks = Enumerable.Range(0' 500)                  .Select(index => Task.Run(async () => await pipe.Send(context)))                  .ToArray();
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_allow_just_enough_threads_at_once,The following statement contains a magic number: maxCount.ShouldBe(32);
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_only_do_n_messages_per_interval,The following statement contains a magic number: IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x =>              {                  x.UseRateLimit(10' TimeSpan.FromSeconds(1));                  x.UseExecute(payload =>                  {                      Interlocked.Increment(ref count);                  });              });
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_only_do_n_messages_per_interval,The following statement contains a magic number: Task[] tasks = Enumerable.Range(0' 101)                  .Select(index => Task.Run(async () => await pipe.Send(context)))                  .ToArray();
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_only_do_n_messages_per_interval,The following statement contains a magic number: timer.ElapsedMilliseconds.ShouldBeGreaterThan(9500);
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_count_success_and_failure_as_same,The following statement contains a magic number: IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x =>              {                  x.UseRateLimit(10' TimeSpan.FromSeconds(1));                  x.UseExecute(payload =>                  {                      var index = Interlocked.Increment(ref count);                      if (index % 2 == 0)                          throw new IntentionalTestException();                  });              });
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_count_success_and_failure_as_same,The following statement contains a magic number: IPipe<ConsumeContext<Running_two_in_memory_transports.A>> pipe = Pipe.New<ConsumeContext<Running_two_in_memory_transports.A>>(x =>              {                  x.UseRateLimit(10' TimeSpan.FromSeconds(1));                  x.UseExecute(payload =>                  {                      var index = Interlocked.Increment(ref count);                      if (index % 2 == 0)                          throw new IntentionalTestException();                  });              });
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_count_success_and_failure_as_same,The following statement contains a magic number: Task[] tasks = Enumerable.Range(0' 101)                  .Select(index => Task.Run(async () =>                  {                      try                      {                          await pipe.Send(context);                      }                      catch (Exception)                      {                      }                  }))                  .ToArray();
Magic Number,MassTransit.Tests.Pipeline,Specifying_a_rate_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Concurrency_Specs.cs,Should_count_success_and_failure_as_same,The following statement contains a magic number: timer.ElapsedMilliseconds.ShouldBeGreaterThan(9500);
Magic Number,MassTransit.Tests.Pipeline,ContentFilter_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\ContentFilter_Specs.cs,Should_only_get_one_message,The following statement contains a magic number: await Task.Delay(50);
Magic Number,MassTransit.Tests.Pipeline,Partitioning_a_consumer_by_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\PartitionByKey_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Consumer(() => new PartitionedConsumer(_completed)' x =>              {                  x.Message<PartitionedMessage>(m =>                  {                      m.UsePartitioner(8' context => context.Message.CorrelationId);                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_retry_the_specified_times_and_fail,The following statement contains a magic number: IPipe<ConsumeContext<A>> pipe = Pipe.New<ConsumeContext<A>>(x =>              {                  x.UseRetry(r => r.Interval(4' TimeSpan.FromMilliseconds(2)));                  x.UseExecute(payload =>                  {                      count++;                      throw new IntentionalTestException("Kaboom!");                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_retry_the_specified_times_and_fail,The following statement contains a magic number: IPipe<ConsumeContext<A>> pipe = Pipe.New<ConsumeContext<A>>(x =>              {                  x.UseRetry(r => r.Interval(4' TimeSpan.FromMilliseconds(2)));                  x.UseExecute(payload =>                  {                      count++;                      throw new IntentionalTestException("Kaboom!");                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_retry_the_specified_times_and_fail,The following statement contains a magic number: count.ShouldBe(5);
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_support_overloading_downstream,The following statement contains a magic number: IPipe<ConsumeContext<A>> pipe = Pipe.New<ConsumeContext<A>>(x =>              {                  x.UseRetry(r => r.Interval(4' TimeSpan.FromMilliseconds(2)));                  x.UseRetry(r => r.None());                  x.UseExecute(payload =>                  {                      count++;                      throw new IntentionalTestException("Kaboom!");                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_support_overloading_downstream,The following statement contains a magic number: IPipe<ConsumeContext<A>> pipe = Pipe.New<ConsumeContext<A>>(x =>              {                  x.UseRetry(r => r.Interval(4' TimeSpan.FromMilliseconds(2)));                  x.UseRetry(r => r.None());                  x.UseExecute(payload =>                  {                      count++;                      throw new IntentionalTestException("Kaboom!");                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_support_overloading_downstream_on_cc,The following statement contains a magic number: IPipe<ConsumeContext> pipe = Pipe.New<ConsumeContext>(x =>              {                  x.UseRetry(r =>                  {                      r.Handle<IntentionalTestException>();                      r.Interval(4' TimeSpan.FromMilliseconds(2));                  });                  x.UseRetry(r =>                  {                      r.Handle<IntentionalTestException>();                      r.None();                  });                  x.UseDispatch(new ConsumeContextConverterFactory()' d =>                  {                      d.Pipe<ConsumeContext<A>>(a =>                      {                          a.UseExecute(payload =>                          {                              count++;                              throw new IntentionalTestException("Kaboom!");                          });                        });                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_support_overloading_downstream_on_cc,The following statement contains a magic number: IPipe<ConsumeContext> pipe = Pipe.New<ConsumeContext>(x =>              {                  x.UseRetry(r =>                  {                      r.Handle<IntentionalTestException>();                      r.Interval(4' TimeSpan.FromMilliseconds(2));                  });                  x.UseRetry(r =>                  {                      r.Handle<IntentionalTestException>();                      r.None();                  });                  x.UseDispatch(new ConsumeContextConverterFactory()' d =>                  {                      d.Pipe<ConsumeContext<A>>(a =>                      {                          a.UseExecute(payload =>                          {                              count++;                              throw new IntentionalTestException("Kaboom!");                          });                        });                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_support_overloading_downstream_either_way,The following statement contains a magic number: IPipe<ConsumeContext<A>> pipe = Pipe.New<ConsumeContext<A>>(x =>              {                  x.UseRetry(r => r.None());                  x.UseRetry(r => r.Interval(4' TimeSpan.FromMilliseconds(2)));                  x.UseExecute(payload =>                  {                      count++;                      throw new IntentionalTestException("Kaboom!");                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_support_overloading_downstream_either_way,The following statement contains a magic number: IPipe<ConsumeContext<A>> pipe = Pipe.New<ConsumeContext<A>>(x =>              {                  x.UseRetry(r => r.None());                  x.UseRetry(r => r.Interval(4' TimeSpan.FromMilliseconds(2)));                  x.UseExecute(payload =>                  {                      count++;                      throw new IntentionalTestException("Kaboom!");                  });              });
Magic Number,MassTransit.Tests.Pipeline,Using_the_retry_filter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Retry_Specs.cs,Should_support_overloading_downstream_either_way,The following statement contains a magic number: count.ShouldBe(5);
Magic Number,MassTransit.Tests.Pipeline,When_a_transaction_spans_threads,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Pipeline\Transaction_Specs.cs,Should_timeout,The following statement contains a magic number: IPipe<ConsumeContext> pipe = Pipe.New<ConsumeContext>(x =>              {                  x.UseTransaction(t => t.Timeout = TimeSpan.FromSeconds(1));                  x.UseExecute(payload => Console.WriteLine("Execute: {0}"' Thread.CurrentThread.ManagedThreadId));                  x.UseExecuteAsync(async payload =>                  {                      await Task.Yield();                        using (TransactionScope scope = payload.CreateTransactionScope())                      {                          Console.WriteLine("ExecuteAsync: {0}"' Thread.CurrentThread.ManagedThreadId);                            Assert.IsNotNull(Transaction.Current);                          Console.WriteLine("Isolation Level: {0}"' Transaction.Current.IsolationLevel);                            Thread.Sleep(5000);                            scope.Complete();                      }                        Console.WriteLine("Exited Scope");                  });                  x.UseExecute(payload => Console.WriteLine("After Transaction: {0}"' Thread.CurrentThread.ManagedThreadId));              });
Magic Number,ObserverTests,Connecting_to_the_publish_observer_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\PublishObserver_Specs.cs,Should_not_invoke_the_send_observer_prior_to_send,The following statement contains a magic number: Assert.That(async () => await sendObserver.PreSent.OrTimeout(s:5)' Throws.TypeOf<TimeoutException>());
Magic Number,MassTransit.Tests.Saga,When_an_initiating_message_for_a_saga_arrives,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Saga\InitiateSaga_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.UseRetry(x => x.Immediate(2));
Magic Number,MassTransit.Tests.Saga,Partitioning_a_saga,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Saga\PartitionSaga_Specs.cs,ConfigureInMemoryReceiveEndpoint,The following statement contains a magic number: configurator.Saga(_repository' x =>              {                  x.Message<CreateSaga>(m => m.UsePartitioner(4' p => p.Message.CorrelationId));              });
Magic Number,MassTransit.Tests.Saga,RegisterUserController,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Saga\RegisterUserController.cs,RegisterUser,The following statement contains a magic number: return _registrationPending.WaitOne(TimeSpan.FromSeconds(8));
Magic Number,MassTransit.Tests.Saga,RegisterUserController,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Saga\RegisterUserController.cs,ValidateUser,The following statement contains a magic number: return WaitOn(_registrationComplete' TimeSpan.FromSeconds(8)' "Timeout waiting for registration to complete");
Magic Number,Array_Specs,A_null_array,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Array_Specs.cs,Should_serialize_a_single_element,The following statement contains a magic number: someArray.Elements[0].Value = 27;
Magic Number,Array_Specs,A_null_array,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Array_Specs.cs,Should_serialize_a_single_element_collection,The following statement contains a magic number: someArray.Elements = new ArrayElement[1]                  {                      new ArrayElement {Value = 27}                  };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Crazy_date_time,The following statement contains a magic number: TestSerialization(new B              {                  Local = new DateTime(2001' 9' 11' 8' 46' 30' DateTimeKind.Local)'                  Universal = new DateTime(2001' 9' 11' 9' 3' 2' DateTimeKind.Local).ToUniversalTime()'              });
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_complex,The following statement contains a magic number: Message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'                  MaybeMoney = 567.89m'              };
Magic Number,MassTransit.Tests.Serialization,Given_a_variety_of_challenging_messages,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,Serialize_small_number,The following statement contains a magic number: const decimal smallNumber = 0.000001M;
Magic Number,MassTransit.Tests.Serialization,B,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,GetHashCode,The following statement contains a magic number: return (Local.GetHashCode() * 397) ^ Universal.GetHashCode();
Magic Number,MassTransit.Tests.Serialization,A,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\GivenAComplexMessage.cs,GetHashCode,The following statement contains a magic number: return ((Name != null ? Name.GetHashCode() : 0) * 397) ^ (Value != null ? Value.GetHashCode() : 0);
Magic Number,MassTransit.Tests.Serialization,UserImpl,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Interface_Specs.cs,GetHashCode,The following statement contains a magic number: return ((Name != null ? Name.GetHashCode() : 0) * 397) ^ (Email != null ? Email.GetHashCode() : 0);
Magic Number,MassTransit.Tests.Serialization,ComplaintAddedImpl,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Interface_Specs.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ AddedAt.GetHashCode();
Magic Number,MassTransit.Tests.Serialization,ComplaintAddedImpl,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Interface_Specs.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Subject != null ? Subject.GetHashCode() : 0);
Magic Number,MassTransit.Tests.Serialization,ComplaintAddedImpl,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Interface_Specs.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Body != null ? Body.GetHashCode() : 0);
Magic Number,MassTransit.Tests.Serialization,ComplaintAddedImpl,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Interface_Specs.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Area.GetHashCode();
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serializing_messages_with_json_dot_net,The following statement contains a magic number: _message = new TestMessage              {                  Name = "Joe"'                  Details = new List<TestMessageDetail>                  {                      new TestMessageDetail {Item = "A"' Value = 27.5d}'                      new TestMessageDetail {Item = "B"' Value = 13.5d}'                  }'                  EnumDetails = new List<TestMessageDetail>                  {                      new TestMessageDetail{Item = "1"' Value = 42.0d}                  }              };
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serializing_messages_with_json_dot_net,The following statement contains a magic number: _message = new TestMessage              {                  Name = "Joe"'                  Details = new List<TestMessageDetail>                  {                      new TestMessageDetail {Item = "A"' Value = 27.5d}'                      new TestMessageDetail {Item = "B"' Value = 13.5d}'                  }'                  EnumDetails = new List<TestMessageDetail>                  {                      new TestMessageDetail{Item = "1"' Value = 42.0d}                  }              };
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serializing_messages_with_json_dot_net,The following statement contains a magic number: _message = new TestMessage              {                  Name = "Joe"'                  Details = new List<TestMessageDetail>                  {                      new TestMessageDetail {Item = "A"' Value = 27.5d}'                      new TestMessageDetail {Item = "B"' Value = 13.5d}'                  }'                  EnumDetails = new List<TestMessageDetail>                  {                      new TestMessageDetail{Item = "1"' Value = 42.0d}                  }              };
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Should_be_able_to_ressurect_the_message,The following statement contains a magic number: result.MessageType.Count.ShouldBe(3);
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Should_be_able_to_ressurect_the_message,The following statement contains a magic number: result.MessageType[2].ShouldBe(typeof(MessageB).ToMessageName());
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Should_be_able_to_suck_out_an_object,The following statement contains a magic number: message.Details.Count.ShouldBe(2);
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Should_be_able_to_ressurect_the_message_from_xml,The following statement contains a magic number: result.MessageType.Count.ShouldBe(3);
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Should_be_able_to_ressurect_the_message_from_xml,The following statement contains a magic number: result.MessageType[2].ShouldBe(typeof(MessageB).ToMessageName());
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serialization_speed,The following statement contains a magic number: i < 10
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serialization_speed,The following statement contains a magic number: const int iterations = 50000;
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serialization_speed,The following statement contains a magic number: long perSecond = iterations * 1000 / timer.ElapsedMilliseconds;
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serialization_speed,The following statement contains a magic number: i < 50000
Magic Number,MassTransit.Tests.Serialization,When_serializing_messages_with_json_dot_net,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\JsonSerialization_Specs.cs,Serialization_speed,The following statement contains a magic number: perSecond = iterations * 1000 / timer.ElapsedMilliseconds;
Magic Number,MassTransit.Tests.Serialization,CommonRequestConsumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MisnamedProperty_Specs.cs,Consume,The following statement contains a magic number: var response = new CommonResponse(newMessage.Message' 5000' "I am lost!");
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_primitive_array_of_objects_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveArrayClass              {                  Values = new[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10}              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_hashset_of_integers_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveHashSetClass()              {                  Values =                  {                      1'                      2'                      3                  }              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_hashset_of_integers_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveHashSetClass()              {                  Values =                  {                      1'                      2'                      3                  }              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_set_of_integers_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveSetClass()              {                  Values =                  {                      1'                      2'                      3                  }              };
Magic Number,MassTransit.Tests.Serialization,MoreSerialization_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,A_set_of_integers_should_be_properly_serialized,The following statement contains a magic number: var message = new PrimitiveSetClass()              {                  Values =                  {                      1'                      2'                      3                  }              };
Magic Number,MassTransit.Tests.Serialization,CommandResult,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\MoreSerialization_Specs.cs,GetHashCode,The following statement contains a magic number: return ((ReferenceId != null ? ReferenceId.GetHashCode() : 0) * 397) ^ CommandId.GetHashCode();
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: var message = new SerializationTestMessage              {                  DecimalValue = 123.45m'                  LongValue = 098123213'                  BoolValue = true'                  ByteValue = 127'                  IntValue = 123'                  DateTimeValue = new DateTime(2008' 9' 8' 7' 6' 5' 4)'                  TimeSpanValue = TimeSpan.FromSeconds(30)'                  GuidValue = Guid.NewGuid()'                  StringValue = "Chris's Sample Code"'                  DoubleValue = 1823.172'              };
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: i < 10
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: const int iterations = 50000;
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: long perSecond = iterations * 1000 / timer.ElapsedMilliseconds;
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: i < 50000
Magic Number,MassTransit.Tests.Serialization,Serializer_performance,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Serialization\Performance_Specs.cs,Just_how_fast_are_you,The following statement contains a magic number: perSecond = iterations * 1000 / timer.ElapsedMilliseconds;
Magic Number,MassTransit.Tests.Transports,MessageFabric_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Transports\MessageFabric_Specs.cs,Should_allow_a_legitimate_binding,The following statement contains a magic number: var fabric = new MessageFabric(16);
Magic Number,MassTransit.Tests.Transports,MessageFabric_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Tests\Transports\MessageFabric_Specs.cs,Should_not_allow_a_cyclic_binding,The following statement contains a magic number: var fabric = new MessageFabric(16);
