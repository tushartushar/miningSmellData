Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_topology_to_bind_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_second_interface_only,The length of the statement  "            Assert.That(topology.ExchangeBindings.Any(x => x.Source.ExchangeName == interfaceName && x.Destination.ExchangeName == _inputQueueName)' Is.True); " is 146.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_topology_to_bind_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_second_interface_only,The length of the statement  "            Assert.That(topology.ExchangeBindings.Any(x => x.Source.ExchangeName == interfaceName && x.Destination.ExchangeName == _inputQueueName)' Is.False); " is 147.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_topology_to_bind_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_single_interface,The length of the statement  "            Assert.That(topology.ExchangeBindings.Any(x => x.Source.ExchangeName == singleInterfaceName && x.Destination.ExchangeName == _inputQueueName)' " is 142.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_topology_to_bind_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Setup,The length of the statement  "            _consumeTopology = new RabbitMqConsumeTopology(RabbitMqBusFactory.MessageTopology' new RabbitMqPublishTopology(RabbitMqBusFactory.MessageTopology)); " is 148.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_topology_to_bind_consumers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Setup,The length of the statement  "            _builder.Exchange = _builder.ExchangeDeclare(_inputQueueName' _consumeTopology.ExchangeTypeSelector.DefaultExchangeType' true' false' " is 133.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_flattened_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_second_interface_only,The length of the statement  "            Assert.That(topology.ExchangeBindings.Any(x => x.Source.ExchangeName == interfaceName && x.Destination.ExchangeName == singleInterfaceName)' Is.True); " is 150.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_hierarchical_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_second_interface_only,The length of the statement  "            Assert.That(topology.ExchangeBindings.Any(x => x.Source.ExchangeName == interfaceName && x.Destination.ExchangeName == singleInterfaceName)' Is.True); " is 150.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_hierarchical_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_third_interface_as_well,The length of the statement  "            Assert.That(topology.ExchangeBindings.Any(x => x.Source.ExchangeName == secondInterfaceName && x.Destination.ExchangeName == firstInterfaceName)' " is 145.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_hierarchical_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_third_interface_as_well,The length of the statement  "            Assert.That(topology.ExchangeBindings.Any(x => x.Source.ExchangeName == thirdInterfaceName && x.Destination.ExchangeName == secondInterfaceName)' " is 145.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_the_delayed_exchange,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The length of the statement  "                Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?))); " is 139.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_retry_each_message_type,The length of the statement  "            var pingFault = SubscribeHandler<Fault<PingMessage>>(x => x.Message.Message.CorrelationId == pingMessage.CorrelationId); " is 120.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_retry_each_message_type,The length of the statement  "            var pongFault = SubscribeHandler<Fault<PongMessage>>(x => x.Message.Message.CorrelationId == pingMessage.CorrelationId); " is 120.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer_and_retry,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_retry_and_redeliver,The length of the statement  "            var pingFault = SubscribeHandler<Fault<PingMessage>>(x => x.Message.Message.CorrelationId == pingMessage.CorrelationId); " is 120.
Long Statement,MassTransit.RabbitMqTransport.Tests,Explicitly_deferring_a_message_instead_of_throwing,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The length of the statement  "                Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?))); " is 139.
Long Statement,MassTransit.RabbitMqTransport.Tests,execute_callback_function_during_defer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The length of the statement  "                Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?))); " is 139.
Long Statement,MassTransit.RabbitMqTransport.Tests,A_serialization_exception,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Should_have_the_host_machine_name,The length of the statement  "            context.ReceiveContext.TransportHeaders.Get("MT-Host-MachineName"' (string)null).ShouldBe(HostMetadataCache.Host.MachineName); " is 126.
Long Statement,MassTransit.RabbitMqTransport.Tests,A_request_client_exception,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Should_have_the_exception,The length of the statement  "            Assert.That(context.ReceiveContext.TransportHeaders.Get("MT-Fault-Message"' (string)null)' Is.EqualTo("Request is so bad' I'm dying here!")); " is 141.
Long Statement,MassTransit.RabbitMqTransport.Tests,An_aggregate_exception,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Should_have_the_actual_exception,The length of the statement  "            Assert.That(context.ReceiveContext.TransportHeaders.Get("MT-Fault-Message"' (string)null)' Is.EqualTo("Request is so bad' I'm dying here!")); " is 141.
Long Statement,MassTransit.RabbitMqTransport.Tests,LocalBusName_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\LocalBusName_Specs.cs,Should_get_the_response_to_the_bus,The length of the statement  "            IRequestClient<PingMessage'PongMessage> client = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TestTimeout); " is 137.
Long Statement,MassTransit.RabbitMqTransport.Tests,When_mandatory_is_specified_and_no_binding_exists,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Mandatory_Specs.cs,Should_throw_an_exception,The length of the statement  "            Assert.That(async () => await Bus.Publish(new NoBindingPlease()' context => context.Mandatory = true)' Throws.TypeOf<MessageReturnedException>()); " is 146.
Long Statement,MassTransit.RabbitMqTransport.Tests,When_converting_a_type_to_a_message_name,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\MessageName_Specs.cs,Should_handle_a_closed_double_generic_with_a_generic,The length of the statement  "            name.ToString().ShouldBe("MassTransit.RabbitMqTransport.Tests:NameDoubleGeneric--NameGeneric--NameEasyToo--::NameEasy--"); " is 122.
Long Statement,MassTransit.RabbitMqTransport.Tests,Using_a_priority_queue,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\PriorityQueue_Specs.cs,Should_allow_priority_to_be_specified,The length of the statement  "            await Bus.Request<PingMessage' PongMessage>(_endpointAddress' new PingMessage()' TestCancellationToken' TestTimeout' x => " is 121.
Long Statement,MassTransit.RabbitMqTransport.Tests,RabbitMqActivityTestFixture,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqActivityTestFixture.cs,AddActivityContext,The length of the statement  "            var context = new ActivityTestContext<T' TArguments' TLog>(BusTestHarness' activityFactory' configureExecute' configureCompensate); " is 131.
Long Statement,MassTransit.RabbitMqTransport.Tests,Given_a_valid_endpoint_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,Should_return_a_valid_address_for_a_full_address,The length of the statement  "            var address = new RabbitMqEndpointAddress(hostAddress' new Uri("rabbitmq://remote-host/production/client/input-queue")); " is 120.
Long Statement,MassTransit.RabbitMqTransport.Tests,Given_a_valid_endpoint_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,Should_return_a_valid_address_for_a_full_address_with_encoded_slash,The length of the statement  "            var address = new RabbitMqEndpointAddress(hostAddress' new Uri("rabbitmq://remote-host/production%2Fclient/input-queue")); " is 122.
Long Statement,MassTransit.RabbitMqTransport.Tests,Reconnecting_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Reconnecting_Specs.cs,Should_fault_nicely,The length of the statement  "            bool beforeFound = await Task.Run(() => _consumer.Received.Select<ReconnectMessage>(x => x.Context.Message.Value == "Before").Any()); " is 133.
Long Statement,MassTransit.RabbitMqTransport.Tests,Reconnecting_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Reconnecting_Specs.cs,Should_fault_nicely,The length of the statement  "            bool afterFound = await Task.Run(() => _consumer.Received.Select<ReconnectMessage>(x => x.Context.Message.Value == "After").Any()); " is 131.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "                @"   at MassTransit.RabbitMqTransport.Tests.A_serialization_exception.<>c.<<ConfigureInputQueueEndpoint>b__13_0>d.MoveNext() in E:\Home\MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs:line 129 " is 216.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.TestFramework.BusTestFixture.<>c__DisplayClass6_0`1.<<Handler>b__0>d.MoveNext() in E:\Home\MassTransit\src\MassTransit.TestFramework\BusTestFixture.cs:line 143 " is 174.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.HandlerMessageFilter`1.<MassTransit-Pipeline-IFilter<MassTransit-ConsumeContext<TMessage>>-Send>d__5.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\HandlerMessageFilter.cs:line 56 " is 231.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.HandlerMessageFilter`1.<MassTransit-Pipeline-IFilter<MassTransit-ConsumeContext<TMessage>>-Send>d__5.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\HandlerMessageFilter.cs:line 69 " is 231.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.TeeConsumeFilter`1.<>c__DisplayClass7_0.<<Send>b__0>d.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\TeeConsumeFilter.cs:line 59 " is 180.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.TeeConsumeFilter`1.<Send>d__7.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\TeeConsumeFilter.cs:line 59 " is 156.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.MessageConsumeFilter`1.<MassTransit-Pipeline-IFilter<MassTransit-ConsumeContext>-Send>d__7.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\MessageConsumeFilter.cs:line 80 " is 221.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.MessageConsumeFilter`1.<MassTransit-Pipeline-IFilter<MassTransit-ConsumeContext>-Send>d__7.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\MessageConsumeFilter.cs:line 95 " is 221.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.DeserializeFilter.<Send>d__4.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\DeserializeFilter.cs:line 48 " is 156.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "   at MassTransit.Pipeline.Filters.RescueReceiveContextFilter`1.<MassTransit-Pipeline-IFilter<MassTransit-ReceiveContext>-Send>d__5.MoveNext() in E:\Home\MassTransit\src\MassTransit\Pipeline\Filters\RescueReceiveContextFilter.cs:line 55"; " is 235.
Long Statement,MassTransit.RabbitMqTransport.Tests,TestRegularExpression_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestRegularExpression_Specs.cs,Verify_regex,The length of the statement  "                    @"--- End of stack trace.* ---.*\n\s+(at System\.Runtime\.CompilerServices\.TaskAwaiter.*\s*|at System\.Runtime\.ExceptionServices\.ExceptionDispatchInfo.*\s*)+"' " is 162.
Long Statement,MassTransit.RabbitMqTransport.Tests,Creating_a_turnout_job,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Turnout_Specs.cs,ConfigureRabbitMqBusHost,The length of the statement  "                endpoint.SetJobFactory(async context => await Task.Delay(TimeSpan.FromSeconds(context.Command.Size)).ConfigureAwait(false)); " is 124.
Long Statement,MassTransit.RabbitMqTransport.Tests,Executing_a_routing_slip_with_two_activities,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TwoActivityCourier_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The length of the statement  "            _firstActivityCompleted = Handled<RoutingSlipActivityCompleted>(configurator' context => context.Message.ActivityName.Equals(testActivity.Name) " is 143.
Long Statement,MassTransit.RabbitMqTransport.Tests,Executing_a_routing_slip_with_two_activities,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TwoActivityCourier_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The length of the statement  "            _secondActivityCompleted = Handled<RoutingSlipActivityCompleted>(configurator' context => context.Message.ActivityName.Equals(secondActivity.Name) " is 146.
Long Statement,Send_Specs,When_a_message_is_published_from_the_queue,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Publish_Specs.cs,Should_have_the_receive_endpoint_input_address,The length of the statement  "                Assert.That(consumeContext.ReceiveContext.TransportHeaders.Get("MessageId"' "N/A")' Is.EqualTo(consumeContext.MessageId.ToString())); " is 133.
Magic Number,MassTransit.RabbitMqTransport.Tests,Configuring_a_topology,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_not_consume_the_messages,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_flattened_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_second_interface_only,The following statement contains a magic number: Assert.That(topology.Exchanges.Length' Is.EqualTo(2));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_hierarchical_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_second_interface_only,The following statement contains a magic number: Assert.That(topology.Exchanges.Length' Is.EqualTo(2));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_hierarchical_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_third_interface_as_well,The following statement contains a magic number: Assert.That(topology.Exchanges.Length' Is.EqualTo(3));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_hierarchical_topology_to_bind_publishers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\BuildTopology_Specs.cs,Should_include_a_binding_for_the_third_interface_as_well,The following statement contains a magic number: Assert.That(topology.ExchangeBindings.Length' Is.EqualTo(2));
Magic Number,MassTransit.RabbitMqTransport.Tests,Bytes_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Bytes_Specs.cs,Should_receive_byte_array_of_bigness,The following statement contains a magic number: var bytes = new byte[512];
Magic Number,MassTransit.RabbitMqTransport.Tests,Bytes_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Bytes_Specs.cs,Should_receive_byte_array_of_bigness,The following statement contains a magic number: bytes[i] = (byte)random.Next(255);
Magic Number,MassTransit.RabbitMqTransport.Tests,Bytes_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Bytes_Specs.cs,Should_receive_byte_array_of_bigness,The following statement contains a magic number: i < 512
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_consumer_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ConcurrencyFilter_Specs.cs,Should_limit_the_consumer,The following statement contains a magic number: Assert.AreEqual(2' _consumer.MaxDeliveryCount);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_consumer_concurrency_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ConcurrencyFilter_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Instance(_consumer' x => x.UseConcurrentMessageLimit(2));
Magic Number,MassTransit.RabbitMqTransport.Tests,Consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ConcurrencyFilter_Specs.cs,OnConsume,The following statement contains a magic number: await Task.Delay(100);
Magic Number,MassTransit.RabbitMqTransport.Tests,Configure_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Configure_Specs.cs,Should_fail_with_invalid_middleware,The following statement contains a magic number: var exception = Assert.Throws<ConfigurationException>(() =>              {                  Bus.Factory.CreateUsingRabbitMq(x =>                  {                      var host = x.Host(new Uri("rabbitmq://[::1]/test/")' h =>                      {                          h.RequestedConnectionTimeout(2000);                      });                        x.UseRetry(r =>                      {                      });                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,ConsumerConsumerDefinition,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ConsumerDefinition_Specs.cs,ConsumerConsumerDefinition,The following statement contains a magic number: ConcurrentMessageLimit = 100;
Magic Number,MassTransit.RabbitMqTransport.Tests,A_fault_publishing_a_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ConsumeReceiveTask_Specs.cs,Should_not_cause_the_message_to_nack,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_the_delayed_exchange,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(context =>              {                  if (_timer == null)                      _timer = Stopwatch.StartNew();                    if (_count++ < 2)                  {                      Console.WriteLine("{0} now is not a good time"' DateTime.UtcNow);                      throw new IntentionalTestException("I'm so not ready for this jelly.");                  }                    _timer.Stop();                    Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?)));                    // okay' ready.                  _receivedTimeSpan = _timer.Elapsed;                  _received.TrySetResult(context);                    return TaskUtil.Completed;              }' x => x.UseDelayedRedelivery(r => r.Intervals(1000' 2000)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_the_delayed_exchange,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(context =>              {                  if (_timer == null)                      _timer = Stopwatch.StartNew();                    if (_count++ < 2)                  {                      Console.WriteLine("{0} now is not a good time"' DateTime.UtcNow);                      throw new IntentionalTestException("I'm so not ready for this jelly.");                  }                    _timer.Stop();                    Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?)));                    // okay' ready.                  _receivedTimeSpan = _timer.Elapsed;                  _received.TrySetResult(context);                    return TaskUtil.Completed;              }' x => x.UseDelayedRedelivery(r => r.Intervals(1000' 2000)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_the_delayed_exchange,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(context =>              {                  if (_timer == null)                      _timer = Stopwatch.StartNew();                    if (_count++ < 2)                  {                      Console.WriteLine("{0} now is not a good time"' DateTime.UtcNow);                      throw new IntentionalTestException("I'm so not ready for this jelly.");                  }                    _timer.Stop();                    Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?)));                    // okay' ready.                  _receivedTimeSpan = _timer.Elapsed;                  _received.TrySetResult(context);                    return TaskUtil.Completed;              }' x => x.UseDelayedRedelivery(r => r.Intervals(1000' 2000)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Delaying_a_message_retry_with_policy,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_only_defer_up_to_the_retry_count,The following statement contains a magic number: Assert.That(_count' Is.EqualTo(3));
Magic Number,MassTransit.RabbitMqTransport.Tests,Delaying_a_message_retry_with_policy,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(context =>              {                  Interlocked.Increment(ref _count);                    throw new IntentionalTestException();              }' x => x.UseDelayedRedelivery(r => r.Intervals(100' 200)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Delaying_a_message_retry_with_policy,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(context =>              {                  Interlocked.Increment(ref _count);                    throw new IntentionalTestException();              }' x => x.UseDelayedRedelivery(r => r.Intervals(100' 200)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Retrying_a_message_retry_with_policy,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_only_retry_up_to_the_retry_count,The following statement contains a magic number: Assert.That(_count' Is.EqualTo(3));
Magic Number,MassTransit.RabbitMqTransport.Tests,Retrying_a_message_retry_with_policy,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(context =>              {                  Interlocked.Increment(ref _count);                    throw new IntentionalTestException();              }' x => x.UseRetry(r => r.Intervals(100' 200)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Retrying_a_message_retry_with_policy,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(context =>              {                  Interlocked.Increment(ref _count);                    throw new IntentionalTestException();              }' x => x.UseRetry(r => r.Intervals(100' 200)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_retry_each_message_type,The following statement contains a magic number: Assert.That(_consumer.PingCount' Is.EqualTo(3));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_retry_each_message_type,The following statement contains a magic number: Assert.That(_consumer.PongCount' Is.EqualTo(3));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.UseDelayedRedelivery(r => r.Intervals(100' 200));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.UseDelayedRedelivery(r => r.Intervals(100' 200));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer_and_retry,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,Should_retry_and_redeliver,The following statement contains a magic number: Assert.That(Consumer.PingCount' Is.EqualTo(6));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer_and_retry,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.UseDelayedRedelivery(r => r.Intervals(100));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_delayed_exchange_redelivery_with_a_consumer_and_retry,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.UseMessageRetry(x => x.Immediate(2));
Magic Number,MassTransit.RabbitMqTransport.Tests,Explicitly_deferring_a_message_instead_of_throwing,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(async context =>              {                  if (_timer == null)                      _timer = Stopwatch.StartNew();                    if (_count++ < 2)                  {                      Console.WriteLine("{0} now is not a good time"' DateTime.UtcNow);                        await context.Defer(TimeSpan.FromMilliseconds(1000));                      return;                  }                    _timer.Stop();                    Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?)));                    // okay' ready.                  _receivedTimeSpan = _timer.Elapsed;                  _received.TrySetResult(context);              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Explicitly_deferring_a_message_instead_of_throwing,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(async context =>              {                  if (_timer == null)                      _timer = Stopwatch.StartNew();                    if (_count++ < 2)                  {                      Console.WriteLine("{0} now is not a good time"' DateTime.UtcNow);                        await context.Defer(TimeSpan.FromMilliseconds(1000));                      return;                  }                    _timer.Stop();                    Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?)));                    // okay' ready.                  _receivedTimeSpan = _timer.Elapsed;                  _received.TrySetResult(context);              });
Magic Number,MassTransit.RabbitMqTransport.Tests,execute_callback_function_during_defer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(async context =>              {                  if (_timer == null)                      _timer = Stopwatch.StartNew();                    if (_count++ < 2)                  {                      Console.WriteLine("{0} now is not a good time"' DateTime.UtcNow);                        await context.Defer(TimeSpan.FromMilliseconds(1000)' (consumeContext' sendContext) =>                      {                          _hit = true;                      });                        return;                  }                    _timer.Stop();                    Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?)));                    // okay' ready.                  _receivedTimeSpan = _timer.Elapsed;                  _received.TrySetResult(context);              });
Magic Number,MassTransit.RabbitMqTransport.Tests,execute_callback_function_during_defer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\DelayRetry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Handler<PingMessage>(async context =>              {                  if (_timer == null)                      _timer = Stopwatch.StartNew();                    if (_count++ < 2)                  {                      Console.WriteLine("{0} now is not a good time"' DateTime.UtcNow);                        await context.Defer(TimeSpan.FromMilliseconds(1000)' (consumeContext' sendContext) =>                      {                          _hit = true;                      });                        return;                  }                    _timer.Stop();                    Console.WriteLine("{0} okay' now is good (retried {1} times)"' DateTime.UtcNow' context.Headers.Get("MT-Redelivery-Count"' default(int?)));                    // okay' ready.                  _receivedTimeSpan = _timer.Elapsed;                  _received.TrySetResult(context);              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,Publishing_an_encrypted_message_to_an_endpoint_with_a_symmetric_key,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Encrypted_Specs.cs,ConfigureRabbitMqBus,The following statement contains a magic number: var key = new byte[]              {                  31' 182' 254' 29' 98' 114' 85' 168' 176' 48' 113'                  206' 198' 176' 181' 125' 106' 134' 98' 217' 113'                  158' 88' 75' 118' 223' 117' 160' 224' 1' 47' 162              };
Magic Number,MassTransit.RabbitMqTransport.Tests,A_serialization_exception_from_a_bad_messagee,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Setup,The following statement contains a magic number: await Task.Delay(3000).ConfigureAwait(false);
Magic Number,MassTransit.RabbitMqTransport.Tests,A_serialization_exception_from_a_bad_messagee,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Setup,The following statement contains a magic number: model.Close(200' "Cleanup complete");
Magic Number,MassTransit.RabbitMqTransport.Tests,A_serialization_exception_from_a_bad_messagee,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Setup,The following statement contains a magic number: connection.Close(200' "Cleanup complete");
Magic Number,MassTransit.RabbitMqTransport.Tests,An_empty_message_body,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Setup,The following statement contains a magic number: await Task.Delay(5000).ConfigureAwait(false);
Magic Number,MassTransit.RabbitMqTransport.Tests,An_empty_message_body,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Setup,The following statement contains a magic number: model.Close(200' "Cleanup complete");
Magic Number,MassTransit.RabbitMqTransport.Tests,An_empty_message_body,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ErrorQueue_Specs.cs,Setup,The following statement contains a magic number: connection.Close(200' "Cleanup complete");
Magic Number,MassTransit.RabbitMqTransport.Tests,ExclusiveConsumer_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ExclusiveConsumer_Specs.cs,Should_not_be_allowed_twice,The following statement contains a magic number: Assert.That(async () =>                 {                     using (var token = new CancellationTokenSource(TimeSpan.FromSeconds(10)))                     {                         await secondHarness.Start(token.Token).OrCanceled(TestCancellationToken);                          await secondHarness.Stop();                     }                 }' Throws.TypeOf<RabbitMqConnectionException>());
Magic Number,MassTransit.RabbitMqTransport.Tests,Failing_to_connect_to_rabbitmq,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\FailedConnection_Specs.cs,Should_fault_nicely,The following statement contains a magic number: IBusControl busControl = Bus.Factory.CreateUsingRabbitMq(x =>              {                  x.Host(new Uri("rabbitmq://unknownhost:32787")' h =>                  {                      h.Username("whocares");                      h.Password("Ohcrud");                      h.RequestedConnectionTimeout(2000);                  });                    x.AutoStart = true;              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Failing_to_connect_to_rabbitmq,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\FailedConnection_Specs.cs,Should_fault_nicely,The following statement contains a magic number: Assert.ThrowsAsync<RabbitMqConnectionException>(async () =>              {                  BusHandle handle;                  using (var timeout = new CancellationTokenSource(TimeSpan.FromSeconds(10)))                  {                      handle = await busControl.StartAsync(timeout.Token);                  }                    await handle.StopAsync(CancellationToken.None);              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Failing_to_connect_to_rabbitmq,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\FailedConnection_Specs.cs,Should_recover_from_a_crashed_server,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Failing_to_connect_to_rabbitmq,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\FailedConnection_Specs.cs,Should_recover_from_a_crashed_server,The following statement contains a magic number: i < 30
Magic Number,MassTransit.RabbitMqTransport.Tests,Failing_to_connect_to_rabbitmq,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\FailedConnection_Specs.cs,Should_start_without_any_configuration,The following statement contains a magic number: BusHandle handle = await busControl.StartAsync(new CancellationTokenSource(5000).Token);
Magic Number,MassTransit.RabbitMqTransport.Tests,Failing_to_connect_to_rabbitmq,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\FailedConnection_Specs.cs,Should_startup_and_shut_down_cleanly_with_an_endpoint,The following statement contains a magic number: await Task.Delay(60000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: var publishers = new Task[100 * 1000];
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: var publishers = new Task[100 * 1000];
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Parallel.For(0' 100' i =>              {                  var offset = i * 1000;                    for (var j = 0; j < 1000; j++)                  {                      var ping = new PingMessage();                      var task = Bus.Publish(ping);                      publishers[offset + j] = task;                  }              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Parallel.For(0' 100' i =>              {                  var offset = i * 1000;                    for (var j = 0; j < 1000; j++)                  {                      var ping = new PingMessage();                      var task = Bus.Publish(ping);                      publishers[offset + j] = task;                  }              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Parallel.For(0' 100' i =>              {                  var offset = i * 1000;                    for (var j = 0; j < 1000; j++)                  {                      var ping = new PingMessage();                      var task = Bus.Publish(ping);                      publishers[offset + j] = task;                  }              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Published {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' published.TotalMilliseconds'                  100L * 1000L * 1000L / published.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Published {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' published.TotalMilliseconds'                  100L * 1000L * 1000L / published.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Published {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' published.TotalMilliseconds'                  100L * 1000L * 1000L / published.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Published {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' published.TotalMilliseconds'                  100L * 1000L * 1000L / published.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Published {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' published.TotalMilliseconds'                  100L * 1000L * 1000L / published.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Confirmed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' confirmed.TotalMilliseconds'                  100L * 1000L * 1000L / confirmed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Confirmed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' confirmed.TotalMilliseconds'                  100L * 1000L * 1000L / confirmed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Confirmed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' confirmed.TotalMilliseconds'                  100L * 1000L * 1000L / confirmed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Confirmed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' confirmed.TotalMilliseconds'                  100L * 1000L * 1000L / confirmed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Confirmed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' confirmed.TotalMilliseconds'                  100L * 1000L * 1000L / confirmed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Completed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' completed.TotalMilliseconds'                  100L * 1000L * 1000L / completed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Completed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' completed.TotalMilliseconds'                  100L * 1000L * 1000L / completed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Completed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' completed.TotalMilliseconds'                  100L * 1000L * 1000L / completed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Completed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' completed.TotalMilliseconds'                  100L * 1000L * 1000L / completed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Should_end_well,The following statement contains a magic number: Console.WriteLine("Completed {0} messages in {1}ms ({2:F0}/s)"' 100 * 1000' completed.TotalMilliseconds'                  100L * 1000L * 1000L / completed.TotalMilliseconds);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,Pounding_the_crap_out_of_the_send_endpoint,The following statement contains a magic number: TestTimeout = TimeSpan.FromSeconds(180);
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,ConfigureRabbitMqBusHost,The following statement contains a magic number: configurator.ReceiveEndpoint(host' "input_queue_express"' x =>              {                  x.AutoDelete = true;                  x.Durable = false;                  x.PrefetchCount = 10000;                    var count = 0;                    x.UseConcurrencyLimit(32);                    x.Handler<PingMessage>(async context =>                  {                      if (Interlocked.Increment(ref count) == 100000)                          _completed.TrySetResult(count);                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,ConfigureRabbitMqBusHost,The following statement contains a magic number: configurator.ReceiveEndpoint(host' "input_queue_express"' x =>              {                  x.AutoDelete = true;                  x.Durable = false;                  x.PrefetchCount = 10000;                    var count = 0;                    x.UseConcurrencyLimit(32);                    x.Handler<PingMessage>(async context =>                  {                      if (Interlocked.Increment(ref count) == 100000)                          _completed.TrySetResult(count);                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Pounding_the_crap_out_of_the_send_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HammerTime_Specs.cs,ConfigureRabbitMqBusHost,The following statement contains a magic number: configurator.ReceiveEndpoint(host' "input_queue_express"' x =>              {                  x.AutoDelete = true;                  x.Durable = false;                  x.PrefetchCount = 10000;                    var count = 0;                    x.UseConcurrencyLimit(32);                    x.Handler<PingMessage>(async context =>                  {                      if (Interlocked.Increment(ref count) == 100000)                          _completed.TrySetResult(count);                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Serializing_an_object_in_a_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HeaderObject_Specs.cs,Should_properly_serialize_and_deserialize,The following statement contains a magic number: await InputQueueSendEndpoint.Send(new PingMessage()' context =>              {                  context.Headers.Set("Claims-Identity"' new ClaimsIdentityProxy                  {                      IdentityType = "AAD:Claims"'                      IdentityId = 27'                      Claims = new[]                      {                          new ClaimProxy {Issuer = "Azure"' Type="User"' Value="37" }'                          new ClaimProxy {Issuer = "Azure"' Type="User"' Value="457" }'                          new ClaimProxy {Issuer = "Azure"' Type="User"' Value="451" }'                      }                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Serializing_an_object_in_a_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HeaderObject_Specs.cs,Should_properly_serialize_and_deserialize,The following statement contains a magic number: Assert.AreEqual(27' identity.IdentityId);
Magic Number,MassTransit.RabbitMqTransport.Tests,Serializing_an_object_in_a_header,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\HeaderObject_Specs.cs,Should_properly_serialize_and_deserialize,The following statement contains a magic number: Assert.AreEqual(3' identity.Claims.Length);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_scheduled_redelivery_for_a_specific_message_type,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\InBoxInMemory_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Consumer<TestHandler>(x =>             {                 x.Message<TestCommand>(m =>                 {                     m.UseDelayedRedelivery(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseRetry(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseInMemoryOutbox();                 });             });
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_scheduled_redelivery_for_a_specific_message_type,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\InBoxInMemory_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Consumer<TestHandler>(x =>             {                 x.Message<TestCommand>(m =>                 {                     m.UseDelayedRedelivery(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseRetry(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseInMemoryOutbox();                 });             });
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_scheduled_redelivery_for_a_specific_message_type_with_send,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\InBoxInMemory_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Consumer<TestHandler>(x =>             {                 x.Message<TestCommand>(m =>                 {                     m.UseDelayedRedelivery(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseRetry(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseInMemoryOutbox();                 });             });
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_scheduled_redelivery_for_a_specific_message_type_with_send,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\InBoxInMemory_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Consumer<TestHandler>(x =>             {                 x.Message<TestCommand>(m =>                 {                     m.UseDelayedRedelivery(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseRetry(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));                     m.UseInMemoryOutbox();                 });             });
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_scheduled_redelivery_for_all_message_types,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\InBoxInMemory_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.UseDelayedRedelivery(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_scheduled_redelivery_for_all_message_types,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\InBoxInMemory_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.UseRetry(r => r.Interval(1' TimeSpan.FromMilliseconds(100)));
Magic Number,MassTransit.RabbitMqTransport.Tests,When_insufficient_permissions_are_specified,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Insufficient_Specs.cs,Should_cleanup_when_permissions_are_lame,The following statement contains a magic number: await Task.Delay(15000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Creating_a_service_with_many_queues,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ManyQueues_Specs.cs,ConfigureRabbitMqBusHost,The following statement contains a magic number: i < 50
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_priority_queue,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\PriorityQueue_Specs.cs,Should_allow_priority_to_be_specified,The following statement contains a magic number: await Bus.Request<PingMessage' PongMessage>(_endpointAddress' new PingMessage()' TestCancellationToken' TestTimeout' x =>              {                  x.SetPriority(2);              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_priority_queue,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\PriorityQueue_Specs.cs,ConfigureRabbitMqBusHost,The following statement contains a magic number: configurator.ReceiveEndpoint(host' "priority_input_queue"' x =>              {                  x.EnablePriority(4);                    _endpointAddress = x.InputAddress;                    x.Handler<PingMessage>(context => context.RespondAsync(new PongMessage(context.Message.CorrelationId)));              });
Magic Number,MassTransit.RabbitMqTransport.Tests,PublishFaultObserver_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\PublishFaultObserver_Specs.cs,Should_handle_the_observer_fault,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,MassTransit.RabbitMqTransport.Tests,PublishFaultObserver_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\PublishFaultObserver_Specs.cs,Should_handle_the_observer_fault,The following statement contains a magic number: i < 30
Magic Number,MassTransit.RabbitMqTransport.Tests,Given_a_valid_endpoint_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,Should_return_a_valid_address_for_a_full_address_using_default_virtual_host,The following statement contains a magic number: Assert.That(address.Port' Is.EqualTo(5672));
Magic Number,MassTransit.RabbitMqTransport.Tests,Given_a_valid_endpoint_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,Should_return_a_valid_address_with_a_default_port,The following statement contains a magic number: Assert.That(address.Port' Is.EqualTo(5672));
Magic Number,MassTransit.RabbitMqTransport.Tests,Given_a_valid_endpoint_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,Should_return_a_valid_address_with_a_custom_port,The following statement contains a magic number: Assert.That(address.Port' Is.EqualTo(25672));
Magic Number,MassTransit.RabbitMqTransport.Tests,Given_a_valid_endpoint_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,Should_return_a_valid_address_with_a_secure_port,The following statement contains a magic number: Assert.That(address.Port' Is.EqualTo(5671));
Magic Number,MassTransit.RabbitMqTransport.Tests,GivenAPortedAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,ThePort,The following statement contains a magic number: _hostSettings.Port.ShouldBe(12);
Magic Number,MassTransit.RabbitMqTransport.Tests,GivenANonPortedAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,ThePort,The following statement contains a magic number: _hostSettings.Port.ShouldBe(5672);
Magic Number,MassTransit.RabbitMqTransport.Tests,Given_a_prefetch_count,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RabbitMqAddress_Specs.cs,Should_have_the_prefetch_count_on_the_address,The following statement contains a magic number: _receiveSettings.PrefetchCount.ShouldBe((ushort)32);
Magic Number,MassTransit.RabbitMqTransport.Tests,Reconnecting_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Reconnecting_Specs.cs,Reconnecting_Specs,The following statement contains a magic number: SendEndpointCacheDefaults.MinAge = TimeSpan.FromSeconds(2);
Magic Number,MassTransit.RabbitMqTransport.Tests,Reconnecting_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Reconnecting_Specs.cs,Reconnecting_Specs,The following statement contains a magic number: SendEndpointCacheDefaults.Capacity = 5;
Magic Number,MassTransit.RabbitMqTransport.Tests,Reconnecting_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Reconnecting_Specs.cs,Should_fault_nicely,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Reconnecting_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Reconnecting_Specs.cs,Should_fault_nicely,The following statement contains a magic number: i < 20
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8)' context => context.SetAwaitAck(false));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8)' context => context.SetAwaitAck(false));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_with_a_different_host_name,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8)' context =>                  {                      context.SetAwaitAck(false);                      context.ResponseAddress = new UriBuilder(Bus.Address) {Host = "totally-bogus-host"}.Uri;                  });
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_with_a_different_host_name,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8)' context =>                  {                      context.SetAwaitAck(false);                      context.ResponseAddress = new UriBuilder(Bus.Address) {Host = "totally-bogus-host"}.Uri;                  });
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_with_the_broker_down_using_the_request_client,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Should_receive_the_response,The following statement contains a magic number: await Task.Delay(15000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_new_request_client,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = Bus.CreateRequestClient<PingMessage>(InputQueueAddress' RequestTimeout.After(s: 8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_new_request_client_via_new_endpoint_name,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = Bus.CreateRequestClient<PingMessage>(new Uri("exchange:input_queue")' RequestTimeout.After(s: 8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _factory = await Host.CreateRequestClientFactory<A' B>(InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _factory = await Host.CreateRequestClientFactory<A' B>(InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_new_request_client_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _clientFactory = await Host.CreateClientFactory(RequestTimeout.After(s: 8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_new_request_client_in_a_consumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = Bus.CreateRequestClient<PingMessage>(InputQueueAddress' RequestTimeout.After(s: 8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_new_request_client_in_a_consumer_also,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _clientFactory = await Host.CreateClientFactory(RequestTimeout.After(s: 8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_new_request_client_in_a_consumer_also,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = await Host.CreateRequestClient<PingMessage>(InputQueueAddress' RequestTimeout.After(s: 8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client_with_no_confirmations,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_using_the_request_client_with_no_confirmations,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8)'                  TimeSpan.FromSeconds(8));
Magic Number,MassTransit.RabbitMqTransport.Tests,Sending_a_request_to_a_faulty_service,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Request_Specs.cs,Setup,The following statement contains a magic number: _requestClient = new MessageRequestClient<PingMessage' PongMessage>(Bus' InputQueueAddress' TimeSpan.FromSeconds(8));
Magic Number,MassTransit.RabbitMqTransport.Tests,When_specifying_retry_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Retry_Specs.cs,When_specifying_retry_limit,The following statement contains a magic number: _limit = 2;
Magic Number,MassTransit.RabbitMqTransport.Tests,When_specifying_retry_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Retry_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: var sec2 = TimeSpan.FromSeconds(2);
Magic Number,MassTransit.RabbitMqTransport.Tests,When_specifying_retry_limit,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Retry_Specs.cs,ConnectObservers,The following statement contains a magic number: _activityMonitor = bus.CreateBusActivityMonitor(TimeSpan.FromMilliseconds(500));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_routing_key_and_topic_exchange,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RoutingKeyTopic_Specs.cs,Should_support_routing_by_key_and_exchange_name,The following statement contains a magic number: await Bus.Publish(new Message(100.0m' "MSFT"));
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_routing_key_and_topic_exchange,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\RoutingKeyTopic_Specs.cs,Should_support_routing_by_key_and_exchange_name,The following statement contains a magic number: await Bus.Publish(new Message(3.50m' "UBER"));
Magic Number,MassTransit.RabbitMqTransport.Tests,Should_schedule_in_the_future,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ScheduleMessage_Specs.cs,Should_get_both_messages,The following statement contains a magic number: Assert.That(timer.Elapsed' Is.GreaterThanOrEqualTo(TimeSpan.FromSeconds(2)));
Magic Number,MassTransit.RabbitMqTransport.Tests,Should_schedule_in_the_future,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\ScheduleMessage_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: _first = Handler<FirstMessage>(configurator' async context =>              {                  await context.ScheduleSend(TimeSpan.FromSeconds(3)' new SecondMessage());                    await context.ReceiveContext.ReceiveCompleted;              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.UseConcurrencyLimit(32' _management);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,Should_allow_reconfiguration,The following statement contains a magic number: var response = await client.GetResponse<ConcurrencyLimitUpdated>(new              {                  ConcurrencyLimit = 16'                  Timestamp = DateTime.UtcNow              }' TestCancellationToken);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,Should_allow_reconfiguration,The following statement contains a magic number: Assert.AreEqual(16' response.Message.ConcurrencyLimit);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,Should_allow_reconfiguration_of_prefetch_count,The following statement contains a magic number: await Task.Delay(20);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,Should_allow_reconfiguration_of_prefetch_count,The following statement contains a magic number: i < 50
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,Should_allow_reconfiguration_of_prefetch_count,The following statement contains a magic number: await client.GetResponse<PrefetchCountUpdated>(new              {                  PrefetchCount = (ushort)32'                  Timestamp = DateTime.UtcNow'                  QueueName = "input_queue"'              }' TestCancellationToken);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,Should_allow_reconfiguration_of_prefetch_count,The following statement contains a magic number: await Task.Delay(20);
Magic Number,MassTransit.RabbitMqTransport.Tests,Using_a_concurrency_limit_on_a_receive_endpoint,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SetPrefetchCount_Specs.cs,Should_allow_reconfiguration_of_prefetch_count,The following statement contains a magic number: i < 50
Magic Number,MassTransit.RabbitMqTransport.Tests,Stopping_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Shutdown_Specs.cs,Should_complete_running_consumers_nicely,The following statement contains a magic number: IBusControl bus = Bus.Factory.CreateUsingRabbitMq(x =>              {                  IRabbitMqHost host = x.Host("localhost"' "test"' h =>                  {                  });                    x.ReceiveEndpoint(host' "input_queue"' e =>                  {                      e.PurgeOnStartup = true;                        e.Handler<PingMessage>(async context =>                      {                          await Console.Out.WriteLineAsync("Starting handler");                            consumerStarted.TrySetResult(context.Message);                            for (var i = 0; i < 5; i++)                          {                              await Task.Delay(1000);                                await Console.Out.WriteLineAsync("Handler processing");                          }                            await context.RespondAsync(new PongMessage(context.Message.CorrelationId));                            await Console.Out.WriteLineAsync("Handler complete");                      });                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Stopping_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Shutdown_Specs.cs,Should_complete_running_consumers_nicely,The following statement contains a magic number: IBusControl bus = Bus.Factory.CreateUsingRabbitMq(x =>              {                  IRabbitMqHost host = x.Host("localhost"' "test"' h =>                  {                  });                    x.ReceiveEndpoint(host' "input_queue"' e =>                  {                      e.PurgeOnStartup = true;                        e.Handler<PingMessage>(async context =>                      {                          await Console.Out.WriteLineAsync("Starting handler");                            consumerStarted.TrySetResult(context.Message);                            for (var i = 0; i < 5; i++)                          {                              await Task.Delay(1000);                                await Console.Out.WriteLineAsync("Handler processing");                          }                            await context.RespondAsync(new PongMessage(context.Message.CorrelationId));                            await Console.Out.WriteLineAsync("Handler complete");                      });                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Stopping_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Shutdown_Specs.cs,Should_complete_with_nothing_running,The following statement contains a magic number: IBusControl bus = Bus.Factory.CreateUsingRabbitMq(x =>              {                  IRabbitMqHost host = x.Host("localhost"' "test"' h =>                  {                  });                    x.ReceiveEndpoint(host' "input_queue"' e =>                  {                      e.PurgeOnStartup = true;                        e.Handler<PingMessage>(async context =>                      {                          await Console.Out.WriteLineAsync("Starting handler");                            for (var i = 0; i < 5; i++)                          {                              await Task.Delay(1000);                                await Console.Out.WriteLineAsync("Handler processing");                          }                            await Console.Out.WriteLineAsync("Handler complete");                      });                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Stopping_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Shutdown_Specs.cs,Should_complete_with_nothing_running,The following statement contains a magic number: IBusControl bus = Bus.Factory.CreateUsingRabbitMq(x =>              {                  IRabbitMqHost host = x.Host("localhost"' "test"' h =>                  {                  });                    x.ReceiveEndpoint(host' "input_queue"' e =>                  {                      e.PurgeOnStartup = true;                        e.Handler<PingMessage>(async context =>                      {                          await Console.Out.WriteLineAsync("Starting handler");                            for (var i = 0; i < 5; i++)                          {                              await Task.Delay(1000);                                await Console.Out.WriteLineAsync("Handler processing");                          }                            await Console.Out.WriteLineAsync("Handler complete");                      });                  });              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Stopping_the_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Shutdown_Specs.cs,Should_complete_with_nothing_running,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Skipping_messages_should_not_crash_the_service,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Skip_Specs.cs,Should_properly_complete_without_dying,The following statement contains a magic number: await Task.WhenAll(Enumerable.Range(0' 1000).Select(n => Bus.Publish(new PingMessage())));
Magic Number,MassTransit.RabbitMqTransport.Tests,Skipping_messages_should_not_crash_the_service,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Skip_Specs.cs,Should_properly_complete_without_dying,The following statement contains a magic number: await Task.Delay(10000);
Magic Number,MassTransit.RabbitMqTransport.Tests,Skipping_messages_should_not_crash_the_service,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Skip_Specs.cs,ConfigureRabbitMqBusHost,The following statement contains a magic number: configurator.ReceiveEndpoint(host' "monitor"' e =>              {                  _pingsHandled = Handled<PingMessage>(e' 1000);              });
Magic Number,MassTransit.RabbitMqTransport.Tests,TestFactory,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TestFactory.cs,ConnectionFactory,The following statement contains a magic number: return new ConnectionFactory  			{  				UserName = "guest"'  				Password = "guest"'  				Port = 5672'  				VirtualHost = "test"'  				HostName = "localhost"'  				Protocol = Protocols.AMQP_0_9_1'  			};
Magic Number,MassTransit.RabbitMqTransport.Tests,Creating_a_turnout_job,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Turnout_Specs.cs,Should_allow_scheduling_a_job,The following statement contains a magic number: await endpoint.Send(new ProcessFile              {                  Filename = "log.txt"'                  Size = 2              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Creating_a_turnout_job,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Turnout_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: _completed2 = Handled<JobCompleted>(configurator' context => context.Message.GetArguments<ProcessFile>().Size == 2);
Magic Number,MassTransit.RabbitMqTransport.Tests,Stopping_the_bus_before_the_job_is_done,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Turnout_Specs.cs,Should_send_the_job_canceled,The following statement contains a magic number: await endpoint.Send(new ProcessFile              {                  Filename = "log.txt"'                  Size = 10              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Cancelling_a_job_using_the_management_address,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Turnout_Specs.cs,Should_send_the_job_canceled,The following statement contains a magic number: await endpoint.Send(new ProcessFile              {                  Filename = "log.txt"'                  Size = 10              });
Magic Number,MassTransit.RabbitMqTransport.Tests,Executing_with_no_observers,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TwoActivityCourier_Specs.cs,Executing_with_no_observers,The following statement contains a magic number: TestTimeout = TimeSpan.FromSeconds(60);
Magic Number,MassTransit.RabbitMqTransport.Tests,Executing_many_activities_in_a_row,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TwoActivityCourier_Specs.cs,Executing_many_activities_in_a_row,The following statement contains a magic number: TestTimeout = TimeSpan.FromMinutes(2);
Magic Number,MassTransit.RabbitMqTransport.Tests,Executing_many_activities_in_a_row,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TwoActivityCourier_Specs.cs,Setup,The following statement contains a magic number: _limit = 100;
Magic Number,MassTransit.RabbitMqTransport.Tests,Executing_many_activities_in_a_row_with_a_fault_one,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\TwoActivityCourier_Specs.cs,Executing_many_activities_in_a_row_with_a_fault_one,The following statement contains a magic number: TestTimeout = TimeSpan.FromMinutes(2);
Magic Number,Batching,When_a_batch_limit_is_reached,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: i < 5
Magic Number,Batching,When_a_batch_limit_is_reached,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: Assert.That(batch.Length' Is.EqualTo(5));
Magic Number,Batching,When_a_batch_limit_is_reached,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.PrefetchCount = 10;
Magic Number,Batching,When_a_batch_limit_is_reached,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>                 {                     x.MessageLimit = 5;                      x.Consumer(() => _consumer);                 });
Magic Number,Batching,When_a_batch_timeout_is_reached_due_to_prefetch,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: i < 10
Magic Number,Batching,When_a_batch_timeout_is_reached_due_to_prefetch,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: Assert.That(batch.Length' Is.EqualTo(5));
Magic Number,Batching,When_a_batch_timeout_is_reached_due_to_prefetch,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,Should_receive_the_message_batch,The following statement contains a magic number: Assert.That(batch.Length' Is.EqualTo(5));
Magic Number,Batching,When_a_batch_timeout_is_reached_due_to_prefetch,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.PrefetchCount = 5;
Magic Number,Batching,When_a_batch_timeout_is_reached_due_to_prefetch,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Batching_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.Batch<PingMessage>(x =>                 {                     x.MessageLimit = 10;                     x.TimeLimit = TimeSpan.FromSeconds(1);                      x.Consumer(() => _consumer);                 });
Magic Number,Send_Specs,WhenAMessageIsPublishedToTheEndpointSuccessfully,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Publish_Specs.cs,Should_take_time_to_watch_channel_use,The following statement contains a magic number: await Task.Delay(15000);
Magic Number,Send_Specs,WhenAMessageIsPublishedToTheEndpointFaulting,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Publish_Specs.cs,Should_take_time_to_watch_channel_use,The following statement contains a magic number: await Task.Delay(15000);
Magic Number,Send_Specs,When_a_message_is_published_from_the_queue,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Publish_Specs.cs,ConfigureRabbitMqReceiveEndpoint,The following statement contains a magic number: configurator.PrefetchCount = 16;
Magic Number,Send_Specs,When_a_message_is_published_from_the_queue,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\Publish_Specs.cs,ConfigureRabbitMqBusHost,The following statement contains a magic number: configurator.ReceiveEndpoint(host' "ack_queue"' x =>                  {                      _receivedGotA = Handled<GotA>(x);                        x.ConsumerPriority = 10;                  });
Magic Number,ObserverTests,Connecting_to_the_publish_observer_bus,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.RabbitMqTransport.Tests\SendObserver_Specs.cs,Should_not_invoke_the_send_observer_prior_to_send,The following statement contains a magic number: Assert.That(async () => await sendObserver.PreSent.OrTimeout(s:5)' Throws.TypeOf<TimeoutException>());
