Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MassTransit.Transports.Tests,TransportTest,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Transports.Tests\TransportTest.cs,CreateHarness,The length of the statement  "                var harness = new AmazonSqsTestHarness(Credentials.AmazonRegion' Credentials.AmazonAccessKey' Credentials.AmazonSecretKey);" is 123.
Long Statement,ErrorHandling,A_serialization_exception,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Transports.Tests\ErrorQueue_Specs.cs,Should_have_the_exception,The length of the statement  "                Assert.That(context.ReceiveContext.TransportHeaders.Get("MT-Fault-Message"' default(string))' Is.EqualTo("This is fine' forcing death"));" is 137.
Magic Number,MassTransit.Transports.Tests,TypeCastRetry_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Transports.Tests\TypeCastRetry_Specs.cs,Setup,The following statement contains a magic number: Harness.OnConfigureBus += configurator =>             {                 var sec5 = TimeSpan.FromSeconds(5);                 configurator.UseRetry(x => x.Exponential(2' sec5' sec5' sec5));             };
Magic Number,MassTransit.Transports.Tests,TypeCastRetry_Specs,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Transports.Tests\TypeCastRetry_Specs.cs,Setup,The following statement contains a magic number: Harness.OnConfigureBus += configurator =>             {                 var sec5 = TimeSpan.FromSeconds(5);                 configurator.UseRetry(x => x.Exponential(2' sec5' sec5' sec5));             };
Magic Number,Publishing,Publishing_a_message,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.Transports.Tests\Publish_Specs.cs,Should_not_call_the_send_observer,The following statement contains a magic number: Assert.That(async () => await _send.PreSent.OrTimeout(s:5)' Throws.TypeOf<TimeoutException>());
