Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MassTransit.QuartzIntegration,ScheduleMessageConsumer,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\ScheduleMessageConsumer.cs,CreateJobDetail,Cyclomatic complexity of the method is 9
Long Statement,MassTransit.QuartzIntegration,CancelScheduledMessageConsumer,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\CancelScheduledMessageConsumer.cs,Consume,The length of the statement  "                    _log.DebugFormat("CancelRecurringScheduledMessage: {0}/{1} at {2}"' context.Message.ScheduleId' context.Message.ScheduleGroup' " is 126.
Long Statement,MassTransit.QuartzIntegration,ScheduledMessageJob,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\ScheduledMessageJob.cs,CreateMessageContext,The length of the statement  "                    if (string.Compare(ContentType' JsonMessageSerializer.JsonContentType.MediaType' StringComparison.OrdinalIgnoreCase) == 0) " is 122.
Long Statement,MassTransit.QuartzIntegration,ScheduledMessageJob,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\ScheduledMessageJob.cs,CreateMessageContext,The length of the statement  "                    else if (string.Compare(ContentType' XmlMessageSerializer.XmlContentType.MediaType' StringComparison.OrdinalIgnoreCase) == 0) " is 125.
Long Statement,MassTransit.QuartzIntegration,ScheduleMessageConsumer,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\ScheduleMessageConsumer.cs,Consume,The length of the statement  "                _log.DebugFormat("ScheduleRecurringMessage: {0} at {1}"' context.Message.CorrelationId' context.Message.Schedule.ScheduleId); " is 125.
Long Statement,MassTransit.QuartzIntegration,ScheduleMessageConsumer,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\ScheduleMessageConsumer.cs,Consume,The length of the statement  "            var triggerKey = new TriggerKey("Recurring.Trigger." + context.Message.Schedule.ScheduleId' context.Message.Schedule.ScheduleGroup); " is 132.
Long Statement,MassTransit.QuartzIntegration.Configuration,InMemorySchedulerBusObserver,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\Configuration\InMemorySchedulerBusObserver.cs,PostStart,The length of the statement  "                _log.DebugFormat("Quartz Scheduler Starting: {0} ({1}/{2})"' bus.Address' _scheduler.SchedulerName' _scheduler.SchedulerInstanceId); " is 132.
Long Statement,MassTransit.QuartzIntegration.Configuration,InMemorySchedulerBusObserver,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\Configuration\InMemorySchedulerBusObserver.cs,PostStart,The length of the statement  "                _log.InfoFormat("Quartz Scheduler Started: {0} ({1}/{2})"' bus.Address' _scheduler.SchedulerName' _scheduler.SchedulerInstanceId); " is 130.
Long Statement,MassTransit.QuartzIntegration.Configuration,InMemorySchedulerBusObserver,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\Configuration\InMemorySchedulerBusObserver.cs,PreStop,The length of the statement  "                _log.InfoFormat("Quartz Scheduler Paused: {0} ({1}/{2})"' bus.Address' _scheduler.SchedulerName' _scheduler.SchedulerInstanceId); " is 129.
Long Statement,MassTransit.QuartzIntegration.Configuration,InMemorySchedulerBusObserver,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\Configuration\InMemorySchedulerBusObserver.cs,PostStop,The length of the statement  "                _log.InfoFormat("Quartz Scheduler Stopped: {0} ({1}/{2})"' bus.Address' _scheduler.SchedulerName' _scheduler.SchedulerInstanceId); " is 130.
Magic Number,MassTransit,QuartzIntegrationExtensions,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\QuartzIntegrationExtensions.cs,UseInMemoryScheduler,The following statement contains a magic number: configurator.ReceiveEndpoint("quartz"' e =>              {                  configurator.UseMessageScheduler(e.InputAddress);                    var partitioner = configurator.CreatePartitioner(16);                    e.Consumer(() => new ScheduleMessageConsumer(scheduler)' x =>                      x.ConfigureMessage<ScheduleMessage>(m => m.UsePartitioner(partitioner' p => p.Message.CorrelationId)));                  e.Consumer(() => new CancelScheduledMessageConsumer(scheduler)' x =>                      x.ConfigureMessage<CancelScheduledMessage>(m => m.UsePartitioner(partitioner' p => p.Message.TokenId)));              });
Missing Default,MassTransit.QuartzIntegration,ScheduleMessageConsumer,C:\repos\phatboyg_MassTransit\src\MassTransit.QuartzIntegration\ScheduleMessageConsumer.cs,CreateTrigger,The following switch statement is missing a default case: switch (schedule.MisfirePolicy)                      {                          case MissedEventPolicy.Skip:                              x.WithMisfireHandlingInstructionDoNothing();                              break;                          case MissedEventPolicy.Send:                              x.WithMisfireHandlingInstructionFireAndProceed();                              break;                      }
