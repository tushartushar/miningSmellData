Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MassTransit.ActiveMqTransport.Contexts,TransportHeaderExtensions,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\TransportHeaderExtensions.cs,SetHeaders,Cyclomatic complexity of the method is 13
Long Parameter List,MassTransit.ActiveMqTransport,ActiveMqEndpointAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqEndpointAddress.cs,ActiveMqEndpointAddress,The method has 5 parameters. Parameters: hostAddress' exchangeName' durable' autoDelete' type
Long Parameter List,MassTransit.ActiveMqTransport,ActiveMqEndpointAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqEndpointAddress.cs,ActiveMqEndpointAddress,The method has 8 parameters. Parameters: scheme' host' port' virtualHost' name' durable' autoDelete' type
Long Parameter List,MassTransit.ActiveMqTransport,ActiveMqEndpointAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqEndpointAddress.cs,ParseLeft,The method has 5 parameters. Parameters: address' scheme' host' port' virtualHost
Long Parameter List,MassTransit.ActiveMqTransport,ActiveMqHostAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqHostAddress.cs,ParseLeft,The method has 5 parameters. Parameters: address' scheme' host' port' virtualHost
Long Parameter List,MassTransit.ActiveMqTransport.Contexts,CachedMessageProducer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\CachedMessageProducer.cs,Send,The method has 5 parameters. Parameters: destination' message' deliveryMode' priority' timeToLive
Long Parameter List,MassTransit.ActiveMqTransport.Contexts,HostActiveMqSendTransportContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\HostActiveMqSendTransportContext.cs,HostActiveMqSendTransportContext,The method has 5 parameters. Parameters: sessionContextSupervisor' configureTopologyPipe' entityName' destinationType' logContext
Long Parameter List,MassTransit.ActiveMqTransport.Scheduling,ActiveMqScheduleMessageProvider,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Scheduling\ActiveMqScheduleMessageProvider.cs,ScheduleSend,The method has 5 parameters. Parameters: destinationAddress' scheduledTime' message' pipe' cancellationToken
Long Parameter List,MassTransit.ActiveMqTransport.Topology.Entities,QueueEntity,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Entities\QueueEntity.cs,QueueEntity,The method has 5 parameters. Parameters: id' name' durable' autoDelete' lazy
Long Identifier,MassTransit.ActiveMqTransport.Configurators,ActiveMqBusFactoryConfigurator,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configurators\ActiveMqBusFactoryConfigurator.cs,CreateBus,The length of the parameter busReceiveEndpointConfiguration is 31.
Long Identifier,MassTransit.ActiveMqTransport.Topology.Topologies,ImplementedMessageTypeConnector<TMessage>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Topologies\ActiveMqPublishTopology.cs,ImplementedMessageTypeConnector,The length of the parameter messagePublishTopologyConfigurator is 34.
Long Identifier,MassTransit.ActiveMqTransport.Topology.Topologies,ImplementedMessageTypeConnector<TMessage>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Topologies\ActiveMqPublishTopology.cs,,The length of the parameter _messagePublishTopologyConfigurator is 35.
Long Statement,MassTransit.ActiveMqTransport,ActiveMqHostConfigurationExtensions,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\ActiveMqHostConfigurationExtensions.cs,ReceiveEndpoint,The length of the statement  "            configurator.ReceiveEndpoint(host' new TemporaryEndpointDefinition()' DefaultEndpointNameFormatter.Instance' configure); " is 120.
Long Statement,MassTransit.ActiveMqTransport.Builders,ActiveMqReceiveEndpointBuilder,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Builders\ActiveMqReceiveEndpointBuilder.cs,CreateDeadLetterTransport,The length of the statement  "            var filter = new ConfigureTopologyFilter<DeadLetterSettings>(deadLetterSettings' deadLetterSettings.GetBrokerTopology()); " is 121.
Long Statement,MassTransit.ActiveMqTransport.Configuration,ActiveMqReceiveEndpointConfiguration,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configuration\ActiveMqReceiveEndpointConfiguration.cs,Build,The length of the statement  "            _sessionConfigurator.UseFilter(new ConfigureTopologyFilter<ReceiveSettings>(_settings' receiveEndpointContext.BrokerTopology));" is 127.
Long Statement,MassTransit.ActiveMqTransport.Configurators,ActiveMqBusFactoryConfigurator,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configurators\ActiveMqBusFactoryConfigurator.cs,Publish,The length of the statement  "            IActiveMqMessagePublishTopologyConfigurator<T> configurator = _busConfiguration.Topology.Publish.GetMessageTopology<T>(); " is 121.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqConnectionContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqConnectionContext.cs,CreateSession,The length of the statement  "                var model = await Task.Factory.StartNew(() => _connection.CreateSession()' tokenSource.Token' TaskCreationOptions.None' _taskScheduler) " is 135.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqMessageRedeliveryContext<TMessage>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqMessageRedeliveryContext.cs,ScheduleRedelivery,The length of the statement  "            return _scheduler.ScheduleSend(_context.ReceiveContext.InputAddress' delay' _context.Message' _context.CreateCopyContextPipe(combinedCallback));" is 144.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqReceiveContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqReceiveContext.cs,GetBody,The length of the statement  "            throw new ActiveMqTransportException($"The message type is not supported: {TypeMetadataCache.GetShortName(_transportMessage.GetType())}"); " is 138.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqSessionContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqSessionContext.cs,GetTopic,The length of the statement  "            return Task.Factory.StartNew(() => SessionUtil.GetTopic(_session' topicName)' CancellationToken' TaskCreationOptions.None' _taskScheduler); " is 139.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqSessionContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqSessionContext.cs,GetQueue,The length of the statement  "            return Task.Factory.StartNew(() => SessionUtil.GetQueue(_session' queueName)' CancellationToken' TaskCreationOptions.None' _taskScheduler); " is 139.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqSessionContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqSessionContext.cs,GetDestination,The length of the statement  "            return Task.Factory.StartNew(() => SessionUtil.GetDestination(_session' destination' destinationType)' CancellationToken' TaskCreationOptions.None' " is 147.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqSessionContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqSessionContext.cs,CreateMessageConsumer,The length of the statement  "            return Task.Factory.StartNew(() => _session.CreateConsumer(destination' selector' noLocal)' CancellationToken' TaskCreationOptions.None' " is 136.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqSessionContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqSessionContext.cs,DeleteTopic,The length of the statement  "            return Task.Factory.StartNew(() => SessionUtil.DeleteTopic(_session' topicName)' CancellationToken.None' TaskCreationOptions.None' _taskScheduler); " is 147.
Long Statement,MassTransit.ActiveMqTransport.Contexts,ActiveMqSessionContext,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\ActiveMqSessionContext.cs,DeleteQueue,The length of the statement  "            return Task.Factory.StartNew(() => SessionUtil.DeleteQueue(_session' queueName)' CancellationToken.None' TaskCreationOptions.None' _taskScheduler); " is 147.
Long Statement,MassTransit.ActiveMqTransport.Pipeline,ActiveMqBasicConsumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Pipeline\ActiveMqBasicConsumer.cs,HandleMessage,The length of the statement  "            var context = new ActiveMqReceiveContext(_inputAddress' message' _context' _receiveSettings' _session' _session.ConnectionContext); " is 131.
Long Statement,MassTransit.ActiveMqTransport.Pipeline,ActiveMqBasicConsumer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Pipeline\ActiveMqBasicConsumer.cs,ActiveAndActualAgentsCompleted,The length of the statement  "                    LogContext.Warning?.Log("Stop canceled waiting for message consumers to complete: {InputAddress}"' _context.InputAddress); " is 122.
Long Statement,MassTransit.ActiveMqTransport.Pipeline,ActiveMqConsumerFilter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Pipeline\ActiveMqConsumerFilter.cs,Send,The length of the statement  "            consumers.AddRange(_context.BrokerTopology.Consumers.Select(x => CreateConsumer(context' x.Destination.EntityName' x.Selector))); " is 129.
Long Statement,MassTransit.ActiveMqTransport.Pipeline,ActiveMqConsumerFilter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Pipeline\ActiveMqConsumerFilter.cs,Send,The length of the statement  "                await _context.TransportObservers.Completed(new ReceiveTransportCompletedEvent(inputAddress' metrics)).ConfigureAwait(false); " is 125.
Long Statement,MassTransit.ActiveMqTransport.Pipeline,ActiveMqConsumerFilter,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Pipeline\ActiveMqConsumerFilter.cs,Send,The length of the statement  "                LogContext.Debug?.Log("Consumer completed {InputAddress}: {DeliveryCount} received' {ConcurrentDeliveryCount} concurrent"' inputAddress' " is 136.
Long Statement,MassTransit.ActiveMqTransport.Pipeline,ConfigureTopologyFilter<TSettings>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Pipeline\ConfigureTopologyFilter.cs,DeleteAutoDelete,The length of the statement  "                await Task.WhenAll(_brokerTopology.Topics.Where(x => x.AutoDelete).Select(topic => Delete(context' topic))).ConfigureAwait(false); " is 130.
Long Statement,MassTransit.ActiveMqTransport.Pipeline,ConfigureTopologyFilter<TSettings>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Pipeline\ConfigureTopologyFilter.cs,DeleteAutoDelete,The length of the statement  "                await Task.WhenAll(_brokerTopology.Queues.Where(x => x.AutoDelete).Select(queue => Delete(context' queue))).ConfigureAwait(false); " is 130.
Long Statement,MassTransit.ActiveMqTransport.Scheduling,ActiveMqScheduleMessageProvider,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Scheduling\ActiveMqScheduleMessageProvider.cs,ScheduleSend,The length of the statement  "            return new ScheduledMessageHandle<T>(scheduleMessagePipe.ScheduledMessageId ?? NewId.NextGuid()' scheduledTime' destinationAddress' payload);" is 141.
Long Statement,MassTransit.ActiveMqTransport.Topology,ActiveMqEntityNameValidator,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\ActiveMqEntityNameValidator.cs,ThrowIfInvalidEntityName,The length of the statement  "                throw new ActiveMqTransportConfigurationException("The entity name must be a sequence of these characters: letters' digits' hyphen' underscore' period' or colon."); " is 164.
Long Statement,MassTransit.ActiveMqTransport.Topology.Topologies,ActiveMqConsumeTopology,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Topologies\ActiveMqConsumeTopology.cs,Bind,The length of the statement  "                _specifications.Add(new InvalidActiveMqConsumeTopologySpecification("Bind"' $"Only virtual topics can be bound: {topicName}")); " is 127.
Long Statement,MassTransit.ActiveMqTransport.Topology.Topologies,ActiveMqConsumeTopology,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Topologies\ActiveMqConsumeTopology.cs,CreateMessageTopology,The length of the statement  "            var messageTopology = new ActiveMqMessageConsumeTopology<T>(_messageTopology.GetMessageTopology<T>()' _publishTopology.GetMessageTopology<T>()); " is 144.
Long Statement,MassTransit.ActiveMqTransport.Topology.Topologies,ActiveMqMessageConsumeTopology<TMessage>,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Topologies\ActiveMqMessageConsumeTopology.cs,Bind,The length of the statement  "                _specifications.Add(new InvalidActiveMqConsumeTopologySpecification(TypeMetadataCache<TMessage>.ShortName' "Is not a bindable message type")); " is 142.
Long Statement,MassTransit.ActiveMqTransport.Transport,ActiveMqHost,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqHost.cs,CreatePublishTransport,The length of the statement  "            var configureTopology = new ConfigureTopologyFilter<SendSettings>(settings' publishTopology.GetBrokerTopology()).ToPipe(); " is 122.
Long Statement,MassTransit.ActiveMqTransport.Transport,ActiveMqHost,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqHost.cs,CreateSendTransport,The length of the statement  "            var sendTransportContext = new HostActiveMqSendTransportContext(sessionContextSupervisor' pipe' entityName' destinationType' SendLogContext); " is 141.
Long Statement,MassTransit.ActiveMqTransport.Transport,ActiveMqSendTransport,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqSendTransport.cs,Send,The length of the statement  "                throw new TransportUnavailableException($"The send transport is stopped: {_context.EntityName}/{_context.DestinationType}"); " is 124.
Long Statement,MassTransit.ActiveMqTransport.Transport,SendPipe,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqSendTransport.cs,Send,The length of the statement  "                var destination = await sessionContext.GetDestination(_context.EntityName' _context.DestinationType).ConfigureAwait(false); " is 123.
Long Statement,MassTransit.ActiveMqTransport.Transport,ConnectionContextFactory,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ConnectionContextFactory.cs,CreateConnection,The length of the statement  "                    LogContext.Debug?.Log("Connected: {Host} (client-id: {ClientId}' version: {Version})"' _configuration.Description' connection.ClientId'" is 135.
Complex Conditional,MassTransit.ActiveMqTransport.Topology.Topologies,ActiveMqHostTopology,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Topologies\ActiveMqHostTopology.cs,CreateTemporaryQueueName,The conditional expression  "c == '.' || c == '_' || c == '-' || c == ':'"  is complex.
Complex Conditional,MassTransit.ActiveMqTransport.Topology.Topologies,ActiveMqHostTopology,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Topologies\ActiveMqHostTopology.cs,CreateTemporaryQueueName,The conditional expression  "c == '.' || c == '_' || c == '-' || c == ':'"  is complex.
Magic Number,MassTransit.ActiveMqTransport,ActiveMqEndpointAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqEndpointAddress.cs,ActiveMqEndpointAddress,The following statement contains a magic number: Port = 5671;
Magic Number,MassTransit.ActiveMqTransport,ActiveMqEndpointAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqEndpointAddress.cs,ActiveMqEndpointAddress,The following statement contains a magic number: switch (scheme)             {                 case ActiveMqHostAddress.ActiveMqScheme:                     Scheme = address.Scheme;                     Host = address.Host;                     Port = address.IsDefaultPort                         ? 61616                         : address.Port;                      address.ParseHostPathAndEntityName(out VirtualHost' out Name);                     break;                  case "queue":                     ParseLeft(hostAddress' out Scheme' out Host' out Port' out VirtualHost);                      Name = address.AbsolutePath;                     break;                  case "topic":                     ParseLeft(hostAddress' out Scheme' out Host' out Port' out VirtualHost);                      Name = address.AbsolutePath;                     Type = AddressType.Topic;                     break;                  default:                     throw new ArgumentException($"The address scheme is not supported: {address.Scheme}"' nameof(address));             }
Magic Number,MassTransit.ActiveMqTransport,ActiveMqHostAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqHostAddress.cs,ActiveMqHostAddress,The following statement contains a magic number: Port = 61616;
Magic Number,MassTransit.ActiveMqTransport,ActiveMqHostAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqHostAddress.cs,ParseLeft,The following statement contains a magic number: port = address.IsDefaultPort                 ? 61616                 : address.Port;
Magic Number,MassTransit.ActiveMqTransport.Configurators,ActiveMqHostConfigurator,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configurators\ActiveMqHostConfigurator.cs,ActiveMqHostConfigurator,The following statement contains a magic number: _settings.Port == 61617 || _settings.Host.EndsWith("amazonaws.com"' StringComparison.OrdinalIgnoreCase)
Magic Number,MassTransit.ActiveMqTransport.Configurators,ActiveMqHostConfigurator,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configurators\ActiveMqHostConfigurator.cs,UseSsl,The following statement contains a magic number: _settings.Port = 61617;
Magic Number,MassTransit.ActiveMqTransport.Configurators,ActiveMqHostConfigurator,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configurators\ActiveMqHostConfigurator.cs,UseSsl,The following statement contains a magic number: _settings.Port == 61616
Magic Number,MassTransit.ActiveMqTransport.Configurators,ConfigurationHostSettings,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configurators\ConfigurationHostSettings.cs,ConfigurationHostSettings,The following statement contains a magic number: Port = hostAddress.Port ?? 61616;
Magic Number,MassTransit.ActiveMqTransport.Configurators,ConfigurationHostSettings,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Configuration\Configurators\ConfigurationHostSettings.cs,ConfigurationHostSettings,The following statement contains a magic number: parts.Length >= 2
Magic Number,MassTransit.ActiveMqTransport.Topology,ActiveMqHostEqualityComparer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\ActiveMqHostEqualityComparer.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ obj.Port;
Magic Number,MassTransit.ActiveMqTransport.Topology.Entities,ConsumerEntityEqualityComparer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Entities\ConsumerEntity.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ obj._queue.GetHashCode();
Magic Number,MassTransit.ActiveMqTransport.Topology.Entities,ConsumerEntityEqualityComparer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Entities\ConsumerEntity.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ obj.Selector.GetHashCode();
Magic Number,MassTransit.ActiveMqTransport.Topology.Entities,QueueEntityEqualityComparer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Entities\QueueEntity.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ obj.Durable.GetHashCode();
Magic Number,MassTransit.ActiveMqTransport.Topology.Entities,QueueEntityEqualityComparer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Entities\QueueEntity.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ obj.AutoDelete.GetHashCode();
Magic Number,MassTransit.ActiveMqTransport.Topology.Entities,ExchangeEntityEqualityComparer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Entities\TopicEntity.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ obj.Durable.GetHashCode();
Magic Number,MassTransit.ActiveMqTransport.Topology.Entities,ExchangeEntityEqualityComparer,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Entities\TopicEntity.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ obj.AutoDelete.GetHashCode();
Magic Number,MassTransit.ActiveMqTransport.Topology.Settings,QueueReceiveSettings,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Settings\QueueReceiveSettings.cs,QueueReceiveSettings,The following statement contains a magic number: PrefetchCount = (ushort)Math.Min(Environment.ProcessorCount * 2' 16);
Magic Number,MassTransit.ActiveMqTransport.Topology.Settings,QueueReceiveSettings,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Topology\Settings\QueueReceiveSettings.cs,QueueReceiveSettings,The following statement contains a magic number: PrefetchCount = (ushort)Math.Min(Environment.ProcessorCount * 2' 16);
Magic Number,MassTransit.ActiveMqTransport.Transport,ActiveMqHost,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqHost.cs,ActiveMqHost,The following statement contains a magic number: ConnectionRetryPolicy = Retry.CreatePolicy(x =>              {                  x.Handle<ActiveMqTransportException>();                    x.Exponential(1000' TimeSpan.FromSeconds(3)' TimeSpan.FromSeconds(30)' TimeSpan.FromSeconds(3));              });
Magic Number,MassTransit.ActiveMqTransport.Transport,ActiveMqHost,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqHost.cs,ActiveMqHost,The following statement contains a magic number: ConnectionRetryPolicy = Retry.CreatePolicy(x =>              {                  x.Handle<ActiveMqTransportException>();                    x.Exponential(1000' TimeSpan.FromSeconds(3)' TimeSpan.FromSeconds(30)' TimeSpan.FromSeconds(3));              });
Magic Number,MassTransit.ActiveMqTransport.Transport,ActiveMqHost,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqHost.cs,ActiveMqHost,The following statement contains a magic number: ConnectionRetryPolicy = Retry.CreatePolicy(x =>              {                  x.Handle<ActiveMqTransportException>();                    x.Exponential(1000' TimeSpan.FromSeconds(3)' TimeSpan.FromSeconds(30)' TimeSpan.FromSeconds(3));              });
Magic Number,MassTransit.ActiveMqTransport.Transport,ActiveMqHost,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ActiveMqHost.cs,ActiveMqHost,The following statement contains a magic number: ConnectionRetryPolicy = Retry.CreatePolicy(x =>              {                  x.Handle<ActiveMqTransportException>();                    x.Exponential(1000' TimeSpan.FromSeconds(3)' TimeSpan.FromSeconds(30)' TimeSpan.FromSeconds(3));              });
Magic Number,MassTransit.ActiveMqTransport.Transport,ConnectionContextFactory,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ConnectionContextFactory.cs,ConnectionContextFactory,The following statement contains a magic number: _connectionRetryPolicy = Retry.CreatePolicy(x =>             {                 x.Handle<ActiveMqTransportException>();                  x.Exponential(1000' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(30)' TimeSpan.FromSeconds(3));             });
Magic Number,MassTransit.ActiveMqTransport.Transport,ConnectionContextFactory,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ConnectionContextFactory.cs,ConnectionContextFactory,The following statement contains a magic number: _connectionRetryPolicy = Retry.CreatePolicy(x =>             {                 x.Handle<ActiveMqTransportException>();                  x.Exponential(1000' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(30)' TimeSpan.FromSeconds(3));             });
Magic Number,MassTransit.ActiveMqTransport.Transport,ConnectionContextFactory,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Transport\ConnectionContextFactory.cs,ConnectionContextFactory,The following statement contains a magic number: _connectionRetryPolicy = Retry.CreatePolicy(x =>             {                 x.Handle<ActiveMqTransportException>();                  x.Exponential(1000' TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(30)' TimeSpan.FromSeconds(3));             });
Missing Default,MassTransit.ActiveMqTransport,ActiveMqEndpointAddress,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\ActiveMqEndpointAddress.cs,ActiveMqEndpointAddress,The following switch statement is missing a default case: switch (key)                 {                     case TemporaryKey when bool.TryParse(value' out bool result):                         AutoDelete = result;                         Durable = !result;                         break;                      case DurableKey when bool.TryParse(value' out bool result):                         Durable = result;                         break;                      case AutoDeleteKey when bool.TryParse(value' out bool result):                         AutoDelete = result;                         break;                      case TypeKey when _parseConverter.TryConvert(value' out AddressType result):                         Type = result;                         break;                 }
Missing Default,MassTransit.ActiveMqTransport.Contexts,TransportHeaderExtensions,C:\research\architectureSmells\repos\phatboyg_MassTransit\src\MassTransit.ActiveMqTransport\Contexts\TransportHeaderExtensions.cs,SetHeaders,The following switch statement is missing a default case: switch (header.Value)                 {                     case DateTimeOffset dateTimeOffset:                         if (_dateTimeOffsetConverter.TryConvert(dateTimeOffset' out long result))                             dictionary[header.Key] = result;                         else if (_dateTimeOffsetConverter.TryConvert(dateTimeOffset' out string text))                             dictionary[header.Key] = text;                          break;                      case DateTime dateTime:                         if (_dateTimeConverter.TryConvert(dateTime' out result))                             dictionary[header.Key] = result;                         else if (_dateTimeConverter.TryConvert(dateTime' out string text))                             dictionary[header.Key] = text;                          break;                      case string s:                         dictionary[header.Key] = s;                         break;                      case IFormattable formatValue:                         if (header.Value.GetType().IsValueType)                             dictionary[header.Key] = header.Value;                         else                             dictionary[header.Key] = formatValue.ToString();                         break;                 }
