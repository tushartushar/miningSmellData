Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Serialize.Linq.Tests.Internals,ExpressionComparer,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Internals\ExpressionComparer.cs,AreEqual,Cyclomatic complexity of the method is 17
Long Identifier,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithoutNullableKey,The length of the parameter predicatePartSerializedToString is 31.
Long Identifier,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithNullableKey,The length of the parameter predicatePartSerializedToString is 31.
Long Statement,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleConditionalTest,The length of the statement  "            this.AssertExpression(Expression.Condition(Expression.Constant(true)' Expression.Constant(5)' Expression.Constant(10))); " is 120.
Long Statement,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleConditionalTest,The length of the statement  "            this.AssertExpression(Expression.Condition(Expression.Constant(false)' Expression.Constant(5)' Expression.Constant(10))); " is 121.
Long Statement,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleConditionalWithNullConstantTest,The length of the statement  "            this.AssertExpression(Expression.Condition(Expression.Constant(true)' stringProperty' Expression.Constant(null' typeof(string)))); " is 130.
Long Statement,Serialize.Linq.Tests.Issues,Issue43,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue43.cs,ThrowsStackOverflowException,The length of the statement  "            composedExpression = idCollection.Select(t => Expression.MakeBinary(ExpressionType.Equal' propertyExpression' Expression.Constant(t))).Aggregate<Expression' Expression>(composedExpression' (current' equalExpression) => Expression.MakeBinary(ExpressionType.OrElse' equalExpression' current)); " is 291.
Long Statement,Serialize.Linq.Tests.Issues,Issue54,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue54.cs,TestExpression,The length of the statement  "            var actualExpression = (Expression<Func<Test' bool>>)serializer.DeserializeText(value' new ExpressionContext { AllowPrivateFieldAccess = true }); " is 145.
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Add(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Add(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Subtract(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Subtract(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Multiply(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Multiply(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Divide(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.Divide(Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.AddAssign(Expression.Variable(typeof(int)' "x")' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.SubtractAssign(Expression.Variable(typeof(int)' "x")' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.MultiplyAssign(Expression.Variable(typeof(int)' "x")' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleBinaryExpressionTest,The following statement contains a magic number: this.AssertExpression(Expression.DivideAssign(Expression.Variable(typeof(int)' "x")' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleConditionalTest,The following statement contains a magic number: this.AssertExpression(Expression.Condition(Expression.Constant(true)' Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleConditionalTest,The following statement contains a magic number: this.AssertExpression(Expression.Condition(Expression.Constant(true)' Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleConditionalTest,The following statement contains a magic number: this.AssertExpression(Expression.Condition(Expression.Constant(false)' Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleConditionalTest,The following statement contains a magic number: this.AssertExpression(Expression.Condition(Expression.Constant(false)' Expression.Constant(5)' Expression.Constant(10)));
Magic Number,Serialize.Linq.Tests,ExpressionNodeTests,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\ExpressionNodeTests.cs,SimpleUnaryTest,The following statement contains a magic number: this.AssertExpression(Expression.UnaryPlus(Expression.Constant(43)));
Magic Number,Serialize.Linq.Tests.Internals,SerializerTestData,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Internals\SerializerTestData.cs,AddLetExpressions,The following statement contains a magic number: Expression<Func<IEnumerable<int>' IEnumerable<int>>> intExpr = c =>                   from x in c                  let test = 8                  where x == test                  select x;
Magic Number,Serialize.Linq.Tests.Issues,Issue34,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue34.cs,SerializeWithDateTimeUtcTest,The following statement contains a magic number: var yarrs = new[]                  {                      new Yarr {Date = new DateTime(3000'1'1)}'                      new Yarr {Date = new DateTime(2000'1'1)}'                      new Yarr()'                      new Yarr { Date = DateTime.Now.AddYears(1) }                  };
Magic Number,Serialize.Linq.Tests.Issues,Issue34,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue34.cs,SerializeWithDateTimeUtcTest,The following statement contains a magic number: var yarrs = new[]                  {                      new Yarr {Date = new DateTime(3000'1'1)}'                      new Yarr {Date = new DateTime(2000'1'1)}'                      new Yarr()'                      new Yarr { Date = DateTime.Now.AddYears(1) }                  };
Magic Number,Serialize.Linq.Tests.Issues,Issue34,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue34.cs,SerializeWithDateTimeLocalTest,The following statement contains a magic number: var yarrs = new[]                  {                      new Yarr {Date = new DateTime(3000'1'1)}'                      new Yarr {Date = new DateTime(2000'1'1)}'                      new Yarr()'                      new Yarr { Date = DateTime.Now.AddYears(1) }                  };
Magic Number,Serialize.Linq.Tests.Issues,Issue34,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue34.cs,SerializeWithDateTimeLocalTest,The following statement contains a magic number: var yarrs = new[]                  {                      new Yarr {Date = new DateTime(3000'1'1)}'                      new Yarr {Date = new DateTime(2000'1'1)}'                      new Yarr()'                      new Yarr { Date = DateTime.Now.AddYears(1) }                  };
Magic Number,Serialize.Linq.Tests.Issues,Issue35,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue35.cs,LetExpressionTests,The following statement contains a magic number: Expression<Func<IEnumerable<int>' IEnumerable<int>>> intExpr = c =>                  from x in c                  let test = 8                  where x == test                  select x;
Magic Number,Serialize.Linq.Tests.Issues,Issue38,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue38.cs,SerializeAsQueryableWithPredicateTest,The following statement contains a magic number: Expression<Func<Order' bool>> predicate = x => x.Id > 0 && x.Id < 5;
Magic Number,Serialize.Linq.Tests.Issues,Issue38,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue38.cs,SerializeAndDeserializeAsQueryableWithPredicateTest,The following statement contains a magic number: Expression<Func<Order' bool>> predicate = x => x.Id > 0 && x.Id < 5;
Magic Number,Serialize.Linq.Tests.Issues,Issue39,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue39.cs,ToExpressionNodeWithSimilarConstantNames,The following statement contains a magic number: var feb1 = new DateTime(2015' 2' 1);
Magic Number,Serialize.Linq.Tests.Issues,Issue39,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue39.cs,ToExpressionNodeWithSimilarConstantNames,The following statement contains a magic number: var feb1 = new DateTime(2015' 2' 1);
Magic Number,Serialize.Linq.Tests.Issues,Issue39,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue39.cs,ToExpressionNodeWithSimilarConstantNames,The following statement contains a magic number: var feb15 = new DateTime(2015' 2' 15);
Magic Number,Serialize.Linq.Tests.Issues,Issue39,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue39.cs,ToExpressionNodeWithSimilarConstantNames,The following statement contains a magic number: var feb15 = new DateTime(2015' 2' 15);
Magic Number,Serialize.Linq.Tests.Issues,Issue39,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue39.cs,ToExpressionNodeWithSimilarConstantNames,The following statement contains a magic number: var feb15 = new DateTime(2015' 2' 15);
Magic Number,Serialize.Linq.Tests.Issues,Issue41,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue41.cs,ToExpressionWithInterferingType,The following statement contains a magic number: Expression<Func<IEnumerable<int>' IEnumerable<int>>> expression = c =>                  from x in c                  let randomVar123456789 = 8                  where x == randomVar123456789                  select x;
Magic Number,Serialize.Linq.Tests.Issues,Issue43,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue43.cs,ThrowsStackOverflowException,The following statement contains a magic number: i < 15000
Magic Number,Serialize.Linq.Tests.Issues,Issue54,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue54.cs,TestExpression,The following statement contains a magic number: var initialValue = 42;
Magic Number,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithoutNullableKey,The following statement contains a magic number: var enterpriseKeys = new List<long?> {1' 2' 3' 4};
Magic Number,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithoutNullableKey,The following statement contains a magic number: var enterpriseKeys = new List<long?> {1' 2' 3' 4};
Magic Number,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithoutNullableKey,The following statement contains a magic number: var enterpriseKeys = new List<long?> {1' 2' 3' 4};
Magic Number,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithNullableKey,The following statement contains a magic number: var enterpriseKeys = new List<long?> { 1' 2' 3' 4 };
Magic Number,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithNullableKey,The following statement contains a magic number: var enterpriseKeys = new List<long?> { 1' 2' 3' 4 };
Magic Number,Serialize.Linq.Tests.Issues,Issue56,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue56.cs,SerializeContainsWithNullablesAndWithNullableKey,The following statement contains a magic number: var enterpriseKeys = new List<long?> { 1' 2' 3' 4 };
Magic Number,Serialize.Linq.Tests.Issues,Issue69,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue69.cs,JsonSerialzeAndDeserialize1969Utc,The following statement contains a magic number: this.SerialzeAndDeserializeDateTimeJson(new DateTime(1969' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Serialize.Linq.Tests.Issues,Issue69,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue69.cs,JsonSerialzeAndDeserialize1969Local,The following statement contains a magic number: this.SerialzeAndDeserializeDateTimeJson(new DateTime(1969' 1' 1' 0' 0' 0' DateTimeKind.Local));
Magic Number,Serialize.Linq.Tests.Issues,Issue69,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue69.cs,JsonSerialzeAndDeserialize1970Utc,The following statement contains a magic number: this.SerialzeAndDeserializeDateTimeJson(new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Serialize.Linq.Tests.Issues,Issue69,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue69.cs,JsonSerialzeAndDeserialize1970Local,The following statement contains a magic number: this.SerialzeAndDeserializeDateTimeJson(new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Local));
Magic Number,Serialize.Linq.Tests.Issues,Issue69,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue69.cs,JsonSerialzeAndDeserialize1971Utc,The following statement contains a magic number: this.SerialzeAndDeserializeDateTimeJson(new DateTime(1971' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Serialize.Linq.Tests.Issues,Issue69,D:\research\architectureSmells\repos\esskar_Serialize.Linq\src\Serialize.Linq.Tests\Issues\Issue69.cs,JsonSerialzeAndDeserialize1971Local,The following statement contains a magic number: this.SerialzeAndDeserializeDateTimeJson(new DateTime(1971' 1' 1' 0' 0' 0' DateTimeKind.Local));
