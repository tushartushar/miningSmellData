Implementation smell,Namespace,Class,File,Method,Description
Complex Method,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,Cyclomatic complexity of the method is 17
Complex Method,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveToolStripMenuItem_Click,Cyclomatic complexity of the method is 9
Complex Method,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveNewToolStripMenuItem_Click,Cyclomatic complexity of the method is 8
Complex Method,kOS_IDE,AppOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,Load,Cyclomatic complexity of the method is 21
Long Parameter List,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The method has 5 parameters.
Long Statement,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor_Load,The length of the statement  "	Status.Text = String.Format ("{0}.{1}' build {2} (rev {3})"' Assembly.GetExecutingAssembly ().GetName ().Version.Major' Assembly.GetExecutingAssembly ().GetName ().Version.Minor' Assembly.GetExecutingAssembly ().GetName ().Version.Build' Assembly.GetExecutingAssembly ().GetName ().Version.Revision); " is 300.
Long Statement,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor_Load,The length of the statement  "            string[] msgs = { "Ready."' "Hello!"' "Ready to xplode some rockets?"' "Looks like some kerbals need autopiloting ..."' "Ready."' "AP FTW !"'" is 141.
Long Statement,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor_Load,The length of the statement  "			//string version = Assembly.GetExecutingAssembly().GetName().Version.Major.ToString() + "." + Assembly.GetExecutingAssembly().GetName().Version.Minor.ToString(); " is 161.
Long Statement,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,toolStripMenuItem1_Click,The length of the statement  "	string version = String.Format ("{0}.{1}' build {2}"' Assembly.GetExecutingAssembly ().GetName ().Version.Major' Assembly.GetExecutingAssembly ().GetName ().Version.Minor' Assembly.GetExecutingAssembly ().GetName ().Version.Build); " is 231.
Long Statement,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,toolStripMenuItem1_Click,The length of the statement  "	MessageBox.Show ("Brought to you by SolarLiner' via a GeoKerbol RemoteTech satellite.\n Version " + version + "."' "About the kOS IDE"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 186.
Long Statement,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,ExportBBCode,The length of the statement  "			result.Append ("[COLOR=\"{0}\"]"' (Editor.Styles [style].ForeColor.Name == "ffc80000" ? "Red" : Editor.Styles [style].ForeColor.Name)); " is 135.
Long Statement,kOS_IDE,GlobalOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,InternalCheckIsWow64,The length of the statement  "	if ((Environment.OSVersion.Version.Major == 5 && Environment.OSVersion.Version.Minor >= 1) || Environment.OSVersion.Version.Major >= 6) { " is 137.
Long Statement,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The length of the statement  "		MessageBox.Show ("KSP does not include a functionnal archive for kOS. Aborting."' "Archive Error"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 143.
Long Statement,kOS_IDE,Program,C:\repos\SolarLiner_kOS-IDE\Program.cs,Main,The length of the statement  "		MessageBox.Show ("Cannot load config file. Loading factory default ..."' "IO Error"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 135.
Empty Catch Block,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveToolStripMenuItem_Click,The method has an empty catch block.
Empty Catch Block,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveNewToolStripMenuItem_Click,The method has an empty catch block.
Empty Catch Block,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,Options,The method has an empty catch block.
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor,The following statement contains a magic number: Editor.Lexing.SetKeywords (2' arg3);  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor,The following statement contains a magic number: Editor.Styles [Editor.Lexing.StyleNameMap ["STRING"]].ForeColor = System.Drawing.Color.FromArgb (200' 0' 0);  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor,The following statement contains a magic number: Editor.AutoComplete.MaxHeight = 15;  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor,The following statement contains a magic number: Editor.AutoComplete.MaxWidth = 40;  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor,The following statement contains a magic number: Editor.Indentation.IndentWidth = 4;  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,TextEditor,The following statement contains a magic number: Editor.Indentation.TabWidth = 4;  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The following statement contains a magic number: if (bytes > 10000) {  	Status.Text = "More than 10k bytes. Toggled comment sttriper at save. (but not removed on the editor)";  	CommentStripper = true;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The following statement contains a magic number: if (EventChars.Any (s => s == last)) {  	switch (last) {  	case ' ':  		string[] words = Editor.Text.Split (' ').Where (s => !String.IsNullOrWhiteSpace (s)).ToArray<string> ();  		int minTwo = words.Length - 2;  		int minOne = minTwo + 1;  		if (minTwo < 0)  			break;  		if (("set" == words [minTwo] || "lock" == words [minTwo])) {  			if (KeysAndVars.Any (s => s.Substring (0' s.Length - 2) == words [minOne]))  				break;  			KeysAndVars.Add (words [minOne] + "?2");  			KeysAndVars.Sort ();  			Editor.AutoComplete.List = KeysAndVars;  		}  		break;  	case ':':  		Editor.AutoComplete.Show (Subitems);  		break;  	default:  		//Editor.AutoComplete.Show(KeysAndVars);  		break;  	}  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The following statement contains a magic number: if (EventChars.Any (s => s == last)) {  	switch (last) {  	case ' ':  		string[] words = Editor.Text.Split (' ').Where (s => !String.IsNullOrWhiteSpace (s)).ToArray<string> ();  		int minTwo = words.Length - 2;  		int minOne = minTwo + 1;  		if (minTwo < 0)  			break;  		if (("set" == words [minTwo] || "lock" == words [minTwo])) {  			if (KeysAndVars.Any (s => s.Substring (0' s.Length - 2) == words [minOne]))  				break;  			KeysAndVars.Add (words [minOne] + "?2");  			KeysAndVars.Sort ();  			Editor.AutoComplete.List = KeysAndVars;  		}  		break;  	case ':':  		Editor.AutoComplete.Show (Subitems);  		break;  	default:  		//Editor.AutoComplete.Show(KeysAndVars);  		break;  	}  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The following statement contains a magic number: switch (last) {  case ' ':  	string[] words = Editor.Text.Split (' ').Where (s => !String.IsNullOrWhiteSpace (s)).ToArray<string> ();  	int minTwo = words.Length - 2;  	int minOne = minTwo + 1;  	if (minTwo < 0)  		break;  	if (("set" == words [minTwo] || "lock" == words [minTwo])) {  		if (KeysAndVars.Any (s => s.Substring (0' s.Length - 2) == words [minOne]))  			break;  		KeysAndVars.Add (words [minOne] + "?2");  		KeysAndVars.Sort ();  		Editor.AutoComplete.List = KeysAndVars;  	}  	break;  case ':':  	Editor.AutoComplete.Show (Subitems);  	break;  default:  	//Editor.AutoComplete.Show(KeysAndVars);  	break;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The following statement contains a magic number: switch (last) {  case ' ':  	string[] words = Editor.Text.Split (' ').Where (s => !String.IsNullOrWhiteSpace (s)).ToArray<string> ();  	int minTwo = words.Length - 2;  	int minOne = minTwo + 1;  	if (minTwo < 0)  		break;  	if (("set" == words [minTwo] || "lock" == words [minTwo])) {  		if (KeysAndVars.Any (s => s.Substring (0' s.Length - 2) == words [minOne]))  			break;  		KeysAndVars.Add (words [minOne] + "?2");  		KeysAndVars.Sort ();  		Editor.AutoComplete.List = KeysAndVars;  	}  	break;  case ':':  	Editor.AutoComplete.Show (Subitems);  	break;  default:  	//Editor.AutoComplete.Show(KeysAndVars);  	break;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The following statement contains a magic number: if (("set" == words [minTwo] || "lock" == words [minTwo])) {  	if (KeysAndVars.Any (s => s.Substring (0' s.Length - 2) == words [minOne]))  		break;  	KeysAndVars.Add (words [minOne] + "?2");  	KeysAndVars.Sort ();  	Editor.AutoComplete.List = KeysAndVars;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_TextChanged,The following statement contains a magic number: if (KeysAndVars.Any (s => s.Substring (0' s.Length - 2) == words [minOne]))  	break;  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveToolStripMenuItem_Click,The following statement contains a magic number: if (CommentStripper) {  	Status.Text = "Stripping comments and saving ...";  	string[] text = Editor.Text.Split (new char[] {  		'\n'  	}' StringSplitOptions.None);  	List<string> Output = new List<string> ();  	bool added = false;  	for (int j = 0; j < text.Length; j++) {  		added = false;  		text [j] = new string (text [j].Where (c => c != '\r' && c != '\n').ToArray ());  		string line = text [j].Trim ();  		for (int i = 0; i < line.Length; i++) {  			try {  				if (line.Substring (i' 2) == "//") {  					if (i != 0)  						Output.Add (text [j].Substring (0' i - 1));  					added = true;  					break;  				}  			}  			catch {  			}  		}  		if (!added)  			Output.Add (text [j]);  	}  	System.IO.File.WriteAllLines (filename' Output.ToArray ()' Encoding.ASCII);  	Status.Text = "Saved stripped file as \"" + Path.GetFileNameWithoutExtension (filename) + "\".";  	return;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveToolStripMenuItem_Click,The following statement contains a magic number: for (int j = 0; j < text.Length; j++) {  	added = false;  	text [j] = new string (text [j].Where (c => c != '\r' && c != '\n').ToArray ());  	string line = text [j].Trim ();  	for (int i = 0; i < line.Length; i++) {  		try {  			if (line.Substring (i' 2) == "//") {  				if (i != 0)  					Output.Add (text [j].Substring (0' i - 1));  				added = true;  				break;  			}  		}  		catch {  		}  	}  	if (!added)  		Output.Add (text [j]);  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveToolStripMenuItem_Click,The following statement contains a magic number: for (int i = 0; i < line.Length; i++) {  	try {  		if (line.Substring (i' 2) == "//") {  			if (i != 0)  				Output.Add (text [j].Substring (0' i - 1));  			added = true;  			break;  		}  	}  	catch {  	}  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveToolStripMenuItem_Click,The following statement contains a magic number: try {  	if (line.Substring (i' 2) == "//") {  		if (i != 0)  			Output.Add (text [j].Substring (0' i - 1));  		added = true;  		break;  	}  }  catch {  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveToolStripMenuItem_Click,The following statement contains a magic number: if (line.Substring (i' 2) == "//") {  	if (i != 0)  		Output.Add (text [j].Substring (0' i - 1));  	added = true;  	break;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_LinesNeedShown,The following statement contains a magic number: Editor.Margins.Margin1.Width = 30;  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,Editor_LinesNeedShown,The following statement contains a magic number: Editor.NativeInterface.SendMessageDirect (SCI_SETMARGINTYPEN' 0' 4);  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveNewToolStripMenuItem_Click,The following statement contains a magic number: if (CommentStripper) {  	Status.Text = "Stripping comments and saving ...";  	string[] text = Editor.Text.Split (new char[] {  		'\n'  	}' StringSplitOptions.None);  	List<string> Output = new List<string> ();  	bool added = false;  	for (int j = 0; j < text.Length; j++) {  		added = false;  		text [j] = new string (text [j].Where (c => c != '\r' && c != '\n').ToArray ());  		string line = text [j].Trim ();  		for (int i = 0; i < line.Length; i++) {  			try {  				if (line.Substring (i' 2) == "//") {  					if (i != 0)  						Output.Add (text [j].Substring (0' i - 1));  					added = true;  					break;  				}  			}  			catch {  			}  		}  		if (!added)  			Output.Add (text [j]);  	}  	System.IO.File.WriteAllLines (filename' Output.ToArray ()' Encoding.ASCII);  	Status.Text = "Saved stripped file as \"" + Path.GetFileNameWithoutExtension (filename) + "\".";  	return;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveNewToolStripMenuItem_Click,The following statement contains a magic number: for (int j = 0; j < text.Length; j++) {  	added = false;  	text [j] = new string (text [j].Where (c => c != '\r' && c != '\n').ToArray ());  	string line = text [j].Trim ();  	for (int i = 0; i < line.Length; i++) {  		try {  			if (line.Substring (i' 2) == "//") {  				if (i != 0)  					Output.Add (text [j].Substring (0' i - 1));  				added = true;  				break;  			}  		}  		catch {  		}  	}  	if (!added)  		Output.Add (text [j]);  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveNewToolStripMenuItem_Click,The following statement contains a magic number: for (int i = 0; i < line.Length; i++) {  	try {  		if (line.Substring (i' 2) == "//") {  			if (i != 0)  				Output.Add (text [j].Substring (0' i - 1));  			added = true;  			break;  		}  	}  	catch {  	}  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveNewToolStripMenuItem_Click,The following statement contains a magic number: try {  	if (line.Substring (i' 2) == "//") {  		if (i != 0)  			Output.Add (text [j].Substring (0' i - 1));  		added = true;  		break;  	}  }  catch {  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,saveNewToolStripMenuItem_Click,The following statement contains a magic number: if (line.Substring (i' 2) == "//") {  	if (i != 0)  		Output.Add (text [j].Substring (0' i - 1));  	added = true;  	break;  }  
Magic Number,kOS_IDE,TextEditor,C:\repos\SolarLiner_kOS-IDE\Form1.cs,textToolStripMenuItem_Click,The following statement contains a magic number: if (sfd.FilterIndex == 2) {  	using (TextWriter tw = new StreamWriter (sfd.FileName)) {  		Editor.IsCustomPaintingEnabled = false;  		// To allow lexing of all the document  		Editor.Lexing.Colorize ();  		Editor.ExportHtml (tw' System.IO.Path.GetFileNameWithoutExtension (filename)' false);  		Editor.IsCustomPaintingEnabled = true;  		// Restore paint  	}  }  else {  	System.IO.File.WriteAllText (sfd.FileName' Editor.Text);  }  
Magic Number,kOS_IDE,GlobalOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,GlobalOptions,The following statement contains a magic number: Is64OS = (IntPtr.Size == 8) || InternalCheckIsWow64 ();  
Magic Number,kOS_IDE,GlobalOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,InternalCheckIsWow64,The following statement contains a magic number: if ((Environment.OSVersion.Version.Major == 5 && Environment.OSVersion.Version.Minor >= 1) || Environment.OSVersion.Version.Major >= 6) {  	using (Process p = Process.GetCurrentProcess ()) {  		bool retVal;  		if (!IsWow64Process (p.Handle' out retVal)) {  			return false;  		}  		return retVal;  	}  }  else {  	return false;  }  
Magic Number,kOS_IDE,GlobalOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,InternalCheckIsWow64,The following statement contains a magic number: if ((Environment.OSVersion.Version.Major == 5 && Environment.OSVersion.Version.Minor >= 1) || Environment.OSVersion.Version.Major >= 6) {  	using (Process p = Process.GetCurrentProcess ()) {  		bool retVal;  		if (!IsWow64Process (p.Handle' out retVal)) {  			return false;  		}  		return retVal;  	}  }  else {  	return false;  }  
Magic Number,kOS_IDE,GlobalOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,ZoomBar_Scroll,The following statement contains a magic number: ZoomLabel.Text = "Zoom: " + (100 * zm + add) + "%";  
Magic Number,kOS_IDE,AppOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,Load,The following statement contains a magic number: foreach (string s in System.IO.File.ReadAllLines (filepath)) {  	string[] line = s.Split ('=');  	switch (line [0]) {  	case "KSP":  		KSPfolder = line [1];  		continue;  	case "User":  		Connection.Username = line [1];  		continue;  	case "Password":  		Connection.Remember = true;  		string[] split = line [1].Split ('|');  		Psswd psswd = new Psswd (split [0]' byte.Parse (split [1]));  		continue;  	case "SmartIndent":  		SmartIndent = Boolean.Parse (line [1]);  		continue;  	case "Zoom":  		int zm = int.Parse (line [1]);  		Zoom = (zm > -5 && zm < 50 ? zm : 0);  		continue;  	default:  		continue;  	}  }  
Magic Number,kOS_IDE,AppOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,Load,The following statement contains a magic number: foreach (string s in System.IO.File.ReadAllLines (filepath)) {  	string[] line = s.Split ('=');  	switch (line [0]) {  	case "KSP":  		KSPfolder = line [1];  		continue;  	case "User":  		Connection.Username = line [1];  		continue;  	case "Password":  		Connection.Remember = true;  		string[] split = line [1].Split ('|');  		Psswd psswd = new Psswd (split [0]' byte.Parse (split [1]));  		continue;  	case "SmartIndent":  		SmartIndent = Boolean.Parse (line [1]);  		continue;  	case "Zoom":  		int zm = int.Parse (line [1]);  		Zoom = (zm > -5 && zm < 50 ? zm : 0);  		continue;  	default:  		continue;  	}  }  
Magic Number,kOS_IDE,AppOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,Load,The following statement contains a magic number: switch (line [0]) {  case "KSP":  	KSPfolder = line [1];  	continue;  case "User":  	Connection.Username = line [1];  	continue;  case "Password":  	Connection.Remember = true;  	string[] split = line [1].Split ('|');  	Psswd psswd = new Psswd (split [0]' byte.Parse (split [1]));  	continue;  case "SmartIndent":  	SmartIndent = Boolean.Parse (line [1]);  	continue;  case "Zoom":  	int zm = int.Parse (line [1]);  	Zoom = (zm > -5 && zm < 50 ? zm : 0);  	continue;  default:  	continue;  }  
Magic Number,kOS_IDE,AppOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,Load,The following statement contains a magic number: switch (line [0]) {  case "KSP":  	KSPfolder = line [1];  	continue;  case "User":  	Connection.Username = line [1];  	continue;  case "Password":  	Connection.Remember = true;  	string[] split = line [1].Split ('|');  	Psswd psswd = new Psswd (split [0]' byte.Parse (split [1]));  	continue;  case "SmartIndent":  	SmartIndent = Boolean.Parse (line [1]);  	continue;  case "Zoom":  	int zm = int.Parse (line [1]);  	Zoom = (zm > -5 && zm < 50 ? zm : 0);  	continue;  default:  	continue;  }  
Magic Number,kOS_IDE,AppOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,Load,The following statement contains a magic number: Zoom = (zm > -5 && zm < 50 ? zm : 0);  
Magic Number,kOS_IDE,AppOptions,C:\repos\SolarLiner_kOS-IDE\GlobalOptions.cs,Load,The following statement contains a magic number: Zoom = (zm > -5 && zm < 50 ? zm : 0);  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: foreach (string filepath in Directory.GetFiles (ArchivePath)) {  	if (Path.GetExtension (filepath) != ".txt")  		continue;  	string name = Path.GetFileNameWithoutExtension (filepath);  	long size = new FileInfo (filepath).Length;  	ListViewItem added = listView1.Items.Add (name);  	added.Tag = filepath;  	if (size < 1024)// 2^10 = 1024 b  	 {  		added.SubItems.Add (size + " b");  	}  	else {  		added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  	}  }  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: foreach (string filepath in Directory.GetFiles (ArchivePath)) {  	if (Path.GetExtension (filepath) != ".txt")  		continue;  	string name = Path.GetFileNameWithoutExtension (filepath);  	long size = new FileInfo (filepath).Length;  	ListViewItem added = listView1.Items.Add (name);  	added.Tag = filepath;  	if (size < 1024)// 2^10 = 1024 b  	 {  		added.SubItems.Add (size + " b");  	}  	else {  		added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  	}  }  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: foreach (string filepath in Directory.GetFiles (ArchivePath)) {  	if (Path.GetExtension (filepath) != ".txt")  		continue;  	string name = Path.GetFileNameWithoutExtension (filepath);  	long size = new FileInfo (filepath).Length;  	ListViewItem added = listView1.Items.Add (name);  	added.Tag = filepath;  	if (size < 1024)// 2^10 = 1024 b  	 {  		added.SubItems.Add (size + " b");  	}  	else {  		added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  	}  }  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: if (size < 1024)// 2^10 = 1024 b   {  	added.SubItems.Add (size + " b");  }  else {  	added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  }  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: if (size < 1024)// 2^10 = 1024 b   {  	added.SubItems.Add (size + " b");  }  else {  	added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  }  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: if (size < 1024)// 2^10 = 1024 b   {  	added.SubItems.Add (size + " b");  }  else {  	added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  }  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  
Magic Number,kOS_IDE,LoadScript,C:\repos\SolarLiner_kOS-IDE\LoadScript.cs,LoadScript_Load,The following statement contains a magic number: added.SubItems.Add (Math.Round (size / 1024.0' 3) + " kb");  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: if (Owner != null) {  	float zm = (float)ZoomBar.Value;  	if (zm < 0)  		zm = -(float)(1 / zm);  	else  		zm /= 10.0f;  	int add = (ZoomBar.Value < 0 ? 0 : 100);  	Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  	Owner.Editor.Zoom = ZoomBar.Value;  }  else {  	foreach (TextEditor frm in OpenedForms.Forms) {  		float zm = (float)ZoomBar.Value;  		if (zm < 0)  			zm = -(float)(1 / zm);  		else  			zm /= 10.0f;  		int add = (ZoomBar.Value < 0 ? 0 : 100);  		Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  		frm.Editor.Zoom = ZoomBar.Value;  	}  }  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: if (Owner != null) {  	float zm = (float)ZoomBar.Value;  	if (zm < 0)  		zm = -(float)(1 / zm);  	else  		zm /= 10.0f;  	int add = (ZoomBar.Value < 0 ? 0 : 100);  	Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  	Owner.Editor.Zoom = ZoomBar.Value;  }  else {  	foreach (TextEditor frm in OpenedForms.Forms) {  		float zm = (float)ZoomBar.Value;  		if (zm < 0)  			zm = -(float)(1 / zm);  		else  			zm /= 10.0f;  		int add = (ZoomBar.Value < 0 ? 0 : 100);  		Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  		frm.Editor.Zoom = ZoomBar.Value;  	}  }  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: if (Owner != null) {  	float zm = (float)ZoomBar.Value;  	if (zm < 0)  		zm = -(float)(1 / zm);  	else  		zm /= 10.0f;  	int add = (ZoomBar.Value < 0 ? 0 : 100);  	Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  	Owner.Editor.Zoom = ZoomBar.Value;  }  else {  	foreach (TextEditor frm in OpenedForms.Forms) {  		float zm = (float)ZoomBar.Value;  		if (zm < 0)  			zm = -(float)(1 / zm);  		else  			zm /= 10.0f;  		int add = (ZoomBar.Value < 0 ? 0 : 100);  		Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  		frm.Editor.Zoom = ZoomBar.Value;  	}  }  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: if (Owner != null) {  	float zm = (float)ZoomBar.Value;  	if (zm < 0)  		zm = -(float)(1 / zm);  	else  		zm /= 10.0f;  	int add = (ZoomBar.Value < 0 ? 0 : 100);  	Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  	Owner.Editor.Zoom = ZoomBar.Value;  }  else {  	foreach (TextEditor frm in OpenedForms.Forms) {  		float zm = (float)ZoomBar.Value;  		if (zm < 0)  			zm = -(float)(1 / zm);  		else  			zm /= 10.0f;  		int add = (ZoomBar.Value < 0 ? 0 : 100);  		Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  		frm.Editor.Zoom = ZoomBar.Value;  	}  }  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: foreach (TextEditor frm in OpenedForms.Forms) {  	float zm = (float)ZoomBar.Value;  	if (zm < 0)  		zm = -(float)(1 / zm);  	else  		zm /= 10.0f;  	int add = (ZoomBar.Value < 0 ? 0 : 100);  	Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  	frm.Editor.Zoom = ZoomBar.Value;  }  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: foreach (TextEditor frm in OpenedForms.Forms) {  	float zm = (float)ZoomBar.Value;  	if (zm < 0)  		zm = -(float)(1 / zm);  	else  		zm /= 10.0f;  	int add = (ZoomBar.Value < 0 ? 0 : 100);  	Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  	frm.Editor.Zoom = ZoomBar.Value;  }  
Magic Number,kOS_IDE,Options,C:\repos\SolarLiner_kOS-IDE\Options.cs,ZoomBar_Scroll,The following statement contains a magic number: Zoom.Text = "Zoom: " + (100 * zm + add) + "%";  
