Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WaitToCreateResources,Cyclomatic complexity of the method is 8
Long Statement,RequestReduce.Facts.Integration,IntegrationFactHelper,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\IntegrationFactHelper.cs,ResetPhysicalContentDirectoryAndConfigureStore,The length of the statement  "            var rrFolder = Directory.GetParent(Directory.GetCurrentDirectory()).Parent.Parent.FullName + "\\RequestReduce.SampleWeb\\RRContent"; " is 132.
Long Statement,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillUseSameReductionAfterAppPoolRecycle,The length of the statement  "            var files = new string [] {urls[0].Replace("/RRContent"' rrFolder).Replace("/"' "\\")'urls[1].Replace("/RRContent"' rrFolder).Replace("/"' "\\")}; " is 146.
Long Statement,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WaitToCreateResources,The length of the statement  "            while (Directory.GetFiles(rrFolder' "*.css").Where(x => !x.Contains("-Expired")).Count() < expectedCssFiles && watch.ElapsedMilliseconds < timeout) " is 147.
Long Statement,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WaitToCreateResources,The length of the statement  "            while (Directory.GetFiles(rrFolder' "*.js").Where(x => !x.Contains("-Expired")).Count() < expectedJsFiles && watch.ElapsedMilliseconds < timeout) " is 145.
Long Statement,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WaitToCreateResources,The length of the statement  "                while (Directory.GetFiles(rrFolder' "*.css").Where(x => x.Contains("-Expired")).Count() > 0 && watch.ElapsedMilliseconds < timeout) " is 131.
Long Statement,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WaitToCreateResources,The length of the statement  "                while (Directory.GetFiles(rrFolder' "*.js").Where(x => x.Contains("-Expired")).Count() > 0 && watch.ElapsedMilliseconds < timeout) " is 130.
Long Statement,RequestReduce.Facts.Integration,ReducerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ReducerFacts.cs,GetJavaScriptReducer,The length of the statement  "            return RRContainer.Current.GetAllInstances<IReducer>().Single(x => x.SupportedResourceType == typeof(JavaScriptResource)); " is 122.
Long Statement,RequestReduce.Facts.Integration,ReducerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ReducerFacts.cs,WillSpriteWithForeignContentHost,The length of the statement  "            Assert.True(File.ReadAllText(css).Contains(png.Replace(config.ResourcePhysicalPath' config.ResourceVirtualPath).Replace("\\"' "/"))); " is 133.
Long Statement,RequestReduce.Facts.Integration,ReducerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ReducerFacts.cs,WillContainImageWithPropperDimensions,The length of the statement  "            using(var image = new Bitmap(Directory.GetFiles(config.ResourcePhysicalPath' key + "*").Single(x => x.EndsWith(".png")))) " is 121.
Long Statement,RequestReduce.Facts.Integration,SassLessCoffeeFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SassLessCoffeeFacts.cs,WillGetCompilesCoffeeAsJs,The length of the statement  "            const string expected = "(function() {\n  var square;\n\n  square = function(x) {\n    return x * x;\n  };\n\n}).call(this);\n\r\n"; " is 132.
Long Statement,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillUseSameReductionAfterAppPoolRecycle,The length of the statement  "            var files = new string[] { urls[0].Replace("/RRContent"' rrFolder).Replace("/"' "\\")' urls[1].Replace("/RRContent"' rrFolder).Replace("/"' "\\") }; " is 148.
Long Statement,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The length of the statement  "            while (repo.Fetch<RequestReduceFile>("select * from requestreducefiles where FileName like '%.css' and IsExpired=0").Count == 0 && watch.ElapsedMilliseconds < timeout) " is 167.
Long Statement,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The length of the statement  "            while (repo.Fetch<RequestReduceFile>("select * from requestreducefiles where FileName like '%.js' and IsExpired=0").Count == 0 && watch.ElapsedMilliseconds < timeout) " is 166.
Long Statement,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,Dispose,The length of the statement  "            IntegrationFactHelper.ResetPhysicalContentDirectoryAndConfigureStore(Configuration.Store.LocalDiskStore' Timeout.Infinite); " is 123.
Long Statement,RequestReduce.Facts.Integration,SqlServerStoreFacts35,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The length of the statement  "            while (repo.SingleOrDefault<RequestReduceFile>("select * from requestreducefiles where FileName like '%.css' and IsExpired=0") == null && watch.ElapsedMilliseconds < timeout) " is 174.
Long Statement,RequestReduce.Facts.Integration,SqlServerStoreFacts35,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The length of the statement  "            while (repo.SingleOrDefault<RequestReduceFile>("select * from requestreducefiles where FileName like '%.js' and IsExpired=0") == null && watch.ElapsedMilliseconds < timeout) " is 173.
Magic Number,RequestReduce.Facts.Integration,IntegrationFactHelper,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\IntegrationFactHelper.cs,ResetPhysicalContentDirectoryAndConfigureStore,The following statement contains a magic number: if (Directory.Exists(rrFolder))              {                  RecyclePool();                  poolRecycled = true;                  try                  {                      RecyclePool();                      Directory.Delete(rrFolder' true);                  }                  catch (IOException)                  {                      Thread.Sleep(100);                      Directory.Delete(rrFolder' true);                  }                  while (Directory.Exists(rrFolder))                      Thread.Sleep(0);              }
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillNotProcessPageIfInFilter,The following statement contains a magic number: var ex = Record.Exception(() => WaitToCreateResources(1' 1' true' 2000));
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillReduceToOneCssAndScriptInHeadAndTwoScriptsInBody,The following statement contains a magic number: WaitToCreateResources(expectedJsFiles:3);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillReduceToOneCssAndScriptInHeadAndTwoScriptsInBody,The following statement contains a magic number: Assert.Equal(2' new JavaScriptResource().ResourceRegex.Matches(response).Count);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillReduceToOneCssAndScriptInHeadAndTwoScriptsInBody,The following statement contains a magic number: Assert.Equal(3' response.Split(new string[] { new JavaScriptResource().FileName }' StringSplitOptions.None).Length);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillReduceToOneCssSpriteAndScriptInHeadOnNet35MediumTrust,The following statement contains a magic number: WaitToCreateResources(1'1'false'30000);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillIgnoreNearFutureScripts,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillIgnoreNearFutureScripts,The following statement contains a magic number: WaitToCreateResources(1' 4);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillIgnoreNearFutureScripts,The following statement contains a magic number: Assert.Equal(5' new JavaScriptResource().ResourceRegex.Matches(response).Count);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillIgnoreNearFutureScripts,The following statement contains a magic number: Assert.Equal(5' response.Split(new[] { new JavaScriptResource().FileName }' StringSplitOptions.None).Length);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillProcessSecureContent,The following statement contains a magic number: WaitToCreateResources(1'0'false'3000);
Magic Number,RequestReduce.Facts.Integration,ModuleFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ModuleFacts.cs,WillReReduceResourceAfterFileDeletion,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,RequestReduce.Facts.Integration,PngOptimizerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\PngOptimizerFacts.cs,CompressionWillMakeOriginalPngSmaller,The following statement contains a magic number: var result = optimizer.OptimizePng(original' 5' true);
Magic Number,RequestReduce.Facts.Integration,PngOptimizerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\PngOptimizerFacts.cs,WillCleanupScratchFile,The following statement contains a magic number: optimizer.OptimizePng(original' 5' true);
Magic Number,RequestReduce.Facts.Integration,PngOptimizerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\PngOptimizerFacts.cs,WillNotAlterOriginalImage,The following statement contains a magic number: optimizer.OptimizePng(original' 5' false);
Magic Number,RequestReduce.Facts.Integration,PngOptimizerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\PngOptimizerFacts.cs,QuantTest,The following statement contains a magic number: var image = opt.QuantizeImage(source' 10' 70);
Magic Number,RequestReduce.Facts.Integration,PngOptimizerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\PngOptimizerFacts.cs,QuantTest,The following statement contains a magic number: var image = opt.QuantizeImage(source' 10' 70);
Magic Number,RequestReduce.Facts.Integration,PngOptimizerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\PngOptimizerFacts.cs,QuantTest,The following statement contains a magic number: image = opt.QuantizeImage(source' 10' 70);
Magic Number,RequestReduce.Facts.Integration,PngOptimizerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\PngOptimizerFacts.cs,QuantTest,The following statement contains a magic number: image = opt.QuantizeImage(source' 10' 70);
Magic Number,RequestReduce.Facts.Integration,ReducerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ReducerFacts.cs,WillContainImageWithPropperDimensions,The following statement contains a magic number: using(var image = new Bitmap(Directory.GetFiles(config.ResourcePhysicalPath' key + "*").Single(x => x.EndsWith(".png"))))              {                  Assert.Equal(1040' image.Width);                  Assert.Equal(33' image.Height);                  image.Dispose();              }
Magic Number,RequestReduce.Facts.Integration,ReducerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ReducerFacts.cs,WillContainImageWithPropperDimensions,The following statement contains a magic number: using(var image = new Bitmap(Directory.GetFiles(config.ResourcePhysicalPath' key + "*").Single(x => x.EndsWith(".png"))))              {                  Assert.Equal(1040' image.Width);                  Assert.Equal(33' image.Height);                  image.Dispose();              }
Magic Number,RequestReduce.Facts.Integration,ReducerFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\ReducerFacts.cs,Dispose,The following statement contains a magic number: try              {                  Directory.Delete(config.ResourcePhysicalPath' true);              }              catch(IOException)              {                  Thread.Sleep(100);                  Directory.Delete(config.ResourcePhysicalPath' true);              }
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,SqlServerStoreFacts,The following statement contains a magic number: rrFolder = IntegrationFactHelper.ResetPhysicalContentDirectoryAndConfigureStore(Configuration.Store.SqlServerStore' 3000);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillReduceToOneCssAndScript,The following statement contains a magic number: WaitToCreateResources(expectedJsFiles:3);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillReduceToOneCssAndScript,The following statement contains a magic number: Assert.Equal(2' new JavaScriptResource().ResourceRegex.Matches(response).Count);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillUseSameReductionFromStoreIfAvailable,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillUseSameReductionFromStoreIfAvailable,The following statement contains a magic number: Assert.Equal(2' cssCount1);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillUseSameReductionFromStoreIfAvailable,The following statement contains a magic number: Assert.True(fileDate - file2.LastUpdated <= TimeSpan.FromMilliseconds(4));
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillFlushExpiredContentFromInternalRepo,The following statement contains a magic number: Thread.Sleep(4000);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillFlushExpiredContentFromInternalRepo,The following statement contains a magic number: Assert.Equal(2' cssCount1);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The following statement contains a magic number: const int timeout = 50000;
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts35,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WillReduceToOneCssAndScripOnNet35FullTrust,The following statement contains a magic number: IntegrationFactHelper.SetSampleWeb35StoreAndTrust(Configuration.Store.SqlServerStore' 3000' "Full");
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts35,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The following statement contains a magic number: const int timeout = 50000;
Magic Number,RequestReduce.Facts.Integration,SqlServerStoreFacts35,C:\repos\mwrock_RequestReduce\RequestReduce.Facts.Integration\SqlServerStoreFacts.cs,WaitToCreateResources,The following statement contains a magic number: Thread.Sleep(200);
