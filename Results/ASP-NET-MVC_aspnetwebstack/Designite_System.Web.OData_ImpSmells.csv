Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The method has 100 lines of code.
Long Method,System.Web.OData.Routing,DefaultODataPathHandler,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\DefaultODataPathHandler.cs,Parse,The method has 100 lines of code.
Complex Method,System.Web.OData.Extensions,HttpRequestMessageExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\Extensions\HttpRequestMessageExtensions.cs,GetETag,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,DiscoverInheritanceRelationships,Cyclomatic complexity of the method is 9
Complex Method,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,ReconfigureEntityTypesAsComplexType,Cyclomatic complexity of the method is 10
Complex Method,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,TryGetPropertyTypeKind,Cyclomatic complexity of the method is 10
Complex Method,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,InferEdmTypeFromDerivedTypes,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,PruneUnreachableTypes,Cyclomatic complexity of the method is 12
Complex Method,System.Web.OData.Builder,StructuralTypeConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\StructuralTypeConfiguration.cs,AddComplexProperty,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,ValidateActionOverload,Cyclomatic complexity of the method is 9
Complex Method,System.Web.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConvention.cs,Apply,Cyclomatic complexity of the method is 9
Complex Method,System.Web.OData.Builder.Conventions.Attributes,DataContractAttributeEdmTypeConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\Attributes\DataContractAttributeEdmTypeConvention.cs,Apply,Cyclomatic complexity of the method is 10
Complex Method,System.Web.OData.Builder.Conventions,NavigationLinksGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\NavigationLinksGenerationConvention.cs,Apply,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData,Delta<TEntityType>,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\DeltaOfTEntityType.cs,TrySetPropertyValue,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData,EnableQueryAttribute,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\EnableQueryAttribute.cs,OnActionExecuted,Cyclomatic complexity of the method is 10
Complex Method,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,GetPropertiesToIncludeInQuery,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Query.Expressions,SelectExpandWrapper<TElement>,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandWrapper.cs,ToDictionary,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreateBinaryExpression,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Query,ODataQueryOptions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptions.cs,ApplyTo,Cyclomatic complexity of the method is 15
Complex Method,System.Web.OData.Query.Validators,ODataQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\ODataQueryValidator.cs,Validate,Cyclomatic complexity of the method is 14
Complex Method,System.Web.OData.Query.Validators,OrderByQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\OrderByQueryValidator.cs,Validate,Cyclomatic complexity of the method is 9
Complex Method,System.Web.OData.Formatter.Deserialization,ODataCollectionDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataCollectionDeserializer.cs,ReadInline,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Formatter.Deserialization,ODataComplexTypeDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataComplexTypeDeserializer.cs,ReadComplexValue,Cyclomatic complexity of the method is 10
Complex Method,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntry,Cyclomatic complexity of the method is 9
Complex Method,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyNavigationProperty,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Formatter.Serialization,SelectExpandNode,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\SelectExpandNode.cs,BuildSelections,Cyclomatic complexity of the method is 11
Complex Method,System.Web.OData.Formatter.Serialization,ODataComplexTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataComplexTypeSerializer.cs,CreateODataComplexValue,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,CreateEntry,Cyclomatic complexity of the method is 12
Complex Method,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,CreateODataAction,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Routing,KeyValueParser,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\KeyValueParser.cs,ParseKeys,Cyclomatic complexity of the method is 17
Complex Method,System.Web.OData.Routing,ODataPathRouteConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathRouteConstraint.cs,Match,Cyclomatic complexity of the method is 11
Complex Method,System.Web.OData.Routing.Conventions,RefRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\RefRoutingConvention.cs,SelectAction,Cyclomatic complexity of the method is 8
Complex Method,System.Web.OData.Routing.Conventions,NavigationRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\NavigationRoutingConvention.cs,SelectAction,Cyclomatic complexity of the method is 12
Long Parameter List,System.Web.OData.Extensions,HttpConfigurationExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\Extensions\HttpConfigurationExtensions.cs,MapODataServiceRoute,The method has 5 parameters. Parameters: configuration' routeName' routePrefix' model' batchHandler
Long Parameter List,System.Web.OData.Extensions,HttpConfigurationExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\Extensions\HttpConfigurationExtensions.cs,MapODataServiceRoute,The method has 5 parameters. Parameters: configuration' routeName' routePrefix' model' defaultHandler
Long Parameter List,System.Web.OData.Extensions,HttpConfigurationExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\Extensions\HttpConfigurationExtensions.cs,MapODataServiceRoute,The method has 6 parameters. Parameters: configuration' routeName' routePrefix' model' pathHandler' routingConventions
Long Parameter List,System.Web.OData.Extensions,HttpConfigurationExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\Extensions\HttpConfigurationExtensions.cs,MapODataServiceRoute,The method has 7 parameters. Parameters: configuration' routeName' routePrefix' model' pathHandler' routingConventions' batchHandler
Long Parameter List,System.Web.OData.Extensions,HttpConfigurationExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\Extensions\HttpConfigurationExtensions.cs,MapODataServiceRoute,The method has 7 parameters. Parameters: configuration' routeName' routePrefix' model' pathHandler' routingConventions' defaultHandler
Long Parameter List,System.Web.OData.Batch,ODataBatchReaderExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\ODataBatchReaderExtensions.cs,ReadChangeSetOperationRequestAsync,The method has 5 parameters. Parameters: reader' batchId' changeSetId' bufferContentStream' cancellationToken
Long Parameter List,System.Web.OData.Batch,ODataBatchReaderExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\ODataBatchReaderExtensions.cs,ReadOperationInternalAsync,The method has 5 parameters. Parameters: reader' batchId' changeSetId' cancellationToken' bufferContentStream
Long Parameter List,System.Web.OData.Builder,EdmTypeMap,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmTypeMap.cs,EdmTypeMap,The method has 5 parameters. Parameters: edmTypes' edmProperties' edmPropertiesRestrictions' enumMembers' openTypes
Long Parameter List,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,AddNavigationBindings,The method has 6 parameters. Parameters: configuration' navigationSource' linkBuilder' builder' edmTypeMap' edmNavigationSourceMap
Long Parameter List,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,AddProcedures,The method has 5 parameters. Parameters: model' configurations' container' edmTypeMap' edmNavigationSourceMap
Long Parameter List,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,CreateActionImport,The method has 5 parameters. Parameters: procedure' container' returnReference' expression' pathExpression
Long Parameter List,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,CreateFunctionImport,The method has 5 parameters. Parameters: function' container' returnReference' expression' pathExpression
Long Parameter List,System.Web.OData,ExpressionHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ExpressionHelpers.cs,OrderByProperty,The method has 6 parameters. Parameters: query' model' property' direction' type' alreadyOrdered
Long Parameter List,System.Web.OData,ExpressionHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ExpressionHelpers.cs,OrderBy,The method has 5 parameters. Parameters: query' orderByLambda' direction' type' alreadyOrdered
Long Parameter List,System.Web.OData.Formatter,ODataMediaTypeFormatter,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatter.cs,WriteToStreamAsync,The method has 6 parameters. Parameters: type' value' writeStream' content' transportContext' cancellationToken
Long Parameter List,System.Web.OData.Formatter,ODataMediaTypeFormatter,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatter.cs,WriteToStream,The method has 5 parameters. Parameters: type' value' writeStream' content' contentHeaders
Long Parameter List,System.Web.OData.Formatter,ODataMediaTypeFormatter,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatter.cs,GetDeserializer,The method has 5 parameters. Parameters: type' path' model' deserializerProvider' expectedPayloadType
Long Parameter List,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,BuildPropertyContainer,The method has 5 parameters. Parameters: elementType' source' propertiesToExpand' propertiesToInclude' autoSelectedProperties
Long Parameter List,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,Bind,The method has 5 parameters. Parameters: filterClause' filterType' model' assembliesResolver' querySettings
Long Parameter List,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,ApplyProperty,The method has 5 parameters. Parameters: property' resourceType' resource' deserializerProvider' readContext
Long Parameter List,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,SetDynamicProperty,The method has 7 parameters. Parameters: resource' resourceType' propertyKind' propertyName' propertyValue' propertyType' readContext
Long Parameter List,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,SetDeclaredProperty,The method has 6 parameters. Parameters: resource' propertyKind' propertyName' propertyValue' edmProperty' readContext
Long Parameter List,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,SetCollectionProperty,The method has 5 parameters. Parameters: resource' propertyName' edmPropertyType' value' clearCollection
Long Parameter List,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,SetDynamicCollectionProperty,The method has 6 parameters. Parameters: resource' propertyName' value' edmPropertyType' structuredType' readContext
Long Parameter List,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,SetDynamicProperty,The method has 5 parameters. Parameters: resource' propertyName' value' structuredType' readContext
Long Parameter List,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,ConvertValue,The method has 5 parameters. Parameters: oDataValue' propertyType' deserializerProvider' readContext' typeKind
Long Parameter List,System.Web.OData.Formatter.Deserialization,CollectionDeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\CollectionDeserializationHelpers.cs,AddToCollection,The method has 6 parameters. Parameters: items' collection' elementType' resourceType' propertyName' propertyType
Long Parameter List,System.Web.OData.Formatter.Serialization,SelectExpandNode,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\SelectExpandNode.cs,BuildSelections,The method has 5 parameters. Parameters: selectExpandClause' allStructuralProperties' allNavigationProperties' allActions' allFunctions
Long Parameter List,System.Web.OData.Results,CreatedODataResult<T>,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Results\CreatedODataResult.cs,CreatedODataResult,The method has 5 parameters. Parameters: entity' contentNegotiator' request' formatters' locationHeader
Long Parameter List,System.Web.OData.Routing,ODataPathSegmentTranslator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathSegmentTranslator.cs,TranslateODLPathToWebAPIPath,The method has 7 parameters. Parameters: path' model' unresolvedPathSegment' id' enableUriTemplateParsing' parameterAliasNodes' queryString
Long Parameter List,System.Web.OData.Routing,ODataVersionConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataVersionConstraint.cs,Match,The method has 5 parameters. Parameters: request' route' parameterName' values' routeDirection
Long Parameter List,System.Web.OData.Routing,ODataRoute,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataRoute.cs,ODataRoute,The method has 6 parameters. Parameters: routePrefix' pathConstraint' defaults' constraints' dataTokens' handler
Long Parameter List,System.Web.OData.Routing,ODataPathRouteConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathRouteConstraint.cs,Match,The method has 5 parameters. Parameters: request' route' parameterName' values' routeDirection
Long Identifier,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertySetter,The length of the parameter callPropertySetterClosedGenericMethod is 37.
Long Identifier,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertyGetter,The length of the parameter callPropertyGetterClosedGenericMethod is 37.
Long Identifier,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertyGetter,The length of the parameter callPropertyGetterClosedGenericMethod is 37.
Long Identifier,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,,The length of the parameter _callPropertyGetterOpenGenericMethod is 36.
Long Identifier,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,,The length of the parameter _callPropertyGetterByReferenceOpenGenericMethod is 47.
Long Identifier,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,,The length of the parameter _callPropertySetterOpenGenericMethod is 36.
Long Identifier,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,,The length of the parameter _navigationPropertyLinkBuilderLookup is 36.
Long Identifier,System.Web.OData.Builder,NavigationSourceConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceConfiguration.cs,,The length of the parameter _navigationPropertyLinkBuilders is 31.
Long Identifier,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,GetEdmModel,The length of the parameter explictlyConfiguredNavigationSource is 35.
Long Identifier,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,,The length of the parameter _allTypesWithDerivedTypeMapping is 31.
Long Identifier,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,GetNavigationSourceMap,The length of the parameter navigationSourceAndAnnotations is 30.
Long Identifier,System.Web.OData.Builder.Conventions.Attributes,NotMappedAttributeConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\Attributes\NotMappedAttributeEdmPropertyConvention.cs,,The length of the parameter EntityFrameworkNotMappedAttributeTypeName is 41.
Long Identifier,System.Web.OData.Builder.Conventions,SelfLinksGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\SelfLinksGenerationConvention.cs,Apply,The length of the parameter derivedTypesDefineNavigationProperty is 36.
Long Identifier,System.Web.OData,Delta<TEntityType>,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\DeltaOfTEntityType.cs,,The length of the parameter _dynamicDictionaryPropertyinfo is 30.
Long Identifier,System.Web.OData,ODataQueryParameterBinding,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ODataQueryParameterBindingAttribute.cs,,The length of the parameter CreateODataQueryOptionsCtorKey is 30.
Long Identifier,System.Web.OData.Formatter,QueryStringMediaTypeMapping,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\QueryStringMediaTypeMapping.cs,,The length of the parameter _queryStringMediaTypeMappingType is 32.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataFullMetadata is 33.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataFullMetadataStreamingFalse is 47.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataFullMetadataStreamingTrue is 46.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataMinimalMetadata is 36.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataMinimalMetadataStreamingFalse is 50.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataMinimalMetadataStreamingTrue is 49.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataNoMetadata is 31.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataNoMetadataStreamingFalse is 45.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonODataNoMetadataStreamingTrue is 44.
Long Identifier,System.Web.OData.Formatter,ODataMediaTypes,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypes.cs,,The length of the parameter _applicationJsonStreamingFalse is 30.
Long Identifier,System.Web.OData.Query.Expressions,Linq2ObjectsComparisonMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\Linq2ObjectsComparisonMethods.cs,,The length of the parameter AreByteArraysNotEqualMethodInfo is 31.
Long Identifier,System.Web.OData.Query.Expressions,ClrCanonicalFunctions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\ClrCanonicalFunctions.cs,,The length of the parameter SubstringStartAndLengthNoThrow is 30.
Long Identifier,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,,The length of the parameter _ordinalStringComparisonConstant is 32.
Long Identifier,System.Web.OData.Query,SelectExpandQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\SelectExpandQueryOption.cs,ProcessLevels,The length of the parameter levelsMaxLiteralExpansionDepth is 30.
Long Identifier,System.Web.OData.Query,SelectExpandQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\SelectExpandQueryOption.cs,ProcessLevels,The length of the parameter levelsMaxLiteralExpansionDepth is 30.
Long Identifier,System.Web.OData.Query,SelectExpandQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\SelectExpandQueryOption.cs,ProcessLevels,The length of the parameter levelsMaxLiteralExpansionDepth is 30.
Long Identifier,System.Web.OData.Query,SelectExpandQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\SelectExpandQueryOption.cs,,The length of the parameter _levelsMaxLiteralExpansionDepth is 31.
Long Identifier,System.Web.OData.Query,HandleNullPropagationOptionHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\HandleNullPropagationOptionHelper.cs,,The length of the parameter EntityFrameworkQueryProviderNamespace is 37.
Long Identifier,System.Web.OData.Query,HandleNullPropagationOptionHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\HandleNullPropagationOptionHelper.cs,,The length of the parameter ObjectContextQueryProviderNamespaceEF5 is 38.
Long Identifier,System.Web.OData.Query,HandleNullPropagationOptionHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\HandleNullPropagationOptionHelper.cs,,The length of the parameter ObjectContextQueryProviderNamespaceEF6 is 38.
Long Identifier,System.Web.OData.Query,HandleNullPropagationOptionHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\HandleNullPropagationOptionHelper.cs,,The length of the parameter Linq2SqlQueryProviderNamespace is 30.
Long Identifier,System.Web.OData.Query,HandleNullPropagationOptionHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\HandleNullPropagationOptionHelper.cs,,The length of the parameter Linq2ObjectsQueryProviderNamespace is 34.
Long Identifier,System.Web.OData.Formatter.Deserialization,CollectionDeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\CollectionDeserializationHelpers.cs,AddToCollection,The length of the parameter isNonstandardEdmPrimitiveCollection is 35.
Long Identifier,System.Web.OData.Formatter.Deserialization,DefaultODataDeserializerProvider,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DefaultODataDeserializerProvider.cs,,The length of the parameter _entityReferenceLinkDeserializer is 32.
Long Identifier,System.Web.OData.Formatter.Serialization,DefaultODataSerializerProvider,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\DefaultODataSerializerProvider.cs,,The length of the parameter _entityReferenceLinkSerializer is 30.
Long Identifier,System.Web.OData.Formatter.Serialization,DefaultODataSerializerProvider,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\DefaultODataSerializerProvider.cs,,The length of the parameter _entityReferenceLinksSerializer is 31.
Long Identifier,System.Web.OData.Routing,ODataVersionConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataVersionConstraint.cs,,The length of the parameter PreviousODataVersionHeaderName is 30.
Long Identifier,System.Web.OData.Routing,ODataVersionConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataVersionConstraint.cs,,The length of the parameter PreviousODataMaxVersionHeaderName is 33.
Long Identifier,System.Web.OData.Routing,ODataVersionConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataVersionConstraint.cs,,The length of the parameter PreviousODataMinVersionHeaderName is 33.
Long Statement,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertySetter,The length of the statement  "            var callPropertySetterClosedGenericMethod = _callPropertySetterOpenGenericMethod.MakeGenericMethod(typeInput' typeValue); " is 121.
Long Statement,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertySetter,The length of the statement  "            callPropertySetterDelegate = Delegate.CreateDelegate(typeof(Action<TDeclaringType' object>)' propertySetterAsAction' callPropertySetterClosedGenericMethod); " is 156.
Long Statement,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertyGetter,The length of the statement  "                MethodInfo callPropertyGetterClosedGenericMethod = _callPropertyGetterByReferenceOpenGenericMethod.MakeGenericMethod(typeInput' typeOutput); " is 140.
Long Statement,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertyGetter,The length of the statement  "                callPropertyGetterDelegate = Delegate.CreateDelegate(typeof(Func<object' object>)' propertyGetterAsFunc' callPropertyGetterClosedGenericMethod); " is 144.
Long Statement,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertyGetter,The length of the statement  "                MethodInfo callPropertyGetterClosedGenericMethod = _callPropertyGetterOpenGenericMethod.MakeGenericMethod(typeInput' typeOutput); " is 129.
Long Statement,System.Web.Http.Internal,PropertyHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\PropertyHelper.cs,MakeFastPropertyGetter,The length of the statement  "                callPropertyGetterDelegate = Delegate.CreateDelegate(typeof(Func<object' object>)' propertyGetterAsFunc' callPropertyGetterClosedGenericMethod); " is 144.
Long Statement,System.Web.Http,Error,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\Error.cs,ArgumentUriNotHttpOrHttpsScheme,The length of the statement  "            return new ArgumentException(Error.Format(CommonWebApiResources.ArgumentInvalidHttpUriScheme' actualValue' HttpScheme' HttpsScheme)' parameterName); " is 148.
Long Statement,System.Web.Http,Error,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\Error.cs,ArgumentUriNotAbsolute,The length of the statement  "            return new ArgumentException(Error.Format(CommonWebApiResources.ArgumentInvalidAbsoluteUri' actualValue)' parameterName); " is 121.
Long Statement,System.Web.Http,Error,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\Error.cs,ArgumentUriHasQueryOrFragment,The length of the statement  "            return new ArgumentException(Error.Format(CommonWebApiResources.ArgumentUriHasQueryOrFragment' actualValue)' parameterName); " is 124.
Long Statement,System.Web.Http,Error,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\Error.cs,ArgumentMustBeGreaterThanOrEqualTo,The length of the statement  "            return new ArgumentOutOfRangeException(parameterName' actualValue' Error.Format(CommonWebApiResources.ArgumentMustBeGreaterThanOrEqualTo' minValue)); " is 149.
Long Statement,System.Web.Http,Error,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\Error.cs,ArgumentMustBeLessThanOrEqualTo,The length of the statement  "            return new ArgumentOutOfRangeException(parameterName' actualValue' Error.Format(CommonWebApiResources.ArgumentMustBeLessThanOrEqualTo' maxValue)); " is 146.
Long Statement,System.Web.Http,Error,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\Common\Error.cs,InvalidEnumArgument,The length of the statement  "            return new ArgumentException(Error.Format(CommonWebApiResources.InvalidEnumArgument' parameterName' invalidValue' enumClass.Name)' parameterName); " is 146.
Long Statement,System.Web.OData.Batch,ODataBatchHttpRequestMessageExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\ODataBatchHttpRequestMessageExtensions.cs,ValidateODataBatchRequest,The length of the statement  "            NameValueHeaderValue boundary = contentType.Parameters.FirstOrDefault(p => String.Equals(p.Name' Boundary' StringComparison.OrdinalIgnoreCase)); " is 144.
Long Statement,System.Web.OData.Batch,ODataBatchHttpRequestMessageExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\ODataBatchHttpRequestMessageExtensions.cs,GetODataBatchBaseUri,The length of the statement  "                string baseAddress = helper.Link(oDataRouteName' new HttpRouteValueDictionary() { { ODataRouteConstants.ODataPath' String.Empty } }); " is 133.
Long Statement,System.Web.OData.Batch,UnbufferedODataBatchHandler,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\UnbufferedODataBatchHandler.cs,ExecuteChangeSetAsync,The length of the statement  "                        HttpRequestMessage changeSetOperationRequest = await batchReader.ReadChangeSetOperationRequestAsync(batchId' changeSetId' bufferContentStream: false); " is 150.
Long Statement,System.Web.OData.Batch,UnbufferedODataBatchHandler,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\UnbufferedODataBatchHandler.cs,ExecuteChangeSetAsync,The length of the statement  "                            HttpResponseMessage response = await ODataBatchRequestItem.SendMessageAsync(Invoker' changeSetOperationRequest' cancellationToken' contentIdToLocationMapping); " is 159.
Long Statement,System.Web.OData.Batch,ODataBatchRequestItem,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\ODataBatchRequestItem.cs,SendMessageAsync,The length of the statement  "                string resolvedRequestUrl = ContentIdHelpers.ResolveContentId(request.RequestUri.OriginalString' contentIdToLocationMapping); " is 125.
Long Statement,System.Web.OData.Batch,ODataBatchReaderExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\ODataBatchReaderExtensions.cs,ReadOperationRequestAsync,The length of the statement  "            return ReadOperationInternalAsync(reader' batchId' changeSetId: null' cancellationToken: cancellationToken' bufferContentStream: bufferContentStream); " is 150.
Long Statement,System.Web.OData.Batch,DefaultODataBatchHandler,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\DefaultODataBatchHandler.cs,ParseBatchRequestsAsync,The length of the statement  "                    HttpRequestMessage operationRequest = await batchReader.ReadOperationRequestAsync(batchId' bufferContentStream: true' cancellationToken: cancellationToken); " is 156.
Long Statement,System.Web.OData.Builder,NavigationSourceConfiguration<TEntityType>,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceConfigurationOfTEntityType.cs,HasEditLink,The length of the statement  "            _configuration.HasEditLink(new SelfLinkBuilder<Uri>((entity) => editLinkFactory(UpCastEntityInstanceContext(entity))' followsConventions)); " is 139.
Long Statement,System.Web.OData.Builder,NavigationSourceConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceConfiguration.cs,AddBinding,The length of the statement  "                navigationPropertyBinding = new NavigationPropertyBindingConfiguration(navigationConfiguration' targetNavigationSource); " is 120.
Long Statement,System.Web.OData.Builder,LinkGenerationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\LinkGenerationHelpers.cs,GenerateFunctionLink,The length of the statement  "            return GenerateFunctionLink(entityContext' bindingParameter.Type.FullName()' function.Name' function.Parameters.Select(p => p.Name)); " is 133.
Long Statement,System.Web.OData.Builder,EdmTypeBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmTypeBuilder.cs,CreateEntityTypeBody,The length of the statement  "            IEnumerable<IEdmStructuralProperty> keys = config.Keys.Select(p => type.DeclaredProperties.OfType<IEdmStructuralProperty>().First(dp => dp.Name == p.Name)); " is 156.
Long Statement,System.Web.OData.Builder,EdmTypeBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmTypeBuilder.cs,CreateEnumTypeBody,The length of the statement  "                    throw Error.Argument("value"' SRResources.EnumValueCannotBeLong' Enum.GetName(member.MemberInfo.GetType()' member.MemberInfo)); " is 127.
Long Statement,System.Web.OData.Builder,EntityTypeConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EntityTypeConfiguration.cs,AddNavigationProperty,The length of the statement  "                throw Error.Argument("navigationProperty"' SRResources.PropertyDoesNotBelongToType' navigationProperty.Name' ClrType.FullName); " is 127.
Long Statement,System.Web.OData.Builder,EntityTypeConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EntityTypeConfiguration.cs,AddNavigationProperty,The length of the statement  "                    throw Error.Argument("navigationProperty"' SRResources.MustBeNavigationProperty' navigationProperty.Name' ClrType.FullName); " is 124.
Long Statement,System.Web.OData.Builder,EntityTypeConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EntityTypeConfiguration.cs,AddNavigationProperty,The length of the statement  "                    throw Error.Argument("navigationProperty"' SRResources.MustHaveMatchingMultiplicity' navigationProperty.Name' multiplicity); " is 124.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,DiscoverInheritanceRelationships,The length of the statement  "            Dictionary<Type' EntityTypeConfiguration> entityMap = StructuralTypes.OfType<EntityTypeConfiguration>().ToDictionary(e => e.ClrType); " is 133.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,DiscoverInheritanceRelationships,The length of the statement  "            foreach (EntityTypeConfiguration entity in StructuralTypes.OfType<EntityTypeConfiguration>().Where(e => !e.BaseTypeConfigured)) " is 127.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,MapEntityType,The length of the statement  "            IEnumerable<PropertyInfo> properties = ConventionsHelpers.GetProperties(entity' includeReadOnly: _isQueryCompositionMode); " is 122.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,MapEntityType,The length of the statement  "                if (propertyKind == PropertyKind.Primitive || propertyKind == PropertyKind.Complex || propertyKind == PropertyKind.Enum) " is 120.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,MapComplexType,The length of the statement  "            IEnumerable<PropertyInfo> properties = ConventionsHelpers.GetAllProperties(complexType' includeReadOnly: _isQueryCompositionMode); " is 130.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,MapComplexType,The length of the statement  "                if (propertyKind == PropertyKind.Primitive || propertyKind == PropertyKind.Complex || propertyKind == PropertyKind.Enum) " is 120.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,MapComplexType,The length of the statement  "                        throw Error.InvalidOperation(SRResources.ComplexTypeRefersToEntityType' complexType.ClrType.FullName' mappedType.ClrType.FullName' property.Name); " is 146.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,MapStructuralProperty,The length of the statement  "            Contract.Assert(propertyKind == PropertyKind.Complex || propertyKind == PropertyKind.Primitive || propertyKind == PropertyKind.Enum); " is 133.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,PruneUnreachableTypes,The length of the statement  "                foreach (PropertyConfiguration property in currentType.Properties.Where(property => property.Kind != PropertyKind.Primitive)) " is 125.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,PruneUnreachableTypes,The length of the statement  "                    // we don't have to fix up any properties because this type is unreachable and cannot be a property of any reachable type. " is 122.
Long Statement,System.Web.OData.Builder,ODataConventionModelBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ODataConventionModelBuilder.cs,BuildDerivedTypesMapping,The length of the statement  "            IEnumerable<Type> allTypes = TypeHelper.GetLoadedTypes(assemblyResolver).Where(t => t.IsVisible && t.IsClass && t != typeof(object)); " is 133.
Long Statement,System.Web.OData.Builder,ProcedureConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ProcedureConfiguration.cs,CollectionParameter,The length of the statement  "            CollectionTypeConfiguration parameterType = new CollectionTypeConfiguration(elementTypeConfiguration' typeof(IEnumerable<>).MakeGenericType(elementType)); " is 154.
Long Statement,System.Web.OData.Builder,StructuralTypeConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\StructuralTypeConfiguration.cs,AddCollectionProperty,The length of the statement  "                    throw Error.Argument("propertyInfo"' SRResources.MustBeCollectionProperty' propertyInfo.Name' propertyInfo.DeclaringType.FullName); " is 131.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,BuildEdmModel,The length of the statement  "            IDictionary<string' EdmNavigationSource> navigationSourceMap = model.GetNavigationSourceMap(builder' edmTypeMap' navigationSources); " is 132.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,AddEntitySetAndAnnotations,The length of the statement  "            IEnumerable<Tuple<EdmEntitySet' EntitySetConfiguration>> entitySets = AddEntitySets(configurations' container' edmTypeMap); " is 123.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,AddSingletonAndAnnotations,The length of the statement  "            IEnumerable<Tuple<EdmSingleton' SingletonConfiguration>> singletons = AddSingletons(configurations' container' edmTypeMap); " is 123.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,GetNavigationSourceMap,The length of the statement  "            Dictionary<string' EdmNavigationSource> edmNavigationSourceMap = navigationSourceAndAnnotations.ToDictionary(e => e.NavigationSource.Name' e => e.NavigationSource); " is 164.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,GetNavigationSourceMap,The length of the statement  "                AddNavigationBindings(navigationSourceAndAnnotation.Configuration' navigationSource' navigationSourceAndAnnotation.LinkBuilder' " is 127.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,AddProcedureParameters,The length of the statement  "                IEdmTypeReference parameterTypeReference = GetEdmTypeReference(edmTypeMap' parameter.TypeConfiguration' nullable: isParameterOptional); " is 135.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,AddProcedureParameters,The length of the statement  "                IEdmOperationParameter operationParameter = new EdmOperationParameter(operation' parameter.Name' parameterTypeReference); " is 121.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,ValidateProcedureEntitySetPath,The length of the statement  "            if (procedure.EntitySetPath != null && !operationImport.TryGetRelativeEntitySetPath(model' out procedureParameter' out navPath' out edmErrors)) " is 143.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,ValidateProcedureEntitySetPath,The length of the statement  "                throw Error.InvalidOperation(SRResources.ProcedureHasInvalidEntitySetPath' String.Join("/"' procedure.EntitySetPath)' procedure.FullyQualifiedName); " is 148.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,AddProcedures,The length of the statement  "                        operationImport = CreateFunctionImport((FunctionConfiguration)procedure' container' returnReference' expression' pathExpression); " is 129.
Long Statement,System.Web.OData.Builder,EdmModelHelperMethods,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EdmModelHelperMethods.cs,CreateFunctionImport,The length of the statement  "            return new EdmFunctionImport(container' function.Name' operation' expression' includeInServiceDocument: function.IncludeInServiceDocument); " is 139.
Long Statement,System.Web.OData.Builder,PropertySelectorVisitor,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\PropertySelectorVisitor.cs,VisitMember,The length of the statement  "                throw Error.InvalidOperation(SRResources.MemberExpressionsMustBeProperties' node.Member.ReflectedType.FullName' node.Member.Name); " is 130.
Long Statement,System.Web.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConvention.cs,Apply,The length of the statement  "            bool isTypeDataContract = structuralTypeConfiguration.ClrType.GetCustomAttributes(typeof(DataContractAttribute)' inherit: true).Any(); " is 134.
Long Statement,System.Web.OData.Builder.Conventions.Attributes,IgnoreDataMemberAttributeEdmPropertyConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\Attributes\IgnoreDataMemberAttributeEdmPropertyConvention.cs,Apply,The length of the statement  "                bool isTypeDataContract = structuralTypeConfiguration.ClrType.GetCustomAttributes(typeof(DataContractAttribute)' inherit: true).Any(); " is 134.
Long Statement,System.Web.OData.Builder.Conventions.Attributes,IgnoreDataMemberAttributeEdmPropertyConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\Attributes\IgnoreDataMemberAttributeEdmPropertyConvention.cs,Apply,The length of the statement  "                bool isPropertyDataMember = edmProperty.PropertyInfo.GetCustomAttributes(typeof(DataMemberAttribute)' inherit: true).Any(); " is 123.
Long Statement,System.Web.OData.Builder.Conventions,FunctionLinkGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\FunctionLinkGenerationConvention.cs,Apply,The length of the statement  "            if (function != null && function.IsBindable && function.BindingParameter.TypeConfiguration.Kind == EdmTypeKind.Entity && function.GetFunctionLink() == null) " is 156.
Long Statement,System.Web.OData.Builder.Conventions,ActionLinkGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\ActionLinkGenerationConvention.cs,Apply,The length of the statement  "            if (action != null && action.IsBindable && action.BindingParameter.TypeConfiguration.Kind == EdmTypeKind.Entity && action.GetActionLink() == null) " is 146.
Long Statement,System.Web.OData.Builder.Conventions,ActionLinkGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\ActionLinkGenerationConvention.cs,Apply,The length of the statement  "                action.HasActionLink(entityContext => entityContext.GenerateActionLink(bindingParamterType' action.FullyQualifiedName)' followsConventions: true); " is 146.
Long Statement,System.Web.OData.Builder.Conventions,SelfLinksGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\SelfLinksGenerationConvention.cs,Apply,The length of the statement  "                configuration.HasIdLink(new SelfLinkBuilder<Uri>((entityContext) => entityContext.GenerateSelfLink(includeCast: false)' followsConventions: true)); " is 147.
Long Statement,System.Web.OData.Builder.Conventions,ConventionsHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\ConventionsHelpers.cs,GetProperties,The length of the statement  "                IEnumerable<PropertyInfo> baseTypeProperties = GetAllProperties(entity.BaseType as StructuralTypeConfiguration' includeReadOnly); " is 129.
Long Statement,System.Web.OData.Builder.Conventions,EntityKeyConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\EntityKeyConvention.cs,GetKeyProperty,The length of the statement  "                .Where(p => (p.Name.Equals(entityType.Name + "Id"' StringComparison.OrdinalIgnoreCase) || p.Name.Equals("Id"' StringComparison.OrdinalIgnoreCase)) " is 146.
Long Statement,System.Web.OData,Delta<TEntityType>,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\DeltaOfTEntityType.cs,CopyUnchangedValues,The length of the statement  "            IEnumerable<PropertyAccessor<TEntityType>> propertiesToCopy = GetUnchangedPropertyNames().Select(s => _allProperties[s]); " is 121.
Long Statement,System.Web.OData,EdmComplexObjectCollection,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\EdmComplexCollectionObject.cs,Initialize,The length of the statement  "                    SRResources.UnexpectedElementType' edmType.ElementType().ToTraceString()' edmType.ToTraceString()' typeof(IEdmComplexType).Name); " is 129.
Long Statement,System.Web.OData,EdmEntityObjectCollection,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\EdmEntityCollectionObject.cs,Initialize,The length of the statement  "                    SRResources.UnexpectedElementType' edmType.ElementType().ToTraceString()' edmType.ToTraceString()' typeof(IEdmEntityType).Name); " is 128.
Long Statement,System.Web.OData,PerRequestParameterBinding,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\PerRequestParameterBinding.cs,ExecuteBindingAsync,The length of the statement  "                MediaTypeFormatter perRequestFormatter = formatter.GetPerRequestFormatterInstance(Descriptor.ParameterType' actionContext.Request' actionContext.Request.Content.Headers.ContentType); " is 182.
Long Statement,System.Web.OData,ExpressionHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ExpressionHelpers.cs,Skip,The length of the statement  "            Expression skipValueExpression = parameterize ? LinqParameterContainer.Parameterize(typeof(int)' count) : Expression.Constant(count); " is 133.
Long Statement,System.Web.OData,ExpressionHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ExpressionHelpers.cs,Take,The length of the statement  "            Expression takeValueExpression = parameterize ? LinqParameterContainer.Parameterize(typeof(int)' count) : Expression.Constant(count); " is 133.
Long Statement,System.Web.OData,ODataQueryParameterBinding,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ODataQueryParameterBindingAttribute.cs,ExecuteBindingAsync,The length of the statement  "                Type entityClrType = GetEntityClrTypeFromParameterType(Descriptor) ?? GetEntityClrTypeFromActionReturnType(actionDescriptor); " is 125.
Long Statement,System.Web.OData,ODataQueryParameterBinding,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ODataQueryParameterBindingAttribute.cs,ExecuteBindingAsync,The length of the statement  "                    (Func<ODataQueryContext' HttpRequestMessage' ODataQueryOptions>)Descriptor.Properties.GetOrAdd(CreateODataQueryOptionsCtorKey' _ => " is 131.
Long Statement,System.Web.OData,ODataQueryParameterBinding,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ODataQueryParameterBindingAttribute.cs,ExecuteBindingAsync,The length of the statement  "                        return Delegate.CreateDelegate(typeof(Func<ODataQueryContext' HttpRequestMessage' ODataQueryOptions>)' _createODataQueryOptions.MakeGenericMethod(entityClrType)); " is 162.
Long Statement,System.Web.OData.Formatter,ODataMediaTypeFormatters,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatters.cs,CreateRawValue,The length of the statement  "            ODataMediaTypeFormatter formatter = CreateFormatterWithoutMediaTypes(serializerProvider' deserializerProvider' ODataPayloadKind.Value); " is 135.
Long Statement,System.Web.OData.Formatter,ODataMediaTypeFormatters,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatters.cs,CreateFormatterWithoutMediaTypes,The length of the statement  "            ODataMediaTypeFormatter formatter = new ODataMediaTypeFormatter(deserializerProvider' serializerProvider' payloadKinds); " is 120.
Long Statement,System.Web.OData.Formatter,ODataModelBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataModelBinderProvider.cs,BindModel,The length of the statement  "                    bindingContext.ModelState.AddModelError(bindingContext.ModelName' Error.Format(SRResources.ValueIsInvalid' value.RawValue' ex.Message)); " is 136.
Long Statement,System.Web.OData.Formatter,ODataModelBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataModelBinderProvider.cs,BindModel,The length of the statement  "                    bindingContext.ModelState.AddModelError(bindingContext.ModelName' Error.Format(SRResources.ValueIsInvalid' value.RawValue' ex.Message)); " is 136.
Long Statement,System.Web.OData.Formatter,EdmLibHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\EdmLibHelpers.cs,GetClrType,The length of the statement  "                .Where(kvp => edmTypeReference.Definition.IsEquivalentTo(kvp.Value) && (!edmTypeReference.IsNullable || IsNullable(kvp.Key))) " is 125.
Long Statement,System.Web.OData.Formatter,ODataMediaTypeFormatter,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatter.cs,ReadFromStream,The length of the statement  "                ODataDeserializer deserializer = GetDeserializer(type' Request.ODataProperties().Path' model' _deserializerProvider' out expectedPayloadType); " is 142.
Long Statement,System.Web.OData.Formatter,ODataMediaTypeFormatter,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatter.cs,ReadFromStream,The length of the statement  "                    IODataRequestMessage oDataRequestMessage = new ODataMessageWrapper(readStream' contentHeaders' Request.GetODataContentIdMapping()); " is 131.
Long Statement,System.Web.OData.Formatter,ODataMediaTypeFormatter,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatter.cs,GetSerializer,The length of the statement  "                    string message = Error.Format(SRResources.TypeCannotBeSerialized' edmType.ToTraceString()' typeof(ODataMediaTypeFormatter).Name); " is 129.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,Bind,The length of the statement  "            MethodInfo selectMethod = ExpressionHelperMethods.QueryableSelectGeneric.MakeGenericMethod(elementType' projectionLambda.Body.Type); " is 132.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,GetProjectionLambda,The length of the statement  "            // expression looks like -> new Wrapper { Instance = source ' Properties = "..."' Container = new PropertyContainer { ... } } " is 125.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,GetProjectionLambda,The length of the statement  "            Expression projectionExpression = ProjectElement(source' _selectExpandQuery.SelectExpandClause' _context.ElementType as IEdmEntityType); " is 136.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,CreatePropertyValueExpression,The length of the statement  "                // need to cast this to nullable as EF would fail while materializing if the property is not nullable and source is null. " is 121.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,ProjectElement,The length of the statement  "                Dictionary<IEdmNavigationProperty' SelectExpandClause> propertiesToExpand = GetPropertiesToExpandInQuery(selectExpandClause); " is 125.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,ProjectElement,The length of the statement  "                ISet<IEdmStructuralProperty> propertiesToInclude = GetPropertiesToIncludeInQuery(selectExpandClause' entityType' out autoSelectedProperties); " is 141.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,ProjectCollection,The length of the statement  "                source = ExpressionHelpers.Take(source' _settings.PageSize.Value + 1' elementType' _settings.EnableConstantParameterization); " is 125.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,GetPropertiesToExpandInQuery,The length of the statement  "            Dictionary<IEdmNavigationProperty' SelectExpandClause> properties = new Dictionary<IEdmNavigationProperty' SelectExpandClause>(); " is 129.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,GetPropertiesToExpandInQuery,The length of the statement  "                    NavigationPropertySegment navigationSegment = expandItem.PathToNavigationProperty.LastSegment as NavigationPropertySegment; " is 123.
Long Statement,System.Web.OData.Query.Expressions,SelectExpandBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\SelectExpandBinder.cs,GetWrapperGenericType,The length of the statement  "                Contract.Assert(!isTypeNamePropertySet' "we don't set type name if we set instance as it can be figured from instance"); " is 120.
Long Statement,System.Web.OData.Query.Expressions,LinqParameterContainer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\LinqParameterContainer.cs,Parameterize,The length of the statement  "            // does a closure' so that EF can parameterize the constant (resulting in better performance due to expression translation caching). " is 132.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,Bind,The length of the statement  "            return Bind(filterClause' typeof(TEntityType)' model' assembliesResolver' querySettings) as Expression<Func<TEntityType' bool>>; " is 128.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindBinaryOperatorNode,The length of the statement  "            bool isNullPropagationRequired = _querySettings.HandleNullPropagation == HandleNullPropagationOption.True && (IsNullable(left.Type) || IsNullable(right.Type)); " is 159.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreatePropertyAccessExpression,The length of the statement  "            if (_querySettings.HandleNullPropagation == HandleNullPropagationOption.True && IsNullable(source.Type) && source != _lambdaParameters[ODataItParameterName]) " is 157.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreatePropertyAccessExpression,The length of the statement  "                // Notice that we are checking if source is null already. so we can safely remove any null checks when doing source.Property " is 124.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,HandleLambdaParameters,The length of the statement  "                    parameter = Expression.Parameter(EdmLibHelpers.GetClrType(edmTypeReference' _model' _assembliesResolver)' rangeVariable.Name); " is 126.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,ConvertNonStandardPrimitives,The length of the statement  "                            convertedExpression = Expression.Call(ExtractValueFromNullableExpression(source)' "ToString"' typeArguments: null' arguments: null); " is 132.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreateBinaryExpression,The length of the statement  "            // When comparing an enum to a string' parse the string' convert both to the enum underlying type' and compare the values " is 121.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreateBinaryExpression,The length of the statement  "                // Use string.Compare instead of comparison for gt' ge' lt' le between two strings since direct comparisons are not supported " is 125.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreateBinaryExpression,The length of the statement  "                            return Expression.MakeBinary(binaryExpressionType' left' right' liftToNull' method: Linq2ObjectsComparisonMethods.AreByteArraysEqualMethodInfo); " is 144.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreateBinaryExpression,The length of the statement  "                            return Expression.MakeBinary(binaryExpressionType' left' right' liftToNull' method: Linq2ObjectsComparisonMethods.AreByteArraysNotEqualMethodInfo); " is 147.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,CreateBinaryExpression,The length of the statement  "                            throw new ODataException(Error.Format(SRResources.BinaryOperatorNotSupported' binaryType.FullName()' binaryType.FullName()' binaryOperator)); " is 141.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,Any,The length of the statement  "                    return Expression.Call(null' ExpressionHelperMethods.QueryableNonEmptyAnyGeneric.MakeGenericMethod(elementType)' source' filter); " is 129.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,Any,The length of the statement  "                    return Expression.Call(null' ExpressionHelperMethods.EnumerableNonEmptyAnyGeneric.MakeGenericMethod(elementType)' source' filter); " is 130.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,All,The length of the statement  "                return Expression.Call(null' ExpressionHelperMethods.QueryableAllGeneric.MakeGenericMethod(elementType)' source' filter); " is 121.
Long Statement,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,All,The length of the statement  "                return Expression.Call(null' ExpressionHelperMethods.EnumerableAllGeneric.MakeGenericMethod(elementType)' source' filter); " is 122.
Long Statement,System.Web.OData.Query,SelectExpandQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\SelectExpandQueryOption.cs,ApplyTo,The length of the statement  "                updatedSettings.HandleNullPropagation = HandleNullPropagationOptionHelper.GetDefaultHandleNullPropagationOption(queryable); " is 123.
Long Statement,System.Web.OData.Query,ODataQueryOptions<TEntity>,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptionsOfTEntity.cs,ValidateQuery,The length of the statement  "                throw Error.Argument("query"' SRResources.CannotApplyODataQueryOptionsOfT' typeof(ODataQueryOptions).Name' typeof(TEntity).FullName' typeof(IQueryable).Name' query.ElementType.FullName); " is 186.
Long Statement,System.Web.OData.Query,QueryFilterProvider,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\QueryFilterProvider.cs,GetFilters,The length of the statement  "                !actionDescriptor.GetParameters().Any(parameter => typeof(ODataQueryOptions).IsAssignableFrom(parameter.ParameterType))) " is 120.
Long Statement,System.Web.OData.Query,FilterQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\FilterQueryOption.cs,ApplyTo,The length of the statement  "            Expression filter = FilterBinder.Bind(filterClause' Context.ElementClrType' Context.Model' assembliesResolver' updatedSettings); " is 128.
Long Statement,System.Web.OData.Query,ODataQueryOptions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptions.cs,ApplyTo,The length of the statement  "                if (resultsLimited && Request.RequestUri != null && Request.RequestUri.IsAbsoluteUri && Request.ODataProperties().NextLink == null) " is 131.
Long Statement,System.Web.OData.Query,ODataQueryOptions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptions.cs,EnsureStableSortOrderBy,The length of the statement  "            IEnumerable<IEdmStructuralProperty> propertiesToAdd = GetAvailableOrderByProperties(context).Where(prop => !usedPropertyNames.Contains(prop.Name)); " is 147.
Long Statement,System.Web.OData.Query,OrderByQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\OrderByQueryOption.cs,ApplyToCore,The length of the statement  "                        querySoFar = ExpressionHelpers.OrderBy(querySoFar' orderByExpression' direction' Context.ElementClrType' alreadyOrdered); " is 121.
Long Statement,System.Web.OData.Query,OrderByQueryOption,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\OrderByQueryOption.cs,ApplyToCore,The length of the statement  "                        querySoFar = ExpressionHelpers.OrderByProperty(querySoFar' Context.Model' property' direction' Context.ElementClrType' alreadyOrdered); " is 135.
Long Statement,System.Web.OData.Query.Validators,SelectExpandQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\SelectExpandQueryValidator.cs,ValidateDepth,The length of the statement  "                ExpandedNavigationSelectItem[] expandItems = currentNode.SelectedItems.OfType<ExpandedNavigationSelectItem>().ToArray(); " is 120.
Long Statement,System.Web.OData.Query.Validators,SelectExpandQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\SelectExpandQueryValidator.cs,ValidateRestrictions,The length of the statement  "                    NavigationPropertySegment navigationSegment = (NavigationPropertySegment)expandItem.PathToNavigationProperty.LastSegment; " is 121.
Long Statement,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,ValidateLogicalOperator,The length of the statement  "                throw new ODataException(Error.Format(SRResources.NotAllowedLogicalOperator' logicalOperator' "AllowedLogicalOperators")); " is 122.
Long Statement,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,ValidateArithmeticOperator,The length of the statement  "                throw new ODataException(Error.Format(SRResources.NotAllowedArithmeticOperator' arithmeticOperator' "AllowedArithmeticOperators")); " is 131.
Long Statement,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,ValidateUnaryOperatorNode,The length of the statement  "                        throw new ODataException(Error.Format(SRResources.NotAllowedLogicalOperator' unaryOperatorNode.OperatorKind' "AllowedLogicalOperators")); " is 137.
Long Statement,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,EnterLambda,The length of the statement  "                throw new ODataException(Error.Format(SRResources.MaxAnyAllExpressionLimitExceeded' validationSettings.MaxAnyAllExpressionDepth' "MaxAnyAllExpressionDepth")); " is 158.
Long Statement,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,IncrementNodeCount,The length of the statement  "                throw new ODataException(Error.Format(SRResources.MaxNodeLimitExceeded' validationSettings.MaxNodeCount' "MaxNodeCount")); " is 122.
Long Statement,System.Web.OData.Query.Validators,SkipQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\SkipQueryValidator.cs,Validate,The length of the statement  "                throw new ODataException(Error.Format(SRResources.SkipTopLimitExceeded' validationSettings.MaxSkip' AllowedQueryOptions.Skip' skipQueryOption.Value)); " is 150.
Long Statement,System.Web.OData.Query.Validators,TopQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\TopQueryValidator.cs,Validate,The length of the statement  "                throw new ODataException(Error.Format(SRResources.SkipTopLimitExceeded' validationSettings.MaxTop' AllowedQueryOptions.Top' topQueryOption.Value)); " is 147.
Long Statement,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,SetCollectionProperty,The length of the statement  "                    string message = Error.Format(SRResources.PropertyIsNotCollection' propertyType.FullName' propertyName' resourceType.FullName); " is 127.
Long Statement,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,ConvertComplexValue,The length of the statement  "                Contract.Assert(edmType.TypeKind == EdmTypeKind.Complex' "ODataLib should have verified that complex value has a complex resource type."); " is 138.
Long Statement,System.Web.OData.Formatter.Deserialization,CollectionDeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\CollectionDeserializationHelpers.cs,AddToCollection,The length of the statement  "                    string message = Error.Format(SRResources.CollectionShouldHaveAddMethod' propertyType.FullName' propertyName' resourceType.FullName); " is 133.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataActionPayloadDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataActionPayloadDeserializer.cs,Read,The length of the statement  "                        Contract.Assert(parameter != null' String.Format(CultureInfo.InvariantCulture' "Parameter '{0}' not found."' parameterName)); " is 125.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataActionPayloadDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataActionPayloadDeserializer.cs,Read,The length of the statement  "                        Contract.Assert(parameter != null' String.Format(CultureInfo.InvariantCulture' "Parameter '{0}' not found."' parameterName)); " is 125.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataActionPayloadDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataActionPayloadDeserializer.cs,Read,The length of the statement  "                        ODataCollectionDeserializer collectionDeserializer = (ODataCollectionDeserializer)DeserializerProvider.GetEdmTypeDeserializer(collectionType); " is 142.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataCollectionDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataCollectionDeserializer.cs,ReadInline,The length of the statement  "                    IEnumerable castedResult = _castMethodInfo.MakeGenericMethod(elementClrType).Invoke(null' new object[] { result }) as IEnumerable; " is 130.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataFeedDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataFeedDeserializer.cs,ReadInline,The length of the statement  "                throw Error.Argument("edmType"' SRResources.TypeMustBeEntityCollection' edmType.ToTraceString()' typeof(IEdmEntityType).Name); " is 126.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyNavigationProperty,The length of the statement  "            IEdmNavigationProperty navigationProperty = entityType.FindProperty(navigationLinkWrapper.NavigationLink.Name) as IEdmNavigationProperty; " is 137.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyNavigationProperty,The length of the statement  "                    Error.Format(SRResources.NavigationPropertyNotfound' navigationLinkWrapper.NavigationLink.Name' entityType.FullName())); " is 120.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyStructuralProperty,The length of the statement  "            DeserializationHelpers.ApplyProperty(structuralProperty' entityType' entityResource' DeserializerProvider' readContext); " is 120.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The length of the statement  "                                Contract.Assert(parentNavigationLink.NavigationLink.IsCollection == false' "Only singleton navigation properties can contain entry as their child."); " is 149.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The length of the statement  "                                Contract.Assert(parentNavigationLink.NestedItems.Count == 0' "Each navigation property can contain only one entry as its direct child."); " is 137.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The length of the statement  "                        Contract.Assert(itemsStack.Count > 0 && (reader.Item == null || itemsStack.Peek().Item == reader.Item)' "The entry which is ending should be on the top of the items stack."); " is 174.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The length of the statement  "                        Contract.Assert(itemsStack.Count > 0 && itemsStack.Peek().Item == reader.Item' "The navigation link which is ending should be on the top of the items stack."); " is 159.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The length of the statement  "                            Contract.Assert(parentNavigationLink != null' "this has to be an inner feed. inner feeds always have a navigation link."); " is 122.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The length of the statement  "                            Contract.Assert(parentNavigationLink.NavigationLink.IsCollection == true' "Only collection navigation properties can contain feed as their child."); " is 148.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ReadEntryOrFeed,The length of the statement  "                        Contract.Assert(itemsStack.Count > 0 && itemsStack.Peek().Item == reader.Item' "The feed which is ending should be on the top of the items stack."); " is 148.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyEntryInNavigationProperty,The length of the statement  "            Contract.Assert(navigationProperty != null && navigationProperty.PropertyKind == EdmPropertyKind.Navigation' "navigationProperty != null && navigationProperty.TypeKind == ResourceTypeKind.EntityType"); " is 201.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyEntryInNavigationProperty,The length of the statement  "                string message = Error.Format(SRResources.CannotPatchNavigationProperties' navigationProperty.Name' navigationProperty.DeclaringEntityType().FullName()); " is 153.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyEntryInNavigationProperty,The length of the statement  "                throw new SerializationException(Error.Format(SRResources.TypeCannotBeDeserialized' navigationProperty.Type.FullName()' typeof(ODataMediaTypeFormatter))); " is 154.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyFeedInNavigationProperty,The length of the statement  "            Contract.Assert(navigationProperty != null && navigationProperty.PropertyKind == EdmPropertyKind.Navigation' "navigationProperty != null && navigationProperty.TypeKind == ResourceTypeKind.EntityType"); " is 201.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyFeedInNavigationProperty,The length of the statement  "                string message = Error.Format(SRResources.CannotPatchNavigationProperties' navigationProperty.Name' navigationProperty.DeclaringEntityType().FullName()); " is 153.
Long Statement,System.Web.OData.Formatter.Deserialization,ODataEntityDeserializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\ODataEntityDeserializer.cs,ApplyFeedInNavigationProperty,The length of the statement  "                throw new SerializationException(Error.Format(SRResources.TypeCannotBeDeserialized' navigationProperty.Type.FullName()' typeof(ODataMediaTypeFormatter))); " is 154.
Long Statement,System.Web.OData.Formatter.Serialization,SelectExpandNode,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\SelectExpandNode.cs,BuildExpansions,The length of the statement  "                    NavigationPropertySegment navigationSegment = (NavigationPropertySegment)expandItem.PathToNavigationProperty.LastSegment; " is 121.
Long Statement,System.Web.OData.Formatter.Serialization,ODataMetadataSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataMetadataSerializer.cs,WriteObject,The length of the statement  "            // the model received by this method and the model passed(from configuration) while building ODataMessageWriter is the same (clr object). " is 137.
Long Statement,System.Web.OData.Formatter.Serialization,ODataComplexTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataComplexTypeSerializer.cs,CreateODataComplexValue,The length of the statement  "            IEdmComplexObject complexObject = graph as IEdmComplexObject ?? new TypedEdmComplexObject(graph' complexType' writeContext.Model); " is 130.
Long Statement,System.Web.OData.Formatter.Serialization,ODataComplexTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataComplexTypeSerializer.cs,CreateODataComplexValue,The length of the statement  "                    throw Error.NotSupported(SRResources.TypeCannotBeSerialized' propertyType.FullName()' typeof(ODataMediaTypeFormatter).Name); " is 124.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,CreateEntry,The length of the statement  "                    NavigationSourceLinkBuilderAnnotation linkBuilder = model.GetNavigationSourceLinkBuilder(entityInstanceContext.NavigationSource); " is 129.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,CreateEntry,The length of the statement  "                    EntitySelfLinks selfLinks = linkBuilder.BuildEntitySelfLinks(entityInstanceContext' entityInstanceContext.SerializerContext.MetadataLevel); " is 139.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,WriteExpandedNavigationProperties,The length of the statement  "            foreach (KeyValuePair<IEdmNavigationProperty' SelectExpandClause> navigationPropertyToExpand in navigationPropertiesToExpand) " is 125.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,WriteExpandedNavigationProperty,The length of the statement  "                ODataSerializerContext nestedWriteContext = new ODataSerializerContext(entityInstanceContext' selectExpandClause' navigationProperty); " is 134.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,WriteExpandedNavigationProperty,The length of the statement  "                        Error.Format(SRResources.TypeCannotBeSerialized' navigationProperty.Type.ToTraceString()' typeof(ODataMediaTypeFormatter).Name)); " is 129.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,CreateNavigationLink,The length of the statement  "                NavigationSourceLinkBuilderAnnotation linkBuilder = model.GetNavigationSourceLinkBuilder(writeContext.NavigationSource); " is 120.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,CreateNavigationLink,The length of the statement  "                Uri navigationUrl = linkBuilder.BuildNavigationLink(entityInstanceContext' navigationProperty' writeContext.MetadataLevel); " is 123.
Long Statement,System.Web.OData.Formatter.Serialization,ODataEntityTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEntityTypeSerializer.cs,CreateStructuralProperty,The length of the statement  "                    Error.Format(SRResources.TypeCannotBeSerialized' structuralProperty.Type.FullName()' typeof(ODataMediaTypeFormatter).Name)); " is 124.
Long Statement,System.Web.OData.Formatter.Serialization,ODataFeedSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataFeedSerializer.cs,GetNestedNextPageLink,The length of the statement  "            NavigationSourceLinkBuilderAnnotation linkBuilder = writeContext.Model.GetNavigationSourceLinkBuilder(sourceNavigationSource); " is 126.
Long Statement,System.Web.OData.Routing,UnboundFunctionPathSegment,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\UnboundFunctionPathSegment.cs,ToString,The length of the statement  "            IEnumerable<string> parameters = Values.Select(v => String.Format(CultureInfo.InvariantCulture' "{0}={1}"' v.Key' v.Value)); " is 124.
Long Statement,System.Web.OData.Routing,BoundFunctionPathSegment,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\BoundFunctionPathSegment.cs,ToString,The length of the statement  "            IEnumerable<string> parameters = Values.Select(v => String.Format(CultureInfo.InvariantCulture' "{0}={1}"' v.Key' v.Value)); " is 124.
Long Statement,System.Web.OData.Routing,ODataActionSelector,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataActionSelector.cs,SelectAction,The length of the statement  "            ILookup<string' HttpActionDescriptor> actionMap = _innerSelector.GetActionMapping(controllerContext.ControllerDescriptor); " is 122.
Long Statement,System.Web.OData.Routing.Conventions,AttributeRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\AttributeRoutingConvention.cs,GetODataRoutePrefix,The length of the statement  "                throw Error.InvalidOperation(SRResources.RoutePrefixStartsWithSlash' prefix' controllerDescriptor.ControllerType.FullName); " is 123.
Long Statement,System.Web.OData.Routing.Conventions,RefRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\RefRoutingConvention.cs,SelectAction,The length of the statement  "                    routeData.Values[ODataRouteConstants.RelatedKey] = ((KeyValuePathSegment)odataPath.Segments[odataPath.Segments.Count - 2]).Value; " is 129.
Complex Conditional,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,BuildIdLink,The conditional expression  "_idLinkBuilder != null &&                  (metadataLevel == ODataMetadataLevel.FullMetadata ||                  (metadataLevel == ODataMetadataLevel.MinimalMetadata && !_idLinkBuilder.FollowsConventions))"  is complex.
Complex Conditional,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,BuildEditLink,The conditional expression  "_editLinkBuilder != null &&                  (metadataLevel == ODataMetadataLevel.FullMetadata ||                  (metadataLevel == ODataMetadataLevel.MinimalMetadata && !_editLinkBuilder.FollowsConventions))"  is complex.
Complex Conditional,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,BuildReadLink,The conditional expression  "_readLinkBuilder != null &&                  (metadataLevel == ODataMetadataLevel.FullMetadata ||                  (metadataLevel == ODataMetadataLevel.MinimalMetadata && !_readLinkBuilder.FollowsConventions))"  is complex.
Complex Conditional,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,BuildNavigationLink,The conditional expression  "_navigationPropertyLinkBuilderLookup.TryGetValue(navigationProperty' out navigationLinkBuilder) &&                  (metadataLevel == ODataMetadataLevel.FullMetadata ||                  (metadataLevel == ODataMetadataLevel.MinimalMetadata && !navigationLinkBuilder.FollowsConventions))"  is complex.
Complex Conditional,System.Web.OData.Builder,EntityTypeConfiguration,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\EntityTypeConfiguration.cs,AddNavigationProperty,The conditional expression  "navigationProperty.PropertyType == typeof(IEnumerable<DateTime>) ||                  navigationProperty.PropertyType == typeof(IEnumerable<DateTime?>) ||                  navigationProperty.PropertyType == typeof(DateTime) ||                  navigationProperty.PropertyType == typeof(DateTime?)"  is complex.
Complex Conditional,System.Web.OData.Builder.Conventions,FunctionLinkGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\FunctionLinkGenerationConvention.cs,Apply,The conditional expression  "function != null && function.IsBindable && function.BindingParameter.TypeConfiguration.Kind == EdmTypeKind.Entity && function.GetFunctionLink() == null"  is complex.
Complex Conditional,System.Web.OData.Builder.Conventions,ActionLinkGenerationConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\Conventions\ActionLinkGenerationConvention.cs,Apply,The conditional expression  "action != null && action.IsBindable && action.BindingParameter.TypeConfiguration.Kind == EdmTypeKind.Entity && action.GetActionLink() == null"  is complex.
Complex Conditional,System.Web.OData,ODataNullValueMessageHandler,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\ODataNullValueMessageHandler.cs,SendAsync,The conditional expression  "request.Method == HttpMethod.Get && content != null && content.Value == null &&                  response.StatusCode == HttpStatusCode.OK"  is complex.
Complex Conditional,System.Web.OData,EnableQueryAttribute,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\EnableQueryAttribute.cs,ValidateSelectExpandOnly,The conditional expression  "queryOptions.Filter != null || queryOptions.Count != null || queryOptions.OrderBy != null                  || queryOptions.Skip != null || queryOptions.Top != null"  is complex.
Complex Conditional,System.Web.OData,TypeHelper,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\TypeHelper.cs,GetImplementedIEnumerableType,The conditional expression  "type.IsGenericType && type.IsInterface &&                  (type.GetGenericTypeDefinition() == typeof(IEnumerable<>) ||                   type.GetGenericTypeDefinition() == typeof(IQueryable<>))"  is complex.
Complex Conditional,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindCastSingleValue,The conditional expression  "(!targetEdmTypeReference.IsPrimitive() && !targetEdmTypeReference.IsEnum()) ||                          (EdmLibHelpers.GetEdmPrimitiveTypeOrNull(source.Type) == null && !TypeHelper.IsEnum(source.Type))"  is complex.
Complex Conditional,System.Web.OData.Query,QueryFilterProvider,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\QueryFilterProvider.cs,GetFilters,The conditional expression  "actionDescriptor != null &&                  (IsIQueryable(actionDescriptor.ReturnType) || typeof(SingleResult).IsAssignableFrom(actionDescriptor.ReturnType)) &&                  !actionDescriptor.GetParameters().Any(parameter => typeof(ODataQueryOptions).IsAssignableFrom(parameter.ParameterType))"  is complex.
Complex Conditional,System.Web.OData.Query,ODataQueryOptions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptions.cs,ApplyTo,The conditional expression  "querySettings.EnsureStableOrdering &&                  (Skip != null || Top != null || querySettings.PageSize.HasValue)"  is complex.
Complex Conditional,System.Web.OData.Query,ODataQueryOptions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptions.cs,ApplyTo,The conditional expression  "resultsLimited && Request.RequestUri != null && Request.RequestUri.IsAbsoluteUri && Request.ODataProperties().NextLink == null"  is complex.
Complex Conditional,System.Web.OData.Query,ODataQueryOptions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptions.cs,ApplyTo,The conditional expression  "Filter != null || OrderBy != null || Top != null || Skip != null || Count != null"  is complex.
Complex Conditional,System.Web.OData.Query.Validators,SelectExpandQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\SelectExpandQueryValidator.cs,ValidateDepth,The conditional expression  "expandItems.Length > 0 &&                      ((currentDepth == maxDepth &&                      expandItems.Any(expandItem =>                          expandItem.LevelsOption == null ||                          expandItem.LevelsOption.IsMaxLevel ||                          expandItem.LevelsOption.Level != 0)) ||                      expandItems.Any(expandItem =>                          expandItem.LevelsOption != null &&                          !expandItem.LevelsOption.IsMaxLevel &&                          (expandItem.LevelsOption.Level > Int32.MaxValue ||                          expandItem.LevelsOption.Level + currentDepth > maxDepth)))"  is complex.
Complex Conditional,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,GetCollectionElementTypeName,The conditional expression  "typeName != null &&                  typeName.StartsWith(CollectionTypeQualifier + "("' StringComparison.Ordinal) &&                  typeName[typeName.Length - 1] == ')' &&                  typeName.Length != collectionTypeQualifierLength + 2"  is complex.
Complex Conditional,System.Web.OData.Formatter.Serialization,ODataEdmTypeSerializer,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\ODataEdmTypeSerializer.cs,AppendDynamicProperties,The conditional expression  "dynamicPropertyInfo == null || structuredObject == null ||                  !structuredObject.TryGetPropertyValue(dynamicPropertyInfo.Name' out value) || value == null"  is complex.
Complex Conditional,System.Web.OData.Formatter.Serialization,DefaultODataSerializerProvider,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\DefaultODataSerializerProvider.cs,GetODataPayloadSerializer,The conditional expression  "((edmType.IsPrimitive() || edmType.IsEnum()) &&                      ODataRawValueMediaTypeMapping.IsRawValueRequest(request)) ||                      ODataCountMediaTypeMapping.IsCountRequest(request)"  is complex.
Complex Conditional,System.Web.OData.Routing,DefaultODataPathHandler,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\DefaultODataPathHandler.cs,Parse,The conditional expression  "ex.ParsedSegments != null &&                      ex.ParsedSegments.Count() > 0 &&                      (ex.ParsedSegments.Last().EdmType is IEdmComplexType ||                       ex.ParsedSegments.Last().EdmType is IEdmEntityType) &&                      ex.CurrentSegment != ODataSegmentKinds.Count"  is complex.
Complex Conditional,System.Web.OData.Routing,DefaultODataPathHandler,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\DefaultODataPathHandler.cs,Parse,The conditional expression  "exceptionThrown ||                          (entityIdSegment != null &&                              (id == null || lastSegmentEdmType.ElementType.Definition != id.EdmType))"  is complex.
Complex Conditional,System.Web.OData.Routing.Conventions,PropertyRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\PropertyRoutingConvention.cs,GetProperty,The conditional expression  "odataPath.PathTemplate == "~/entityset/key/property" ||                      odataPath.PathTemplate == "~/entityset/key/cast/property" ||                      odataPath.PathTemplate == "~/singleton/property" ||                      odataPath.PathTemplate == "~/singleton/cast/property""  is complex.
Complex Conditional,System.Web.OData.Routing.Conventions,PropertyRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\PropertyRoutingConvention.cs,GetProperty,The conditional expression  "odataPath.PathTemplate == "~/entityset/key/property/$value" ||                      odataPath.PathTemplate == "~/entityset/key/cast/property/$value" ||                      odataPath.PathTemplate == "~/singleton/property/$value" ||                      odataPath.PathTemplate == "~/singleton/cast/property/$value" ||                      odataPath.PathTemplate == "~/entityset/key/property/$count" ||                      odataPath.PathTemplate == "~/entityset/key/cast/property/$count" ||                      odataPath.PathTemplate == "~/singleton/property/$count" ||                      odataPath.PathTemplate == "~/singleton/cast/property/$count""  is complex.
Complex Conditional,System.Web.OData.Routing.Conventions,RefRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\RefRoutingConvention.cs,SelectAction,The conditional expression  "odataPath.PathTemplate == "~/entityset/key/navigation/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/$ref""  is complex.
Complex Conditional,System.Web.OData.Routing.Conventions,RefRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\RefRoutingConvention.cs,SelectAction,The conditional expression  "(requestMethod == HttpMethod.Delete) && (                  odataPath.PathTemplate == "~/entityset/key/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/key/$ref")"  is complex.
Complex Conditional,System.Web.OData.Routing.Conventions,NavigationRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\NavigationRoutingConvention.cs,SelectAction,The conditional expression  "odataPath.PathTemplate == "~/entityset/key/navigation" ||                  odataPath.PathTemplate == "~/entityset/key/navigation/$count" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/$count" ||                  odataPath.PathTemplate == "~/singleton/navigation" ||                  odataPath.PathTemplate == "~/singleton/navigation/$count" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/$count""  is complex.
Virtual Method Call from Constructor,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,NavigationSourceLinkBuilderAnnotation,The constructor "NavigationSourceLinkBuilderAnnotation" calls a virtual method "GetIdLink".
Virtual Method Call from Constructor,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,NavigationSourceLinkBuilderAnnotation,The constructor "NavigationSourceLinkBuilderAnnotation" calls a virtual method "GetEditLink".
Virtual Method Call from Constructor,System.Web.OData.Builder,NavigationSourceLinkBuilderAnnotation,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\NavigationSourceLinkBuilderAnnotation.cs,NavigationSourceLinkBuilderAnnotation,The constructor "NavigationSourceLinkBuilderAnnotation" calls a virtual method "GetReadLink".
Virtual Method Call from Constructor,System.Web.OData.Routing,ODataPath,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPath.cs,ODataPath,The constructor "ODataPath" calls a virtual method "GetEdmType".
Virtual Method Call from Constructor,System.Web.OData.Routing,ODataPath,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPath.cs,ODataPath,The constructor "ODataPath" calls a virtual method "GetNavigationSource".
Empty Catch Block,System.Web.OData.Extensions,HttpRequestMessageProperties,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\Extensions\HttpRequestMessageProperties.cs,GetODataVersionFromHeader,The method has an empty catch block.
Magic Number,System.Web.OData.Batch,ODataBatchReaderExtensions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Batch\ODataBatchReaderExtensions.cs,ReadOperationInternalAsync,The following statement contains a magic number: if (bufferContentStream)              {                  using (Stream stream = batchRequest.GetStream())                  {                      MemoryStream bufferedStream = new MemoryStream();                      // Passing in the default buffer size of 81920 so that we can also pass in a cancellation token                      await stream.CopyToAsync(bufferedStream' bufferSize: 81920' cancellationToken: cancellationToken);                      bufferedStream.Position = 0;                      request.Content = new StreamContent(bufferedStream);                  }              }              else              {                  request.Content = new LazyStreamContent(() => batchRequest.GetStream());              }
Magic Number,System.Web.OData.Builder,ContainmentPathBuilder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Builder\ContainmentPathBuilder.cs,TryComputeCanonicalContainingPath,The following statement contains a magic number: Contract.Assert(path.Count >= 2);
Magic Number,System.Web.OData.Formatter,ODataRawValueMediaTypeMapping,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataRawValueMediaTypeMapping.cs,GetProperty,The following statement contains a magic number: if (odataPath == null || odataPath.Segments.Count < 2)              {                  return null;              }
Magic Number,System.Web.OData.Formatter,ODataRawValueMediaTypeMapping,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataRawValueMediaTypeMapping.cs,GetProperty,The following statement contains a magic number: return odataPath.Segments[odataPath.Segments.Count - 2] as PropertyAccessPathSegment;
Magic Number,System.Web.OData.Formatter,ODataModelBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataModelBinderProvider.cs,ConvertTo,The following statement contains a magic number: if (TypeHelper.IsEnum(type))                  {                      string[] values = valueString.Split(new[] { '\'' }' StringSplitOptions.None);                      if (values.Length == 3 && String.IsNullOrEmpty(values[2]))                      {                          // Remove the type name if the enum value is a fully qualified literal.                          valueString = values[1];                      }                        Type enumType = TypeHelper.GetUnderlyingTypeOrSelf(type);                      object[] parameters = new[] { valueString' Enum.ToObject(type' 0) };                      bool isSuccessful = (bool)enumTryParseMethod.MakeGenericMethod(enumType).Invoke(null' parameters);                        if (!isSuccessful)                      {                          throw Error.InvalidOperation(SRResources.ModelBinderUtil_ValueCannotBeEnum' valueString' type.Name);                      }                        return parameters[1];                  }
Magic Number,System.Web.OData.Formatter,ODataModelBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataModelBinderProvider.cs,ConvertTo,The following statement contains a magic number: if (TypeHelper.IsEnum(type))                  {                      string[] values = valueString.Split(new[] { '\'' }' StringSplitOptions.None);                      if (values.Length == 3 && String.IsNullOrEmpty(values[2]))                      {                          // Remove the type name if the enum value is a fully qualified literal.                          valueString = values[1];                      }                        Type enumType = TypeHelper.GetUnderlyingTypeOrSelf(type);                      object[] parameters = new[] { valueString' Enum.ToObject(type' 0) };                      bool isSuccessful = (bool)enumTryParseMethod.MakeGenericMethod(enumType).Invoke(null' parameters);                        if (!isSuccessful)                      {                          throw Error.InvalidOperation(SRResources.ModelBinderUtil_ValueCannotBeEnum' valueString' type.Name);                      }                        return parameters[1];                  }
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindSingleEntityCastFunctionCall,The following statement contains a magic number: Contract.Assert(arguments.Length == 2);
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindCastSingleValue,The following statement contains a magic number: Contract.Assert(arguments.Length == 1 || arguments.Length == 2);
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindConcat,The following statement contains a magic number: Contract.Assert(arguments.Length == 2 && arguments[0].Type == typeof(string) && arguments[1].Type == typeof(string));
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindIndexOf,The following statement contains a magic number: Contract.Assert(arguments.Length == 2 && arguments[0].Type == typeof(string) && arguments[1].Type == typeof(string));
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindSubstring,The following statement contains a magic number: if (arguments.Length == 2)              {                  Contract.Assert(IsInteger(arguments[1].Type));                    // When null propagation is allowed' we use a safe version of String.Substring(int).                  // But for providers that would not recognize custom expressions like this' we map                   // directly to String.Substring(int)                  if (_querySettings.HandleNullPropagation == HandleNullPropagationOption.True)                  {                      // Safe function is static and takes string "this" as first argument                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartNoThrow' arguments);                  }                  else                  {                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStart' arguments);                  }              }              else              {                  // arguments.Length == 3 implies String.Substring(int' int)                  Contract.Assert(arguments.Length == 3 && IsInteger(arguments[1].Type) && IsInteger(arguments[2].Type));                    // When null propagation is allowed' we use a safe version of String.Substring(int' int).                  // But for providers that would not recognize custom expressions like this' we map                   // directly to String.Substring(int' int)                  if (_querySettings.HandleNullPropagation == HandleNullPropagationOption.True)                  {                      // Safe function is static and takes string "this" as first argument                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartAndLengthNoThrow' arguments);                  }                  else                  {                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartAndLength' arguments);                  }              }
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindSubstring,The following statement contains a magic number: if (arguments.Length == 2)              {                  Contract.Assert(IsInteger(arguments[1].Type));                    // When null propagation is allowed' we use a safe version of String.Substring(int).                  // But for providers that would not recognize custom expressions like this' we map                   // directly to String.Substring(int)                  if (_querySettings.HandleNullPropagation == HandleNullPropagationOption.True)                  {                      // Safe function is static and takes string "this" as first argument                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartNoThrow' arguments);                  }                  else                  {                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStart' arguments);                  }              }              else              {                  // arguments.Length == 3 implies String.Substring(int' int)                  Contract.Assert(arguments.Length == 3 && IsInteger(arguments[1].Type) && IsInteger(arguments[2].Type));                    // When null propagation is allowed' we use a safe version of String.Substring(int' int).                  // But for providers that would not recognize custom expressions like this' we map                   // directly to String.Substring(int' int)                  if (_querySettings.HandleNullPropagation == HandleNullPropagationOption.True)                  {                      // Safe function is static and takes string "this" as first argument                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartAndLengthNoThrow' arguments);                  }                  else                  {                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartAndLength' arguments);                  }              }
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindSubstring,The following statement contains a magic number: if (arguments.Length == 2)              {                  Contract.Assert(IsInteger(arguments[1].Type));                    // When null propagation is allowed' we use a safe version of String.Substring(int).                  // But for providers that would not recognize custom expressions like this' we map                   // directly to String.Substring(int)                  if (_querySettings.HandleNullPropagation == HandleNullPropagationOption.True)                  {                      // Safe function is static and takes string "this" as first argument                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartNoThrow' arguments);                  }                  else                  {                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStart' arguments);                  }              }              else              {                  // arguments.Length == 3 implies String.Substring(int' int)                  Contract.Assert(arguments.Length == 3 && IsInteger(arguments[1].Type) && IsInteger(arguments[2].Type));                    // When null propagation is allowed' we use a safe version of String.Substring(int' int).                  // But for providers that would not recognize custom expressions like this' we map                   // directly to String.Substring(int' int)                  if (_querySettings.HandleNullPropagation == HandleNullPropagationOption.True)                  {                      // Safe function is static and takes string "this" as first argument                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartAndLengthNoThrow' arguments);                  }                  else                  {                      functionCall = MakeFunctionCall(ClrCanonicalFunctions.SubstringStartAndLength' arguments);                  }              }
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindContains,The following statement contains a magic number: Contract.Assert(arguments.Length == 2 && arguments[0].Type == typeof(string) && arguments[1].Type == typeof(string));
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindStartsWith,The following statement contains a magic number: Contract.Assert(arguments.Length == 2 && arguments[0].Type == typeof(string) && arguments[1].Type == typeof(string));
Magic Number,System.Web.OData.Query.Expressions,FilterBinder,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Expressions\FilterBinder.cs,BindEndsWith,The following statement contains a magic number: Contract.Assert(arguments.Length == 2 && arguments[0].Type == typeof(string) && arguments[1].Type == typeof(string));
Magic Number,System.Web.OData.Query,ODataQueryOptions,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\ODataQueryOptions.cs,LimitResults,The following statement contains a magic number: resultsLimited = (bool)args[2];
Magic Number,System.Web.OData.Query.Validators,CountQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\CountQueryValidator.cs,Validate,The following statement contains a magic number: if (path != null && path.Segments.Count > 0)              {                  ODataPathSegment lastSegment = path.Segments.Last();                    if (lastSegment is CountPathSegment && path.Segments.Count > 1)                  {                      ValidateCount(path.Segments[path.Segments.Count - 2]' countQueryOption.Context.Model);                  }                  else                  {                      ValidateCount(lastSegment' countQueryOption.Context.Model);                  }              }
Magic Number,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,GetCollectionElementTypeName,The following statement contains a magic number: if (typeName != null &&                  typeName.StartsWith(CollectionTypeQualifier + "("' StringComparison.Ordinal) &&                  typeName[typeName.Length - 1] == ')' &&                  typeName.Length != collectionTypeQualifierLength + 2)              {                  if (isNested)                  {                      throw new ODataException(Error.Format(SRResources.NestedCollectionsNotSupported' typeName));                  }                    string innerTypeName = typeName.Substring(collectionTypeQualifierLength + 1'                      typeName.Length - (collectionTypeQualifierLength + 2));                    // Check if it is not a nested collection and throw if it is                  GetCollectionElementTypeName(innerTypeName' true);                    return innerTypeName;              }
Magic Number,System.Web.OData.Formatter.Deserialization,DeserializationHelpers,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Deserialization\DeserializationHelpers.cs,GetCollectionElementTypeName,The following statement contains a magic number: if (typeName != null &&                  typeName.StartsWith(CollectionTypeQualifier + "("' StringComparison.Ordinal) &&                  typeName[typeName.Length - 1] == ')' &&                  typeName.Length != collectionTypeQualifierLength + 2)              {                  if (isNested)                  {                      throw new ODataException(Error.Format(SRResources.NestedCollectionsNotSupported' typeName));                  }                    string innerTypeName = typeName.Substring(collectionTypeQualifierLength + 1'                      typeName.Length - (collectionTypeQualifierLength + 2));                    // Check if it is not a nested collection and throw if it is                  GetCollectionElementTypeName(innerTypeName' true);                    return innerTypeName;              }
Magic Number,System.Web.OData.Formatter.Serialization,SelectExpandNode,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\SelectExpandNode.cs,ValidatePathIsSupported,The following statement contains a magic number: if (segmentCount > 2)              {                  throw new ODataException(SRResources.UnsupportedSelectExpandPath);              }
Magic Number,System.Web.OData.Formatter.Serialization,SelectExpandNode,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\Serialization\SelectExpandNode.cs,ValidatePathIsSupported,The following statement contains a magic number: if (segmentCount == 2)              {                  if (!(path.FirstSegment is TypeSegment))                  {                      throw new ODataException(SRResources.UnsupportedSelectExpandPath);                  }              }
Magic Number,System.Web.OData.Routing,ODataPathSegmentTranslator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathSegmentTranslator.cs,ReverseRefPathSegmentAndKeyValuePathSegment,The following statement contains a magic number: if (segments.Count >= 2 &&                  segments[segments.Count - 2] is RefPathSegment &&                  segments[segments.Count - 1] is KeyValuePathSegment)              {                  ODataPathSegment segment = segments[segments.Count - 2];                  segments[segments.Count - 2] = segments[segments.Count - 1];                  segments[segments.Count - 1] = segment;              }
Magic Number,System.Web.OData.Routing,ODataPathSegmentTranslator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathSegmentTranslator.cs,ReverseRefPathSegmentAndKeyValuePathSegment,The following statement contains a magic number: if (segments.Count >= 2 &&                  segments[segments.Count - 2] is RefPathSegment &&                  segments[segments.Count - 1] is KeyValuePathSegment)              {                  ODataPathSegment segment = segments[segments.Count - 2];                  segments[segments.Count - 2] = segments[segments.Count - 1];                  segments[segments.Count - 1] = segment;              }
Magic Number,System.Web.OData.Routing,ODataPathSegmentTranslator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathSegmentTranslator.cs,ReverseRefPathSegmentAndKeyValuePathSegment,The following statement contains a magic number: if (segments.Count >= 2 &&                  segments[segments.Count - 2] is RefPathSegment &&                  segments[segments.Count - 1] is KeyValuePathSegment)              {                  ODataPathSegment segment = segments[segments.Count - 2];                  segments[segments.Count - 2] = segments[segments.Count - 1];                  segments[segments.Count - 1] = segment;              }
Magic Number,System.Web.OData.Routing,ODataPathSegmentTranslator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathSegmentTranslator.cs,ReverseRefPathSegmentAndKeyValuePathSegment,The following statement contains a magic number: if (segments.Count >= 2 &&                  segments[segments.Count - 2] is RefPathSegment &&                  segments[segments.Count - 1] is KeyValuePathSegment)              {                  ODataPathSegment segment = segments[segments.Count - 2];                  segments[segments.Count - 2] = segments[segments.Count - 1];                  segments[segments.Count - 1] = segment;              }
Magic Number,System.Web.OData.Routing,ODataPathSegmentTranslator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathSegmentTranslator.cs,ConvertKeysToString,The following statement contains a magic number: if (keys.Count() < 2)              {                  value = String.Join(                      "'"'                      keys.Select(keyValuePair =>                          TranslateKeySegmentValue(keyValuePair.Value' enableUriTemplateParsing)).ToArray());              }              else              {                  value = String.Join(                      "'"'                      keys.Select(keyValuePair =>                          (keyValuePair.Key +                          "=" +                          TranslateKeySegmentValue(keyValuePair.Value' enableUriTemplateParsing))).ToArray());              }
Magic Number,System.Web.OData.Routing,KeyValueParser,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\KeyValueParser.cs,CheckSingleQuote,The following statement contains a magic number: if (value.StartsWith("'"' StringComparison.Ordinal))              {                  // String literal                  if (!_stringLiteralRegex.IsMatch(value))                  {                      throw new ODataException(                          Error.Format(SRResources.LiteralHasABadFormat' value' segment));                  }              }              else              {                  int singleQuoteCount = value.Count(c => c == '\'');                    if (singleQuoteCount != 0 && singleQuoteCount != 2)                  {                      throw new ODataException(                          Error.Format(SRResources.InvalidSingleQuoteCountForNonStringLiteral' value' segment));                  }                    if (singleQuoteCount != 0 && !value.EndsWith("'"' StringComparison.Ordinal))                  {                      throw new ODataException(                          Error.Format(SRResources.LiteralHasABadFormat' value' segment));                  }              }
Magic Number,System.Web.OData.Routing,KeyValuePathSegmentTemplate,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\KeyValuePathSegmentTemplate.cs,TryMatch,The following statement contains a magic number: foreach (KeyValuePair<string' string> parameter in parameterMappings)              {                  string nameInSegment = parameter.Key;                  string nameInRouteData = parameter.Value;                    string value;                  if (!parameterValues.TryGetValue(nameInSegment' out value))                  {                      // parameter not found. not a match.                      return false;                  }                    if (enumNames.Contains(nameInSegment))                  {                      string[] enumParts = value.Split(new[] { '\'' }' StringSplitOptions.None);                        if (enumParts.Length == 3 && String.IsNullOrEmpty(enumParts[2]))                      {                          // Remove the type name if the enum value is a fully qualified literal.                          value = enumParts[1];                      }                  }                    routeData.Add(nameInRouteData' value);              }
Magic Number,System.Web.OData.Routing,KeyValuePathSegmentTemplate,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\KeyValuePathSegmentTemplate.cs,TryMatch,The following statement contains a magic number: foreach (KeyValuePair<string' string> parameter in parameterMappings)              {                  string nameInSegment = parameter.Key;                  string nameInRouteData = parameter.Value;                    string value;                  if (!parameterValues.TryGetValue(nameInSegment' out value))                  {                      // parameter not found. not a match.                      return false;                  }                    if (enumNames.Contains(nameInSegment))                  {                      string[] enumParts = value.Split(new[] { '\'' }' StringSplitOptions.None);                        if (enumParts.Length == 3 && String.IsNullOrEmpty(enumParts[2]))                      {                          // Remove the type name if the enum value is a fully qualified literal.                          value = enumParts[1];                      }                  }                    routeData.Add(nameInRouteData' value);              }
Magic Number,System.Web.OData.Routing,KeyValuePathSegmentTemplate,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\KeyValuePathSegmentTemplate.cs,BuildParameterMappings,The following statement contains a magic number: foreach (KeyValuePair<string' string> parameter in parameters)              {                  string parameterName = parameter.Key;                  string parameterNameInRouteData = parameter.Value;                  parameterNameInRouteData = parameterNameInRouteData.Trim();                    if (String.IsNullOrEmpty(parameterNameInRouteData))                  {                      parameterNameInRouteData = parameterName;                  }                  else if (IsRouteParameter(parameterNameInRouteData))                  {                      parameterNameInRouteData = parameterNameInRouteData.Substring(1' parameterNameInRouteData.Length - 2);                      if (String.IsNullOrEmpty(parameterNameInRouteData))                      {                          throw new ODataException(                              Error.Format(SRResources.EmptyParameterAlias' parameter.Value' segment));                      }                  }                  else                  {                      throw new ODataException(                          Error.Format(SRResources.ParameterAliasMustBeInCurlyBraces' parameter.Value' segment));                  }                    parameterMappings[parameter.Key] = parameterNameInRouteData;              }
Magic Number,System.Web.OData.Routing,ODataPathRouteConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathRouteConstraint.cs,Match,The following statement contains a magic number: if (routeDirection == HttpRouteDirection.UriResolution)              {                  object oDataPathValue;                  if (values.TryGetValue(ODataRouteConstants.ODataPath' out oDataPathValue))                  {                      string oDataPathString = oDataPathValue as string;                      ODataPath path;                        try                      {                          // Service root is the current RequestUri' less the query string and the ODataPath (always the                          // last portion of the absolute path).  ODL expects an escaped service root and other service                          // root calculations are calculated using AbsoluteUri (also escaped).  But routing exclusively                          // uses unescaped strings' determined using                          //    address.GetComponents(UriComponents.Path' UriFormat.Unescaped)                          //                          // For example if the AbsoluteUri is                          // <http://localhost/odata/FunctionCall(p0='Chinese%E8%A5%BF%E9%9B%85%E5%9B%BEChars')>' the                          // oDataPathString will contain "FunctionCall(p0='Chinese西雅图Chars')".                          //                          // Due to this decoding and the possibility of unecessarily-escaped characters' there's no                          // reliable way to determine the original string from which oDataPathString was derived.                          // Therefore a straightforward string comparison won't always work.  See RemoveODataPath() for                          // details of chosen approach.                          string requestLeftPart = request.RequestUri.GetLeftPart(UriPartial.Path);                          string serviceRoot = requestLeftPart;                          if (!String.IsNullOrEmpty(oDataPathString))                          {                              serviceRoot = RemoveODataPath(serviceRoot' oDataPathString);                          }                            // As mentioned above' we also need escaped ODataPath.                          // The requestLeftPart and request.RequestUri.Query are both escaped.                          // The ODataPath for service documents is empty.                          string oDataPathAndQuery = requestLeftPart.Substring(serviceRoot.Length);                          if (!String.IsNullOrEmpty(request.RequestUri.Query))                          {                              // Ensure path handler receives the query string as well as the path.                              oDataPathAndQuery += request.RequestUri.Query;                          }                            // Leave an escaped '/' out of the service route because DefaultODataPathHandler will add a                          // literal '/' to the end of this string if not already present. That would double the slash                          // in response links and potentially lead to later 404s.                          if (serviceRoot.EndsWith(_escapedSlash' StringComparison.OrdinalIgnoreCase))                          {                              serviceRoot = serviceRoot.Substring(0' serviceRoot.Length - 3);                          }                            path = PathHandler.Parse(EdmModel' serviceRoot' oDataPathAndQuery);                      }                      catch (ODataException)                      {                          path = null;                      }                        if (path != null)                      {                          // Set all the properties we need for routing' querying' formatting                          request.ODataProperties().Model = EdmModel;                          request.ODataProperties().PathHandler = PathHandler;                          request.ODataProperties().Path = path;                          request.ODataProperties().RouteName = RouteName;                          request.ODataProperties().RoutingConventions = RoutingConventions;                            if (!values.ContainsKey(ODataRouteConstants.Controller))                          {                              // Select controller name using the routing conventions                              string controllerName = SelectControllerName(path' request);                              if (controllerName != null)                              {                                  values[ODataRouteConstants.Controller] = controllerName;                              }                          }                            return true;                      }                  }                    return false;              }              else              {                  // This constraint only applies to URI resolution                  return true;              }
Magic Number,System.Web.OData.Routing,ODataPathRouteConstraint,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\ODataPathRouteConstraint.cs,RemoveODataPath,The following statement contains a magic number: while (true)              {                  // Escaped '/' is a derivative case but certainly possible.                  int slashIndex = startString.LastIndexOf('/'' endIndex - 1);                  int escapedSlashIndex =                      startString.LastIndexOf(_escapedSlash' endIndex - 1' StringComparison.OrdinalIgnoreCase);                  if (slashIndex > escapedSlashIndex)                  {                      endIndex = slashIndex;                  }                  else if (escapedSlashIndex >= 0)                  {                      // Include the escaped '/' (three characters) in the potential return value.                      endIndex = escapedSlashIndex + 2;                  }                  else                  {                      // Failure' unable to find the expected '/' or escaped '/' separator.                      throw Error.InvalidOperation(SRResources.ODataPathNotFound' uriString' oDataPathString);                  }                    startString = uriString.Substring(0' endIndex + 1);                  endString = uriString.Substring(endIndex + 1);                    // Compare unescaped strings to avoid both arbitrary escaping and use of lowercase 'a' through 'f' in                  // %-escape sequences.                  endString = Uri.UnescapeDataString(endString);                  if (String.Equals(endString' oDataPathString' StringComparison.Ordinal))                  {                      return startString;                  }                    if (endIndex == 0)                  {                      // Failure' could not match oDataPathString after an initial '/' or escaped '/'.                      throw Error.InvalidOperation(SRResources.ODataPathNotFound' uriString' oDataPathString);                  }              }
Magic Number,System.Web.OData.Routing.Conventions,FunctionRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\FunctionRoutingConvention.cs,SelectAction,The following statement contains a magic number: if (controllerContext.Request.Method == HttpMethod.Get)              {                  string actionName = null;                  BoundFunctionPathSegment function = null;                  switch (odataPath.PathTemplate)                  {                      case "~/entityset/key/cast/function":                      case "~/entityset/key/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/key/cast/function/$count":                      case "~/entityset/key/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/cast/function":                      case "~/entityset/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/entityset/cast/function/$count":                      case "~/entityset/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/singleton/function":                      case "~/singleton/cast/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                      case "~/singleton/function/$count":                      case "~/singleton/cast/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                  }                    if (actionName != null)                  {                      controllerContext.AddFunctionParameterToRouteData(function);                      return actionName;                  }              }
Magic Number,System.Web.OData.Routing.Conventions,FunctionRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\FunctionRoutingConvention.cs,SelectAction,The following statement contains a magic number: if (controllerContext.Request.Method == HttpMethod.Get)              {                  string actionName = null;                  BoundFunctionPathSegment function = null;                  switch (odataPath.PathTemplate)                  {                      case "~/entityset/key/cast/function":                      case "~/entityset/key/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/key/cast/function/$count":                      case "~/entityset/key/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/cast/function":                      case "~/entityset/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/entityset/cast/function/$count":                      case "~/entityset/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/singleton/function":                      case "~/singleton/cast/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                      case "~/singleton/function/$count":                      case "~/singleton/cast/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                  }                    if (actionName != null)                  {                      controllerContext.AddFunctionParameterToRouteData(function);                      return actionName;                  }              }
Magic Number,System.Web.OData.Routing.Conventions,FunctionRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\FunctionRoutingConvention.cs,SelectAction,The following statement contains a magic number: if (controllerContext.Request.Method == HttpMethod.Get)              {                  string actionName = null;                  BoundFunctionPathSegment function = null;                  switch (odataPath.PathTemplate)                  {                      case "~/entityset/key/cast/function":                      case "~/entityset/key/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/key/cast/function/$count":                      case "~/entityset/key/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/cast/function":                      case "~/entityset/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/entityset/cast/function/$count":                      case "~/entityset/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/singleton/function":                      case "~/singleton/cast/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                      case "~/singleton/function/$count":                      case "~/singleton/cast/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                  }                    if (actionName != null)                  {                      controllerContext.AddFunctionParameterToRouteData(function);                      return actionName;                  }              }
Magic Number,System.Web.OData.Routing.Conventions,PropertyRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\PropertyRoutingConvention.cs,GetProperty,The following statement contains a magic number: if (method == HttpMethod.Get)              {                  if (odataPath.PathTemplate == "~/entityset/key/property" ||                      odataPath.PathTemplate == "~/entityset/key/cast/property" ||                      odataPath.PathTemplate == "~/singleton/property" ||                      odataPath.PathTemplate == "~/singleton/cast/property")                  {                      segment = odataPath.Segments[odataPath.Segments.Count - 1] as PropertyAccessPathSegment;                  }                  else if (odataPath.PathTemplate == "~/entityset/key/property/$value" ||                      odataPath.PathTemplate == "~/entityset/key/cast/property/$value" ||                      odataPath.PathTemplate == "~/singleton/property/$value" ||                      odataPath.PathTemplate == "~/singleton/cast/property/$value" ||                      odataPath.PathTemplate == "~/entityset/key/property/$count" ||                      odataPath.PathTemplate == "~/entityset/key/cast/property/$count" ||                      odataPath.PathTemplate == "~/singleton/property/$count" ||                      odataPath.PathTemplate == "~/singleton/cast/property/$count")                  {                      segment = odataPath.Segments[odataPath.Segments.Count - 2] as PropertyAccessPathSegment;                  }              }
Magic Number,System.Web.OData.Routing.Conventions,RefRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\RefRoutingConvention.cs,SelectAction,The following statement contains a magic number: if (odataPath.PathTemplate == "~/entityset/key/navigation/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/$ref")              {                  NavigationPathSegment navigationSegment = (NavigationPathSegment)odataPath.Segments[odataPath.Segments.Count - 2];                  IEdmNavigationProperty navigationProperty = navigationSegment.NavigationProperty;                  IEdmEntityType declaringType = navigationProperty.DeclaringEntityType();                    string refActionName = FindRefActionName(actionMap' navigationProperty' declaringType' requestMethod);                  if (refActionName != null)                  {                      if (odataPath.PathTemplate.StartsWith("~/entityset/key"' StringComparison.Ordinal))                      {                          routeData.Values[ODataRouteConstants.Key] = ((KeyValuePathSegment)odataPath.Segments[1]).Value;                      }                        routeData.Values[ODataRouteConstants.NavigationProperty] = navigationSegment.NavigationProperty.Name;                      return refActionName;                  }              }              else if ((requestMethod == HttpMethod.Delete) && (                  odataPath.PathTemplate == "~/entityset/key/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/key/$ref"))              {                  NavigationPathSegment navigationSegment = (NavigationPathSegment)odataPath.Segments[odataPath.Segments.Count - 3];                  IEdmNavigationProperty navigationProperty = navigationSegment.NavigationProperty;                  IEdmEntityType declaringType = navigationProperty.DeclaringEntityType();                    string refActionName = FindRefActionName(actionMap' navigationProperty' declaringType' requestMethod);                  if (refActionName != null)                  {                      if (odataPath.PathTemplate.StartsWith("~/entityset/key"' StringComparison.Ordinal))                      {                          routeData.Values[ODataRouteConstants.Key] = ((KeyValuePathSegment)odataPath.Segments[1]).Value;                      }                        routeData.Values[ODataRouteConstants.NavigationProperty] = navigationSegment.NavigationProperty.Name;                      routeData.Values[ODataRouteConstants.RelatedKey] = ((KeyValuePathSegment)odataPath.Segments[odataPath.Segments.Count - 2]).Value;                      return refActionName;                  }              }
Magic Number,System.Web.OData.Routing.Conventions,RefRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\RefRoutingConvention.cs,SelectAction,The following statement contains a magic number: if (odataPath.PathTemplate == "~/entityset/key/navigation/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/$ref")              {                  NavigationPathSegment navigationSegment = (NavigationPathSegment)odataPath.Segments[odataPath.Segments.Count - 2];                  IEdmNavigationProperty navigationProperty = navigationSegment.NavigationProperty;                  IEdmEntityType declaringType = navigationProperty.DeclaringEntityType();                    string refActionName = FindRefActionName(actionMap' navigationProperty' declaringType' requestMethod);                  if (refActionName != null)                  {                      if (odataPath.PathTemplate.StartsWith("~/entityset/key"' StringComparison.Ordinal))                      {                          routeData.Values[ODataRouteConstants.Key] = ((KeyValuePathSegment)odataPath.Segments[1]).Value;                      }                        routeData.Values[ODataRouteConstants.NavigationProperty] = navigationSegment.NavigationProperty.Name;                      return refActionName;                  }              }              else if ((requestMethod == HttpMethod.Delete) && (                  odataPath.PathTemplate == "~/entityset/key/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/key/$ref"))              {                  NavigationPathSegment navigationSegment = (NavigationPathSegment)odataPath.Segments[odataPath.Segments.Count - 3];                  IEdmNavigationProperty navigationProperty = navigationSegment.NavigationProperty;                  IEdmEntityType declaringType = navigationProperty.DeclaringEntityType();                    string refActionName = FindRefActionName(actionMap' navigationProperty' declaringType' requestMethod);                  if (refActionName != null)                  {                      if (odataPath.PathTemplate.StartsWith("~/entityset/key"' StringComparison.Ordinal))                      {                          routeData.Values[ODataRouteConstants.Key] = ((KeyValuePathSegment)odataPath.Segments[1]).Value;                      }                        routeData.Values[ODataRouteConstants.NavigationProperty] = navigationSegment.NavigationProperty.Name;                      routeData.Values[ODataRouteConstants.RelatedKey] = ((KeyValuePathSegment)odataPath.Segments[odataPath.Segments.Count - 2]).Value;                      return refActionName;                  }              }
Magic Number,System.Web.OData.Routing.Conventions,RefRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\RefRoutingConvention.cs,SelectAction,The following statement contains a magic number: if (odataPath.PathTemplate == "~/entityset/key/navigation/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/$ref")              {                  NavigationPathSegment navigationSegment = (NavigationPathSegment)odataPath.Segments[odataPath.Segments.Count - 2];                  IEdmNavigationProperty navigationProperty = navigationSegment.NavigationProperty;                  IEdmEntityType declaringType = navigationProperty.DeclaringEntityType();                    string refActionName = FindRefActionName(actionMap' navigationProperty' declaringType' requestMethod);                  if (refActionName != null)                  {                      if (odataPath.PathTemplate.StartsWith("~/entityset/key"' StringComparison.Ordinal))                      {                          routeData.Values[ODataRouteConstants.Key] = ((KeyValuePathSegment)odataPath.Segments[1]).Value;                      }                        routeData.Values[ODataRouteConstants.NavigationProperty] = navigationSegment.NavigationProperty.Name;                      return refActionName;                  }              }              else if ((requestMethod == HttpMethod.Delete) && (                  odataPath.PathTemplate == "~/entityset/key/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/navigation/key/$ref" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/key/$ref"))              {                  NavigationPathSegment navigationSegment = (NavigationPathSegment)odataPath.Segments[odataPath.Segments.Count - 3];                  IEdmNavigationProperty navigationProperty = navigationSegment.NavigationProperty;                  IEdmEntityType declaringType = navigationProperty.DeclaringEntityType();                    string refActionName = FindRefActionName(actionMap' navigationProperty' declaringType' requestMethod);                  if (refActionName != null)                  {                      if (odataPath.PathTemplate.StartsWith("~/entityset/key"' StringComparison.Ordinal))                      {                          routeData.Values[ODataRouteConstants.Key] = ((KeyValuePathSegment)odataPath.Segments[1]).Value;                      }                        routeData.Values[ODataRouteConstants.NavigationProperty] = navigationSegment.NavigationProperty.Name;                      routeData.Values[ODataRouteConstants.RelatedKey] = ((KeyValuePathSegment)odataPath.Segments[odataPath.Segments.Count - 2]).Value;                      return refActionName;                  }              }
Magic Number,System.Web.OData.Routing.Conventions,NavigationRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\NavigationRoutingConvention.cs,SelectAction,The following statement contains a magic number: if (odataPath.PathTemplate == "~/entityset/key/navigation" ||                  odataPath.PathTemplate == "~/entityset/key/navigation/$count" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation" ||                  odataPath.PathTemplate == "~/entityset/key/cast/navigation/$count" ||                  odataPath.PathTemplate == "~/singleton/navigation" ||                  odataPath.PathTemplate == "~/singleton/navigation/$count" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation" ||                  odataPath.PathTemplate == "~/singleton/cast/navigation/$count")              {                  NavigationPathSegment navigationSegment =                      (odataPath.Segments.Last() as NavigationPathSegment) ??                      odataPath.Segments[odataPath.Segments.Count - 2] as NavigationPathSegment;                  IEdmNavigationProperty navigationProperty = navigationSegment.NavigationProperty;                  IEdmEntityType declaringType = navigationProperty.DeclaringType as IEdmEntityType;                    // It is not valid to *Post* to any non-collection valued navigation property.                  if (navigationProperty.TargetMultiplicity() != EdmMultiplicity.Many &&                      method == HttpMethod.Post)                  {                      return null;                  }                    // It is not valid to *Put/Patch" to any collection-valued navigation property.                  if (navigationProperty.TargetMultiplicity() == EdmMultiplicity.Many &&                      (method == HttpMethod.Put || "PATCH" == method.Method.ToUpperInvariant()))                  {                      return null;                  }                    // *Get* is the only supported method for $count request.                  if (odataPath.Segments.Last() is CountPathSegment && method != HttpMethod.Get)                  {                      return null;                  }                    if (declaringType != null)                  {                      // e.g. Try GetNavigationPropertyFromDeclaringType first' then fallback on GetNavigationProperty action name                      string actionName = actionMap.FindMatchingAction(                          actionNamePrefix + navigationProperty.Name + "From" + declaringType.Name'                          actionNamePrefix + navigationProperty.Name);                        if (actionName != null)                      {                          if (odataPath.PathTemplate.StartsWith("~/entityset/key"' StringComparison.Ordinal))                          {                              KeyValuePathSegment keyValueSegment = odataPath.Segments[1] as KeyValuePathSegment;                              controllerContext.RouteData.Values[ODataRouteConstants.Key] = keyValueSegment.Value;                          }                            return actionName;                      }                  }              }
Missing Default,System.Web.OData,EdmStructuredObject,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\EdmStructuredObject.cs,GetClrTypeForUntypedDelta,The following switch statement is missing a default case: switch (edmType.TypeKind())              {                  case EdmTypeKind.Primitive:                      return EdmLibHelpers.GetClrType(edmType.AsPrimitive()' EdmCoreModel.Instance);                    case EdmTypeKind.Complex:                      return typeof(EdmComplexObject);                    case EdmTypeKind.Entity:                      return typeof(EdmEntityObject);                    case EdmTypeKind.Collection:                      IEdmTypeReference elementType = edmType.AsCollection().ElementType();                      if (elementType.IsPrimitive())                      {                          Type elementClrType = GetClrTypeForUntypedDelta(elementType);                          return typeof(List<>).MakeGenericType(elementClrType);                      }                      else if (elementType.IsComplex())                      {                          return typeof(EdmComplexObjectCollection);                      }                      else if (elementType.IsEntity())                      {                          return typeof(EdmEntityObjectCollection);                      }                      break;              }
Missing Default,System.Web.OData.Formatter,ODataMediaTypeFormatter,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Formatter\ODataMediaTypeFormatter.cs,IsOperationPath,The following switch statement is missing a default case: switch (segment.SegmentKind)                  {                      case ODataSegmentKinds._Action:                      case ODataSegmentKinds._Function:                      case ODataSegmentKinds._UnboundAction:                      case ODataSegmentKinds._UnboundFunction:                          return true;                  }
Missing Default,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,ValidateUnaryOperatorNode,The following switch statement is missing a default case: switch (unaryOperatorNode.OperatorKind)              {                  case UnaryOperatorKind.Negate:                  case UnaryOperatorKind.Not:                      if ((settings.AllowedLogicalOperators & AllowedLogicalOperators.Not) != AllowedLogicalOperators.Not)                      {                          throw new ODataException(Error.Format(SRResources.NotAllowedLogicalOperator' unaryOperatorNode.OperatorKind' "AllowedLogicalOperators"));                      }                      break;              }
Missing Default,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,ValidateCollectionNode,The following switch statement is missing a default case: switch (node.Kind)              {                  case QueryNodeKind.CollectionPropertyAccess:                      CollectionPropertyAccessNode propertyAccessNode = node as CollectionPropertyAccessNode;                      ValidateCollectionPropertyAccessNode(propertyAccessNode' settings);                      break;                    case QueryNodeKind.CollectionNavigationNode:                      CollectionNavigationNode navigationNode = node as CollectionNavigationNode;                      ValidateNavigationPropertyNode(navigationNode.Source' navigationNode.NavigationProperty' settings);                      break;                    case QueryNodeKind.EntityCollectionCast:                      ValidateEntityCollectionCastNode(node as EntityCollectionCastNode' settings);                      break;              }
Missing Default,System.Web.OData.Query.Validators,FilterQueryValidator,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Query\Validators\FilterQueryValidator.cs,ValidateSingleValueNode,The following switch statement is missing a default case: switch (node.Kind)              {                  case QueryNodeKind.BinaryOperator:                      ValidateBinaryOperatorNode(node as BinaryOperatorNode' settings);                      break;                    case QueryNodeKind.Constant:                      ValidateConstantNode(node as ConstantNode' settings);                      break;                    case QueryNodeKind.Convert:                      ValidateConvertNode(node as ConvertNode' settings);                      break;                    case QueryNodeKind.EntityRangeVariableReference:                      ValidateRangeVariable((node as EntityRangeVariableReferenceNode).RangeVariable' settings);                      break;                    case QueryNodeKind.NonentityRangeVariableReference:                      ValidateRangeVariable((node as NonentityRangeVariableReferenceNode).RangeVariable' settings);                      break;                    case QueryNodeKind.SingleValuePropertyAccess:                      ValidateSingleValuePropertyAccessNode(node as SingleValuePropertyAccessNode' settings);                      break;                    case QueryNodeKind.UnaryOperator:                      ValidateUnaryOperatorNode(node as UnaryOperatorNode' settings);                      break;                    case QueryNodeKind.SingleValueFunctionCall:                      ValidateSingleValueFunctionCallNode(node as SingleValueFunctionCallNode' settings);                      break;                    case QueryNodeKind.SingleNavigationNode:                      SingleNavigationNode navigationNode = node as SingleNavigationNode;                      ValidateNavigationPropertyNode(navigationNode.Source' navigationNode.NavigationProperty' settings);                      break;                    case QueryNodeKind.SingleEntityCast:                      ValidateSingleEntityCastNode(node as SingleEntityCastNode' settings);                      break;                    case QueryNodeKind.Any:                      ValidateAnyNode(node as AnyNode' settings);                      break;                    case QueryNodeKind.All:                      ValidateAllNode(node as AllNode' settings);                      break;              }
Missing Default,System.Web.OData.Routing.Conventions,FunctionRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\FunctionRoutingConvention.cs,SelectAction,The following switch statement is missing a default case: switch (odataPath.PathTemplate)                  {                      case "~/entityset/key/cast/function":                      case "~/entityset/key/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/key/cast/function/$count":                      case "~/entityset/key/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          break;                      case "~/entityset/cast/function":                      case "~/entityset/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/entityset/cast/function/$count":                      case "~/entityset/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: true);                          break;                      case "~/singleton/function":                      case "~/singleton/cast/function":                          function = odataPath.Segments.Last() as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                      case "~/singleton/function/$count":                      case "~/singleton/cast/function/$count":                          function = odataPath.Segments[odataPath.Segments.Count - 2] as BoundFunctionPathSegment;                          actionName = GetFunction(function).SelectAction(actionMap' isCollection: false);                          break;                  }
Missing Default,System.Web.OData.Routing.Conventions,ActionRoutingConvention,C:\repos\ASP-NET-MVC_aspnetwebstack\OData\src\System.Web.OData\OData\Routing\Conventions\ActionRoutingConvention.cs,SelectAction,The following switch statement is missing a default case: switch (odataPath.PathTemplate)                  {                      case "~/entityset/key/cast/action":                      case "~/entityset/key/action":                          string actionName = GetAction(odataPath).SelectAction(actionMap' isCollection: false);                          if (actionName != null)                          {                              controllerContext.AddKeyValueToRouteData(odataPath);                          }                          return actionName;                      case "~/entityset/cast/action":                      case "~/entityset/action":                          return GetAction(odataPath).SelectAction(actionMap' isCollection: true);                      case "~/singleton/action":                      case "~/singleton/cast/action":                          return GetAction(odataPath).SelectAction(actionMap' isCollection: false);                  }
