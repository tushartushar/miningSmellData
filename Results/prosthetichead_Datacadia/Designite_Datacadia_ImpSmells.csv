Implementation smell,Namespace,Class,File,Method,Description
Long Method,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,upsertGamesDataset,The method has 144 lines of code.
Complex Method,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,btnGameOnGameDB_Click,Cyclomatic complexity of the method is 14
Complex Method,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,upsertGamesDataset,Cyclomatic complexity of the method is 45
Complex Method,Datacadia,Game_ImageAssets,C:\repos\prosthetichead_Datacadia\Game_ImageAssets.cs,btnReplaceWithSelected_Click,Cyclomatic complexity of the method is 12
Long Statement,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,btnClearPlatform_Click,The length of the statement  "	DialogResult result = MessageBox.Show ("Are you sure you wish to delete all " + listboxPlatforms.Text + " game data from the database?"' "Confirmation"' MessageBoxButtons.YesNo); " is 178.
Long Statement,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,btnPlatformsSave_Click,The length of the statement  "	var command = new SQLiteCommand ("update platforms set emu_path = @emu_path' icon_id = @icon_id' load_string = @load_string' roms_path = @roms_path' videos_path = @videos_path' images_path = @images_path' extension = @extension' active = @active where id = @platform_id"); " is 272.
Long Statement,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,btnCheckAvalableRoms_Click,The length of the statement  "		var command = new SQLiteCommand ("update games set active = 1 where platform_id = @platform_id and file_name = @file_name"); " is 124.
Long Statement,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,btnGameOnGameDB_Click,The length of the statement  "			// var command = new SQLiteCommand("update games set gamedb_id = @gamedb_id where platform_id = @platform_id and file_name = @file_name"); " is 138.
Long Statement,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,btnGameOnGameDB_Click,The length of the statement  "		infoBox.AppendText (game_fileName + " checked on http://thegamesdb.net/ ID number " + gamedb_id + "\n"' Color.WhiteSmoke); " is 122.
Long Statement,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,upsertGamesDataset,The length of the statement  "	DataRow[] gameRow = dsGames.Tables [0].Select (String.Format (@"file_name = '{0}'"' updateData.file_name.Replace ("'"' "''"))); " is 127.
Long Statement,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,getGameDB_ID,The length of the statement  "		System.Windows.Forms.MessageBox.Show (e.Message + "\n\nplatform ID = " + platform_id + "\nGame File Name = " + file_name); " is 122.
Long Statement,Datacadia,GameDB_Search,C:\repos\prosthetichead_Datacadia\GameDB_Search.cs,searchGamesDB,The length of the statement  "	string url = string.Format ("http://thegamesdb.net/api/GetGamesList.php?name={0}&platform={1}"' searchString' platform_id); " is 123.
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (dataGridGames.Columns [e.ColumnIndex].Name.Equals ("active")) {  	bool active = Convert.ToBoolean (e.Value);  	if (!active) {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  	}  	else {  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  		dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  	}  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: if (!active) {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  }  else {  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  	dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  }  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (204' 102' 102);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (204' 51' 51);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.BackColor = Color.FromArgb (118' 196' 108);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  
Magic Number,Datacadia,datacadia,C:\repos\prosthetichead_Datacadia\datacadia.cs,dataGridGames_CellFormatting,The following statement contains a magic number: dataGridGames.Rows [e.RowIndex].DefaultCellStyle.SelectionBackColor = Color.FromArgb (88' 186' 83);  
Magic Number,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,upsertGamesDataset,The following statement contains a magic number: if (gameRow.Count () > 0)// this row already exists in the dataset' update it to our new values   {  	if (updateData.gamedb_id != -1)  		gameRow [0] ["gamedb_id"] = updateData.gamedb_id;  	if (updateData.genre_id >= 0)  		gameRow [0] ["genre_id"] = updateData.genre_id;  	if (updateData.crc != "NULL")  		gameRow [0] ["crc"] = updateData.genre_id;  	if (updateData.game_load_string != "NULL")  		gameRow [0] ["game_load_string"] = updateData.game_load_string;  	if (updateData.name != "NULL")  		gameRow [0] ["name"] = updateData.name;  	if (updateData.description != "NULL")  		gameRow [0] ["description"] = updateData.description;  	if (updateData.region_id != "NULL")  		gameRow [0] ["region_id"] = updateData.region_id;  	if (updateData.release_year >= 0)  		gameRow [0] ["release_year"] = updateData.release_year;  	if (updateData.rating != "NULL")  		gameRow [0] ["rating"] = updateData.rating;  	if (updateData.players != "NULL") {  		if (updateData.players == "4+")  			gameRow [0] ["players"] = 4;  		else  			gameRow [0] ["players"] = updateData.players;  	}  	if (updateData.co_op == 0 || updateData.co_op == 1)  		gameRow [0] ["co_op"] = updateData.co_op;  	if (updateData.publisher != "NULL")  		gameRow [0] ["publisher"] = updateData.publisher;  	if (updateData.publisher_id >= 0)  		gameRow [0] ["publisher_id"] = updateData.publisher_id;  	if (updateData.developer != "NULL")  		gameRow [0] ["developer"] = updateData.developer;  	if (updateData.developer_id >= 0)  		gameRow [0] ["developer_id"] = updateData.developer_id;  	if (updateData.users_stars >= 0)  		gameRow [0] ["users_stars"] = updateData.users_stars;  	if (updateData.gamedb_stars >= 0)  		gameRow [0] ["gamedb_stars"] = updateData.gamedb_stars;  	if (updateData.control_type != "NULL")  		gameRow [0] ["control_type"] = updateData.control_type;  	if (updateData.active == 0 || updateData.active == 1)  		gameRow [0] ["active"] = updateData.active;  	if (updateData.favourite == 0 || updateData.favourite == 1)  		gameRow [0] ["favourite"] = updateData.favourite;  	if (updateData.clone_of != "NULL")  		gameRow [0] ["clone_of"] = updateData.clone_of;  }  else// this is a whole new row' add it to the ds   {  	DataRow newRow = dsGames.Tables [0].NewRow ();  	newRow ["file_name"] = updateData.file_name;  	newRow ["platform_id"] = updateData.platform_id;  	if (updateData.gamedb_id != -1)  		newRow ["gamedb_id"] = updateData.gamedb_id;  	else  		newRow ["gamedb_id"] = 0;  	if (updateData.genre_id >= 0)  		newRow ["genre_id"] = updateData.genre_id;  	else  		newRow ["genre_id"] = 0;  	if (updateData.crc != "NULL")  		newRow ["crc"] = updateData.crc;  	else  		newRow ["crc"] = "NONE";  	if (updateData.game_load_string != "NULL")  		newRow ["game_load_string"] = updateData.game_load_string;  	else  		newRow ["game_load_string"] = "";  	if (updateData.name != "NULL")  		newRow ["name"] = updateData.name;  	else  		newRow ["name"] = "No Name Entered";  	if (updateData.description != "NULL")  		newRow ["description"] = updateData.description;  	else  		newRow ["description"] = "";  	if (updateData.region_id != "NULL")  		newRow ["region_id"] = updateData.region_id;  	else  		newRow ["region_id"] = "NONE";  	if (updateData.release_year >= 0)  		newRow ["release_year"] = updateData.release_year;  	else  		newRow ["release_year"] = 0;  	if (updateData.rating != "NULL")  		newRow ["rating"] = updateData.rating;  	else  		newRow ["rating"] = "";  	if (updateData.players != "NULL")  		newRow ["players"] = updateData.players;  	else  		newRow ["players"] = 0;  	if (updateData.publisher != "NULL")  		newRow ["publisher"] = updateData.publisher;  	else  		newRow ["publisher"] = "";  	if (updateData.publisher_id >= 0)  		newRow ["publisher_id"] = updateData.publisher_id;  	else  		newRow ["publisher_id"] = 0;  	if (updateData.developer != "NULL")  		newRow ["developer"] = updateData.developer;  	else  		newRow ["developer"] = "";  	if (updateData.developer_id >= 0)  		newRow ["developer_id"] = updateData.developer_id;  	else  		newRow ["developer_id"] = 0;  	if (updateData.users_stars >= 0)  		newRow ["users_stars"] = updateData.users_stars;  	else  		newRow ["users_stars"] = 0;  	if (updateData.gamedb_stars >= 0)  		newRow ["gamedb_stars"] = updateData.gamedb_stars;  	else  		newRow ["gamedb_stars"] = 0;  	if (updateData.control_type != "NULL")  		newRow ["control_type"] = updateData.control_type;  	else  		newRow ["control_type"] = "";  	if (updateData.active == 0 || updateData.active == 1)  		newRow ["active"] = updateData.active;  	else  		newRow ["active"] = 0;  	if (updateData.favourite == 0 || updateData.favourite == 1)  		newRow ["favourite"] = updateData.favourite;  	else  		newRow ["favourite"] = 0;  	if (updateData.co_op == 0 || updateData.co_op == 1)  		newRow ["co_op"] = updateData.co_op;  	else  		newRow ["co_op"] = 0;  	if (updateData.clone_of != "NULL")  		newRow ["clone_of"] = updateData.clone_of;  	else  		newRow ["clone_of"] = "NONE";  	dsGames.Tables [0].Rows.Add (newRow);  }  
Magic Number,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,upsertGamesDataset,The following statement contains a magic number: if (updateData.players != "NULL") {  	if (updateData.players == "4+")  		gameRow [0] ["players"] = 4;  	else  		gameRow [0] ["players"] = updateData.players;  }  
Magic Number,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,upsertGamesDataset,The following statement contains a magic number: if (updateData.players == "4+")  	gameRow [0] ["players"] = 4;  else  	gameRow [0] ["players"] = updateData.players;  
Magic Number,Datacadia,dbHandle,C:\repos\prosthetichead_Datacadia\dbHandle.cs,upsertGamesDataset,The following statement contains a magic number: gameRow [0] ["players"] = 4;  
Magic Number,Datacadia,Game_ImageAssets,C:\repos\prosthetichead_Datacadia\Game_ImageAssets.cs,getGameDB_FanArtIcons,The following statement contains a magic number: imagesFanArt.ImageSize = new Size (128' 128);  
Magic Number,Datacadia,Game_ImageAssets,C:\repos\prosthetichead_Datacadia\Game_ImageAssets.cs,getGameDB_FanArtIcons,The following statement contains a magic number: imagesFanArt.ImageSize = new Size (128' 128);  
Magic Number,Datacadia,Game_ImageAssets,C:\repos\prosthetichead_Datacadia\Game_ImageAssets.cs,getGameDB_ScreenshotIcons,The following statement contains a magic number: imagesFanArt.ImageSize = new Size (128' 128);  
Magic Number,Datacadia,Game_ImageAssets,C:\repos\prosthetichead_Datacadia\Game_ImageAssets.cs,getGameDB_ScreenshotIcons,The following statement contains a magic number: imagesFanArt.ImageSize = new Size (128' 128);  
Magic Number,Datacadia,Game_ImageAssets,C:\repos\prosthetichead_Datacadia\Game_ImageAssets.cs,getGameDB_ClearLogo,The following statement contains a magic number: imagesFanArt.ImageSize = new Size (128' 128);  
Magic Number,Datacadia,Game_ImageAssets,C:\repos\prosthetichead_Datacadia\Game_ImageAssets.cs,getGameDB_ClearLogo,The following statement contains a magic number: imagesFanArt.ImageSize = new Size (128' 128);  
