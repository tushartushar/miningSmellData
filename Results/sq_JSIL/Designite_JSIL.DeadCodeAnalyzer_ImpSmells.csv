Implementation smell,Namespace,Class,File,Method,Description
Long Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,WalkMethod,The method has 107 lines of code.
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,IsUsed,Cyclomatic complexity of the method is 11
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,WalkMethod,Cyclomatic complexity of the method is 13
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,ProcessMetaAttributes,Cyclomatic complexity of the method is 22
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,ProcessMetaAttributes,Cyclomatic complexity of the method is 11
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,ProcessCustomAttributeArgument,Cyclomatic complexity of the method is 8
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,BuildPropertiesAndEventsList,Cyclomatic complexity of the method is 13
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,AddMethod,Cyclomatic complexity of the method is 9
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,IsMemberWhiteListed,Cyclomatic complexity of the method is 14
Complex Method,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,ProcessWhiteList,Cyclomatic complexity of the method is 15
Long Identifier,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,Configuration,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\Configuration.cs,,The length of the parameter _NonAggressiveVirtualMethodElimination is 38.
Missing Default,JSIL.Compiler.Extensibility.DeadCodeAnalyzer,DeadCodeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\Compiler\Analyzers\DeadCodeAnalyzer\DeadCodeInfoProvider.cs,WalkMethod,The following switch statement is missing a default case: switch (ilExpression.Code)                          {                              case ILCode.Ldftn:                              case ILCode.Newobj:                              case ILCode.Jmp:                              case ILCode.Call:                              case ILCode.CallGetter:                              case ILCode.CallSetter:                                  break;                                case ILCode.CallvirtGetter:                              case ILCode.CallvirtSetter:                              case ILCode.Callvirt:                              case ILCode.Ldvirtftn:                                  isVirtual = true;                                  thisArg = ilExpression.Arguments.Count >0 ? ilExpression.Arguments[0].InferredType : null;                                  break;                                case ILCode.Ldtoken:                                  isVirtual = true;                                  break;                          }
