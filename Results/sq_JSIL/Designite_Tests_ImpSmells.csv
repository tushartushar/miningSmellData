Implementation smell,Namespace,Class,File,Method,Description
Long Method,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,GenerateJavascript,The method has 110 lines of code.
Long Method,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The method has 117 lines of code.
Long Method,JSIL.Tests,CompilerUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CompilerUtil.cs,Compile,The method has 125 lines of code.
Complex Method,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,ApplyMetacomments,Cyclomatic complexity of the method is 11
Complex Method,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,RunJavascript,Cyclomatic complexity of the method is 12
Complex Method,JSIL.Tests,CompilerUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CompilerUtil.cs,Compile,Cyclomatic complexity of the method is 14
Complex Method,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunComparisonTests,Cyclomatic complexity of the method is 12
Complex Method,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,FolderTestSource,Cyclomatic complexity of the method is 10
Complex Method,JSIL.Tests,PerformanceAnalysisData,D:\research\architectureSmells\repos1\sq_JSIL\Tests\PerformanceAnalysis.cs,ParseTaggedObjectTypes,Cyclomatic complexity of the method is 11
Complex Method,JSIL.Tests,PerformanceAnalysisData,D:\research\architectureSmells\repos1\sq_JSIL\Tests\PerformanceAnalysis.cs,ParseTypeInformation,Cyclomatic complexity of the method is 9
Complex Method,JSIL.Tests,FailingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FailingTests.cs,FailingTestCases,Cyclomatic complexity of the method is 8
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,ComparisonTest,The method has 5 parameters. Parameters: pool' filename' stubbedAssemblies' typeInfo' assemblyCache
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,ComparisonTest,The method has 7 parameters. Parameters: pool' filenames' outputPath' stubbedAssemblies' typeInfo' assemblyCache' compilerOptions
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Translate,The method has 6 parameters. Parameters: processResult' makeConfiguration' onTranslationFailure' initializeTranslator' scanForProxies' analyzers
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,GenerateJavascript,The method has 10 parameters. Parameters: args' generateJavascript' elapsedTranslation' makeConfiguration' throwOnUnimplementedExternals' onTranslationFailure' initializeTranslator' scanForProxies' shouldWritePrologue' analyzers
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,RunJavascript,The method has 5 parameters. Parameters: args' makeConfiguration' onTranslationFailure' initializeTranslator' analyzers
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,RunJavascript,The method has 10 parameters. Parameters: args' generateJavascript' elapsedTranslation' elapsedJs' makeConfiguration' evaluationConfig' onTranslationFailure' initializeTranslator' scanForProxies' analyzers
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,RunJavascript,The method has 12 parameters. Parameters: args' generateJavascript' elapsedTranslation' elapsedJs' stderr' trailingOutput' makeConfiguration' evaluationConfig' onTranslationFailure' initializeTranslator' scanForProxies' analyzers
Long Parameter List,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The method has 7 parameters. Parameters: args' makeConfiguration' evaluationConfig' dumpJsOnFailure' onTranslationFailure' initializeTranslator' scanForProxies
Long Parameter List,JSIL.Tests,CrossDomainHelper,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,CreateFromCompileResultOnRemoteDomain,The method has 5 parameters. Parameters: domain' absoluteFilenames' assemblyName' compilerOptions' currentMetaRevision
Long Parameter List,JSIL.Tests,CompilerUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CompilerUtil.cs,Compile,The method has 5 parameters. Parameters: getProvider' _filenames' assemblyName' compilerOptions' currentMetaRevision
Long Parameter List,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunComparisonTests,The method has 6 parameters. Parameters: filenames' stubbedAssemblies' typeInfo' testPredicate' errorCheckPredicate' getConfiguration
Long Parameter List,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunComparisonTest,The method has 17 parameters. Parameters: filename' stubbedAssemblies' typeInfo' errorCheckPredicate' failureList' commonFile' shouldRunJs' asmCache' makeConfiguration' onTranslationFailure' evaluationConfig' compilerOptions' initializeTranslator' getTestRunnerQueryString' scanForProxies' extraDependencies' testFolderNameOverride
Long Parameter List,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,GetJavascript,The method has 6 parameters. Parameters: fileName' expectedText' makeConfiguration' dumpJsOnFailure' initializeTranslator' analyzers
Long Parameter List,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,GenericTest,The method has 5 parameters. Parameters: fileName' csharpOutput' javascriptOutput' stubbedAssemblies' typeInfo
Long Parameter List,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunSingleComparisonTestCase,The method has 11 parameters. Parameters: parameters' makeConfiguration' evaluationConfig' onTranslationFailure' compilerOptions' initializeTranslator' getTestRunnerQueryString' scanForProxies' extraDependencies' shouldRunJs' testFolderNameOverride
Long Parameter List,JSIL.Tests,ParsedTypeInformation,D:\research\architectureSmells\repos1\sq_JSIL\Tests\PerformanceAnalysis.cs,ParsedTypeInformation,The method has 5 parameters. Parameters: name' typeId' isSingleton' parentTypeId' traits
Long Parameter List,JSIL.Tests,ProcessUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\TestUtil.cs,Run,The method has 6 parameters. Parameters: filename' parameters' stdin' stderr' stdout' cwd
Long Identifier,JSIL.Tests,PerformanceAnalysisData,D:\research\architectureSmells\repos1\sq_JSIL\Tests\PerformanceAnalysis.cs,ParseTaggedObjectTypes,The length of the parameter functionIndicesToTaggedObjectIndexes is 36.
Long Identifier,JSIL.Tests,PerformanceAnalysisData,D:\research\architectureSmells\repos1\sq_JSIL\Tests\PerformanceAnalysis.cs,,The length of the parameter TaggedObjectIndexToNameMapping is 30.
Long Statement,JSIL.Tests,CommandLineCodeCompiler,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CodeProviders.cs,CompileAssemblyFromFileBatch,The length of the statement  "            results.CompiledAssembly = options.GenerateExecutable ? Assembly.ReflectionOnlyLoadFrom(options.OutputAssembly) : Assembly.LoadFrom(options.OutputAssembly); " is 156.
Long Statement,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,RunJavascript,The length of the statement  "                    "print({0}); try {{ var elapsedTime = runTestCase(Date.now); }} catch (exc) {{ reportException(exc); }} print({1}); print({2} + elapsedTime);" + " is 144.
Long Statement,JSIL.Tests,TypeInformationTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\TypeInformationTests.cs,MethodInfo_Overrides_ContainsOverridesInformation,The length of the statement  "            var getEnumeratorMethods = (from member in tiList.Members.Values where member.Name.Contains("GetEnumerator") select member).ToArray(); " is 134.
Long Statement,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,GenericTest,The length of the statement  "            using (var test = new ComparisonTest(EvaluatorPool' Portability.NormalizeDirectorySeparators(fileName)' stubbedAssemblies' typeInfo)) { " is 135.
Long Statement,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,GenericTest,The length of the statement  "                        Assert.AreEqual(Portability.NormalizeNewLines(csharpOutput)' csOutput.Trim()' "Did not get expected output from C# test"); " is 122.
Long Statement,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,GenericTest,The length of the statement  "                    Assert.AreEqual(Portability.NormalizeNewLines(javascriptOutput)' jsOutput.Trim()' "Did not get expected output from JavaScript test"); " is 134.
Long Statement,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,GenericIgnoreTest,The length of the statement  "            using (var test = new ComparisonTest(EvaluatorPool' Portability.NormalizeDirectorySeparators(fileName)' stubbedAssemblies)) { " is 125.
Long Statement,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,GenericIgnoreTest,The length of the statement  "                        Console.Error.WriteLine("// Was looking for a JS exception containing the string '{0}' but didn't find it."' jsErrorSubstring); " is 127.
Long Statement,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,FolderTestSource,The length of the statement  "                foreach (var item in FolderTestSource(subdirectory.Split(Path.DirectorySeparatorChar).Last()' subfolders' typeInfo' asmCache)) " is 126.
Long Statement,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,FilenameTestSource,The length of the statement  "                var item = (new TestCaseData(new object[] { new object[] { actualTestName' typeInfo' asmCache' null' markLastTest && i == (l - 1) } })) " is 135.
Long Statement,JSIL.Tests,PerformanceAnalysisData,D:\research\architectureSmells\repos1\sq_JSIL\Tests\PerformanceAnalysis.cs,ParseTaggedObjectTypes,The length of the statement  "                functionIndicesToTaggedObjectIndexes.Add(int.Parse(match.Groups["function_index"].Value)' int.Parse(match.Groups["object_index"].Value)); " is 137.
Long Statement,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,SwitchWithMultipleDefaults,The length of the statement  "                // TODO: The following will only work if switch statements with multiple default cases are collapsed into a single default case. " is 128.
Long Statement,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,BigStringSwitch,The length of the statement  "                Assert.IsTrue(generatedJs.Contains("for (var i = 0; i < (args.length | 0); i = ")' "Was not a for loop with an increment"); " is 123.
Long Statement,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,SealedMethods,The length of the statement  "                Assert.IsFalse(generatedJs.Contains("Foo.prototype.Func1.call")' "Func1 was called through the prototype with an explicit this"); " is 129.
Long Statement,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,UnderivedMethods,The length of the statement  "                Assert.IsFalse(generatedJs.Contains("Foo.prototype.Func1.call")' "Func1 was called through the prototype with an explicit this"); " is 129.
Long Statement,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,NoDoubleStructClonesWithThreadingEnabled,The length of the statement  "            var testNames = Directory.GetFiles(testPath' "*.cs").Concat(Directory.GetFiles(testPath' "*.vb")).OrderBy((s) => s).ToArray(); " is 126.
Long Statement,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,PreventFastMethodDispatcherIfHideBase_Issue368,The length of the statement  "                    generatedJs.Length - generatedJs.Replace("bas.AnotherMethod();"' string.Empty).Length == "bas.AnotherMethod();".Length * 2' " is 123.
Empty Catch Block,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,RunCSharpExecutable,The method has an empty catch block.
Empty Catch Block,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,RunCSharpExecutable,The method has an empty catch block.
Empty Catch Block,JSIL.Tests,CompilerUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CompilerUtil.cs,Compile,The method has an empty catch block.
Empty Catch Block,JSIL.Tests,CompilerUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CompilerUtil.cs,Compile,The method has an empty catch block.
Empty Catch Block,JSIL.Tests,EvaluatorPool,D:\research\architectureSmells\repos1\sq_JSIL\Tests\EvaluatorPool.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JSIL.Tests,Evaluator,D:\research\architectureSmells\repos1\sq_JSIL\Tests\EvaluatorPool.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JSIL.Tests,Evaluator,D:\research\architectureSmells\repos1\sq_JSIL\Tests\EvaluatorPool.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JSIL.Tests,Evaluator,D:\research\architectureSmells\repos1\sq_JSIL\Tests\EvaluatorPool.cs,Dispose,The method has an empty catch block.
Magic Number,JSIL.Tests,CPPCodeCompiler,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CodeProviders.cs,GetCompilerPath,The following statement contains a magic number: i >= 10
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Dispose,The following statement contains a magic number: unloadSignal.Wait(5000);
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,MakeDefaultConfiguration,The following statement contains a magic number: return new Configuration {                  FrameworkVersion = 4.0'                  IncludeDependencies = false'                  ApplyDefaults = false              };
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,ApplyMetacomments,The following statement contains a magic number: var parts = metacomment.Arguments.Split(new char[] { ' ' }' 2' StringSplitOptions.RemoveEmptyEntries);
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,GenerateJavascript,The following statement contains a magic number: writeResult = stream =>                  {                      using (var writer = new StreamWriter(stream'Encoding.UTF8' 1024' true))                      {                          writer.WriteLine();                          writer.WriteLine();                          foreach (var jsFilename in JSFilenames)                          {                              using (var reader = new StreamReader(jsFilename))                              {                                  string line;                                  while ((line = reader.ReadLine()) != null)                                  {                                      writer.WriteLine(line);                                  }                              }                          }                          writer.WriteLine();                          writer.Flush();                      }                  };
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The following statement contains a magic number: var errors = new Exception[2];
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The following statement contains a magic number: var outputs = new string[2];
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The following statement contains a magic number: var elapsed = new long[3];
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The following statement contains a magic number: ThreadPool.QueueUserWorkItem((_) => {                  try {                      outputs[1] = RunJavascript(                          args' out generateJs' out elapsed[1]' out elapsed[2]'                           makeConfiguration: makeConfiguration'                          evaluationConfig: evaluationConfig'                          onTranslationFailure: onTranslationFailure'                          initializeTranslator: initializeTranslator'                          scanForProxies: scanForProxies                      ).Replace("\r"' "").Trim();                  } catch (Exception ex) {                      errors[1] = ex;                  }                  signals[1].Set();              });
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The following statement contains a magic number: const int truncateThreshold = 4096;
Magic Number,JSIL.Tests,ComparisonTest,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ComparisonTest.cs,Run,The following statement contains a magic number: Console.WriteLine(                      "passed: CL:{0} TR:{2:0000}ms C#:{1:0000}ms JS:{3:0000}ms"'                      compileTime'                      TimeSpan.FromTicks(elapsed[0]).TotalMilliseconds'                      TimeSpan.FromTicks(elapsed[1]).TotalMilliseconds'                      TimeSpan.FromTicks(elapsed[2]).TotalMilliseconds                  );
Magic Number,JSIL.Tests,AnalysisTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\AnalysisTests.cs,AsyncAwaitCloning,The following statement contains a magic number: Assert.AreEqual(                      Regex.Matches(generatedJs' @"new JSIL\.BoxedVariable\(this\)").Count'                      2'                      "this should have been boxed twice"                  );
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,ArrayTypeEquality,The following statement contains a magic number: var at4 = new ArrayType(T1' 2);
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NodeChildren,The following statement contains a magic number: var boe = new JSBinaryOperatorExpression(JSOperator.Add' JSLiteral.New(1)' JSLiteral.New(2)' T1);
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NodeChildren,The following statement contains a magic number: Assert.AreEqual(2' de.Children.Count());
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NodeChildren,The following statement contains a magic number: Assert.AreEqual(2' boe.Children.Count());
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,InvocationChildNames,The following statement contains a magic number: Assert.AreEqual(4' pairs.Count);
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,InvocationChildNames,The following statement contains a magic number: Assert.AreEqual(ie.ThisReference' pairs[2].Key);
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,InvocationChildNames,The following statement contains a magic number: Assert.AreEqual("ThisReference"' pairs[2].Value);
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NodeSelfAndChildren,The following statement contains a magic number: var boe = new JSBinaryOperatorExpression(JSOperator.Add' JSLiteral.New(1)' JSLiteral.New(2)' T1);
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NodeSelfAndChildren,The following statement contains a magic number: Assert.AreEqual(3' de.SelfAndChildren.Count());
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NodeSelfAndChildren,The following statement contains a magic number: Assert.AreEqual(3' boe.SelfAndChildren.Count());
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NodeSelfAndChildrenRecursive,The following statement contains a magic number: fl3.Index = 2;
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NewArrayTraversal,The following statement contains a magic number: var na = new JSNewArrayExpression(                  T1'                  new JSExpression[] { JSLiteral.New(2) }'                  new JSArrayExpression(                      T1'                       JSLiteral.New(3)'                      JSLiteral.New(4)                  )              );
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NewArrayTraversal,The following statement contains a magic number: var na = new JSNewArrayExpression(                  T1'                  new JSExpression[] { JSLiteral.New(2) }'                  new JSArrayExpression(                      T1'                       JSLiteral.New(3)'                      JSLiteral.New(4)                  )              );
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NewArrayTraversal,The following statement contains a magic number: var na = new JSNewArrayExpression(                  T1'                  new JSExpression[] { JSLiteral.New(2) }'                  new JSArrayExpression(                      T1'                       JSLiteral.New(3)'                      JSLiteral.New(4)                  )              );
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NewArrayTraversal,The following statement contains a magic number: Assert.AreEqual(2' na.Children.ToArray().Length' "Child count");
Magic Number,JSIL.Tests,APITests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\APITests.cs,NewArrayTraversal,The following statement contains a magic number: Assert.AreEqual(4' na.AllChildrenRecursive.ToArray().Length' "Recursive child count");
Magic Number,JSIL.Tests,CompilerUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CompilerUtil.cs,Compile,The following statement contains a magic number: var parameters = new CompilerParameters(references.ToArray()) {                  CompilerOptions = compilerOptions'                  GenerateExecutable = generateExecutable'                  GenerateInMemory = false'                  IncludeDebugInformation = true'                  TempFiles = new TempFileCollection(tempPath' true)'                  OutputAssembly = outputAssembly'                  WarningLevel = 4'                  TreatWarningsAsErrors = false'              };
Magic Number,JSIL.Tests,ConfigurationTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ConfigurationTests.cs,MicrosoftAssembliesAreStubbed,The following statement contains a magic number: Assert.AreEqual("stubbed"' translator.ClassifyAssembly(MakeFakeAssembly("mscorlib"' new Version(4' 0' 0' 0))));
Magic Number,JSIL.Tests,ConfigurationTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ConfigurationTests.cs,MicrosoftAssembliesAreStubbed,The following statement contains a magic number: Assert.AreEqual("stubbed"' translator.ClassifyAssembly(MakeFakeAssembly("System"' new Version(4' 0' 0' 0))));
Magic Number,JSIL.Tests,ConfigurationTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\ConfigurationTests.cs,MicrosoftAssembliesAreStubbed,The following statement contains a magic number: Assert.AreEqual("stubbed"' translator.ClassifyAssembly(MakeFakeAssembly("System.Core"' new Version(4' 0' 0' 0))));
Magic Number,JSIL.Tests,EvaluatorPool,D:\research\architectureSmells\repos1\sq_JSIL\Tests\EvaluatorPool.cs,Dispose,The following statement contains a magic number: !PoolManager.Join(100)
Magic Number,JSIL.Tests,Evaluator,D:\research\architectureSmells\repos1\sq_JSIL\Tests\EvaluatorPool.cs,Evaluator,The following statement contains a magic number: _JoinImpl = () => {                  WaitHandle.WaitAny(                      new WaitHandle[] { streamsSignal.WaitHandle' _DisposedSignal.WaitHandle }'                      60000                  );              };
Magic Number,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunComparisonTests,The following statement contains a magic number: i < 10
Magic Number,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunSingleComparisonTestCase,The following statement contains a magic number: parameters.Length != 5
Magic Number,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunSingleComparisonTestCase,The following statement contains a magic number: var cache = (AssemblyCache)parameters[2];
Magic Number,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,RunSingleComparisonTestCase,The following statement contains a magic number: return RunComparisonTest(                      (string)parameters[0]' null' provider' null' null' (string)parameters[3]' shouldRunJs' cache'                      makeConfiguration: makeConfiguration'                      evaluationConfig: evaluationConfig'                      onTranslationFailure: onTranslationFailure'                      compilerOptions: compilerOptions'                      initializeTranslator: initializeTranslator'                      getTestRunnerQueryString: getTestRunnerQueryString'                      scanForProxies: scanForProxies'                      extraDependencies: extraDependencies'                      testFolderNameOverride: testFolderNameOverride                  );
Magic Number,JSIL.Tests,GenericTestFixture,D:\research\architectureSmells\repos1\sq_JSIL\Tests\GenericTestFixture.cs,FolderTestSource,The following statement contains a magic number: ((object[]) array[array.Length - 1].Arguments[0])[4] = true;
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,ChainedElseIfs,The following statement contains a magic number: Assert.AreEqual(                      4' generatedJs.Split(                          new string[] { "else if" }' StringSplitOptions.RemoveEmptyEntries                      ).Length                  );
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,StringConcat,The following statement contains a magic number: Assert.AreEqual(                      3'                      generatedJs.Split(new String[] { "JSIL.ConcatString" }' StringSplitOptions.RemoveEmptyEntries).Length                  );
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,ForLoops,The following statement contains a magic number: Assert.AreEqual(4' generatedJs.Split(new string[] { "for (" }' StringSplitOptions.RemoveEmptyEntries).Length);
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,DoLoops,The following statement contains a magic number: Assert.AreEqual(3' generatedJs.Split(new string[] { "do {" }' StringSplitOptions.RemoveEmptyEntries).Length);
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,DoLoops,The following statement contains a magic number: Assert.AreEqual(3' generatedJs.Split(new string[] { "} while (" }' StringSplitOptions.RemoveEmptyEntries).Length);
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,OverloadedGenericMethodSignatures,The following statement contains a magic number: i < 3
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,OverloadedGenericMethodSignatures2,The following statement contains a magic number: i < 3
Magic Number,JSIL.Tests,FormattingTests,D:\research\architectureSmells\repos1\sq_JSIL\Tests\FormattingTests.cs,PreventFastMethodDispatcherIfHideBase_Issue368,The following statement contains a magic number: Assert.IsTrue(                      generatedJs.Length - generatedJs.Replace("bas.AnotherMethod();"' string.Empty).Length == "bas.AnotherMethod();".Length * 2'                      "Base.AnotherMethod should use fast dispatcher");
Magic Number,JSIL.Tests,ProcessUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\TestUtil.cs,Run,The following statement contains a magic number: var temp = new string[2] { null' null };
Magic Number,JSIL.Tests,ProcessUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\TestUtil.cs,ReadEntireStream,The following statement contains a magic number: var buffer = new byte[32767];
Missing Default,JSIL.Tests,CompilerUtil,D:\research\architectureSmells\repos1\sq_JSIL\Tests\CompilerUtil.cs,Compile,The following switch statement is missing a default case: switch (metacomment.Command.ToLower()) {                          case "reference":                              references.Add(metacomment.Arguments);                              break;                            case "compileroption":                              compilerOptions += " " + metacomment.Arguments;                              break;                            case "generateexecutable":                              generateExecutable = true;                              break;                            case "useroslyn":                              compilerCreationOptions.UseRoslyn = true;                              break;                      }
