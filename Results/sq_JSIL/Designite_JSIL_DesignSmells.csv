Design smell,Namespace,Class,File,Cause
Duplicate Abstraction,JSIL,Token,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyManifest.cs,The tool detected the smell in this class because two or more abstractions have identical names. The abstractions with identical names are: JSIL.Token' JSIL.Ast.Token
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitClassInstance which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitClassInOutType which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitClassStatic which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitClassFactory which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitField which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitProperty which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitMethod which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitInterfaceMethodGroup which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,DefinitelyTypedInternalsEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitInterfaceMethod which is more interested in members of the type: JavascriptFormatter
Duplicate Abstraction,JSIL,Entry,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because two or more abstractions have identical names. The abstractions with identical names are: JSIL.Entry' JSIL.Internal.Entry
Unnecessary Abstraction,JSIL,PopulatedCacheEntryArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Info' Method' Translator' Parameters' Body
Unnecessary Abstraction,JSIL,NullCacheEntryArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Info' Method
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitInterfaceDefinition which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitParameterAttributes which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitOverrides which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitPInvokeInfo which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitMarshalInfo which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitEnum which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitDelegate which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: EmitFieldOrConstant which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: CommaSeparatedList which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitDotExpression which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: WriteLabel which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: AddSourceMapInfo which is more interested in members of the type: JavascriptFormatter
Feature Envy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: AddSourceMapInfoEnd which is more interested in members of the type: JavascriptFormatter
Unnecessary Abstraction,JSIL,TranslationResultCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Log' TranslationResults' Elapsed
Unnecessary Abstraction,JSIL,ProxiesByNameRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Cache' Count
Unnecessary Abstraction,JSIL,MakeTypeInfoArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' MoreTypes' SecondPass' TypesToInitialize' Definition
Unnecessary Abstraction,JSIL.Ast,EnclosingNode,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSAstVisitor.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Node' Name' Child' ChildName
Duplicate Abstraction,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2075' 2101])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2267' 2293])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2472' 2498])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2546' 2572])
Duplicate Abstraction,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2267' 2297])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2546' 2576])
Duplicate Abstraction,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2081' 2100])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2273' 2292])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2340' 2359])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2376' 2395])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2408' 2427])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2440' 2459])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2478' 2497])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2552' 2571])
Duplicate Abstraction,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2081' 2101])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2340' 2360])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2376' 2396])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2408' 2428])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2440' 2460])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2273' 2293])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2478' 2498])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2552' 2572])
Duplicate Abstraction,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2273' 2297])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2376' 2400])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2552' 2576])
Duplicate Abstraction,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2408' 2436])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2440' 2468])
Duplicate Abstraction,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2339' 2358])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2407' 2426])' JSFunctionExpression (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs' [2439' 2458])
Unnecessary Abstraction,JSIL.Ast,ITypeOfExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: Type
Unnecessary Abstraction,JSIL.Ast,Token,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Duplicate Abstraction,JSIL.Ast,JSNullStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are:  JSNullStatement (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs' [485' 507])' JSNullStatement (D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs' [519' 541])
Unnecessary Abstraction,JSIL.Ast,JSAstIgnoreAttribute,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Unnecessary Abstraction,JSIL.Ast,JSAstIgnoreInheritedMembersAttribute,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Unnecessary Abstraction,JSIL.Ast.Traversal,JSNodeTraversalArrayRecordState,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Index' UserData' CurrentNode' CurrentName
Unutilized Abstraction,JSIL.Internal,HTMLColor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\HTMLColor.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,JSIL.Internal,EqualityComparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,JSIL.Internal,TypeInfoSourceExtensions,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unnecessary Abstraction,JSIL.Internal,AttributeGroup,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Inherited' Name' Entries
Imperative Abstraction,JSIL.Internal,MemberInfo<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: ToString
Imperative Abstraction,JSIL.Internal,MethodInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: GetName
Unutilized Abstraction,JSIL.Internal,PolicyExtensions,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unnecessary Abstraction,JSIL.Internal,MakeReferenceArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' ReturnType' ParameterTypes' TypeSystem
Unutilized Abstraction,JSIL.Internal,ImmutableArrayPoolExtensions,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Util.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,JSIL.Transforms,Identifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\AllocationHoisting.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unnecessary Abstraction,JSIL.Transforms,LabelGroupLabelData,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\ControlFlowSimplifier.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' ExitTargetLabels' DirectExitLabel' RecursiveExitLabel' TimesUsedAsRecursiveExitTarget' UntargettedExitCount
Unnecessary Abstraction,JSIL.Transforms,LabelGroupData,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\ControlFlowSimplifier.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Imperative Abstraction,JSIL.Transforms,ExpandCastExpressions,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ExpandCastExpressions.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: VisitNode
Imperative Abstraction,JSIL.Transforms,IntroduceCharCasts,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceCharCasts.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: VisitNode
Unnecessary Abstraction,JSIL.Transforms,EnclosingBlockEntry,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Block' ParentNode' Depth
Unnecessary Abstraction,JSIL.Transforms,GotoEntry,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: TargetLabel' Goto' EnclosingBlock
Unnecessary Abstraction,JSIL.Transforms,NullCheck,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Statement' SwitchVariable' Goto
Unnecessary Abstraction,JSIL.Transforms,Initializer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' Statement' Field' Values
Imperative Abstraction,JSIL.Transforms,SimplifyLoops,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyLoops.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: VisitNode
Feature Envy,JSIL.Transforms,StaticAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: VisitNode which is more interested in members of the type: FunctionAnalysis1stPass
Imperative Abstraction,JSIL.Transforms,FunctionAnalysis1stPass,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: ItemComparer
Imperative Abstraction,JSIL.Transforms,EliminateSingleUseTemporaries,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: VisitNode
Deficient Encapsulation,JSIL,Entry,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Info' Reference' SpecialIdentifiers' Expression' FirstPass' SecondPass' TransformPipelineHasCompleted
Deficient Encapsulation,JSIL,PopulatedCacheEntryArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Info' Method' Translator' Parameters' Body
Deficient Encapsulation,JSIL,NullCacheEntryArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Info' Method
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSNullableCastExpression' JSNullCoalesceExpression (in method "VisitNode" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSNullStatement' JSNullExpression' JSBlockStatement' JSBreakExpression (in method "VisitNode" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSNullExpression' JSContinueExpression (in method "VisitNode" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSOperatorExpressionBase' JSLiteral (in method "VisitNode" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSIfStatement' JSWhileLoop' JSForLoop' JSVariableDeclarationStatement' JSCommaExpression (in method "NeedParensForBinaryOperator" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSDoLoop' JSSwitchStatement' JSExpressionStatement (in method "NeedParensForBinaryOperator" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSBitwiseOperator (in method "NeedTruncationForBinaryOperator" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSAssignmentOperator (in method "VisitNode" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSInvocationExpressionBase' JSCastExpression (in method "VisitNode" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSAssignmentOperator' JSAssignmentOperator (in method "VisitNode" of class "JavascriptAstEmitter").
Unexploited Encapsulation,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSLogicalOperator (in method "VisitNode" of class "JavascriptAstEmitter").
Deficient Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TemporaryVariableTypes
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSUntranslatableExpression' JSUntranslatableExpression (in method "Translate_BinaryOp_Pointer" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSComparisonOperator (in method "Translate_BinaryOp_Pointer" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSAssignmentOperator' JSBitwiseOperator (in method "Translate_BinaryOp" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSResultReferenceExpression' JSReferenceExpression (in method "Translate_CompoundAssignment" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSUntranslatableExpression' JSIgnoredExpression (in method "Translate_Stloc" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSUntranslatableExpression' JSUntranslatableExpression (in method "Translate_Stsfld" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSUntranslatableExpression' JSIgnoredExpression (in method "Translate_FieldAbstract" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSIgnoredMemberReference' JSIgnoredTypeReference (in method "Translate_Ldelem" of class "ILBlockTranslator").
Unexploited Encapsulation,JSIL,AssemblyTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSNewExpression' JSArrayExpression' JSNewArrayExpression' JSCastExpression (in method "TranslateField" of class "AssemblyTranslator").
Unexploited Encapsulation,JSIL,AssemblyTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSInvocationExpressionBase' JSTypeOfExpression (in method "TranslateField" of class "AssemblyTranslator").
Deficient Encapsulation,JSIL,TranslationResultCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TranslationResults' Elapsed
Deficient Encapsulation,JSIL,ResultFile,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Type' Filename' Size' Contents' Properties' SourceMapBuilder
Deficient Encapsulation,JSIL,ProxiesByNameRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Count
Deficient Encapsulation,JSIL,MakeTypeInfoArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Definition
Unexploited Encapsulation,JSIL.Ast,JSAstVisitor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSAstVisitor.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSFunctionExpression' JSFunctionExpression (in method "Visit" of class "JSAstVisitor").
Deficient Encapsulation,JSIL.Ast,EnclosingNode,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSAstVisitor.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Node' Name' Child' ChildName
Deficient Encapsulation,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: LabelGroupCount' DisplayName
Deficient Encapsulation,JSIL.Ast,JSBreakExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TargetLoop
Deficient Encapsulation,JSIL.Ast,JSContinueExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TargetLoop
Unexploited Encapsulation,JSIL.Ast,JSResultReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSInvocationExpressionBase' JSInvocationExpressionBase (in method "ReplaceChild" of class "JSResultReferenceExpression").
Deficient Encapsulation,JSIL.Ast,JSIndexerExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ElementType
Deficient Encapsulation,JSIL.Ast,JSNewArrayExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SizeOrArrayInitializer' CachedElementTypeIndex
Deficient Encapsulation,JSIL.Ast,JSIsExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CachedTypeIndex
Deficient Encapsulation,JSIL.Ast,JSCastExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CachedTypeIndex
Deficient Encapsulation,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: DefaultValue
Deficient Encapsulation,JSIL.Ast,JSDefaultValueLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CachedTypeIndex
Deficient Encapsulation,JSIL.Ast,JSStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Label' OriginalLabel
Deficient Encapsulation,JSIL.Ast,JSLoopStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Index
Deficient Encapsulation,JSIL.Ast,JSTryCatchBlock,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CatchVariable' Catch' Finally
Deficient Encapsulation,JSIL.Ast.Traversal,JSNodeTraversalRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Name' SortKey' OriginalIndex
Deficient Encapsulation,JSIL.Ast.Traversal,JSNodeTraversalArrayRecordState,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Index' UserData' CurrentNode' CurrentName
Deficient Encapsulation,JSIL.Internal,FunctionTransformPipeline,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionTransformPipeline.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SuspendCount
Deficient Encapsulation,JSIL.Internal,_State,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: EnclosingTypeSkipped' EnclosingType' DefiningType' EnclosingMethod' DefiningMethod' InvokingMethod' SignatureMethod' AttributesMethod
Deficient Encapsulation,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CurrentMethod
Deficient Encapsulation,JSIL.Internal,MethodSignature,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NextID
Deficient Encapsulation,JSIL.Internal,MethodSignature,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: NextID
Deficient Encapsulation,JSIL.Internal,Count,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Value
Deficient Encapsulation,JSIL.Internal,TypeInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: StaticConstructor
Deficient Encapsulation,JSIL.Internal,AttributeGroup,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Inherited' Name
Deficient Encapsulation,JSIL.Internal,PropertyInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Getter' Setter
Deficient Encapsulation,JSIL.Internal,MakeReferenceArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ReturnType' ParameterTypes' TypeSystem
Deficient Encapsulation,JSIL.Internal,Util,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Util.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ValidIdentifier
Deficient Encapsulation,JSIL.Internal,Util,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Util.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: ValidIdentifier
Deficient Encapsulation,JSIL.Internal,State,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Util.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ElementsUsed
Deficient Encapsulation,JSIL.Translator,Configuration,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Configuration.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ApplyDefaults' IncludeDependencies' UseSymbols' UseThreads' UseDefaultProxies' GenerateSkeletonsForStubbedAssemblies' SkipManifestCreation' GenerateContentManifest' RunBugChecks' TuneGarbageCollection' FilenameEscapeRegex' FilenameReplaceRegexes' AssemblyCollectionName' EmitterFactories' BuildSourceMap' InlineAssemblyReferences' FrameworkVersion
Deficient Encapsulation,JSIL.Translator,CodeGeneratorConfiguration,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Configuration.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: EliminateStructCopies' SimplifyOperators' SimplifyLoops' EliminateTemporaries' EliminateRedundantControlFlow' CacheMethodSignatures' DisableGenericSignaturesLocalCache' PreferLocalCacheForGenericMethodSignatures' PreferLocalCacheForGenericInterfaceMethodSignatures' CacheOneMethodSignaturePerMethod' CacheTypeExpressions' CacheBaseMethodHandles' EliminatePointlessFinallyBlocks' PreferAccessorMethods' HintIntegerArithmetic' EnableThreadedTransforms' FreezeImmutableObjects' EnableUnsafeCode' HoistAllocations' HintDoubleArithmetic' AutoGenerateEventAccessorsInSkeletons' AggressivelyUseElementProxies' EmitAllParameterNames' StripUnusedLoopNames' IntroduceCharCasts' IntroduceEnumCasts' EmulateInt64' DecomposeAllMutationOperators
Deficient Encapsulation,JSIL.Threading,DeadlockAvertedException,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Threading.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Lock1' Lock2
Unexploited Encapsulation,JSIL.Transforms,SynthesizePropertySetterReturnValues,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SynthesizePropertySetterReturnValues.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSVariable' JSLiteral (in method "Hoist" of class "SynthesizePropertySetterReturnValues").
Deficient Encapsulation,JSIL.Transforms,InitializationInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\FixupStructConstructorInvocations.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Type' NewExpression' DefaultValueLiteral' ParentBinaryExpression' BinaryExpressionParent' Folded
Unexploited Encapsulation,JSIL.Transforms,ConvertPropertyAccessesToInvocations,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ConvertPropertyAccessesToInvocations.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSUnaryMutationOperator (in method "IsPropertyGetterInvocation" of class "ConvertPropertyAccessesToInvocations").
Deficient Encapsulation,JSIL.Transforms,ControlFlowSimplifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\ControlFlowSimplifier.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: MadeChanges
Unexploited Encapsulation,JSIL.Transforms,ControlFlowSimplifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\ControlFlowSimplifier.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSGotoExpression' JSBreakExpression (in method "CheckForFallthrough" of class "ControlFlowSimplifier").
Deficient Encapsulation,JSIL.Transforms,LabelGroupLabelData,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\ControlFlowSimplifier.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: DirectExitLabel' RecursiveExitLabel' TimesUsedAsRecursiveExitTarget' UntargettedExitCount
Unexploited Encapsulation,JSIL.Transforms,ExpandCastExpressions,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ExpandCastExpressions.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSCastExpression' JSAsExpression (in method "VisitNode" of class "ExpandCastExpressions").
Unexploited Encapsulation,JSIL.Transforms,IntroduceCharCasts,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceCharCasts.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSStringIdentifier' JSFakeMethod (in method "VisitNode" of class "IntroduceCharCasts").
Deficient Encapsulation,JSIL.Transforms,EnclosingBlockEntry,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Block' ParentNode' Depth
Deficient Encapsulation,JSIL.Transforms,LabelEntry,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: LabelledStatement' EnclosingBlock' ParentNode' LabelGroup
Deficient Encapsulation,JSIL.Transforms,GotoEntry,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Goto' EnclosingBlock
Deficient Encapsulation,JSIL.Transforms,LabelHoister,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: HoistedALabel
Deficient Encapsulation,JSIL.Transforms,LabelGroupFlattener,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FlattenedAGroup' GroupStack
Deficient Encapsulation,JSIL.Transforms,DeoptimizeSwitchStatements,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SwitchStatementsDeoptimized
Deficient Encapsulation,JSIL.Transforms,NullCheck,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Statement' SwitchVariable' Goto
Deficient Encapsulation,JSIL.Transforms,Initializer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Statement' Field
Deficient Encapsulation,JSIL.Transforms,IndexLookup,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: Statement' Field' SwitchVariable' OutputVariable' Goto' IsInverted
Unexploited Encapsulation,JSIL.Transforms,SimplifyLoops,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyLoops.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSAssignmentOperator' JSUnaryMutationOperator (in method "VisitNode" of class "SimplifyLoops").
Unexploited Encapsulation,JSIL.Transforms,SimplifyLoops,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyLoops.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSVariable' JSBlockStatement' JSLabelGroupStatement (in method "VisitNode" of class "SimplifyLoops").
Deficient Encapsulation,JSIL.Transforms,OptimizeArrayEnumerators,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\OptimizeArrayEnumerators.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: EnableEnumeratorRemoval
Unexploited Encapsulation,JSIL.Transforms,StaticAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSDotExpressionBase' JSField (in method "VisitNode" of class "StaticAnalyzer").
Unexploited Encapsulation,JSIL.Transforms,StaticAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSVariableDeclarationStatement' JSPassByReferenceExpression' JSPassByReferenceExpression (in method "VisitNode" of class "StaticAnalyzer").
Deficient Encapsulation,JSIL.Transforms,FunctionAnalysis1stPass,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ResultMethod' ResultVariable' ResultIsNew' ReassignsThisReference
Deficient Encapsulation,JSIL.Transforms,EliminateSingleUseTemporaries,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: DryRun' TraceLevel
Deficient Encapsulation,JSIL.Transforms,EliminateSingleUseTemporaries,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: DryRun' TraceLevel
Unexploited Encapsulation,JSIL.Transforms,VariableEliminator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSExpressionStatement' JSVariableDeclarationStatement (in method "VisitNode" of class "VariableEliminator").
Unexploited Encapsulation,JSIL.Transforms,SimplifyOperators,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyOperators.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSDotExpressionBase' JSVariableDeclarationStatement (in method "VisitNode" of class "SimplifyOperators").
Unexploited Encapsulation,JSIL.Transforms,VariableReferenceAccessTransformer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableReferences.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSFunctionExpression' JSReadThroughReferenceExpression (in method "VisitNode" of class "VariableReferenceAccessTransformer").
Unexploited Encapsulation,JSIL.Transforms,VariableReferenceAccessTransformer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableReferences.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSVariableDeclarationStatement' JSVariableDeclarationStatement (in method "VisitNode" of class "VariableReferenceAccessTransformer").
Unexploited Encapsulation,JSIL.Transforms,EmulateStructAssignment,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EmulateStructAssignment.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSValueOfNullableExpression' JSLiteral' JSPassByReferenceExpression' JSFieldOfExpression (in method "IsCopyNeeded" of class "EmulateStructAssignment").
Unexploited Encapsulation,JSIL.Transforms,EmulateStructAssignment,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EmulateStructAssignment.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSNewExpression' JSNewBoxedVariable (in method "IsCopyNeeded" of class "EmulateStructAssignment").
Unexploited Encapsulation,JSIL.Transforms,EmulateStructAssignment,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EmulateStructAssignment.cs,The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: JSFieldAccess' JSVariable (in method "VisitNode" of class "EmulateStructAssignment").
Insufficient Modularization,JSIL,DefinitelyTypedBaseEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 24 public methods
Broken Modularization,JSIL,PopulatedCacheEntryArgs,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' Info' Method' Translator' Parameters' Body
Insufficient Modularization,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 27 public methods
Insufficient Modularization,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 35 methods
Insufficient Modularization,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 143
Insufficient Modularization,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 115 public methods
Insufficient Modularization,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 134 methods
Insufficient Modularization,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 377
Insufficient Modularization,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 188 methods
Insufficient Modularization,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 542
Insufficient Modularization,JSIL,AssemblyTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 56 methods
Insufficient Modularization,JSIL,AssemblyTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 265
Insufficient Modularization,JSIL,JSILIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\SpecialIdentifiers.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 22 public methods
Broken Modularization,JSIL,ResultFile,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' Type' Filename' Size' Contents' Properties' SourceMapBuilder
Insufficient Modularization,JSIL,TypeUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeUtil.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 46 public methods
Insufficient Modularization,JSIL,TypeUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeUtil.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 50 methods
Insufficient Modularization,JSIL,TypeUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeUtil.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 208
Insufficient Modularization,JSIL,TypeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 30 methods
Insufficient Modularization,JSIL.Internal,FunctionTransformPipeline,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionTransformPipeline.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 33 methods
Broken Modularization,JSIL.Internal,_State,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' EnclosingTypeSkipped' EnclosingType' DefiningType' EnclosingMethod' DefiningMethod' InvokingMethod' SignatureMethod' AttributesMethod
Insufficient Modularization,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 50 public methods
Insufficient Modularization,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 76 methods
Insufficient Modularization,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 192
Insufficient Modularization,JSIL.Internal,TypeInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 133
Hub-like Modularization,JSIL.Internal,TypeInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class has high number of incoming as well as outgoing dependencies. Incoming dependecies: JSIL.Ast.JSEnumLiteral' JSIL.Transforms.OptimizeArrayEnumerators' JSIL.Compiler.Extensibility.IAssemblyEmitter' JSIL.Internal.PackedArrayUtil' JSIL.Transforms.FunctionAnalysis1stPass' JSIL.Transforms.ExpandCastExpressions' JSIL.Internal.JavascriptFormatter' JSIL.JavascriptAssemblyEmitter' JSIL.ILBlockTranslator' JSIL.DefinitelyTypedInternalsEmitter' JSIL.DefinitelyTypedExportEmitter' JSIL.DefinitelyTypedBaseEmitter' JSIL.TypeInfoProvider' JSIL.Internal.ITypeInfoSource' JSIL.Internal.InterfaceToken' JSIL.Internal.RecursiveInterfaceToken' JSIL.Internal.ModuleInfo' JSIL.Internal.IMemberInfo' JSIL.Internal.MemberInfo<T>' JSIL.Internal.FieldInfo' JSIL.Internal.PropertyInfo' JSIL.Internal.EventInfo' JSIL.Internal.MethodInfo' JSIL.Internal.MethodGroupInfo  Outgoing dependencies: JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Internal.Comparer' JSIL.Internal.MemberType' JSIL.Internal.NamedMethodSignature' JSIL.Internal.MethodSignatureCollection' JSIL.Internal.ITypeInfoSource' JSIL.Internal.InterfaceToken' JSIL.Internal.RecursiveInterfaceToken' JSIL.Internal.RecursiveInterfaceTokenComparer' JSIL.Internal.TypeIdentifier' JSIL.Internal.ModuleInfo' JSIL.Internal.ProxyInfo' JSIL.Internal.MetadataCollection' JSIL.Internal.IMemberInfo' JSIL.Internal.FieldInfo' JSIL.Internal.PropertyInfo' JSIL.Internal.EventInfo' JSIL.Internal.MethodInfo' JSIL.Internal.MethodGroupInfo' JSIL.Internal.EnumMemberInfo
Broken Modularization,JSIL.Internal,IMemberInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: Identifier' DeclaringType' ReturnType' DeclaringProperty' DeclaringEvent' Metadata' Name' IsStatic' IsFromProxy' IsIgnored' IsUnstubbable' ReadPolicy' WritePolicy' InvokePolicy' Overrides
Broken Modularization,JSIL.Transforms,InitializationInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\FixupStructConstructorInvocations.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' Type' NewExpression' DefaultValueLiteral' ParentBinaryExpression' BinaryExpressionParent' Folded
Broken Modularization,JSIL.Transforms,LabelGroupLabelData,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\ControlFlowSimplifier.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' ExitTargetLabels' DirectExitLabel' RecursiveExitLabel' TimesUsedAsRecursiveExitTarget' UntargettedExitCount
Broken Modularization,JSIL.Transforms,IndexLookup,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' Statement' Field' SwitchVariable' OutputVariable' Goto' IsInverted
Insufficient Modularization,JSIL.Transforms,EliminateSingleUseTemporaries,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 104
Insufficient Modularization,JSIL.Transforms,EmulateStructAssignment,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EmulateStructAssignment.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 120
Cyclically-dependent Modularization,JSIL,FunctionCache,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.FunctionCache' JSIL.Transforms.StaticAnalyzer
Cyclically-dependent Modularization,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher
Cyclically-dependent Modularization,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.ILBlockTranslator' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL,JavascriptEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JavascriptEmitterGroupFactory' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL,TranslationResult,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TranslationResult' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL,TypeUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeUtil.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TypeUtil' JSIL.Transforms.SignatureCacher
Cyclically-dependent Modularization,JSIL.Ast.Enumerators,JSNodeChildren,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Enumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Enumerators,JSNodeChildrenRecursive,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Enumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Enumerators.JSNodeChildrenRecursive' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast,JSReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSReferenceExpression' JSIL.Ast.JSResultReferenceExpression
Cyclically-dependent Modularization,JSIL.Ast,JSMemberReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMemberReferenceExpression' JSIL.Ast.JSReferenceExpression
Cyclically-dependent Modularization,JSIL.Ast,JSNullExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNullExpression' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL.Ast,JSCastExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSCastExpression' JSIL.Ast.JSReferenceExpression
Cyclically-dependent Modularization,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariable' JSIL.Ast.JSParameter
Cyclically-dependent Modularization,JSIL.Ast,JSVariableDereference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariableDereference' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSVariableReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariableReference' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSOperator' JSIL.Ast.JSUnaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSStatement' JSIL.Ast.JSNullStatement
Cyclically-dependent Modularization,JSIL.Ast,NoExpectedTypeException,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.NoExpectedTypeException' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalData,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Internal,FunctionTransformPipeline,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionTransformPipeline.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.FunctionTransformPipeline' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.JavascriptFormatter' JSIL.Transforms.SignatureCacher
Cyclically-dependent Modularization,JSIL.Internal,MemberIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MemberIdentifier.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL.Internal,MethodSignatureSet,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodSignatureSet' JSIL.Internal.MethodSignatureCollection
Cyclically-dependent Modularization,JSIL.Internal,ITypeInfoSource,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.ITypeInfoSource' JSIL.Internal.ProxyInfo
Cyclically-dependent Modularization,JSIL.Internal,InterfaceToken,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.InterfaceToken' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,RecursiveInterfaceToken,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.RecursiveInterfaceToken' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,ModuleInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.ModuleInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,TypeInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource
Cyclically-dependent Modularization,JSIL.Internal,IMemberInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.IMemberInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,MemberInfo<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MemberInfo<T>' JSIL.Internal.PropertyInfo
Cyclically-dependent Modularization,JSIL.Internal,FieldInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.FieldInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,PropertyInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.PropertyInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,EventInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.EventInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,MethodInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,MethodGroupInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodGroupInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\Emitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IEmitterGroupFactory' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\Emitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IAstEmitter' JSIL.Transforms.SignatureCacher
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\IAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IAnalyzer' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IFunctionTransformer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\IAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IFunctionTransformer' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL.Threading,TrackedLockCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Threading.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Threading.TrackedLockCollection' JSIL.Threading.TrackedLock
Cyclically-dependent Modularization,JSIL.Threading,DeadlockAvertedException,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Threading.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Threading.DeadlockAvertedException' JSIL.Threading.TrackedLock
Cyclically-dependent Modularization,JSIL.Transforms,FunctionAnalysis2ndPass,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.FunctionCache
Cyclically-dependent Modularization,JSIL,IFunctionSource,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.IFunctionSource' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass
Cyclically-dependent Modularization,JSIL,FunctionCache,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.FunctionCache' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JavascriptAssemblyEmitter' JSIL.JavascriptEmitterGroupFactory' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.ILBlockTranslator' JSIL.AssemblyTranslator' JSIL.JavascriptEmitterGroupFactory
Cyclically-dependent Modularization,JSIL,BaseEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.BaseEmitterGroupFactory' JSIL.JavascriptEmitterGroupFactory' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL,TranslationResultCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TranslationResultCollection' JSIL.AssemblyTranslator' JSIL.TranslationResult
Cyclically-dependent Modularization,JSIL,TranslationResult,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TranslationResult' JSIL.JavascriptEmitterGroupFactory' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL,TranslationResult,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TranslationResult' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL,TypeUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeUtil.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL,TypeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TypeInfoProvider' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast.Enumerators,JSNodeChildren,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Enumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode' JSIL.Ast.Enumerators.JSNodeChildEnumerator
Cyclically-dependent Modularization,JSIL.Ast.Enumerators,JSNodeChildrenRecursive,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Enumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Enumerators.JSNodeChildrenRecursive' JSIL.Ast.JSNode' JSIL.Ast.Enumerators.JSNodeChildEnumerator
Cyclically-dependent Modularization,JSIL.Ast,JSResultReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSResultReferenceExpression' JSIL.Ast.JSReferenceExpression' JSIL.Ast.JSMemberReferenceExpression
Cyclically-dependent Modularization,JSIL.Ast,JSNullExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNullExpression' JSIL.Ast.JSExpression' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast,JSInvocationExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSInvocationExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSRawOutputIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSRawOutputIdentifier' JSIL.Transforms.SignatureCacher' JSIL.Internal.JavascriptFormatter
Cyclically-dependent Modularization,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariable' JSIL.Ast.JSParameter' JSIL.Ast.JSVariableDereference
Cyclically-dependent Modularization,JSIL.Ast,JSVariableReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariableReference' JSIL.Ast.JSVariable' JSIL.Ast.JSParameter
Cyclically-dependent Modularization,JSIL.Ast,JSDefaultValueLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSDefaultValueLiteral' JSIL.Ast.JSLiteral' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSNullLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNullLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSBooleanLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSBooleanLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSCharLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSCharLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSStringLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSStringLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSIntegerLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIntegerLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSDecimalLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSDecimalLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSNumberLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNumberLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSTypeNameLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSTypeNameLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSAssemblyNameLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSAssemblyNameLiteral' JSIL.Ast.JSLiteral' JSIL.Ast.JSLiteralBase<T>
Cyclically-dependent Modularization,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSOperator' JSIL.Ast.JSUnaryOperator' JSIL.Ast.JSUnaryMutationOperator
Cyclically-dependent Modularization,JSIL.Ast,JSBinaryOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSBinaryOperator' JSIL.Ast.JSArithmeticOperator' JSIL.Ast.JSOperator
Cyclically-dependent Modularization,JSIL.Ast,JSBitwiseOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSBitwiseOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSComparisonOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSComparisonOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSLogicalOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLogicalOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSAssignmentOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSAssignmentOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSExpression' JSIL.Ast.JSNode' JSIL.Ast.Enumerators.JSNodeChildren
Cyclically-dependent Modularization,JSIL.Ast,JSLiteralBase<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLiteralBase<T>' JSIL.Ast.JSDefaultValueLiteral' JSIL.Ast.JSLiteral
Cyclically-dependent Modularization,JSIL.Ast,NoExpectedTypeException,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.NoExpectedTypeException' JSIL.Ast.JSExpression' JSIL.Ast.JSNullExpression
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalData,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalArrayFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalArrayFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalListFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalListFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalEnumerableFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalEnumerableFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalMethodRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalMethodRecord' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Internal,FunctionTransformPipeline,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionTransformPipeline.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.JavascriptFormatter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,Comparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MemberIdentifier.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.Comparer' JSIL.Internal.ProxyInfo' JSIL.Internal.ITypeInfoSource
Cyclically-dependent Modularization,JSIL.Internal,MethodSignature,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodSignature' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,MethodSignatureCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodSignatureCollection' JSIL.Internal.TypeInfo' JSIL.Internal.MethodInfo
Cyclically-dependent Modularization,JSIL.Internal,PackedArrayUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\PackedStructArray.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.PackedArrayUtil' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,ITypeInfoSource,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.ITypeInfoSource' JSIL.Internal.TypeInfo' JSIL.Internal.ModuleInfo
Cyclically-dependent Modularization,JSIL.Internal,InterfaceToken,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.InterfaceToken' JSIL.Internal.RecursiveInterfaceToken' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,InterfaceToken,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.InterfaceToken' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource
Cyclically-dependent Modularization,JSIL.Internal,RecursiveInterfaceTokenComparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.RecursiveInterfaceTokenComparer' JSIL.Internal.TypeInfo' JSIL.Internal.RecursiveInterfaceToken
Cyclically-dependent Modularization,JSIL.Internal,ProxyInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.ProxyInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,TypeInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,IMemberInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.IMemberInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,MemberInfo<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MemberInfo<T>' JSIL.Internal.FieldInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,FieldInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.FieldInfo' JSIL.Internal.TypeInfo' JSIL.Internal.PackedArrayUtil
Cyclically-dependent Modularization,JSIL.Internal,PropertyInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.PropertyInfo' JSIL.Internal.IMemberInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,EventInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.EventInfo' JSIL.Internal.IMemberInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,MethodInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodInfo' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,MethodGroupInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodGroupInfo' JSIL.Internal.MethodInfo' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,OverrideInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.OverrideInfo' JSIL.Internal.IMemberInfo' JSIL.Internal.ITypeInfoSource
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\Emitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IEmitterGroupFactory' JSIL.AssemblyTranslator' JSIL.TranslationResult
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\Emitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IEmitterGroupFactory' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\Emitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IAstEmitter' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\IAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IAnalyzer' JSIL.Compiler.Extensibility.IEmitterGroupFactory' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\IAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IAnalyzer' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IFunctionTransformer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\IAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IFunctionTransformer' JSIL.ILBlockTranslator' JSIL.AssemblyTranslator
Cyclically-dependent Modularization,JSIL.Threading,TrackedLockCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Threading.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Threading.TrackedLockCollection' JSIL.Threading.TrackedLock' JSIL.Threading.DeadlockAvertedException
Cyclically-dependent Modularization,JSIL.Transforms,GenericParameterComparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\CacheSignatures.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.GenericParameterComparer' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL,IFunctionSource,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.IFunctionSource' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass
Cyclically-dependent Modularization,JSIL,FunctionCache,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.FunctionCache' JSIL.AssemblyTranslator' JSIL.Compiler.Extensibility.IFunctionTransformer' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL,JavascriptAssemblyEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAssemblyEmitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JavascriptAssemblyEmitter' JSIL.JavascriptEmitterGroupFactory' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.JSILIdentifier
Cyclically-dependent Modularization,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.ILBlockTranslator' JSIL.AssemblyTranslator' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache
Cyclically-dependent Modularization,JSIL,BaseEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.BaseEmitterGroupFactory' JSIL.JavascriptEmitterGroupFactory' JSIL.AssemblyTranslator' JSIL.TranslationResult
Cyclically-dependent Modularization,JSIL,BaseEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.BaseEmitterGroupFactory' JSIL.JavascriptEmitterGroupFactory' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL,TranslationResultCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TranslationResultCollection' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator' JSIL.TranslationResult
Cyclically-dependent Modularization,JSIL,TranslationResult,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TranslationResult.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TranslationResult' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator' JSIL.FunctionCache
Cyclically-dependent Modularization,JSIL,TypeUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeUtil.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TypeUtil' JSIL.Internal.ProxyInfo' JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL,TypeUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeUtil.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression' JSIL.Ast.JSNullExpression
Cyclically-dependent Modularization,JSIL,TypeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TypeInfoProvider' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL,TypeInfoProvider,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInfoProvider.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.TypeInfoProvider' JSIL.Transforms.SignatureCacher' JSIL.JavascriptAstEmitter' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast.Enumerators,JSNodeChildren,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Enumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildEnumerator
Cyclically-dependent Modularization,JSIL.Ast.Enumerators,JSNodeChildren,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Enumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode' JSIL.Ast.Enumerators.JSNodeChildrenRecursive' JSIL.Ast.Enumerators.JSNodeChildEnumerator
Cyclically-dependent Modularization,JSIL.Ast.Enumerators,JSNodeChildrenRecursive,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Enumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Enumerators.JSNodeChildrenRecursive' JSIL.Ast.JSNode' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildEnumerator
Cyclically-dependent Modularization,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSFunctionExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSNullExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNullExpression' JSIL.Ast.JSExpression' JSIL.Ast.JSNode' JSIL.Ast.Enumerators.JSNodeChildren
Cyclically-dependent Modularization,JSIL.Ast,JSIgnoredTypeReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIgnoredTypeReference' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSMethodOfExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMethodOfExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MethodInfo
Cyclically-dependent Modularization,JSIL.Ast,JSMethodPointerInfoExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMethodPointerInfoExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MethodInfo
Cyclically-dependent Modularization,JSIL.Ast,JSIndexerExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIndexerExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSNewExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNewExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSInvocationExpression
Cyclically-dependent Modularization,JSIL.Ast,JSInvocationExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSInvocationExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSArrayExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSArrayExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSCastExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSCastExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSValueOfNullableExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSValueOfNullableExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSChangeTypeExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSChangeTypeExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSPointerExpressionUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSPointerExpressionUtil' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSReadThroughPointerExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSReadThroughPointerExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSOverflowCheckExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSOverflowCheckExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSLocalCachedSignatureExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLocalCachedSignatureExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MethodSignature
Cyclically-dependent Modularization,JSIL.Ast,JSRawOutputIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSRawOutputIdentifier' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSMethod,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMethod' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariable' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSVariableDereference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariableDereference' JSIL.Ast.JSVariable' JSIL.Ast.JSParameter' JSIL.Ast.JSVariableReference
Cyclically-dependent Modularization,JSIL.Ast,JSDefaultValueLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSDefaultValueLiteral' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSUnaryOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSUnaryOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSBinaryOperator' JSIL.Ast.JSArithmeticOperator
Cyclically-dependent Modularization,JSIL.Ast,JSBitwiseOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSBitwiseOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSUnaryOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSComparisonOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSComparisonOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSUnaryOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSLogicalOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLogicalOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSUnaryOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSAssignmentOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSAssignmentOperator' JSIL.Ast.JSOperator' JSIL.Ast.JSUnaryOperator' JSIL.Ast.JSBinaryOperator
Cyclically-dependent Modularization,JSIL.Ast,JSIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLiteral' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL.Ast,NoExpectedTypeException,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.NoExpectedTypeException' JSIL.Ast.JSExpression' JSIL.Ast.JSNode' JSIL.Ast.JSNullExpression
Cyclically-dependent Modularization,JSIL.Ast,StaticAnalysisJSAstVisitor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\StaticAnalysisAstVisitor.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.StaticAnalysisJSAstVisitor' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalElementRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalElementRecord' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalArrayRecordState,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalArrayRecordState' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalArrayRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalArrayRecord' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalArrayFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalArrayFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalListFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalListFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalEnumerableFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalEnumerableFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalMethodRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalMethodRecord' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.JavascriptFormatter' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,Comparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MemberIdentifier.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.Comparer' JSIL.Internal.ProxyInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.QualifiedMemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,NamedMethodSignature,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.NamedMethodSignature' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.MethodSignature
Cyclically-dependent Modularization,JSIL.Internal,MethodSignatureCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodSignatureCollection' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.Comparer
Cyclically-dependent Modularization,JSIL.Internal,PackedArrayUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\PackedStructArray.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.PackedArrayUtil' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSInvocationExpression
Cyclically-dependent Modularization,JSIL.Internal,ITypeInfoSource,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil' JSIL.Internal.TypeInfo' JSIL.Internal.ModuleInfo
Cyclically-dependent Modularization,JSIL.Internal,InterfaceToken,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.InterfaceToken' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,RecursiveInterfaceToken,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.RecursiveInterfaceToken' JSIL.Internal.RecursiveInterfaceTokenComparer' JSIL.Internal.TypeInfo' JSIL.Internal.InterfaceToken
Cyclically-dependent Modularization,JSIL.Internal,RecursiveInterfaceToken,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.RecursiveInterfaceToken' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.InterfaceToken
Cyclically-dependent Modularization,JSIL.Internal,RecursiveInterfaceTokenComparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.RecursiveInterfaceTokenComparer' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,TypeInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,IMemberInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.IMemberInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,MemberInfo<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MemberInfo<T>' JSIL.Internal.FieldInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource
Cyclically-dependent Modularization,JSIL.Internal,FieldInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.FieldInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,PropertyInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.PropertyInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,EventInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.EventInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,MethodInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,MethodGroupInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodGroupInfo' JSIL.Internal.MethodInfo' JSIL.Internal.MethodSignatureCollection' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Internal,MethodGroupInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodGroupInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,MethodTypeFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodTypeFactory' JSIL.Ast.JSFunctionExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,OverrideInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.OverrideInfo' JSIL.Internal.IMemberInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\Emitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IEmitterGroupFactory' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator' JSIL.FunctionCache
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\Emitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.JavascriptAstEmitter
Cyclically-dependent Modularization,JSIL.Compiler.Extensibility,IAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Extensibility\IAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Compiler.Extensibility.IAnalyzer' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator' JSIL.FunctionCache
Cyclically-dependent Modularization,JSIL.Transforms,GenericParameterComparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\CacheSignatures.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.GenericParameterComparer' JSIL.Transforms.SignatureCacher' JSIL.JavascriptAstEmitter' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Transforms,ConvertPropertyAccessesToInvocations,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ConvertPropertyAccessesToInvocations.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.ConvertPropertyAccessesToInvocations' JSIL.Internal.FunctionTransformPipeline' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL.Transforms,EliminatePointlessFinallyBlocks,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminatePointlessFinallyBlocks.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.EliminatePointlessFinallyBlocks' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass
Cyclically-dependent Modularization,JSIL.Transforms,StaticAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.StaticAnalyzer' JSIL.Transforms.EmulateStructAssignment' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache
Cyclically-dependent Modularization,JSIL.Transforms,StaticAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.StaticAnalyzer' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,FunctionAnalysis2ndPass,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.FunctionCache' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL,IFunctionSource,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\FunctionCache.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.IFunctionSource' JSIL.Transforms.DecomposeMutationOperators' JSIL.ILBlockTranslator' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass
Cyclically-dependent Modularization,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSInvocationExpression' JSIL.JSILIdentifier
Cyclically-dependent Modularization,JSIL,AssemblyTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.AssemblyTranslator' JSIL.Internal.FunctionTransformPipeline' JSIL.Compiler.Extensibility.IFunctionTransformer' JSIL.ILBlockTranslator' JSIL.FunctionCache
Cyclically-dependent Modularization,JSIL,JSILIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\SpecialIdentifiers.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.JSILIdentifier' JSIL.Ast.JSReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSAstVisitor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSAstVisitor.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSAstVisitor' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable' JSIL.Ast.JSFunctionExpression
Cyclically-dependent Modularization,JSIL.Ast,JSFunctionExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSFunctionExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier' JSIL.Ast.JSMethod
Cyclically-dependent Modularization,JSIL.Ast,JSMemberReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMemberReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSReferenceExpression
Cyclically-dependent Modularization,JSIL.Ast,JSEliminatedVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSEliminatedVariable' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSIgnoredMemberReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIgnoredMemberReference' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.FieldInfo
Cyclically-dependent Modularization,JSIL.Ast,JSMethodOfExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMethodOfExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier' JSIL.Ast.JSMethod
Cyclically-dependent Modularization,JSIL.Ast,JSMethodPointerInfoExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMethodPointerInfoExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier' JSIL.Ast.JSMethod
Cyclically-dependent Modularization,JSIL.Ast,JSDotExpressionBase,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSDotExpressionBase' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSDotExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSDotExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSFieldAccess,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSFieldAccess' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.PackedArrayUtil
Cyclically-dependent Modularization,JSIL.Ast,JSIndexerExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIndexerExpression' JSIL.Ast.JSReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSNewExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNewExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSInvocationExpression
Cyclically-dependent Modularization,JSIL.Ast,JSArrayExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSArrayExpression' JSIL.JSILIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSBinaryOperatorExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSBinaryOperatorExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL.Ast,JSAsExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSAsExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSCastExpression
Cyclically-dependent Modularization,JSIL.Ast,JSCastExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSCastExpression' JSIL.Ast.JSReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSValueOfNullableExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSValueOfNullableExpression' JSIL.JSILIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSChangeTypeExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSChangeTypeExpression' JSIL.Ast.JSReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSWriteThroughReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSWriteThroughReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSReadThroughReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSReadThroughReferenceExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSPointerExpressionUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSPointerExpressionUtil' JSIL.Ast.JSWriteThroughPointerExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSReadThroughPointerExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSReadThroughPointerExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSPointerExpressionUtil
Cyclically-dependent Modularization,JSIL.Ast,JSLocalCachedSignatureExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLocalCachedSignatureExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL.Ast,JSLocalCachedInterfaceMemberExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLocalCachedInterfaceMemberExpression' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression
Cyclically-dependent Modularization,JSIL.Ast,JSPropertySetterInvocation,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSPropertySetterInvocation' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSInvocationExpression
Cyclically-dependent Modularization,JSIL.Ast,JSStringIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSStringIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSRawOutputIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSRawOutputIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSAssembly,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSAssembly' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSType,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSType' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSFieldOfExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSFieldOfExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.FieldInfo
Cyclically-dependent Modularization,JSIL.Ast,JSMethod,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSMethod' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSCachedMethod,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSCachedMethod' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MethodInfo
Cyclically-dependent Modularization,JSIL.Ast,JSFakeMethod,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSFakeMethod' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSIdentifier
Cyclically-dependent Modularization,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSVariable' JSIL.Ast.JSFunctionExpression' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSClosureVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSClosureVariable' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSIndirectVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIndirectVariable' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,JSDefaultValueLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSDefaultValueLiteral' JSIL.Ast.JSVariable' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSEnumLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSLiteralTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSEnumLiteral' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.TypeInfo
Cyclically-dependent Modularization,JSIL.Ast,JSNode,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSNode' JSIL.Ast.Traversal.JSNodeTraversalFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren
Cyclically-dependent Modularization,JSIL.Ast,JSIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSIdentifier' JSIL.JSILIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Ast,JSLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSLiteral' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSDefaultValueLiteral
Cyclically-dependent Modularization,JSIL.Ast,JSTryCatchBlock,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.JSTryCatchBlock' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Ast.JSVariable
Cyclically-dependent Modularization,JSIL.Ast,StaticAnalysisJSAstVisitor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\StaticAnalysisAstVisitor.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.StaticAnalysisJSAstVisitor' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalElementRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalElementRecord' JSIL.Ast.Traversal.JSNodeTraversalFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalArrayRecordState,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalArrayRecordState' JSIL.Ast.Traversal.JSNodeTraversalArrayRecord' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalArrayRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalArrayRecord' JSIL.Ast.Traversal.JSNodeTraversalArrayFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalArrayFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalArrayFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalListFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalListFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalEnumerableFieldRecord<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalEnumerableFieldRecord<T>' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Ast.Traversal,JSNodeTraversalMethodRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Ast.Traversal.JSNodeTraversalMethodRecord' JSIL.Ast.Traversal.JSNodeTraversalData' JSIL.Ast.Enumerators.JSNodeChildEnumerator' JSIL.Ast.Enumerators.JSNodeChildren' JSIL.Ast.JSNode
Cyclically-dependent Modularization,JSIL.Internal,JavascriptFormatter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptFormatter.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.JavascriptFormatter' JSIL.Ast.JSRawOutputIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,Comparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MemberIdentifier.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.Comparer' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier' JSIL.Internal.QualifiedMemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,QualifiedMemberIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MemberIdentifier.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.QualifiedMemberIdentifier' JSIL.Ast.JSMethod' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,MethodSignature,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodSignature' JSIL.Internal.NamedMethodSignature' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,MethodSignatureSet,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodSignatureSet' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MethodSignature
Cyclically-dependent Modularization,JSIL.Internal,MethodSignatureCollection,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MethodSignature.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodSignatureCollection' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.QualifiedMemberIdentifier' JSIL.Internal.Comparer
Cyclically-dependent Modularization,JSIL.Internal,PackedArrayUtil,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\PackedStructArray.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.PackedArrayUtil' JSIL.Internal.FieldInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,ITypeInfoSource,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression' JSIL.TypeUtil' JSIL.Internal.TypeInfo' JSIL.Internal.ModuleInfo
Cyclically-dependent Modularization,JSIL.Internal,RecursiveInterfaceTokenComparer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.RecursiveInterfaceTokenComparer' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,ProxyInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.ProxyInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,TypeInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Internal.MemberIdentifier' JSIL.Ast.JSExpression' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,IMemberInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.IMemberInfo' JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,MemberInfo<T>,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MemberInfo<T>' JSIL.Internal.MethodInfo' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,FieldInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.FieldInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,PropertyInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.PropertyInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,EventInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.EventInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Internal,MethodInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodInfo' JSIL.Internal.TypeInfo' JSIL.Internal.ITypeInfoSource' JSIL.Ast.JSExpression' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,MethodTypeFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.MethodTypeFactory' JSIL.JSILIdentifier' JSIL.JavascriptAstEmitter' JSIL.Transforms.SignatureCacher' JSIL.TypeUtil
Cyclically-dependent Modularization,JSIL.Internal,OverrideInfo,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\TypeInformation.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Internal.OverrideInfo' JSIL.Internal.IMemberInfo' JSIL.Internal.ITypeInfoSource' JSIL.TypeUtil' JSIL.Internal.MemberIdentifier
Cyclically-dependent Modularization,JSIL.Transforms,SynthesizePropertySetterReturnValues,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SynthesizePropertySetterReturnValues.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.SynthesizePropertySetterReturnValues' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,HoistAllocations,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\AllocationHoisting.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.HoistAllocations' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,EliminatePointlessRetargeting,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminatePointlessRetargeting.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.EliminatePointlessRetargeting' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,UnsafeCodeTransforms,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\UnsafeCodeTransforms.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.UnsafeCodeTransforms' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,ConvertPropertyAccessesToInvocations,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ConvertPropertyAccessesToInvocations.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.ConvertPropertyAccessesToInvocations' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.AssemblyTranslator' JSIL.ILBlockTranslator
Cyclically-dependent Modularization,JSIL.Transforms,OptimizePropertyMutationAssignments,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\OptimizePropertyMutationAssignments.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.OptimizePropertyMutationAssignments' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,IntroduceEnumCasts,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceEnumCasts.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.IntroduceEnumCasts' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,OptimizeArrayEnumerators,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\OptimizeArrayEnumerators.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.OptimizeArrayEnumerators' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,EliminatePointlessFinallyBlocks,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminatePointlessFinallyBlocks.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.EliminatePointlessFinallyBlocks' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,EliminateSingleUseTemporaries,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.EliminateSingleUseTemporaries' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,IntroduceVariableReferences,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableReferences.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.IntroduceVariableReferences' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Cyclically-dependent Modularization,JSIL.Transforms,EmulateStructAssignment,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EmulateStructAssignment.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JSIL.Transforms.EmulateStructAssignment' JSIL.Internal.FunctionTransformPipeline' JSIL.FunctionCache' JSIL.Transforms.FunctionAnalysis2ndPass' JSIL.IFunctionSource
Rebellious Hierarchy,JSIL,DefinitelyTypedBaseEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: EmitHeader' EmitFooter' EmitAssemblyEntryPoint' EmitTypeAlias' EmitCustomAttributes' EmitMethodDefinition' EmitSpacer' EmitSemicolon' EmitProxyComment' EmitEvent' EmitProperty' EmitField' EmitConstant' EmitPrimitiveDefinition' BeginEmitTypeDeclaration' BeginEmitTypeDefinition' EndEmitTypeDefinition' EmitInterfaceList' EmitCachedValues' EmitFunctionBody' EmitAssemblyReferences
Rebellious Hierarchy,JSIL,DefinitelyTypedEmptyAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\DefinitelyTypedAssemblyEmitter.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: Emit
Missing Hierarchy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSIfStatement' JSBinaryOperatorExpression (in method "NeedParensForBinaryOperator" of class "JavascriptAstEmitter").
Missing Hierarchy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSDoLoop' JSLogicalOperator (in method "NeedParensForBinaryOperator" of class "JavascriptAstEmitter").
Missing Hierarchy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSUntranslatableExpression' JSAssignmentOperator (in method "VisitNode" of class "JavascriptAstEmitter").
Missing Hierarchy,JSIL,JavascriptAstEmitter,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\JavascriptAstEmitter.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSInvocationExpressionBase' JSAssignmentOperator (in method "VisitNode" of class "JavascriptAstEmitter").
Missing Hierarchy,JSIL,ILBlockTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\ILBlockTranslator.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSUntranslatableExpression' JSAssignmentOperator (in method "Translate_BinaryOp_Pointer" of class "ILBlockTranslator").
Missing Hierarchy,JSIL,AssemblyTranslator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSDefaultValueLiteral' JSNewExpression' JSEnumLiteral (in method "TranslateField" of class "AssemblyTranslator").
Rebellious Hierarchy,JSIL,BaseEmitterGroupFactory,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AssemblyTranslator.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: MakeAssemblyEmitterFactory
Wide Hierarchy,JSIL.Ast,JSAstVisitor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSAstVisitor.cs,The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: JSIL.JavascriptAstEmitter' JSIL.Ast.StaticAnalysisJSAstVisitor' JSIL.Transforms.TypeExpressionCacher' JSIL.Transforms.SignatureCacher' JSIL.Transforms.BaseMethodCacher' JSIL.Transforms.AttachSymbolInfoToStatements' JSIL.Transforms.FixSymbolInfo' JSIL.Transforms.SynthesizePropertySetterReturnValues' JSIL.Transforms.IntroducePackedArrays' JSIL.Transforms.UnsafeCodeTransforms' JSIL.Transforms.DecomposeMutationOperators' JSIL.Transforms.FixupStructConstructorInvocations' JSIL.Transforms.EmulateInt64' JSIL.Transforms.CollapseNulls' JSIL.Transforms.ConvertPropertyAccessesToInvocations' JSIL.Transforms.OptimizePropertyMutationAssignments' JSIL.Transforms.HandleBooleanAsInteger' JSIL.Transforms.ControlFlowSimplifier' JSIL.Transforms.ExpandCastExpressions' JSIL.Transforms.IntroduceCharCasts' JSIL.Transforms.LoopNameDetector' JSIL.Transforms.LabelAnalyzer' JSIL.Transforms.LabelHoister' JSIL.Transforms.LabelGroupFlattener' JSIL.Transforms.EmptyLabelRemover' JSIL.Transforms.DeoptimizeSwitchStatements' JSIL.Transforms.ReplaceMethodCalls' JSIL.Transforms.IntroduceEnumCasts' JSIL.Transforms.SimplifyLoops' JSIL.Transforms.PropertyAccessReplacer' JSIL.Transforms.StaticAnalyzer' JSIL.Transforms.VariableExtractor' JSIL.Transforms.VariableEliminator' JSIL.Transforms.SimplifyOperators' JSIL.Transforms.IntroduceVariableReferences' JSIL.Transforms.VariableReferenceAccessTransformer' JSIL.Transforms.CountVariableReferences' JSIL.Transforms.IntroduceVariableDeclarations
Broken Hierarchy,JSIL.Ast,JSFlowControlExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Cyclic Hierarchy,JSIL.Ast,JSReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSResultReferenceExpression
Cyclic Hierarchy,JSIL.Ast,JSReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSMemberReferenceExpression
Missing Hierarchy,JSIL.Ast,JSReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSNewPackedArrayElementReference' JSAssignmentOperator (in method "TryDereference" of class "JSReferenceExpression").
Broken Hierarchy,JSIL.Ast,JSMemberReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSReferenceExpression
Rebellious Hierarchy,JSIL.Ast,JSNullExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: ReplaceChild
Broken Hierarchy,JSIL.Ast,JSEliminatedVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSNullExpression
Broken Hierarchy,JSIL.Ast,JSIgnoredExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Rebellious Hierarchy,JSIL.Ast,JSIgnoredMemberReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: ReplaceChild
Rebellious Hierarchy,JSIL.Ast,JSIgnoredTypeReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: ReplaceChild
Broken Hierarchy,JSIL.Ast,JSInvocationExpressionBase,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Broken Hierarchy,JSIL.Ast,JSOperatorExpressionBase,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Broken Hierarchy,JSIL.Ast,JSSpecialNumericCastExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Rebellious Hierarchy,JSIL.Ast,JSWriteThroughReferenceExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: CheckInvariant
Rebellious Hierarchy,JSIL.Ast,JSWriteThroughPointerExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: CheckInvariant
Broken Hierarchy,JSIL.Ast,JSPointerDeltaExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperatorExpression
Broken Hierarchy,JSIL.Ast,JSPointerComparisonExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperatorExpression
Broken Hierarchy,JSIL.Ast,JSNewArrayElementReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSNewReference
Broken Hierarchy,JSIL.Ast,JSRetargetPackedArrayElementProxy,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Broken Hierarchy,JSIL.Ast,JSUInt32MultiplyExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperatorExpression
Broken Hierarchy,JSIL.Ast,JSInt32MultiplyExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperatorExpression
Broken Hierarchy,JSIL.Ast,JSFieldDeclaration,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Broken Hierarchy,JSIL.Ast,JSConstantDeclaration,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSExpressionTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Rebellious Hierarchy,JSIL.Ast,JSReflectionAssembly,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: ToLiteral
Broken Hierarchy,JSIL.Ast,JSTypeReference,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSType
Broken Hierarchy,JSIL.Ast,JSCachedType,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSType
Broken Hierarchy,JSIL.Ast,JSFieldOfExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSField
Broken Hierarchy,JSIL.Ast,JSCachedMethod,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSMethod
Cyclic Hierarchy,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSParameter
Cyclic Hierarchy,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSVariableDereference
Cyclic Hierarchy,JSIL.Ast,JSVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSVariableReference
Broken Hierarchy,JSIL.Ast,JSClosureVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSVariable
Broken Hierarchy,JSIL.Ast,JSTemporaryVariable,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSIdentifierTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSVariable
Cyclic Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSUnaryOperator
Cyclic Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSUnaryMutationOperator
Cyclic Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSArithmeticOperator
Cyclic Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSBitwiseOperator
Cyclic Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSComparisonOperator
Cyclic Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSLogicalOperator
Cyclic Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSAssignmentOperator
Rebellious Hierarchy,JSIL.Ast,JSOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: ToString
Broken Hierarchy,JSIL.Ast,JSUnaryMutationOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSUnaryOperator
Broken Hierarchy,JSIL.Ast,JSArithmeticOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperator
Broken Hierarchy,JSIL.Ast,JSBitwiseOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperator
Broken Hierarchy,JSIL.Ast,JSComparisonOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperator
Broken Hierarchy,JSIL.Ast,JSLogicalOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperator
Broken Hierarchy,JSIL.Ast,JSAssignmentOperator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSBinaryOperator
Cyclic Hierarchy,JSIL.Ast,JSNode,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSExpression
Wide Hierarchy,JSIL.Ast,JSExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: JSIL.Ast.JSFunctionExpression' JSIL.Ast.JSThrowExpression' JSIL.Ast.JSFlowControlExpression' JSIL.Ast.JSWrapExpression' JSIL.Ast.JSReferenceExpression' JSIL.Ast.JSPassByReferenceExpression' JSIL.Ast.JSNullExpression' JSIL.Ast.JSIgnoredExpression' JSIL.Ast.JSPublicInterfaceOfExpression' JSIL.Ast.JSInitializedObject' JSIL.Ast.JSDotExpressionBase' JSIL.Ast.JSIndexerExpression' JSIL.Ast.JSNewExpression' JSIL.Ast.JSNewArrayExpression' JSIL.Ast.JSInvocationExpressionBase' JSIL.Ast.JSArrayExpression' JSIL.Ast.JSPairExpression' JSIL.Ast.JSMemberDescriptor' JSIL.Ast.JSObjectExpression' JSIL.Ast.JSOperatorExpressionBase' JSIL.Ast.JSTernaryOperatorExpression' JSIL.Ast.JSIsExpression' JSIL.Ast.JSCastExpression' JSIL.Ast.JSNullableCastExpression' JSIL.Ast.JSSpecialNumericCastExpression' JSIL.Ast.JSValueOfNullableExpression' JSIL.Ast.JSChangeTypeExpression' JSIL.Ast.JSStructCopyExpression' JSIL.Ast.JSCommaExpression' JSIL.Ast.JSReadThroughReferenceExpression' JSIL.Ast.JSPinExpression' JSIL.Ast.JSReadThroughPointerExpression' JSIL.Ast.JSPointerCastExpression' JSIL.Ast.JSPointerAddExpression' JSIL.Ast.JSOverflowCheckExpression' JSIL.Ast.JSSizeOfExpression' JSIL.Ast.JSLocalCachedSignatureExpression' JSIL.Ast.JSCachedInterfaceMemberExpression' JSIL.Ast.JSLocalCachedInterfaceMemberExpression' JSIL.Ast.JSNewBoxedVariable' JSIL.Ast.JSNewReference' JSIL.Ast.JSPinValueExpression' JSIL.Ast.JSNewPackedArrayElementProxy' JSIL.Ast.JSRetargetPackedArrayElementProxy' JSIL.Ast.JSNullCoalesceExpression' JSIL.Ast.JSPropertySetterInvocation' JSIL.Ast.JSFieldDeclaration' JSIL.Ast.JSConstantDeclaration' JSIL.Ast.JSIdentifier' JSIL.Ast.JSLiteral
Cyclic Hierarchy,JSIL.Ast,JSExpression,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSNullExpression
Wide Hierarchy,JSIL.Ast,JSIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: JSIL.JSILIdentifier' JSIL.Ast.JSStringIdentifier' JSIL.Ast.JSRawOutputIdentifier' JSIL.Ast.JSAssembly' JSIL.Ast.JSType' JSIL.Ast.JSField' JSIL.Ast.JSProperty' JSIL.Ast.JSMethod' JSIL.Ast.JSFakeMethod' JSIL.Ast.JSVariable
Broken Hierarchy,JSIL.Ast,JSLiteral,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSExpression
Wide Hierarchy,JSIL.Ast,JSStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: JSIL.Ast.JSNullStatement' JSIL.Ast.JSNoOpStatement' JSIL.Ast.JSBlockStatement' JSIL.Ast.JSLabelGroupStatement' JSIL.Ast.JSVariableDeclarationStatement' JSIL.Ast.JSExpressionStatement' JSIL.Ast.JSSwitchCase' JSIL.Ast.JSSwitchStatement' JSIL.Ast.JSIfStatement' JSIL.Ast.JSTryCatchBlock
Cyclic Hierarchy,JSIL.Ast,JSStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSNodeTypes.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: JSNullStatement
Rebellious Hierarchy,JSIL.Ast,JSNullStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: ReplaceChild
Rebellious Hierarchy,JSIL.Ast,JSNoOpStatement,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\JSStatementTypes.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: ReplaceChild
Broken Hierarchy,JSIL.Ast,StaticAnalysisJSAstVisitor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\StaticAnalysisAstVisitor.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Ast.Traversal,JSNodeTraversalElementRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.Traversal.JSNodeTraversalRecord
Broken Hierarchy,JSIL.Ast.Traversal,JSNodeTraversalArrayRecord,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\AST\Traversal.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.Traversal.JSNodeTraversalRecord
Rebellious Hierarchy,JSIL.Internal,MemberIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MemberIdentifier.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: Equals
Rebellious Hierarchy,JSIL.Internal,QualifiedMemberIdentifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\MemberIdentifier.cs,The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: Equals
Broken Hierarchy,JSIL.Transforms,TypeExpressionCacher,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\CacheTypeExpressions.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,SignatureCacher,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\CacheSignatures.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,BaseMethodCacher,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\CacheBaseMethods.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,AttachSymbolInfoToStatements,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\AttachSymbolInfoToStatements.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,SynthesizePropertySetterReturnValues,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SynthesizePropertySetterReturnValues.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,IntroducePackedArrays,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroducePackedArrays.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,UnsafeCodeTransforms,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\UnsafeCodeTransforms.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,DecomposeMutationOperators,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DecomposeMutationOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,FixupStructConstructorInvocations,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\FixupStructConstructorInvocations.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,EmulateInt64,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\EmulateInt64.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,CollapseNulls,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\CollapseNulls.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,ConvertPropertyAccessesToInvocations,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ConvertPropertyAccessesToInvocations.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,OptimizePropertyMutationAssignments,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\OptimizePropertyMutationAssignments.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,HandleBooleanAsInteger,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\HandleBooleanAsInteger.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,ControlFlowSimplifier,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\ControlFlowSimplifier.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,ExpandCastExpressions,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ExpandCastExpressions.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,IntroduceCharCasts,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceCharCasts.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,LoopNameDetector,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\RemoveUnusedLoopNames.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,LabelAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,LabelHoister,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,LabelGroupFlattener,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,EmptyLabelRemover,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\LabelGroupBuilder.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,DeoptimizeSwitchStatements,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\DeoptimizeSwitchStatements.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,ReplaceMethodCalls,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\ReplaceMethodCalls.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,IntroduceEnumCasts,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceEnumCasts.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Missing Hierarchy,JSIL.Transforms,SimplifyLoops,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyLoops.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSAssignmentOperator' JSVariable' JSBooleanLiteral (in method "VisitNode" of class "SimplifyLoops").
Missing Hierarchy,JSIL.Transforms,SimplifyLoops,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyLoops.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSAssignmentOperator' JSSwitchStatement (in method "VisitNode" of class "SimplifyLoops").
Broken Hierarchy,JSIL.Transforms,SimplifyLoops,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyLoops.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,PropertyAccessReplacer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\OptimizeArrayEnumerators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Missing Hierarchy,JSIL.Transforms,StaticAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSDotExpressionBase' JSWriteThroughReferenceExpression (in method "VisitNode" of class "StaticAnalyzer").
Broken Hierarchy,JSIL.Transforms,StaticAnalyzer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,VariableExtractor,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\StaticAnalyzer.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Missing Hierarchy,JSIL.Transforms,EliminateSingleUseTemporaries,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSDefaultValueLiteral' JSUnaryOperatorExpression (in method "IsEffectivelyConstant" of class "EliminateSingleUseTemporaries").
Broken Hierarchy,JSIL.Transforms,VariableEliminator,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EliminateSingleUseTemporaries.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,SimplifyOperators,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\SimplifyOperators.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,IntroduceVariableReferences,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableReferences.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Missing Hierarchy,JSIL.Transforms,VariableReferenceAccessTransformer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableReferences.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSFunctionExpression' JSWriteThroughReferenceExpression (in method "VisitNode" of class "VariableReferenceAccessTransformer").
Missing Hierarchy,JSIL.Transforms,VariableReferenceAccessTransformer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableReferences.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSAssignmentOperator' JSVariableDeclarationStatement (in method "VisitNode" of class "VariableReferenceAccessTransformer").
Broken Hierarchy,JSIL.Transforms,VariableReferenceAccessTransformer,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableReferences.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Missing Hierarchy,JSIL.Transforms,EmulateStructAssignment,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EmulateStructAssignment.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: JSValueOfNullableExpression' JSDefaultValueLiteral (in method "IsCopyNeeded" of class "EmulateStructAssignment").
Broken Hierarchy,JSIL.Transforms,CountVariableReferences,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\StaticAnalysis\EmulateStructAssignment.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
Broken Hierarchy,JSIL.Transforms,IntroduceVariableDeclarations,D:\research\architectureSmells\repos1\sq_JSIL\JSIL\Transforms\IntroduceVariableDeclarations.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): JSIL.Ast.JSAstVisitor
