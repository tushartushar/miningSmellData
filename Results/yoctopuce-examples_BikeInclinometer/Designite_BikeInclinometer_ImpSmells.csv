Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,Cyclomatic complexity of the method is 9
Long Parameter List,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The method has 6 parameters.
Long Statement,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,LoadQT,The length of the statement  "	String line = String.Format ("from {0} to {1} : min={2:0.00} avg={3:0.00}  max={4:0.00}"' summary.get_startTimeUTC_asDateTime ().ToString (fmt)' summary.get_endTimeUTC_asDateTime ().ToString (fmt)' summary.get_minValue ()' summary.get_averageValue ()' summary.get_maxValue ()); " is 277.
Long Statement,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,GetRecordList,The length of the statement  "		List<double> pos = computeAngles (qt_w [i].get_averageValue ()' qt_x [i].get_averageValue ()' qt_y [i].get_averageValue ()' qt_z [i].get_averageValue ()' 0' qt_w [i].get_startTimeUTC () - qt_w [0].get_startTimeUTC ()); " is 218.
Long Statement,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,GetRecordList,The length of the statement  "		String line = String.Format ("{0} -> {1:0.000}s  len{2:0.000} : W={3:0.00} X={4:0.00} Y={5:0.00} Z={6:0.00} => r={7:0.00} p={8:0.00} h={9:0.00}"' i' abs' len' qt_w [i].get_averageValue ()' qt_x [i].get_averageValue ()' qt_y [i].get_averageValue ()' qt_z [i].get_averageValue ()' pos [0]' pos [1]' pos [2]); " is 306.
Long Statement,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The length of the statement  "	g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' _shadowBrush' textpos_x - 3' textpos_y + 3); " is 121.
Long Statement,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The length of the statement  "	file.WriteLine ("nb measure = " + _reader.FrameCount + " duration:" + duration + "s (nb frame= " + _reader.FrameCount + ")"); " is 125.
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,Form1_Load,The following statement contains a magic number: UpdateListTimer.Interval = 1000;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,ConfigureYocto3d,The following statement contains a magic number: System.Threading.Thread.Sleep (5000);  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,LoadQT,The following statement contains a magic number: do {  	progress = dataset.loadMore ();  }  while (progress < 100);  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,LoadQT,The following statement contains a magic number: foreach (YMeasure m in res_bad) {  	if (m.get_startTimeUTC () > 100) {  		res.Add (m);  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,LoadQT,The following statement contains a magic number: if (m.get_startTimeUTC () > 100) {  	res.Add (m);  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta > 0.499 * norm) {  	roll = defaultRoll;  	pitch = 90.0;  	head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	if (delta < -0.499 * norm) {  		roll = defaultRoll;  		pitch = -90.0;  		head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  	}  	else {  		roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  		pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  		head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  	}  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: pitch = 90.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: if (delta < -0.499 * norm) {  	roll = defaultRoll;  	pitch = -90.0;  	head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  }  else {  	roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  	pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  	head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: pitch = -90.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (-2.0 * 1800.0 / Math.PI * Math.Atan2 (x' w)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: roll = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (w * x + y * z)' sqw - sqx - sqy + sqz)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: pitch = Math.Round (1800.0 / Math.PI * Math.Asin (2.0 * delta / norm)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,computeAngles,The following statement contains a magic number: head = Math.Round (1800.0 / Math.PI * Math.Atan2 (2.0 * (x * y + z * w)' sqw + sqx - sqy - sqz)) / 10.0;  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,GetRecordList,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	List<double> pos = computeAngles (qt_w [i].get_averageValue ()' qt_x [i].get_averageValue ()' qt_y [i].get_averageValue ()' qt_z [i].get_averageValue ()' 0' qt_w [i].get_startTimeUTC () - qt_w [0].get_startTimeUTC ());  	angles.Add (pos);  	len = qt_w [i].get_endTimeUTC () - qt_w [i].get_startTimeUTC ();  	double abs = qt_w [i].get_startTimeUTC () - start;  	String line = String.Format ("{0} -> {1:0.000}s  len{2:0.000} : W={3:0.00} X={4:0.00} Y={5:0.00} Z={6:0.00} => r={7:0.00} p={8:0.00} h={9:0.00}"' i' abs' len' qt_w [i].get_averageValue ()' qt_x [i].get_averageValue ()' qt_y [i].get_averageValue ()' qt_z [i].get_averageValue ()' pos [0]' pos [1]' pos [2]);  	file.WriteLine (line);  	backgroundWorker1.ReportProgress (10 * i / count);  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,GetRecordList,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	List<double> pos = computeAngles (qt_w [i].get_averageValue ()' qt_x [i].get_averageValue ()' qt_y [i].get_averageValue ()' qt_z [i].get_averageValue ()' 0' qt_w [i].get_startTimeUTC () - qt_w [0].get_startTimeUTC ());  	angles.Add (pos);  	len = qt_w [i].get_endTimeUTC () - qt_w [i].get_startTimeUTC ();  	double abs = qt_w [i].get_startTimeUTC () - start;  	String line = String.Format ("{0} -> {1:0.000}s  len{2:0.000} : W={3:0.00} X={4:0.00} Y={5:0.00} Z={6:0.00} => r={7:0.00} p={8:0.00} h={9:0.00}"' i' abs' len' qt_w [i].get_averageValue ()' qt_x [i].get_averageValue ()' qt_y [i].get_averageValue ()' qt_z [i].get_averageValue ()' pos [0]' pos [1]' pos [2]);  	file.WriteLine (line);  	backgroundWorker1.ReportProgress (10 * i / count);  }  
Magic Number,BikeInclinometer,Form1,C:\repos\yoctopuce-examples_BikeInclinometer\Form1.cs,GetRecordList,The following statement contains a magic number: backgroundWorker1.ReportProgress (10 * i / count);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: _shadowBrush = new SolidBrush (Color.FromArgb (16' 0' 0' 00));  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: _shadowPen = new Pen (_shadowBrush' 3);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: _nidlePen = new Pen (_nidleBrush' 3);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: if (src_video != "") {  	_reader = new VideoFileReader ();  	// open video file  	_reader.Open (_src_vid);  	// check some of its attributes  	Console.WriteLine ("width:  " + _reader.Width);  	Console.WriteLine ("height: " + _reader.Height);  	Console.WriteLine ("fps:    " + _reader.FrameRate);  	Console.WriteLine ("frames  " + _reader.FrameCount);  	Console.WriteLine ("codec:  " + _reader.CodecName);  	_height = _reader.Height;  	_width = _reader.Width;  	//_fps = _reader.FrameRate;  	_fps = 30;  }  else {  	_reader = null;  	_height = 1080;  	_width = 1920;  	_fps = 30;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: if (src_video != "") {  	_reader = new VideoFileReader ();  	// open video file  	_reader.Open (_src_vid);  	// check some of its attributes  	Console.WriteLine ("width:  " + _reader.Width);  	Console.WriteLine ("height: " + _reader.Height);  	Console.WriteLine ("fps:    " + _reader.FrameRate);  	Console.WriteLine ("frames  " + _reader.FrameCount);  	Console.WriteLine ("codec:  " + _reader.CodecName);  	_height = _reader.Height;  	_width = _reader.Width;  	//_fps = _reader.FrameRate;  	_fps = 30;  }  else {  	_reader = null;  	_height = 1080;  	_width = 1920;  	_fps = 30;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: if (src_video != "") {  	_reader = new VideoFileReader ();  	// open video file  	_reader.Open (_src_vid);  	// check some of its attributes  	Console.WriteLine ("width:  " + _reader.Width);  	Console.WriteLine ("height: " + _reader.Height);  	Console.WriteLine ("fps:    " + _reader.FrameRate);  	Console.WriteLine ("frames  " + _reader.FrameCount);  	Console.WriteLine ("codec:  " + _reader.CodecName);  	_height = _reader.Height;  	_width = _reader.Width;  	//_fps = _reader.FrameRate;  	_fps = 30;  }  else {  	_reader = null;  	_height = 1080;  	_width = 1920;  	_fps = 30;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: if (src_video != "") {  	_reader = new VideoFileReader ();  	// open video file  	_reader.Open (_src_vid);  	// check some of its attributes  	Console.WriteLine ("width:  " + _reader.Width);  	Console.WriteLine ("height: " + _reader.Height);  	Console.WriteLine ("fps:    " + _reader.FrameRate);  	Console.WriteLine ("frames  " + _reader.FrameCount);  	Console.WriteLine ("codec:  " + _reader.CodecName);  	_height = _reader.Height;  	_width = _reader.Width;  	//_fps = _reader.FrameRate;  	_fps = 30;  }  else {  	_reader = null;  	_height = 1080;  	_width = 1920;  	_fps = 30;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: _fps = 30;  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: _height = 1080;  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: _width = 1920;  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,VideoOSD,The following statement contains a magic number: _fps = 30;  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (a < 0) {  	abs = Convert.ToInt32 (Math.Round (-a));  	double radian = Math.PI * abs / 180.0;  	x = Convert.ToInt32 (center_x - Math.Sin (radian) * radius_out);  	y = Convert.ToInt32 (center_y - Math.Cos (radian) * radius_out);  }  else {  	abs = Convert.ToInt32 (Math.Round (a));  	double radian = Math.PI * abs / 180.0;  	x = Convert.ToInt32 (center_x + Math.Sin (radian) * radius_out);  	y = Convert.ToInt32 (center_y - Math.Cos (radian) * radius_out);  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (a < 0) {  	abs = Convert.ToInt32 (Math.Round (-a));  	double radian = Math.PI * abs / 180.0;  	x = Convert.ToInt32 (center_x - Math.Sin (radian) * radius_out);  	y = Convert.ToInt32 (center_y - Math.Cos (radian) * radius_out);  }  else {  	abs = Convert.ToInt32 (Math.Round (a));  	double radian = Math.PI * abs / 180.0;  	x = Convert.ToInt32 (center_x + Math.Sin (radian) * radius_out);  	y = Convert.ToInt32 (center_y - Math.Cos (radian) * radius_out);  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: point1 = new Point (center_x - 3' center_y + 3);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: point1 = new Point (center_x - 3' center_y + 3);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_maxangle < abs) {  	_maxangle = abs;  	if (_freezeFor > 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  else {  	if (_freezeFor == 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_maxangle < abs) {  	_maxangle = abs;  	if (_freezeFor > 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  else {  	if (_freezeFor == 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_maxangle < abs) {  	_maxangle = abs;  	if (_freezeFor > 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  else {  	if (_freezeFor == 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_maxangle < abs) {  	_maxangle = abs;  	if (_freezeFor > 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  else {  	if (_freezeFor == 0 && _maxangle > 15) {  		_freezeFor = 45;  	}  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_freezeFor > 0 && _maxangle > 15) {  	_freezeFor = 45;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_freezeFor > 0 && _maxangle > 15) {  	_freezeFor = 45;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: _freezeFor = 45;  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_freezeFor == 0 && _maxangle > 15) {  	_freezeFor = 45;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_freezeFor == 0 && _maxangle > 15) {  	_freezeFor = 45;  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: _freezeFor = 45;  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' _shadowBrush' textpos_x - 3' textpos_y + 3);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' _shadowBrush' textpos_x - 3' textpos_y + 3);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' _shadowBrush' textpos_x - 3' textpos_y + 3);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_freezeFor > 0) {  	g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' Brushes.Red' textpos_x' textpos_y);  }  else {  	g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' Brushes.White' textpos_x' textpos_y);  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: if (_freezeFor > 0) {  	g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' Brushes.Red' textpos_x' textpos_y);  }  else {  	g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' Brushes.White' textpos_x' textpos_y);  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' Brushes.Red' textpos_x' textpos_y);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,process_one_frame,The following statement contains a magic number: g.DrawString (toDisp.ToString ("00")' new System.Drawing.Font ("Arial"' 60)' Brushes.White' textpos_x' textpos_y);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The following statement contains a magic number: writer.Open (out_video' _width' _height' _fps' VideoCodec.Default' 17748000);  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The following statement contains a magic number: for (int i = 0; i < nb_frame; i++) {  	Bitmap videoFrame = null;  	if (_reader != null && i < _reader.FrameCount) {  		videoFrame = _reader.ReadVideoFrame ();  		if (videoFrame == null)  			break;  		//string name ="c:\\tmp\\frames\\f_" + i + ".jpg";  		//videoFrame.Save(name' ImageFormat.Jpeg);  		brush = null;  	}  	else {  		videoFrame = new Bitmap (_width' _height);  	}  	process_one_frame (videoFrame' i' brush);  	writer.WriteVideoFrame (videoFrame);  	videoFrame.Dispose ();  	if (worker != null) {  		worker.ReportProgress ((int)(10 + 90 * i / nb_frame));  	}  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The following statement contains a magic number: for (int i = 0; i < nb_frame; i++) {  	Bitmap videoFrame = null;  	if (_reader != null && i < _reader.FrameCount) {  		videoFrame = _reader.ReadVideoFrame ();  		if (videoFrame == null)  			break;  		//string name ="c:\\tmp\\frames\\f_" + i + ".jpg";  		//videoFrame.Save(name' ImageFormat.Jpeg);  		brush = null;  	}  	else {  		videoFrame = new Bitmap (_width' _height);  	}  	process_one_frame (videoFrame' i' brush);  	writer.WriteVideoFrame (videoFrame);  	videoFrame.Dispose ();  	if (worker != null) {  		worker.ReportProgress ((int)(10 + 90 * i / nb_frame));  	}  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The following statement contains a magic number: if (worker != null) {  	worker.ReportProgress ((int)(10 + 90 * i / nb_frame));  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The following statement contains a magic number: if (worker != null) {  	worker.ReportProgress ((int)(10 + 90 * i / nb_frame));  }  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The following statement contains a magic number: worker.ReportProgress ((int)(10 + 90 * i / nb_frame));  
Magic Number,BikeInclinometer,VideoOSD,C:\repos\yoctopuce-examples_BikeInclinometer\VideoOSD.cs,output,The following statement contains a magic number: worker.ReportProgress ((int)(10 + 90 * i / nb_frame));  
