Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PrefabIdentificationLayers.Prototypes,ConnectedComponents,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ConnectedComponents.cs,NeighborsConnected8,Cyclomatic complexity of the method is 9
Complex Method,PrefabIdentificationLayers.Prototypes,PtypeSerializationUtility,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\PtypeSerializationUtility.cs,UpdatePtypes,Cyclomatic complexity of the method is 8
Complex Method,PrefabIdentificationLayers.Models,SearchPtypeBuilder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\SearchPtypeBuilder.cs,AC_3,Cyclomatic complexity of the method is 9
Complex Method,PrefabIdentificationLayers.Models.NinePart,CostFunction,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\CostFunction.cs,GetHeuristicCost,Cyclomatic complexity of the method is 20
Complex Method,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,ExtractPart,Cyclomatic complexity of the method is 32
Complex Method,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,GetInterior,Cyclomatic complexity of the method is 21
Complex Method,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,EraseFeaturesFromforeground,Cyclomatic complexity of the method is 9
Complex Method,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,Missed,Cyclomatic complexity of the method is 11
Complex Method,PrefabIdentificationLayers.Regions,VerticalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\VerticalPatternMatcher.cs,Missed,Cyclomatic complexity of the method is 11
Complex Method,PrefabIdentificationLayers.Features.FeatureTree,GraphUtilities,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\GraphUtilities.cs,FindCriticalNodes,Cyclomatic complexity of the method is 11
Long Parameter List,PrefabIdentificationLayers.Prototypes,ConnectedComponents,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ConnectedComponents.cs,IdentifyComponents,The method has 8 parameters.
Long Parameter List,PrefabIdentificationLayers.Prototypes,ConnectedComponents,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ConnectedComponents.cs,LabelComponentsAndSetBoundingBoxes,The method has 7 parameters.
Long Parameter List,PrefabIdentificationLayers.Prototypes,ConnectedComponents,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ConnectedComponents.cs,GetRectsFromLabeledImage,The method has 8 parameters.
Long Parameter List,PrefabIdentificationLayers.Prototypes,ConnectedComponents,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ConnectedComponents.cs,NeighborsConnected8,The method has 6 parameters.
Long Parameter List,PrefabIdentificationLayers.Models,SearchPtypeBuilder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\SearchPtypeBuilder.cs,SearchPtypeBuilder,The method has 6 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,ExtractPart,The method has 6 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,GetHorizontal,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,GetVertical,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,CropFromManyRelativeTopLeft,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,CropFromManyRelativeBottomLeft,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,CropFromManyRelativeTopRight,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,CropFromManyRelativeBottomRight,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,InteriorFits,The method has 9 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,EdgesMatch,The method has 6 parameters.
Long Parameter List,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,WriteBackgroundOver,The method has 6 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,Matches,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,MatchesHorizontalUntil,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,ColumnMatches,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,ColumnMatches,The method has 7 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,ShortestPattern,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,VerticalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\VerticalPatternMatcher.cs,Matches,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,VerticalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\VerticalPatternMatcher.cs,MatchesVerticalUntil,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,VerticalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\VerticalPatternMatcher.cs,RowMatches,The method has 7 parameters.
Long Parameter List,PrefabIdentificationLayers.Regions,VerticalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\VerticalPatternMatcher.cs,ShortestPattern,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Features.FeatureTree,FeatureTree,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\FeatureTree.cs,FeatureTree,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Features.FeatureTree,FeatureTree,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\FeatureTree.cs,Match,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Features.FeatureTree,FeatureTree,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\FeatureTree.cs,MultiThreadedMatch,The method has 10 parameters.
Long Parameter List,PrefabIdentificationLayers.Features.FeatureTree,GraphUtilities,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\GraphUtilities.cs,ProcessCriticalNodes,The method has 7 parameters.
Long Parameter List,PrefabIdentificationLayers.Features.FeatureTree,GraphUtilities,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\GraphUtilities.cs,GetXThatSatifies,The method has 5 parameters.
Long Parameter List,PrefabIdentificationLayers.Features.FeatureTree,GraphUtilities,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\GraphUtilities.cs,ProcessNonCriticalNodes,The method has 5 parameters.
Long Identifier,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the parameter bottomLeftAdjacentToBottomRegion is 32.
Long Identifier,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the parameter bottomRightAdjacentToBottomRegion is 33.
Long Identifier,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the parameter bottomLeftAdjacentToLeftRegion is 30.
Long Identifier,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the parameter bottomRightAdjacentToRightRegion is 32.
Long Identifier,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the parameter bottomIsLessThanOrEqualToHeight is 31.
Long Statement,PrefabIdentificationLayers.Features,FeatureDetectionLayer,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureDetectionLayer.cs,Interpret,The length of the statement  "			if (invalidated != null && !BoundingBox.Equals (invalidated' args.Tree) && args.Tree.HasTag ("previous") && args.Tree ["previous"] != null) { " is 141.
Long Statement,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,ToString,The length of the statement  "		result += "' " + pair.Key + " type:" + pair.Value.MatchStrategy + " width:" + pair.Value.Bitmap.Width + " height:" + pair.Value.Bitmap.Height; " is 142.
Long Statement,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,CreatePtypeFromMutable,The length of the statement  "	Dictionary<string' Region> rdict = (Dictionary<string' Region>)new Dictionary<string' Region> (prototypebuildargs.Regions); " is 123.
Long Statement,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,CreatePtypeFromMutable,The length of the statement  "	//                    children.put(mhp.childrenNames.get(c)'  createPtypeFromMutable( ptype' models' features' allptypes)); " is 123.
Long Statement,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The length of the statement  "	Utils.RectData[] found = ConnectedComponents.TwoPass (ccLabelingBitmap' foregroundImage' currentNode' Utils.BACKGROUND); " is 120.
Long Statement,PrefabIdentificationLayers.Models,SearchPtypeBuilder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\SearchPtypeBuilder.cs,Search,The length of the statement  "	Part partToAssign = _orderSelecter.SelectNextPartToAssign (state.Parts' state.PositiveExamples' state.NegativeExamples); " is 120.
Long Statement,PrefabIdentificationLayers.Models,SearchPtypeBuilder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\SearchPtypeBuilder.cs,GetPrototype,The length of the statement  "	Ptype.Mutable ptype = _constructor.ConstructPtype (state.Parts' state.PositiveExamples' state.NegativeExamples' state.Cache); " is 125.
Long Statement,PrefabIdentificationLayers.Models,SearchPtypeBuilder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\SearchPtypeBuilder.cs,MatchesAnyNegatives,The length of the statement  "			if (occurrence != null && occurrence.Left == 0 && occurrence.Top == 0 && occurrence.Width == negative.Width && occurrence.Height == negative.Height) " is 148.
Long Statement,PrefabIdentificationLayers.Models.NinePart,CostFunction,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\CostFunction.cs,GetHeuristicCost,The length of the statement  "			Region biggest = GetBiggest (cache' ((Size)assignment ["topleft"].AssignedValue).Width' ((Size)assignment ["topright"].AssignedValue).Width); " is 141.
Long Statement,PrefabIdentificationLayers.Models.NinePart,CostFunction,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\CostFunction.cs,GetHeuristicCost,The length of the statement  "			Region biggest = GetBiggest (cache' ((Size)assignment ["topleft"].AssignedValue).Height' ((Size)assignment ["bottomleft"].AssignedValue).Height); " is 145.
Long Statement,PrefabIdentificationLayers.Models.NinePart,CostFunction,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\CostFunction.cs,GetHeuristicCost,The length of the statement  "			Region biggest = GetBiggest (cache' ((Size)assignment ["topright"].AssignedValue).Width' ((Size)assignment ["bottomright"].AssignedValue).Width); " is 145.
Long Statement,PrefabIdentificationLayers.Models.NinePart,CostFunction,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\CostFunction.cs,GetHeuristicCost,The length of the statement  "			Region biggest = GetBiggest (cache' ((Size)assignment ["bottomleft"].AssignedValue).Width' ((Size)assignment ["bottomright"].AssignedValue).Width); " is 147.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,ExtractPart,The length of the statement  "		if (extracted != null && extracted is Bitmap && (Bitmap.AllOneValue ((Bitmap)extracted) || Bitmap.AllTransparent ((Bitmap)extracted))) { " is 136.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,MostFrequentPixel,The length of the statement  "		BoundingBox inside = new BoundingBox (bp.TopLeft.Width' bp.Top' pos.Width - bp.TopRight.Width - bp.TopLeft.Width' pos.Height - bp.Top - bp.Bottom); " is 147.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,MostFrequentPixel,The length of the statement  "		inside = new BoundingBox (bp.Left' bp.TopLeft.Height' bp.TopLeft.Width - bp.Left' pos.Height - bp.TopLeft.Height - bp.TopRight.Height); " is 135.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,MostFrequentPixel,The length of the statement  "		inside = new BoundingBox (pos.Width - bp.Right' bp.TopRight.Height' bp.TopRight.Width - bp.Right' pos.Height - bp.TopRight.Height - bp.BottomRight.Height); " is 155.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint bottomLeftAdjacentToBottomRegion = new Constraint (RegionStartEqualsWidth' parts ["bottom"]' parts ["bottomleft"]); " is 126.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint bottomRightAdjacentToBottomRegion = new Constraint (RegionEndEqualsWidth' parts ["bottomright"]' parts ["bottom"]); " is 126.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint topLeftAdjacentToLeftRegion = new Constraint (RegionStartEqualsHeight' parts ["left"]' parts ["bottomleft"]); " is 120.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint bottomLeftAdjacentToLeftRegion = new Constraint (RegionEndEqualsHeight' parts ["bottomleft"]' parts ["left"]); " is 121.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint topRightAdjacentToRightRegion = new Constraint (RegionStartEqualsHeight' parts ["topright"]' parts ["right"]); " is 121.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint bottomRightAdjacentToRightRegion = new Constraint (RegionEndEqualsHeight' parts ["right"]' parts ["bottomright"]); " is 125.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint topRightBottomRightSameSize = new Constraint (PartsAreSameSizeOrZero' parts ["topright"]' parts ["bottomright"]); " is 124.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint bottomRightBottomLeftSameSize = new Constraint (PartsAreSameSizeOrZero' parts ["bottomright"]' parts ["bottomleft"]); " is 128.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint bottomLeftTopLeftSameSize = new Constraint (PartsAreSameSizeOrZero' parts ["bottomleft"]' parts ["topleft"]); " is 120.
Long Statement,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetConstraints,The length of the statement  "	Constraint bottomIsLessThanOrEqualToHeight = new Constraint (DepthIsSmallHeight' parts ["bottomleft"]' parts ["bottom"]); " is 121.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,FindOccurrences,The length of the statement  "					if (topleft != null && InteriorFits (interior' topregion' bottomregion' leftregion' rightregion' topleft' bottomleft' topright' bottomright) && EdgesMatch (ptype' bitmap' topleft' topright' bottomleft' bottomright)) { " is 217.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,InteriorFits,The length of the statement  "		return interior.Bitmap.Height == bottomleft.Top + bottomleft.Height - topleft.Top - top.Bitmap.Height - bottom.Bitmap.Height; " is 125.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,GetCorrespondingBottomLeft,The length of the statement  "		if (bottomleft.Equals (f ["feature"]) && IsAbove (topleft' f) && IsHorizontallyAligned (f' bottomright) && IsVerticallyAligned (f' topleft)) { " is 142.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,GetTopLeft,The length of the statement  "		if (topleft.Equals (f ["feature"]) && IsAbove (f' bottomleft) && IsHorizontallyAligned (f' topright) && IsVerticallyAligned (bottomleft' f)) " is 140.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,EdgesMatch,The length of the statement  "	return HorizontalPatternMatcher.Instance.Matches (top.Bitmap' bitmap' topleft.Top' topleft.Left + topleft.Width' topright.Left - 1) && HorizontalPatternMatcher.Instance.Matches (bottom.Bitmap' bitmap' bottomleft.Top + bottomleft.Height - bottom.Bitmap.Height' bottomleft.Left + bottomleft.Width' bottomright.Left - 1) && VerticalPatternMatcher.Instance.Matches (left.Bitmap' bitmap' topleft.Left' topleft.Top + topleft.Height' bottomleft.Top - 1) && VerticalPatternMatcher.Instance.Matches (right.Bitmap' bitmap' topright.Left + topright.Width - right.Bitmap.Width' topright.Top + topright.Height' bottomright.Top - 1); " is 619.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,SetForeground,The length of the statement  "				int backgroundValue = interiorregion.Bitmap [(row - top) % interiorregion.Bitmap.Height' (col - node.Left - leftdepth) % interiorregion.Bitmap.Width]; " is 150.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,EraseFeaturesFromforeground,The length of the statement  "		for (int col = occurrence.Left + occurrence.Width - topright.Bitmap.Width; col < occurrence.Left + occurrence.Width; col++) { " is 125.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,EraseFeaturesFromforeground,The length of the statement  "	for (int row = occurrence.Top + occurrence.Height - bottomleft.Bitmap.Height; row < occurrence.Top + occurrence.Height; row++) { " is 128.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,EraseFeaturesFromforeground,The length of the statement  "	for (int row = occurrence.Top + occurrence.Height - bottomright.Bitmap.Height; row < occurrence.Top + occurrence.Height; row++) { " is 129.
Long Statement,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,EraseFeaturesFromforeground,The length of the statement  "		for (int col = occurrence.Left + occurrence.Width - bottomright.Bitmap.Width; col < occurrence.Left + occurrence.Width; col++) { " is 128.
Long Statement,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,Matches,The length of the statement  "		if (!ColumnMatches (bitmap' pattern' startRow' startRow + pattern.Height - 1' 0' column' (column - start) % pattern.Width)) " is 123.
Long Statement,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,MatchesHorizontalUntil,The length of the statement  "		if (!ColumnMatches (bitmap' pattern' startRow' startRow + pattern.Height - 1' 0' column' (column - start) % pattern.Width)) " is 123.
Long Statement,PrefabIdentificationLayers.Regions,HorizontalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\HorizontalPatternMatcher.cs,ShortestPattern,The length of the statement  "		if (!ColumnMatches (toExtract' toExtract' startRow' startRow + height - 1' startRow' col' ((col - start) % patternLength) + start)) " is 131.
Long Statement,PrefabIdentificationLayers.Regions,VerticalPatternMatcher,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\VerticalPatternMatcher.cs,ShortestPattern,The length of the statement  "		if (!RowMatches (toExtract' toExtract' startCol' startCol + width - 1' startCol' row' ((row - start) % patternlength) + start)) " is 127.
Long Statement,PrefabIdentificationLayers.Features.FeatureTree,FeatureTree,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\FeatureTree.cs,BuildTree,The length of the statement  "	FeatureTree tree = new FeatureTree (BuildTreeHelper (featuresWithHotspots' validOffsets' true)' farthestup' farthestleft' farthestdown' farthestright); " is 151.
Long Statement,PrefabIdentificationLayers.Features.FeatureTree,FeatureTree,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\FeatureTree.cs,BuildTreeHelper,The length of the statement  "	Dictionary<int' List<FeatureWrapper>> featuresByColor = ChooseOffsetToTeset (features' validOffsets' thisIsRoot' offsetToTest); " is 127.
Long Statement,PrefabIdentificationLayers.Features.FeatureTree,FeatureTree,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\FeatureTree.cs,GetLeastCommonPixel,The length of the statement  "			if (feature.Bitmap [row' column] != Feature.TRANSPARENT_VALUE && pixelFrequencies [feature.Bitmap [row' column]] < freqency) { " is 126.
Long Statement,PrefabIdentificationLayers.Features.FeatureTree,LeafFeatureTreeNode,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\LeafFeatureTreeNode.cs,GetOffsets,The length of the statement  "		if (Bitmap.OffsetIsInBounds (featurewrapper.Feature.Bitmap' translatedOffsetToTest) && featurewrapper.Feature.Bitmap [translatedOffsetToTest.Y' translatedOffsetToTest.X] != Features.Feature.TRANSPARENT_VALUE) " is 208.
Complex Conditional,PrefabIdentificationLayers.Features,FeatureDetectionLayer,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureDetectionLayer.cs,Interpret,The conditional expression  "invalidated != null && !BoundingBox.Equals (invalidated' args.Tree) && args.Tree.HasTag ("previous") && args.Tree ["previous"] != null"  is complex.
Complex Conditional,PrefabIdentificationLayers.Prototypes,PrototypeDetectionLayer,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\PrototypeDetectionLayer.cs,CompareByAreaAndFeaturesFirst,The conditional expression  "a.HasTag ("type") && a ["type"].Equals ("feature") && (!b.HasTag ("type") || !b ["type"].Equals ("feature"))"  is complex.
Complex Conditional,PrefabIdentificationLayers.Models,SearchPtypeBuilder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\SearchPtypeBuilder.cs,MatchesAnyNegatives,The conditional expression  "occurrence != null && occurrence.Left == 0 && occurrence.Top == 0 && occurrence.Width == negative.Width && occurrence.Height == negative.Height"  is complex.
Complex Conditional,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,ExtractPart,The conditional expression  "extracted != null && extracted is Bitmap && (Bitmap.AllOneValue ((Bitmap)extracted) || Bitmap.AllTransparent ((Bitmap)extracted))"  is complex.
Complex Conditional,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,PartsAreSameSizeOrZero,The conditional expression  "s1.Height == 0 || s2.Height == 0 || s1.Width == 0 || s2.Width == 0"  is complex.
Complex Conditional,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,GetCorrespondingBottomLeft,The conditional expression  "bottomleft.Equals (f ["feature"]) && IsAbove (topleft' f) && IsHorizontallyAligned (f' bottomright) && IsVerticallyAligned (f' topleft)"  is complex.
Complex Conditional,PrefabIdentificationLayers.Models.NinePart,Finder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Finder.cs,GetTopLeft,The conditional expression  "topleft.Equals (f ["feature"]) && IsAbove (f' bottomleft) && IsHorizontallyAligned (f' topright) && IsVerticallyAligned (bottomleft' f)"  is complex.
Complex Conditional,PrefabIdentificationLayers.Features.FeatureTree,InnerFeatureTreeNode,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\InnerFeatureTreeNode.cs,GetMatches,The conditional expression  "imageOffsetX >= 0 && imageOffsetY >= 0 && imageOffsetY < bitmap.Height && imageOffsetX < bitmap.Width"  is complex.
Complex Conditional,PrefabIdentificationLayers.Features.FeatureTree,LeafFeatureTreeNode,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\LeafFeatureTreeNode.cs,GetMatches,The conditional expression  "imagey < 0 || imagex < 0 || imagey >= bitmap.Height || imagex >= bitmap.Width"  is complex.
Empty Catch Block,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,LoadDummy,The method has an empty catch block.
Empty Catch Block,PrefabIdentificationLayers.Prototypes,PrototypeDetectionLayer,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\PrototypeDetectionLayer.cs,FindPrototypeOccurrences,The method has an empty catch block.
Magic Number,PrefabIdentificationLayers.Features,Feature,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\Feature.cs,GetHashCode,The following statement contains a magic number: return 17 * 31 + Id;  
Magic Number,PrefabIdentificationLayers.Features,Feature,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\Feature.cs,GetHashCode,The following statement contains a magic number: return 17 * 31 + Id;  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: result = 31 * result + Model.Name.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: foreach (string featurename in features.Keys) {  	result = 31 * result + featurename.GetHashCode ();  	result = 31 * result + features [featurename].GetHashCode ();  }  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: foreach (string featurename in features.Keys) {  	result = 31 * result + featurename.GetHashCode ();  	result = 31 * result + features [featurename].GetHashCode ();  }  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: result = 31 * result + featurename.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: result = 31 * result + features [featurename].GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: foreach (KeyValuePair<string' Region> pair in regions) {  	result = 31 * result + pair.Key.GetHashCode ();  	result = 31 * result + pair.Value.GetHashCode ();  }  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: foreach (KeyValuePair<string' Region> pair in regions) {  	result = 31 * result + pair.Key.GetHashCode ();  	result = 31 * result + pair.Value.GetHashCode ();  }  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: result = 31 * result + pair.Key.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Prototypes,Ptype,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\Ptype.cs,GetNonGuidBasedHashCode,The following statement contains a magic number: result = 31 * result + pair.Value.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The following statement contains a magic number: foreach (Utils.RectData rect in found) {  	if (rect != null) {  		int hash = 17;  		for (int row = rect.Top; row <= rect.Bottom; row++) {  			for (int col = rect.Left; col <= rect.Right; col++) {  				hash = 31 * hash + image [row' col];  			}  		}  		BoundingBox bb = new BoundingBox (rect.Left' rect.Top' (rect.Right - rect.Left) + 1' (rect.Bottom - rect.Top) + 1);  		Dictionary<string' object> tags = new Dictionary<string' object> ();  		tags.Add ("type"' "content");  		tags.Add ("pixel_hash"' hash);  		Tree node = Tree.FromBoundingBox (bb' tags);  		foundContent.Add (node);  	}  }  
Magic Number,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The following statement contains a magic number: foreach (Utils.RectData rect in found) {  	if (rect != null) {  		int hash = 17;  		for (int row = rect.Top; row <= rect.Bottom; row++) {  			for (int col = rect.Left; col <= rect.Right; col++) {  				hash = 31 * hash + image [row' col];  			}  		}  		BoundingBox bb = new BoundingBox (rect.Left' rect.Top' (rect.Right - rect.Left) + 1' (rect.Bottom - rect.Top) + 1);  		Dictionary<string' object> tags = new Dictionary<string' object> ();  		tags.Add ("type"' "content");  		tags.Add ("pixel_hash"' hash);  		Tree node = Tree.FromBoundingBox (bb' tags);  		foundContent.Add (node);  	}  }  
Magic Number,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The following statement contains a magic number: if (rect != null) {  	int hash = 17;  	for (int row = rect.Top; row <= rect.Bottom; row++) {  		for (int col = rect.Left; col <= rect.Right; col++) {  			hash = 31 * hash + image [row' col];  		}  	}  	BoundingBox bb = new BoundingBox (rect.Left' rect.Top' (rect.Right - rect.Left) + 1' (rect.Bottom - rect.Top) + 1);  	Dictionary<string' object> tags = new Dictionary<string' object> ();  	tags.Add ("type"' "content");  	tags.Add ("pixel_hash"' hash);  	Tree node = Tree.FromBoundingBox (bb' tags);  	foundContent.Add (node);  }  
Magic Number,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The following statement contains a magic number: if (rect != null) {  	int hash = 17;  	for (int row = rect.Top; row <= rect.Bottom; row++) {  		for (int col = rect.Left; col <= rect.Right; col++) {  			hash = 31 * hash + image [row' col];  		}  	}  	BoundingBox bb = new BoundingBox (rect.Left' rect.Top' (rect.Right - rect.Left) + 1' (rect.Bottom - rect.Top) + 1);  	Dictionary<string' object> tags = new Dictionary<string' object> ();  	tags.Add ("type"' "content");  	tags.Add ("pixel_hash"' hash);  	Tree node = Tree.FromBoundingBox (bb' tags);  	foundContent.Add (node);  }  
Magic Number,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The following statement contains a magic number: for (int row = rect.Top; row <= rect.Bottom; row++) {  	for (int col = rect.Left; col <= rect.Right; col++) {  		hash = 31 * hash + image [row' col];  	}  }  
Magic Number,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The following statement contains a magic number: for (int col = rect.Left; col <= rect.Right; col++) {  	hash = 31 * hash + image [row' col];  }  
Magic Number,PrefabIdentificationLayers.Prototypes,ContentFinder,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Prototypes\ContentFinder.cs,FindContent,The following statement contains a magic number: hash = 31 * hash + image [row' col];  
Magic Number,PrefabIdentificationLayers.Models,Size,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\Size.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + GetType ().GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Models,Size,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\Size.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + Width.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Models,Size,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\BranchAndBound\Size.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + Height.GetHashCode ();  
Magic Number,PrefabIdentificationLayers,RegionParameters,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\RegionParameters.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + Start;  
Magic Number,PrefabIdentificationLayers,RegionParameters,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\RegionParameters.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + End;  
Magic Number,PrefabIdentificationLayers,RegionParameters,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\RegionParameters.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + Depth;  
Magic Number,PrefabIdentificationLayers,RegionParameters,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\RegionParameters.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + PatternType.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: smallestHeight -= 2;  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: smallestWidth -= 2;  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: maxhoriz.Depth = (int)Math.Min (smallestHeight / 2' maxhoriz.Depth);  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: maxhoriz.Start = (int)Math.Min (smallestWidth / 2' maxhoriz.Start);  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: maxhoriz.End = (int)Math.Min (smallestWidth / 2' maxhoriz.End);  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: maxvert.Depth = (int)Math.Min (smallestWidth / 2' maxvert.Depth);  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: maxvert.Start = (int)Math.Min (smallestHeight / 2' maxvert.Start);  
Magic Number,PrefabIdentificationLayers.Models.NinePart,PartGetter,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\PartGetter.cs,GetParts,The following statement contains a magic number: maxvert.End = (int)Math.Min (smallestHeight / 2' maxvert.End);  
Magic Number,PrefabIdentificationLayers.Regions,Region,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\Region.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + Bitmap.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Regions,Region,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Regions\Region.cs,GetHashCode,The following statement contains a magic number: result = 31 * result + MatchStrategy.GetHashCode ();  
Magic Number,PrefabIdentificationLayers.Features.FeatureTree,GraphUtilities,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\GraphUtilities.cs,GetBmz,The following statement contains a magic number: return BMZ.Create (keys' 100' 1.5 * keys.Count);  
Magic Number,PrefabIdentificationLayers.Features.FeatureTree,GraphUtilities,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Features\FeatureTree\GraphUtilities.cs,GetBmz,The following statement contains a magic number: return BMZ.Create (keys' 100' 1.5 * keys.Count);  
Missing Default,PrefabIdentificationLayers.Models.NinePart,CostFunction,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\CostFunction.cs,GetHeuristicCost,The following switch statement is missing a default case: switch (name) {  case "topleft":  case "topright":  case "bottomleft":  case "bottomright":  	return GetCornerHeuristic (part);  case "top":  	if (assignment ["topleft"].IsAssigned && assignment ["topright"].IsAssigned) {  		Region biggest = GetBiggest (cache' ((Size)assignment ["topleft"].AssignedValue).Width' ((Size)assignment ["topright"].AssignedValue).Width);  		if (biggest != null)  			return biggest.Bitmap.PixelCount () + biggest.Bitmap.Width;  	}  	break;  case "left":  	if (assignment ["topleft"].IsAssigned && assignment ["bottomleft"].IsAssigned) {  		Region biggest = GetBiggest (cache' ((Size)assignment ["topleft"].AssignedValue).Height' ((Size)assignment ["bottomleft"].AssignedValue).Height);  		if (biggest != null)  			return biggest.Bitmap.PixelCount () + biggest.Bitmap.Height;  	}  	break;  case "right":  	if (assignment ["topright"].IsAssigned && assignment ["bottomright"].IsAssigned) {  		Region biggest = GetBiggest (cache' ((Size)assignment ["topright"].AssignedValue).Width' ((Size)assignment ["bottomright"].AssignedValue).Width);  		if (biggest != null)  			return biggest.Bitmap.PixelCount () + biggest.Bitmap.Height;  	}  	break;  case "bottom":  	if (assignment ["bottomleft"].IsAssigned && assignment ["bottomright"].IsAssigned) {  		Region biggest = GetBiggest (cache' ((Size)assignment ["bottomleft"].AssignedValue).Width' ((Size)assignment ["bottomright"].AssignedValue).Width);  		if (biggest != null)  			return biggest.Bitmap.PixelCount () + biggest.Bitmap.Width;  	}  	break;  }  
Missing Default,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,ExtractPart,The following switch statement is missing a default case: switch (name) {  case "topleft":  	extracted = CropFromManyRelativeTopLeft (0' 0' size.Width' size.Height' positives);  	break;  case "bottomleft":  	extracted = CropFromManyRelativeBottomLeft (size.Height' 0' size.Width' size.Height' positives);  	break;  case "topright":  	extracted = CropFromManyRelativeTopRight (0' size.Width' size.Width' size.Height' positives);  	break;  case "bottomright":  	extracted = CropFromManyRelativeBottomRight (size.Height' size.Width' size.Width' size.Height' positives);  	break;  case "top":  	extracted = GetHorizontal (true' rps.Start' rps.End' rps.Depth' positives);  	break;  case "bottom":  	extracted = GetHorizontal (false' rps.Start' rps.End' rps.Depth' positives);  	break;  case "left":  	extracted = GetVertical (true' rps.Start' rps.End' rps.Depth' positives);  	break;  case "right":  	extracted = GetVertical (false' rps.Start' rps.End' rps.Depth' positives);  	break;  case "interior":  	extracted = GetInterior (bv' positives);  	break;  }  
Missing Default,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,GetInterior,The following switch statement is missing a default case: switch (bp.Type) {  case "single":  	pattern = MostFrequentPixel (bp' positives);  	break;  case "horizontal":  	pattern = MostFrequentColumn (bp' positives);  	break;  case "vertical":  	pattern = MostFrequentRow (bp' positives);  	break;  }  
Missing Default,PrefabIdentificationLayers.Models.NinePart,Extractor,C:\repos\prefab_interpretation\layers\prefab_identification_layers\Models\NinePart\Extractor.cs,GetInterior,The following switch statement is missing a default case: switch (bp.Type) {  case "single":  case "horizontal":  	matcher = "horizontal";  	foreach (Bitmap bmp in positives)  		missed += HorizontalPatternMatcher.Missed (pattern' bmp' bp);  	break;  case "vertical":  	matcher = "vertical";  	foreach (Bitmap bmp in positives)  		missed += VerticalPatternMatcher.Missed (pattern' bmp' bp);  	break;  }  
