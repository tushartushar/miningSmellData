Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,UserCredentials,The method has 5 parameters.
Long Parameter List,Conclave.Process.User,IUserCredentialsStore,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\IUserCredentialsStore.cs,CreateUserCredentials,The method has 5 parameters.
Long Statement,Conclave.Process,Event,C:\repos\guy-murphy_conclave-public\Conclave.Process\Event.cs,FromXml,The length of the statement  "			return new Event (context' ev.Attribute ("message").Value' ev.Elements ().ToDictionary (el => el.Attribute ("name").Value' el => el.Attribute ("value").Value)); " is 160.
Long Statement,Conclave.Process,Event,C:\repos\guy-murphy_conclave-public\Conclave.Process\Event.cs,FromJson,The length of the statement  "			return new Conclave.Process.Event (context' job.Value<string> ("message")' job.Value<JObject> ("params").Properties ().ToDictionary (p => p.Name' p => p.Value.ToString ())); " is 173.
Long Statement,Conclave.Process,SpringServiceContainer,C:\repos\guy-murphy_conclave-public\Conclave.Process\SpringServiceContainer.cs,CreatePlatformContainer,The length of the statement  "	string springFilesSetting = String.IsNullOrEmpty (ConfigurationManager.AppSettings ["spring"]) ? String.Empty : ConfigurationManager.AppSettings ["spring"].RemoveWhitespace (); " is 176.
Long Statement,Conclave.Process,SpringServiceContainer,C:\repos\guy-murphy_conclave-public\Conclave.Process\SpringServiceContainer.cs,CreatePlatformContainer,The length of the statement  "		configFilenames.AddRange (new System.IO.DirectoryInfo (springFileFolder).EnumerateFiles ("*.xml").Select (fi => fi.FullName)); " is 126.
Long Statement,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,Equals,The length of the statement  "	return (this.Id == other.Id && this.Name == other.Name && this.Email == other.Email && this.Password == other.Password && this.Mask == other.Mask); " is 147.
Empty Catch Block,Conclave.Process,ProcessContext,C:\repos\guy-murphy_conclave-public\Conclave.Process\ProcessContext.cs,Fire,The method has an empty catch block.
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: if (_hashcode == 0) {  	_hashcode = 1;  	_hashcode = _hashcode * 31 + "UserCredentials::".GetHashCode ();  	_hashcode = _hashcode * 31 + this.Id.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Name.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Email.GetHashCode ();  	// if the other information items are visible in the system  	// including the password hash here can potentially allow  	// sniffing for collisions' so if it's a banking app you're building  	// this isn't appropriate... in most of the rest of the world this  	// is the very least of your concerns' I note it merely for those it would matter to  	_hashcode = _hashcode * 31 + this.Password.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Mask.GetHashCode ();  }  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: if (_hashcode == 0) {  	_hashcode = 1;  	_hashcode = _hashcode * 31 + "UserCredentials::".GetHashCode ();  	_hashcode = _hashcode * 31 + this.Id.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Name.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Email.GetHashCode ();  	// if the other information items are visible in the system  	// including the password hash here can potentially allow  	// sniffing for collisions' so if it's a banking app you're building  	// this isn't appropriate... in most of the rest of the world this  	// is the very least of your concerns' I note it merely for those it would matter to  	_hashcode = _hashcode * 31 + this.Password.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Mask.GetHashCode ();  }  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: if (_hashcode == 0) {  	_hashcode = 1;  	_hashcode = _hashcode * 31 + "UserCredentials::".GetHashCode ();  	_hashcode = _hashcode * 31 + this.Id.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Name.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Email.GetHashCode ();  	// if the other information items are visible in the system  	// including the password hash here can potentially allow  	// sniffing for collisions' so if it's a banking app you're building  	// this isn't appropriate... in most of the rest of the world this  	// is the very least of your concerns' I note it merely for those it would matter to  	_hashcode = _hashcode * 31 + this.Password.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Mask.GetHashCode ();  }  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: if (_hashcode == 0) {  	_hashcode = 1;  	_hashcode = _hashcode * 31 + "UserCredentials::".GetHashCode ();  	_hashcode = _hashcode * 31 + this.Id.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Name.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Email.GetHashCode ();  	// if the other information items are visible in the system  	// including the password hash here can potentially allow  	// sniffing for collisions' so if it's a banking app you're building  	// this isn't appropriate... in most of the rest of the world this  	// is the very least of your concerns' I note it merely for those it would matter to  	_hashcode = _hashcode * 31 + this.Password.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Mask.GetHashCode ();  }  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: if (_hashcode == 0) {  	_hashcode = 1;  	_hashcode = _hashcode * 31 + "UserCredentials::".GetHashCode ();  	_hashcode = _hashcode * 31 + this.Id.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Name.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Email.GetHashCode ();  	// if the other information items are visible in the system  	// including the password hash here can potentially allow  	// sniffing for collisions' so if it's a banking app you're building  	// this isn't appropriate... in most of the rest of the world this  	// is the very least of your concerns' I note it merely for those it would matter to  	_hashcode = _hashcode * 31 + this.Password.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Mask.GetHashCode ();  }  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: if (_hashcode == 0) {  	_hashcode = 1;  	_hashcode = _hashcode * 31 + "UserCredentials::".GetHashCode ();  	_hashcode = _hashcode * 31 + this.Id.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Name.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Email.GetHashCode ();  	// if the other information items are visible in the system  	// including the password hash here can potentially allow  	// sniffing for collisions' so if it's a banking app you're building  	// this isn't appropriate... in most of the rest of the world this  	// is the very least of your concerns' I note it merely for those it would matter to  	_hashcode = _hashcode * 31 + this.Password.GetHashCode ();  	_hashcode = _hashcode * 31 + this.Mask.GetHashCode ();  }  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: _hashcode = _hashcode * 31 + "UserCredentials::".GetHashCode ();  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: _hashcode = _hashcode * 31 + this.Id.GetHashCode ();  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: _hashcode = _hashcode * 31 + this.Name.GetHashCode ();  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: _hashcode = _hashcode * 31 + this.Email.GetHashCode ();  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: _hashcode = _hashcode * 31 + this.Password.GetHashCode ();  
Magic Number,Conclave.Process.User,UserCredentials,C:\repos\guy-murphy_conclave-public\Conclave.Process\User\UserCredentials.cs,GetHashCode,The following statement contains a magic number: _hashcode = _hashcode * 31 + this.Mask.GetHashCode ();  
