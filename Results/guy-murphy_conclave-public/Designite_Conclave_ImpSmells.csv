Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,Cyclomatic complexity of the method is 47
Long Statement,Conclave.Extensions,StringEx,C:\repos\guy-murphy_conclave-public\Conclave\Extensions\StringEx.cs,RemoveInvalidXmlCharacters,The length of the statement  "	return self.Filter (c => !((c == 0x9) || (c == 0xA) || (c == 0xD) || ((c >= 0x20) && (c <= 0xD7FF)) || ((c >= 0xE000) && (c <= 0xFFFD)))/*|| ((c >= 0x10000) && (c <= 0x10FFFF))*/); " is 180.
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixBody,The following statement contains a magic number: h1 = h1.RotateLeft (27);  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixBody,The following statement contains a magic number: h1 = h1 * 5 + 0x52dce729;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixBody,The following statement contains a magic number: h2 = h2.RotateLeft (31);  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixBody,The following statement contains a magic number: h2 = h2 * 5 + 0x38495ab5;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixKey1,The following statement contains a magic number: k1 = k1.RotateLeft (31);  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixKey2,The following statement contains a magic number: k2 = k2.RotateLeft (33);  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixFinal,The following statement contains a magic number: k ^= k >> 33;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixFinal,The following statement contains a magic number: k ^= k >> 33;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,MixFinal,The following statement contains a magic number: k ^= k >> 33;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytes,The following statement contains a magic number: while (remaining >= READ_SIZE) {  	ulong k1 = bb.GetUInt64 (pos);  	pos += 8;  	ulong k2 = bb.GetUInt64 (pos);  	pos += 8;  	length += READ_SIZE;  	remaining -= READ_SIZE;  	MixBody (k1' k2);  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytes,The following statement contains a magic number: while (remaining >= READ_SIZE) {  	ulong k1 = bb.GetUInt64 (pos);  	pos += 8;  	ulong k2 = bb.GetUInt64 (pos);  	pos += 8;  	length += READ_SIZE;  	remaining -= READ_SIZE;  	MixBody (k1' k2);  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytes,The following statement contains a magic number: pos += 8;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytes,The following statement contains a magic number: pos += 8;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: switch (remaining) {  case 15:  	k2 ^= (ulong)bb [pos + 14] << 48;  	// fall through  	goto case 14;  case 14:  	k2 ^= (ulong)bb [pos + 13] << 40;  	// fall through  	goto case 13;  case 13:  	k2 ^= (ulong)bb [pos + 12] << 32;  	// fall through  	goto case 12;  case 12:  	k2 ^= (ulong)bb [pos + 11] << 24;  	// fall through  	goto case 11;  case 11:  	k2 ^= (ulong)bb [pos + 10] << 16;  	// fall through  	goto case 10;  case 10:  	k2 ^= (ulong)bb [pos + 9] << 8;  	// fall through  	goto case 9;  case 9:  	k2 ^= (ulong)bb [pos + 8];  	// fall through  	goto case 8;  case 8:  	k1 ^= bb.GetUInt64 (pos);  	break;  case 7:  	k1 ^= (ulong)bb [pos + 6] << 48;  	// fall through  	goto case 6;  case 6:  	k1 ^= (ulong)bb [pos + 5] << 40;  	// fall through  	goto case 5;  case 5:  	k1 ^= (ulong)bb [pos + 4] << 32;  	// fall through  	goto case 4;  case 4:  	k1 ^= (ulong)bb [pos + 3] << 24;  	// fall through  	goto case 3;  case 3:  	k1 ^= (ulong)bb [pos + 2] << 16;  	// fall through  	goto case 2;  case 2:  	k1 ^= (ulong)bb [pos + 1] << 8;  	// fall through  	goto case 1;  case 1:  	k1 ^= (ulong)bb [pos];  	// fall through  	break;  default:  	throw new Exception ("Something went wrong with remaining bytes calculation.");  }  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 14] << 48;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 14] << 48;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 14;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 13] << 40;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 13] << 40;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 13;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 12] << 32;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 12] << 32;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 12;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 11] << 24;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 11] << 24;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 11;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 10] << 16;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 10] << 16;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 10;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 9] << 8;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 9] << 8;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 9;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k2 ^= (ulong)bb [pos + 8];  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 8;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 6] << 48;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 6] << 48;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 6;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 5] << 40;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 5] << 40;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 5;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 4] << 32;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 4] << 32;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 4;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 3] << 24;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 3] << 24;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 3;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 2] << 16;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 2] << 16;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: goto case 2;  
Magic Number,Conclave.Algorithms,Murmur3,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,ProcessBytesRemaining,The following statement contains a magic number: k1 ^= (ulong)bb [pos + 1] << 8;  
Magic Number,Conclave.Algorithms,IntHelpers,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,RotateLeft,The following statement contains a magic number: return (original << bits) | (original >> (64 - bits));  
Magic Number,Conclave.Algorithms,IntHelpers,C:\repos\guy-murphy_conclave-public\Conclave\Algorithms\Murmur3.cs,RotateRight,The following statement contains a magic number: return (original >> bits) | (original << (64 - bits));  
