Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,PowerTray,Utils,C:\repos\osvein_PowerTray\PowerTray\Utils.cs,PowerEnumerate,The method has 7 parameters.
Long Parameter List,PowerTray,Utils,C:\repos\osvein_PowerTray\PowerTray\Utils.cs,PowerReadFriendlyName,The method has 6 parameters.
Long Statement,PowerTray,PowerIcon,C:\repos\osvein_PowerTray\PowerTray\PowerIcon.cs,Refresh,The length of the statement  "	for (uint i = 0; Utils.PowerEnumerate (IntPtr.Zero' IntPtr.Zero' IntPtr.Zero' Utils.PowerDataAccessor.Scheme' i' buffer' ref bufferLength) == 0; i++) { " is 151.
Long Statement,PowerTray,PowerIcon,C:\repos\osvein_PowerTray\PowerTray\PowerIcon.cs,Refresh,The length of the statement  "                uint var1 = Utils.PowerReadFriendlyName(IntPtr.Zero' idPtr' IntPtr.Zero' IntPtr.Zero' null' ref bufferLength); // get required buffer length" is 140.
Long Statement,PowerTray,PowerIcon,C:\repos\osvein_PowerTray\PowerTray\PowerIcon.cs,Refresh,The length of the statement  "                uint var2 = Utils.PowerReadFriendlyName(IntPtr.Zero' idPtr' IntPtr.Zero' IntPtr.Zero' buffer' ref bufferLength); // read into buffer for real" is 141.
Magic Number,PowerTray,PowerIcon,C:\repos\osvein_PowerTray\PowerTray\PowerIcon.cs,Refresh,The following statement contains a magic number: for (uint i = 0; Utils.PowerEnumerate (IntPtr.Zero' IntPtr.Zero' IntPtr.Zero' Utils.PowerDataAccessor.Scheme' i' buffer' ref bufferLength) == 0; i++) {  	Guid id = new Guid (buffer);  	/*                 IntPtr idPtr = GCHandle.ToIntPtr(GCHandle.Alloc(id));                 Marshal.StructureToPtr(id' idPtr' true);                  uint var1 = Utils.PowerReadFriendlyName(IntPtr.Zero' idPtr' IntPtr.Zero' IntPtr.Zero' null' ref bufferLength); // get required buffer length                 byte[] nameBuffer = new byte[bufferLength];                 uint var2 = Utils.PowerReadFriendlyName(IntPtr.Zero' idPtr' IntPtr.Zero' IntPtr.Zero' buffer' ref bufferLength); // read into buffer for real                  *///ToolStripMenuItem item = new ToolStripMenuItem(Encoding.Unicode.GetString(nameBuffer));  	ToolStripMenuItem item = new ToolStripMenuItem (id.ToString ());  	item.Click += new EventHandler (Scheme_Click);  	item.Checked = id.Equals (active);  	// mark if active  	/*                  * (scheme index -> shortcut key) map                  * 0 -> D0                  * ...                  * 9 -> D9                  * 10 -> A                  * ...                  * 36 -> Z                  * else -> none                  */if (i > Keys.Z - Keys.D0 - (Keys.A - Keys.D9))  		item.ShortcutKeys = (Keys)((int)Keys.D0 + i + (i > 9 ? Keys.A - Keys.D9 : 0));  	item.Tag = id;  	menu.Items.Add (item);  }  
Magic Number,PowerTray,PowerIcon,C:\repos\osvein_PowerTray\PowerTray\PowerIcon.cs,Refresh,The following statement contains a magic number: if (i > Keys.Z - Keys.D0 - (Keys.A - Keys.D9))  	item.ShortcutKeys = (Keys)((int)Keys.D0 + i + (i > 9 ? Keys.A - Keys.D9 : 0));  
Magic Number,PowerTray,PowerIcon,C:\repos\osvein_PowerTray\PowerTray\PowerIcon.cs,Refresh,The following statement contains a magic number: item.ShortcutKeys = (Keys)((int)Keys.D0 + i + (i > 9 ? Keys.A - Keys.D9 : 0));  
