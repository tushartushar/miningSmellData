Design smell,Namespace,Class,File,Cause
Duplicate Abstraction,ICSharpCode.NRefactory.Demo,CSDemo,F:\newReposMay17\icsharpcode_NRefactory\ICSharpCode.NRefactory.Demo\CSDemo.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are: CSDemo[297' 319]' MainForm[35' 57]' SemanticTreeDialog[98' 120]
Unutilized Abstraction,ICSharpCode.NRefactory.Demo,MainForm,F:\newReposMay17\icsharpcode_NRefactory\ICSharpCode.NRefactory.Demo\MainForm.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Duplicate Abstraction,ICSharpCode.NRefactory.Demo,MainForm,F:\newReposMay17\icsharpcode_NRefactory\ICSharpCode.NRefactory.Demo\MainForm.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are: MainForm[1' 24]' Program[1' 24]
Duplicate Abstraction,ICSharpCode.NRefactory.Demo,MainForm,F:\newReposMay17\icsharpcode_NRefactory\ICSharpCode.NRefactory.Demo\MainForm.cs,The tool detected the smell in this class because a set of code clones has been found and at least one of the clones found in this class. List of code clones with start and end line numbers are: MainForm[59' 85]' SemanticTreeDialog[122' 148]
Imperative Abstraction,ICSharpCode.NRefactory.Demo,SemanticTreeDialog,F:\newReposMay17\icsharpcode_NRefactory\ICSharpCode.NRefactory.Demo\SemanticTreeDialog.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: AddRoot
Missing Hierarchy,ICSharpCode.NRefactory.Demo,SemanticTreeDialog,F:\newReposMay17\icsharpcode_NRefactory\ICSharpCode.NRefactory.Demo\SemanticTreeDialog.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: ResolveResult' Conversion (in method "MakeObjectNode" of class "SemanticTreeDialog").
