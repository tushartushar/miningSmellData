Architecture smell,Project,Namespace,Cause
Unstable Dependency,ICSharpCode.NRefactory.CSharp.Refactoring,ICSharpCode.NRefactory.CSharp.Refactoring,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): ICSharpCode.NRefactory.CSharp.Refactoring.ExtractMethod' ICSharpCode.NRefactory.CSharp.Analysis' ICSharpCode.NRefactory.CSharp
God Component,ICSharpCode.NRefactory.CSharp.Refactoring,ICSharpCode.NRefactory.CSharp.Refactoring,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 348
Feature Concentration,ICSharpCode.NRefactory.CSharp.Refactoring,ICSharpCode.NRefactory.CSharp.Refactoring,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AbstractAndVirtualConversionAction]' [AddAnotherAccessorAction' RemoveBackingStoreAction' CreateChangedEventAction' CreateEventInvocatorAction]' [AddArgumentNameAction' SpecializedCodeAction' AddExceptionDescriptionAction' ConvertIfStatementToConditionalTernaryExpressionAction' ConvertIfStatementToReturnStatementAction' ConvertIfStatementToNullCoalescingExpressionAction' ConvertIfStatementToSwitchStatementAction' ConvertNullCoalescingToConditionalExpressionAction' ConvertReturnStatementToIfAction' ConvertAssignmentToIfAction' UseAsAndNullCheckAction' ConvertForToWhileAction' ExtractWhileConditionToInternalIfStatementAction' ReverseDirectionForForLoopAction' ConvertShiftToMultiplyAction' ConvertMultiplyToShiftAction' ReplaceAssignmentWithPostfixExpressionAction' ReplacePostfixExpressionWithAssignmentAction' ReplaceWithOperatorAssignmentAction' ReplaceOperatorAssignmentWithAssignmentAction' ConvertHasFlagsToBitwiseFlagComparisonAction' ConvertBitwiseFlagComparisonToHasFlagsAction' CheckIfParameterIsNullAction' ConvertAnonymousDelegateToLambdaAction' ConvertAsToCastAction' ConvertCastToAsAction' ConvertExplicitToImplicitImplementationAction' ConvertImplicitToExplicitImplementationAction' ConvertLambdaBodyExpressionToStatementAction' ConvertLambdaBodyStatementToExpressionAction' ConvertLambdaToAnonymousDelegateAction' ConvertSwitchToIfAction' CopyCommentsFromBase' CopyCommentsFromInterface' CreateClassDeclarationAction' CreateMethodDeclarationAction' DeclareLocalVariableAction' IntroduceConstantAction' AffectedEntity' DefaultRules' NamingConventionService' NamingRule' NamingStyle' CreateConstructorDeclarationAction' CreateCustomEventImplementationAction' CreateIndexerAction' CreateOverloadWithoutParameterAction' InvertConditionalOperatorAction' JoinDeclarationAndAssignmentAction' JoinStringAction' LinqFluentToQueryAction' LinqQueryToFluentAction' MergeNestedIfAction' NegateIsExpressionAction' PutInsideUsingAction' SplitIfAction]' [AddCatchTypeAction]' [AddUsingAction]' [AutoLinqSumAction]' [ChangeAccessModifierAction]' [ConvertDecToHexAction]' [ConvertDoWhileToWhileLoopAction]' [ConvertEqualityOperatorToEqualsAction]' [ConvertEqualsToEqualityOperatorAction]' [ConvertForeachToForAction]' [ConvertHexToDecAction]' [ConvertMethodGroupToAnonymousMethodAction]' [ConvertMethodGroupToLambdaAction]' [AccessPath' StatementsToInitializerConverter' ReplacementNodeHelper' ConvertToInitializerAction' ReplacementNodeAnnotation]' [ConvertInitializerToExplicitInitializationsAction]' [ConvertWhileToDoWhileLoopAction]' [CreateBackingStoreAction]' [CreateDelegateAction]' [CreateEnumValue' CreatePropertyAction' CreateFieldAction' CreateLocalVariableAction]' [CS1520MethodMustHaveAReturnTypeAction]' [ExtensionMethodInvocationToStaticMethodInvocationAction]' [ExtractAnonymousMethodAction]' [ExtractFieldAction]' [FlipEqualsTargetAndArgumentAction]' [FlipOperatorArgumentsAction]' [GenerateGetterAction]' [GeneratePropertyAction]' [GenerateSwitchLabelsAction]' [ImplementAbstractMembersAction' ImplementInterfaceAction' ImplementInterfaceExplicitAction]' [ImplementNotImplementedProperty]' [InlineLocalVariableAction]' [InsertAnonymousMethodSignatureAction]' [IntroduceFormatItemAction]' [InvertIfAction]' [InvertIfAndSimplify' SimplifyIfFlowAction' SimplifyIfInLoopsFlowAction]' [InvertLogicalExpressionAction' NegateRelationalExpressionAction]' [IterateViaForeachAction]' [MoveToOuterScopeAction]' [RemoveBracesAction' AddBracesAction]' [RemoveRedundantCatchTypeAction]' [RemoveRegionAction]' [ReplaceEmptyStringAction]' [SortUsingsAction]' [SplitDeclarationAndAssignmentAction]' [SplitDeclarationListAction]' [SplitStringAction]' [UseExplicitTypeAction]' [UseStringFormatAction]' [UseVarKeywordAction]' [ConvertIfToAndExpressionIssue]' [LockThisIssue]' [NegativeRelationalExpressionIssue]' [NotImplementedExceptionIssue]' [RedundantInternalIssue]' [RedundantPrivateIssue]' [XmlDocIssue]' [AccessToClosureIssue' AccessToDisposedClosureIssue' AccessToModifiedClosureIssue' LocalVariableNamePicker]' [DuplicateBodyMethodIssue]' [DuplicateExpressionsInConditionsIssue]' [ParameterCanBeIEnumerableIssue]' [VariableDeclaredInWideScopeIssue]' [BitwiseOperatorOnEnumWithoutFlagsIssue]' [CanBeReplacedWithTryCastAndCheckForNullIssue]' [CompareOfFloatsByEqualityOperatorIssue]' [ConditionalTernaryEqualBranchIssue]' [DoNotCallOverridableMethodsInConstructorIssue]' [EmptyGeneralCatchClauseIssue]' [EqualExpressionComparisonIssue]' [EventUnsubscriptionViaAnonymousDelegateIssue]' [ForControlVariableIsNeverModifiedIssue]' [FunctionNeverReturnsIssue]' [LocalVariableHidesMemberIssue' VariableHidesMemberIssue' ParameterHidesMemberIssue' MemberCollectionService]' [LongLiteralEndingLowerLIssue]' [OptionalParameterHierarchyMismatchIssue]' [OptionalParameterRefOutIssue]' [StaticFieldInGenericTypeIssue]' [ThreadStaticAtInstanceFieldIssue]' [ValueParameterNotUsedIssue]' [CS1573ParameterHasNoMatchingParamTagIssue]' [CS1717AssignmentMadeToSameVariableIssue]' [UnassignedReadonlyFieldIssue]' [InconsistentNamingIssue]' [NonPublicMethodWithTestAttributeIssue]' [ConvertClosureToMethodGroupIssue]' [ConvertConditionalTernaryToNullCoalescingIssue]' [ConvertIfStatementToConditionalTernaryExpressionIssue]' [ConvertIfStatementToNullCoalescingExpressionIssue]' [ConvertNullableToShortFormIssue]' [InvokeAsExtensionMethodIssue]' [RewriteIfReturnToReturnIssue]' [SuggestUseVarKeywordEvidentIssue]' [AccessToStaticMemberViaDerivedTypeIssue]' [BaseMemberHasParamsIssue]' [ConvertIfDoToWhileIssue]' [ConvertToConstantIssue]' [EmptyEmbeddedStatementIssue]' [FieldCanBeMadeReadOnlyIssue]' [MemberCanBeMadeStaticIssue]' [PublicConstructorInAbstractClassIssue]' [ReplaceWithFirstOrDefaultIssue]' [ReplaceWithLastOrDefaultIssue]' [ReplaceWithOfTypeAnyIssue' ReplaceWithOfTypeCountIssue' ReplaceWithOfTypeFirstIssue' ReplaceWithOfTypeFirstOrDefaultIssue' ReplaceWithOfTypeIssue' ReplaceWithOfTypeLastIssue' ReplaceWithOfTypeLastOrDefaultIssue' ReplaceWithOfTypeLongCountIssue' ReplaceWithOfTypeSingleIssue' ReplaceWithOfTypeSingleOrDefaultIssue' ReplaceWithOfTypeWhereIssue]' [ReplaceWithSingleCallToAnyIssue' ReplaceWithSingleCallToCountIssue' ReplaceWithSingleCallToFirstIssue' ReplaceWithSingleCallToFirstOrDefaultIssue' ReplaceWithSingleCallToLastIssue' ReplaceWithSingleCallToLastOrDefaultIssue' ReplaceWithSingleCallToLongCountIssue' ReplaceWithSingleCallToSingleIssue' ReplaceWithSingleCallToSingleOrDefaultIssue]' [ReplaceWithStringIsNullOrEmptyIssue]' [SimplifyConditionalTernaryExpressionIssue]' [StringEndsWithIsCultureSpecificIssue' StringIndexOfIsCultureSpecificIssue' StringLastIndexOfIsCultureSpecificIssue' StringStartsWithIsCultureSpecificIssue]' [UseMethodAnyIssue]' [UseMethodIsInstanceOfTypeIssue]' [ConstantNullCoalescingConditionIssue]' [DoubleNegationOperatorIssue]' [RedundantAttributeParenthesesIssue]' [RedundantBaseQualifierIssue]' [RedundantBoolCompareIssue]' [RedundantCaseLabelIssue]' [RedundantCastIssue]' [RedundantCommaInArrayInitializerIssue]' [RedundantComparisonWithNullIssue]' [RedundantObjectCreationArgumentListIssue]' [RedundantExtendsListEntryIssue]' [RedundantIfElseBlockIssue]' [RedundantNameQualifierIssue]' [RedundantObjectOrCollectionInitializerIssue]' [RedundantTernaryExpressionIssue]' [RedundantThisQualifierIssue]' [RedundantToStringCallForValueTypesIssue]' [RedundantToStringCallIssue]' [RedundantUsingDirectiveIssue]' [EmptyConstructorIssue]' [EmptyDestructorIssue]' [EmptyNamespaceIssue]' [EnumUnderlyingTypeIsIntIssue]' [LocalVariableNotUsedIssue]' [PartialTypeWithSinglePartIssue]' [RedundantBaseConstructorCallIssue]' [RedundantDefaultFieldInitializerIssue]' [RedundantOverridenMemberIssue]' [UnusedTypeParameterIssue]' [DisposeMethodInNonIDisposableTypeIssue]' [DuplicatedLinqToListOrArrayIssue]' [ExceptionRethrowIssue]' [ExplicitConversionInForEachIssue]' [IncorrectCallToObjectGetHashCodeIssue]' [ResultOfAsyncCallShouldNotBeIgnoredIssue]' [UseOfMemberOfNullReference]' [DontUseLinqWhenItsVerboseAndInefficientIssue]' [ConvertIfStatementToSwitchStatementIssue]' [RedundantParamsIssue]' [ForCanBeConvertedToForeachIssue]' [RedundantEmptyDefaultSwitchBranchIssue]' [CS0126ReturnMustBeFollowedByAnyExpression]' [CS0127ReturnMustNotBeFollowedByAnyExpression]' [CS0152DuplicateCaseLabelValueIssue]' [CS0759RedundantPartialMethodIssue]' [CS0029InvalidConversionIssue]' [SealedMemberInSealedClassIssue]' [ConvertIfToOrExpressionIssue]' [UnusedAnonymousMethodSignatureIssue]' [EmptyStatementIssue]' [RedundantArgumentDefaultValueIssue]' [RedundantEmptyFinallyBlockIssue]' [PartialMethodParameterNameMismatchIssue]' [ReplaceWithSimpleAssignmentIssue]' [StringCompareToIsCultureSpecificIssue]' [StringCompareIsCultureSpecificIssue]' [UseArrayCreationExpressionIssue]' [BaseMethodParameterNameMismatchIssue]' [RedundantExplicitArraySizeIssue]' [RedundantUnsafeContextIssue]' [ProhibitedModifiersIssue]' [RemoveRedundantOrStatementIssue]' [AutoAsyncIssue]' [AdditionalOfTypeIssues]' [RedundantLambdaParameterTypeIssue]' [RedundantLambdaSignatureParenthesesIssue]' [ConvertToLambdaExpressionIssue]' [RedundantArgumentNameIssue]' [AddOptionalParameterToInvocationAction]' [ComputeConstantValueAction]' [RedundantCheckBeforeAssignmentIssue]' [RedundantLogicalConditionalExpressionOperandIssue]' [ForStatementConditionIsTrueIssue]' [ConvertToStaticTypeIssue]' [OperatorIsCanBeUsedIssue]' [UseIsOperatorIssue]' [FormatStringProblemIssue]' [RedundantCatchClauseIssue]' [PossibleMultipleEnumerationIssue]' [ConditionIsAlwaysTrueOrFalseIssue]' [UnusedLabelIssue]' [MemberHidesStaticFromOuterClassIssue]' [MethodOverloadWithOptionalParameterIssue]' [DuplicateIfInIfChainIssue]' [ReferenceEqualsWithValueTypeIssue]' [CompareNonConstrainedGenericWithNullIssue]' [RedundantDelegateCreationIssue]' [RedundantEnumerableCastCallIssue]' [MissingInterfaceMemberImplementationIssue]' [UnmatchedSizeSpecificationInArrayCreationIssue]' [RedundantBlockInDifferentBranchesIssue]' [NonReadonlyReferencedInGetHashCodeIssue]' [ParameterCanBeDeclaredWithBaseTypeIssue]' [ITypeCriterion' SupportsIndexingCriterion' TypeCriteriaCollector' IsTypeCriterion' IsArrayTypeCriterion' HasMemberCriterion]' [SameGuardConditionExpressionInIfelseBranchesIssue]' [RedundantExplicitArrayCreationIssue]' [ArrayCreationCanBeReplacedWithArrayInitializerIssue]' [RedundantAnonymousTypePropertyNameIssue]' [PossibleAssignmentToReadonlyFieldIssue]' [ObjectCreationAsStatementIssue]' [NotResolvedInTextIssue]' [DelegateSubtractionIssue]' [UnusedParameterIssue]' [SimplifyLinqExpressionIssue]' [RedundantExplicitNullableCreationIssue]' [RedundantStringToCharArrayCallIssue]' [ConvertToAutoPropertyIssue]' [StaticConstructorParameterIssue]' [CS0183ExpressionIsAlwaysOfProvidedTypeIssue]' [PolymorphicFieldLikeEventInvocationIssue]' [ConvertTailRecursiveCallToLoopIssue]' [LoopCanBeConvertedToQueryIssue]' [PartOfBodyCanBeConvertedToQueryIssue]' [RedundantTypeArgumentsOfMethodIssue]' [PossibleMistakenCallToGetTypeIssue]' [RedundantNotNullAttributeInNonNullableTypeIssue]' [CS0618UsageOfObsoleteMemberIssue]' [CS0169FieldIsNeverUsedIssue]' [StaticEventSubscriptionIssue]' [CS1105ExtensionMethodMustBeDeclaredStaticAction]' [CS0659ClassOverrideEqualsWithoutGetHashCode]' [CS1729TypeHasNoConstructorWithNArgumentsIssue]' [ParameterOnlyAssignedIssue' VariableOnlyAssignedIssue]' [CallToObjectEqualsViaBaseIssue]' [ConstantConditionIssue]' [CheckNamespaceIssue]' [CastExpressionOfIncompatibleTypeIssue]' [ExpressionIsNeverOfProvidedTypeIssue]' [RedundantAssignmentIssue]' [UnreachableCodeIssue]' [ReplaceWithSingleCallToMinIssue' ReplaceWithSingleCallToAverageIssue' ReplaceWithSingleCallToSumIssue' ReplaceWithSingleCallToMaxIssue]. LCC (Lack of Component Cohesion) = 0.69
Feature Concentration,ICSharpCode.NRefactory.CSharp.Refactoring,ICSharpCode.NRefactory.CSharp,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [GatherVisitorConstants' GatherVisitorBase' IGatherVisitor]' [GatherVisitorCodeIssueProvider' BaseMethodCallWithDefaultParameterIssue]' [IssueCategories]' [RefactoringExtensions]. LCC (Lack of Component Cohesion) = 0.57
