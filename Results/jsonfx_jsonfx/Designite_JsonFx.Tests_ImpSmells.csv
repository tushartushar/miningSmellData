Implementation smell,Namespace,Class,File,Method,Description
Long Method,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_ArrayNestedDeeply_ReturnsExpectedArray,The method has 106 lines of code.
Long Method,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The method has 179 lines of code.
Long Method,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The method has 178 lines of code.
Long Method,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The method has 107 lines of code.
Long Method,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The method has 141 lines of code.
Long Method,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The method has 101 lines of code.
Long Method,JsonFx.Html,HtmlOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlOutTransformerTests.cs,Format_ArrayNestedDeeply_ReturnsExpectedArray,The method has 130 lines of code.
Long Method,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The method has 122 lines of code.
Long Method,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The method has 197 lines of code.
Long Method,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The method has 176 lines of code.
Long Method,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_ComplexGraph_RoundTripsJsonToXmlAndBack,The method has 147 lines of code.
Complex Method,JsonFx,AssertEqualityComparer<T>,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\AssertPatched.cs,Equals,Cyclomatic complexity of the method is 13
Complex Method,JsonFx.Json,Foo2,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Equals,Cyclomatic complexity of the method is 8
Long Parameter List,JsonFx.CodeGen,Example,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,Example,The method has 9 parameters. Parameters: a' b' c' one' two' three' do' re' mi
Long Parameter List,JsonFx.CodeGen,Example,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,Reset,The method has 9 parameters. Parameters: a' b' c' one' two' three' do' re' mi
Long Statement,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_ArrayRoot_ReturnsDocument,The length of the statement  "					0x02' (byte)'0'' 0' 0x08' 0x00' 0x00' 0x00' (byte)'a'' (byte)'w'' (byte)'e'' (byte)'s'' (byte)'o'' (byte)'m'' (byte)'e'' 0x00' " is 126.
Long Statement,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_ArrayAsProperty_ReturnsDocument,The length of the statement  "					0x02' (byte)'0'' 0' 0x08' 0x00' 0x00' 0x00' (byte)'a'' (byte)'w'' (byte)'e'' (byte)'s'' (byte)'o'' (byte)'m'' (byte)'e'' 0x00' " is 126.
Long Statement,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_ArrayAsProperty_ReturnsDocument,The length of the statement  "					0x02' (byte)'0'' 0' 0x08' 0x00' 0x00' 0x00' (byte)'a'' (byte)'w'' (byte)'e'' (byte)'s'' (byte)'o'' (byte)'m'' (byte)'e'' 0x00' " is 126.
Long Statement,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_ArrayAsProperty_RoundTripsJsonToBsonAndBack,The length of the statement  "					0x02' (byte)'0'' 0' 0x08' 0x00' 0x00' 0x00' (byte)'a'' (byte)'w'' (byte)'e'' (byte)'s'' (byte)'o'' (byte)'m'' (byte)'e'' 0x00' " is 126.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_ProtectedProperty_ReturnsPropertyValue,The length of the statement  "			var propertyInfo = input.GetType().GetProperty("C"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 128.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_PrivateProperty_ReturnsPropertyValue,The length of the statement  "			var propertyInfo = input.GetType().GetProperty("Two"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 130.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_1MillionPropertyGets_PerformsInAround10ms,The length of the statement  "			PropertyInfo propertyInfo = typeof(Example).GetProperty("A"' BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy); " is 157.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertySetter_ProtectedProperty_ReturnsPropertyValue,The length of the statement  "			var propertyInfo = input.GetType().GetProperty("C"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 128.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertySetter_PrivateProperty_ReturnsPropertyValue,The length of the statement  "			var propertyInfo = input.GetType().GetProperty("Two"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 130.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertySetter_1MillionPropertySets_PerformsInAround10ms,The length of the statement  "			PropertyInfo propertyInfo = typeof(Example).GetProperty("A"' BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy); " is 157.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldGetter_ProtectedField_ReturnsFieldValue,The length of the statement  "			var fieldInfo = input.GetType().GetField("c"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 122.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldGetter_PrivateField_ReturnsFieldValue,The length of the statement  "			var fieldInfo = input.GetType().GetField("two"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 124.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldGetter_1MillionFieldGets_PerformsInAround10ms,The length of the statement  "			FieldInfo fieldInfo = typeof(Example).GetField("a"' BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy); " is 148.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldSetter_ProtectedField_ReturnsFieldValue,The length of the statement  "			var fieldInfo = input.GetType().GetField("c"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 122.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldSetter_PrivateField_ReturnsFieldValue,The length of the statement  "			var fieldInfo = input.GetType().GetField("two"' BindingFlags.NonPublic|BindingFlags.Instance|BindingFlags.FlattenHierarchy); " is 124.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldSetter_1MillionFieldSets_PerformsInAround10ms,The length of the statement  "			FieldInfo fieldInfo = typeof(Example).GetField("a"' BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy); " is 148.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodAssortedArgsVoidReturn_BuildsProxyAndInvokes,The length of the statement  "				from m in typeof(Example).GetMembers(BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy) " is 132.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The length of the statement  "				from m in typeof(Example).GetMembers(BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy) " is 132.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_1MillionMethodCalls_PerformsInAround50ms,The length of the statement  "			MethodInfo methodInfo = typeof(Example).GetMethod("GetMi"' BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy); " is 155.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorNoArgs_ReturnsCorrectlyInstantiatedObject,The length of the statement  "				from m in typeof(Example).GetMembers(BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy) " is 132.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorNoArgsAlt_ReturnsCorrectlyInstantiatedObject,The length of the statement  "				from m in typeof(Example).GetMembers(BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy) " is 132.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorAssortedArgs_ReturnsCorrectlyInstantiatedObject,The length of the statement  "				typeof(string)' typeof(string)' typeof(string)' typeof(int)' typeof(int)' typeof(int)' typeof(string)' typeof(string)' typeof(string)); " is 135.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorAssortedArgs_ReturnsCorrectlyInstantiatedObject,The length of the statement  "				from m in typeof(Example).GetMembers(BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy) " is 132.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The length of the statement  "				typeof(string)' typeof(string)' typeof(string)' typeof(int)' typeof(int)' typeof(int)' typeof(string)' typeof(string)' typeof(string)); " is 135.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The length of the statement  "			var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false); " is 121.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The length of the statement  "				from m in typeof(Example).GetMembers(BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.FlattenHierarchy) " is 132.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsMissingWhenCalling_ThrowsArgumentNullException,The length of the statement  "				typeof(string)' typeof(string)' typeof(string)' typeof(int)' typeof(int)' typeof(int)' typeof(string)' typeof(string)' typeof(string)); " is 135.
Long Statement,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The length of the statement  "				typeof(string)' typeof(string)' typeof(string)' typeof(int)' typeof(int)' typeof(int)' typeof(string)' typeof(string)' typeof(string)); " is 135.
Long Statement,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_CoerceToBaseType_NoCoercionNeeded,The length of the statement  "			var actual = new TypeCoercionUtility(settings' settings.AllowNullValueTypes).CoerceType(typeof(IDictionary<string' object>)' input); " is 132.
Long Statement,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_ExpandoToGenericDictionary_CoercesViaGenericDictionaryCopy,The length of the statement  "			var actual = new TypeCoercionUtility(settings' settings.AllowNullValueTypes).CoerceType(typeof(Dictionary<string' object>)' input); " is 131.
Long Statement,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_WhereOrderByLast_ReturnsMultipleObjects,The length of the statement  "			var writer = new JsonWriter(new DataWriterSettings(new ConventionResolverStrategy(ConventionResolverStrategy.WordCasing.Lowercase' "-"))); " is 138.
Long Statement,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_WhereOrderByLast_ReturnsMultipleObjects,The length of the statement  "			const string expected = @"[{""person-id"":1'""first-name"":""Foo""'""last-name"":""Bar""}'{""person-id"":3'""first-name"":""Blah""'""last-name"":""Yada""}]"; " is 157.
Long Statement,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryArrayItems_OrderByThenByLast_ReturnsMultipleObjects,The length of the statement  "			var reader = new JsonReader(new DataReaderSettings(new ConventionResolverStrategy(ConventionResolverStrategy.WordCasing.CamelCase))); " is 133.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_NestedDefaultNamespaces_ReturnsMarkup,The length of the statement  "			const string expected = @"<outer xmlns=""http://example.org/outer""><middle-1 xmlns=""http://example.org/inner""><inner>this should be inner</inner></middle-1><middle-2>this should be outer</middle-2></outer>"; " is 210.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_MultipleAttributes_ReturnsMarkup,The length of the statement  "			const string expected = @"<root whitespace="" this contains whitespace "" no-value anyQuotedText=""/\"+"\uCAFE\uBABE\uAB98\uFCDE\uBCDA\uEF4A"+@"&#x8;&#xC;&#xA;&#xD;&#x9;`1~!@#$%^&amp;*()_+-=[]{}|;:''./&lt;&gt;?"" />"; " is 217.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_MultipleAttributesCanonicalForm_ReturnsCanonicalMarkup,The length of the statement  "			const string expected = @"<root anyQuotedText=""/\"+"\uCAFE\uBABE\uAB98\uFCDE\uBCDA\uEF4A"+@"&#x8;&#xC;&#xA;&#xD;&#x9;`1~!@#$%^&amp;*()_+-=[]{}|;:&apos;'./&lt;>?"" no-value whitespace="" this contains whitespace ""></root>"; " is 224.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_HtmlContent_ReturnsMarkup,The length of the statement  "			const string expected = @"<div class=""content""><p style=""color:red""><strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.</p></div>"; " is 164.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_OverlappingNamespacedTagsErrorRecovery_ReturnsMarkupAsIs,The length of the statement  "			const string expected = @"<a:odd xmlns:a=""http://example.com/odd/a""><b:auto-closed xmlns:b=""http://example.com/auto-closed/b""><c:even xmlns:c=""http://example.com/even/c""></c:even></b:auto-closed></a:odd>"; " is 211.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_OverlappingNamespacedTagsErrorRecovery_ReturnsAutoBalanced,The length of the statement  "			const string expected = @"<a:odd xmlns:a=""http://example.com/odd/a""><b:auto-closed xmlns:b=""http://example.com/auto-closed/b""><c:even xmlns:c=""http://example.com/even/c""></c:even></b:auto-closed></a:odd>"; " is 211.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "			        MarkupGrammar.TokenUnparsed("%@"' "%"' @" Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" ") " is 147.
Long Statement,JsonFx.Html,HtmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlFormatterTests.cs,Format_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "			const string expected = @"<%@ Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" %>"; " is 137.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_NestedDefaultNamespaces_ReturnsSequence,The length of the statement  "			const string input = @"<outer xmlns=""http://example.org/outer""><middle-1 xmlns=""http://example.org/inner""><inner>this should be inner</inner></middle-1><middle-2>this should be outer</middle-2></outer>"; " is 207.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_MultipleAttributes_ReturnsSequence,The length of the statement  "			const string input = @"<root no-value whitespace="" this contains whitespace "" anyQuotedText="""+"/\\\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"+@"""></root>"; " is 195.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_HtmlContent_ReturnsSequence,The length of the statement  "			const string input = @"<div class=""content""><p style=""color:red""><strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.</p></div>"; " is 161.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_HtmlScriptBlock_ReturnsCDataInside,The length of the statement  "			        MarkupGrammar.TokenPrimitive("\r\n\t\tvar text = \"<strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.\";\r\n\t")' " is 143.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_HtmlScriptBlockCommentUnwrapUnparsedComments_ReturnsCommentTextInside,The length of the statement  "			        MarkupGrammar.TokenPrimitive("\r\n\t\tvar text = \"<strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.\";\r\n\t")' " is 143.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_HtmlScriptBlockComment_ReturnsCommentBlock,The length of the statement  "			        MarkupGrammar.TokenPrimitive(new UnparsedBlock("!--"' "--"' "\r\n\t\tvar text = \"<strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.\";\r\n\t"))' " is 175.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_HtmlStyleBlock_ReturnsCDataInside,The length of the statement  "			        MarkupGrammar.TokenPrimitive("\r\n\t\t<strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.\r\n\t")' " is 127.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_OverlappingNamespacedTagsErrorRecovery_ReturnsSequenceAsIs,The length of the statement  "			const string input = @"<a:odd xmlns=""http://example.com/odd"" xmlns:a=""http://example.com/odd/a""><b:auto-closed xmlns=""http://example.com/auto-closed"" xmlns:b=""http://example.com/auto-closed/b""><c:even xmlns=""http://example.com/even"" xmlns:c=""http://example.com/even/c""></a:odd></d:ignored></c:even>"; " is 312.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_OverlappingNamespacedTagsErrorRecoveryAutoBalancing_ReturnsSequenceAsIs,The length of the statement  "			const string input = @"<a:odd xmlns=""http://example.com/odd"" xmlns:a=""http://example.com/odd/a""><b:auto-closed xmlns=""http://example.com/auto-closed"" xmlns:b=""http://example.com/auto-closed/b""><c:even xmlns=""http://example.com/even"" xmlns:c=""http://example.com/even/c""></a:odd></d:ignored></c:even>"; " is 312.
Long Statement,JsonFx.Html,HtmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlTokenizerTests.cs,GetTokens_AspNetPage_ReturnsUnparsed,The length of the statement  "			        MarkupGrammar.TokenUnparsed("%@"' "%"' @" Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" ")' " is 148.
Long Statement,JsonFx.JsonML,JsonMLInTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\JsonML\JsonMLInTransformerTests.cs,GetTokens_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "			        MarkupGrammar.TokenUnparsed("%@"' "%"' @" Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" ") " is 147.
Long Statement,JsonFx.JsonML,JsonMLInTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\JsonML\JsonMLInTransformerTests.cs,GetTokens_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "					ModelGrammar.TokenPrimitive(new UnparsedBlock("%@"' "%"' @" Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" ")) " is 166.
Long Statement,JsonFx.JsonML,JsonMLOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\JsonML\JsonMLOutTransformerTests.cs,GetTokens_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "					ModelGrammar.TokenPrimitive(new UnparsedBlock("%@"' "%"' @" Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" ")) " is 166.
Long Statement,JsonFx.JsonML,JsonMLOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\JsonML\JsonMLOutTransformerTests.cs,GetTokens_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "			        MarkupGrammar.TokenUnparsed("%@"' "%"' @" Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" ") " is 147.
Long Statement,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The length of the statement  "			var expected = @"[""Normal string before""'""2008-02-29T23:59:59.999Z""'""2010-07-05T10:51:17.768""'""Normal string after""]"; " is 126.
Long Statement,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The length of the statement  "			var expected = @"[""Normal string before""'""2008-02-29T23:59:59.999Z""'""2010-07-05T10:51:17.768Z""'""Normal string after""]"; " is 127.
Long Statement,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The length of the statement  "			var expected = @"[""Normal string before""'""/Date(1204329599999)/""'""/Date(1278327077768)/""'""Normal string after""]"; " is 121.
Long Statement,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The length of the statement  "			var input = @"[ ""Normal string before""' ""2008-02-29T23:59:59.999Z""' ""2010-07-05T10:51:17.768""' ""Normal string after""]"; " is 127.
Long Statement,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The length of the statement  "			var input = @"[ ""Normal string before""' ""2008-02-29T23:59:59.999Z""' ""/Date(1278327077768)/""' ""Normal string after""]"; " is 125.
Long Statement,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_DeserializesStreamOfObject,The length of the statement  "			using (var stream = WebRequest.Create("https://api.twitter.com/1/statuses/user_timeline.json?screen_name=jsonfx&count=2") " is 121.
Long Statement,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_ObjectNested_ReturnsNestedObject,The length of the statement  "			const string expected = @"{""JSON Test Pattern pass3"":{""The outermost value"":""must be an object or array.""'""In this test"":""It is an object.""}}"; " is 153.
Long Statement,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The length of the statement  "			const string expected = @"[""JSON Test Pattern pass1""'{""object with 1 member"":[""array with 1 element""]}'{}'[]'-42'true'false'null'{""integer"":1234567890'""real"":-9876.54321'""e"":1.23456789E-13'""E"":1.23456789E+34'"""":2.3456789012E+76'""zero"":0'""one"":1'""space"":"" ""'""quote"":""\""""'""backslash"":""\\""'""controls"":""\b\f\n\r\t""'""slash"":""/ & /""'""alpha"":""abcdefghijklmnopqrstuvwyz""'""ALPHA"":""ABCDEFGHIJKLMNOPQRSTUVWYZ""'""digit"":""0123456789""'""0123456789"":""digit""'""special"":""`1~!@#$%^&*()_+-={':[']}|;.</>?""'""hex"":""\u0123\u4567\u89AB\uCDEF\uABCD\uEF4A""'""true"":true'""false"":false'""null"":null'""array"":[]'""object"":{}'""address"":""50 St. James Street""'""url"":""http://www.JSON.org/""'""comment"":""// /* <!-- --""'""# -- --> */"":"" ""'"" s p a c e d "":[1'2'3'4'5'6'7]'""compact"":[1'2'3'4'5'6'7]'""jsontext"":""{\""object with 1 member\"":[\""array with 1 element\""]}""'""quotes"":""&#34; \"" %22 0x22 034 &#x22;""'""/\\\""\uCAFE\uBABE\uAB98\uFCDE\uBCDA\uEF4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"":""A key can be any string""}'0.5'98.6'99.44'1066'10'1'0.1'1'2'2'""rosebud""]"; " is 1135.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_HelloWorld_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlFormatter = new TransformFormatter<ModelTokenType' MarkupTokenType>(new XmlWriter.XmlFormatter(writerSettings)' new XmlWriter.XmlOutTransformer(writerSettings)); " is 168.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_HelloWorld_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlTokenizer = new TransformTokenizer<MarkupTokenType' ModelTokenType>(new XmlReader.XmlTokenizer()' new XmlReader.XmlInTransformer(readerSettings)); " is 153.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_ArrayAsProperty_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlFormatter = new TransformFormatter<ModelTokenType' MarkupTokenType>(new XmlWriter.XmlFormatter(writerSettings)' new XmlWriter.XmlOutTransformer(writerSettings)); " is 168.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_ArrayAsProperty_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlTokenizer = new TransformTokenizer<MarkupTokenType' ModelTokenType>(new XmlReader.XmlTokenizer()' new XmlReader.XmlInTransformer(readerSettings)); " is 153.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_BooleanValue_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlFormatter = new TransformFormatter<ModelTokenType' MarkupTokenType>(new XmlWriter.XmlFormatter(writerSettings)' new XmlWriter.XmlOutTransformer(writerSettings)); " is 168.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_BooleanValue_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlTokenizer = new TransformTokenizer<MarkupTokenType' ModelTokenType>(new XmlReader.XmlTokenizer()' new XmlReader.XmlInTransformer(readerSettings)); " is 153.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_ComplexGraph_RoundTripsJsonToXmlAndBack,The length of the statement  "		<"+"_x002F__x005C__x0022_\uCAFE\uBABE_xAB98__xFCDE_\uBCDA_xEF4A__x0008__x000C__x000A__x000D__x0009__x0060_1_x007E__x0021__x0040__x0023__x0024__x0025__x005E__x0026__x002A__x0028__x0029___x002B_-_x003D__x005B__x005D__x007B__x007D__x007C__x003B__x003A__x0027__x002C_._x002F__x003C__x003E__x003F_"+@">A key can be any string</"+"_x002F__x005C__x0022_\uCAFE\uBABE_xAB98__xFCDE_\uBCDA_xEF4A__x0008__x000C__x000A__x000D__x0009__x0060_1_x007E__x0021__x0040__x0023__x0024__x0025__x005E__x0026__x002A__x0028__x0029___x002B_-_x003D__x005B__x005D__x007B__x007D__x007C__x003B__x003A__x0027__x002C_._x002F__x003C__x003E__x003F_"+@"> " is 618.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_ComplexGraph_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlFormatter = new TransformFormatter<ModelTokenType' MarkupTokenType>(new XmlWriter.XmlFormatter(writerSettings)' new XmlWriter.XmlOutTransformer(writerSettings)); " is 168.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_ComplexGraph_RoundTripsJsonToXmlAndBack,The length of the statement  "			const string expectedJson = @"[""JSON Test Pattern pass1""'{""object with 1 member"":[""array with 1 element""]}'{}'[]'-42'true'false'null'{""integer"":1234567890'""real"":-9876.54321'""e"":1.23456789e-13'""E"":1.23456789e+34'"""":2.3456789012e+76'""zero"":0'""one"":1'""space"":"" ""'""quote"":""\""""'""backslash"":""\\""'""controls"":""\b\f\n\r\t""'""slash"":""/ & /""'""alpha"":""abcdefghijklmnopqrstuvwyz""'""ALPHA"":""ABCDEFGHIJKLMNOPQRSTUVWYZ""'""digit"":""0123456789""'""0123456789"":""digit""'""special"":""`1~!@#$%^&*()_+-={':[']}|;.\u003C/>?""'""hex"":""\u0123\u4567\u89AB\uCDEF\uABCD\uEF4A""'""true"":true'""false"":false'""null"":null'""array"":[]'""object"":{}'""address"":""50 St. James Street""'""url"":""http://www.JSON.org/""'""comment"":""// /* \u003C!-- --""'""# -- --> */"":"" ""'"" s p a c e d "":[1'2'3'4'5'6'7]'""compact"":[1'2'3'4'5'6'7]'""jsontext"":""{\""object with 1 member\"":[\""array with 1 element\""]}""'""quotes"":""&#34; \"" %22 0x22 034 &#x22;""'""/\\\""\uCAFE\uBABE\uAB98\uFCDE\uBCDA\uEF4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./\u003C>?"":""A key can be any string""}'0.5'98.6'99.44'1066'10'1'0.1'1'2'2'""rosebud""]"; " is 1154.
Long Statement,JsonFx.Xml,XmlConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlConverterTests.cs,ConvertJson2Xml_ComplexGraph_RoundTripsJsonToXmlAndBack,The length of the statement  "			var xmlTokenizer = new TransformTokenizer<MarkupTokenType' ModelTokenType>(new XmlReader.XmlTokenizer()' new XmlReader.XmlInTransformer(readerSettings)); " is 153.
Long Statement,JsonFx.Xml,XmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlFormatterTests.cs,Format_NestedDefaultNamespaces_ReturnsMarkup,The length of the statement  "			const string expected = @"<outer xmlns=""http://example.org/outer""><middle-1 xmlns=""http://example.org/inner""><inner>this should be inner</inner></middle-1><middle-2>this should be outer</middle-2></outer>"; " is 210.
Long Statement,JsonFx.Xml,XmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlFormatterTests.cs,Format_MultipleAttributes_ReturnsMarkup,The length of the statement  "			const string expected = @"<root no-value="""" whitespace="" this contains whitespace "" anyQuotedText=""/\"+"\uCAFE\uBABE\uAB98\uFCDE\uBCDA\uEF4A\n\r\t"+@"`1~!@#$%^&amp;*()_+-=[]{}|;:''./&lt;&gt;?"" />"; " is 203.
Long Statement,JsonFx.Xml,XmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlFormatterTests.cs,Format_XmlContent_ReturnsMarkup,The length of the statement  "			const string expected = @"<div class=""content""><p style=""color:red""><strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.</p></div>"; " is 164.
Long Statement,JsonFx.Xml,XmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlFormatterTests.cs,Format_OverlappingNamespaced_ReturnsBalanced,The length of the statement  "			const string expected = @"<a:odd xmlns:a=""http://example.com/odd/a""><b:auto-closed xmlns:b=""http://example.com/auto-closed/b""><c:even xmlns:c=""http://example.com/even/c"" /></b:auto-closed></a:odd>"; " is 204.
Long Statement,JsonFx.Xml,XmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlFormatterTests.cs,Format_NamespacedTags_ReturnsBalanced,The length of the statement  "			const string expected = @"<a:odd xmlns:a=""http://example.com/odd/a""><b:auto-closed xmlns:b=""http://example.com/auto-closed/b""><c:even xmlns:c=""http://example.com/even/c"" /></b:auto-closed></a:odd>"; " is 204.
Long Statement,JsonFx.Xml,XmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlFormatterTests.cs,Format_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "			        MarkupGrammar.TokenUnparsed("%@"' "%"' @" Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" ") " is 147.
Long Statement,JsonFx.Xml,XmlFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlFormatterTests.cs,Format_AspNetPageDeclaration_ReturnsUnparsed,The length of the statement  "			const string expected = @"<%@ Page Language=""C#"" AutoEventWireup=""true"" CodeBehind=""Default.aspx.cs"" Inherits=""Foo._Default"" %>"; " is 137.
Long Statement,JsonFx.Xml,XmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlTokenizerTests.cs,GetTokens_NestedDefaultNamespaces_ReturnsSequence,The length of the statement  "			const string input = @"<outer xmlns=""http://example.org/outer""><middle-1 xmlns=""http://example.org/inner""><inner>this should be inner</inner></middle-1><middle-2>this should be outer</middle-2></outer>"; " is 207.
Long Statement,JsonFx.Xml,XmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlTokenizerTests.cs,GetTokens_MultipleAttributes_ReturnsSequence,The length of the statement  "			const string input = @"<root no-value="""" whitespace="" this contains whitespace "" anyQuotedText="""+"/\\\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\n\r\t`1~!@#$%^&amp;*()_+-=[]{}|;:''./&lt;&gt;?"+@"""></root>"; " is 206.
Long Statement,JsonFx.Xml,XmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlTokenizerTests.cs,GetTokens_HtmlContent_ReturnsSequence,The length of the statement  "			const string input = @"<div class=""content""><p style=""color:red""><strong>Lorem ipsum</strong> dolor sit amet' <i>consectetur</i> adipiscing elit.</p></div>"; " is 161.
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_ArrayRoot_ReturnsDocument,The following statement contains a magic number: var expected = new[]  		    {  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("0")'  				ModelGrammar.TokenPrimitive("awesome")'  				ModelGrammar.TokenProperty("1")'  				ModelGrammar.TokenPrimitive(5.05)'  				ModelGrammar.TokenProperty("2")'  				ModelGrammar.TokenPrimitive(1986)'  				ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_ArrayRoot_ReturnsDocument,The following statement contains a magic number: var expected = new[]  		    {  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("0")'  				ModelGrammar.TokenPrimitive("awesome")'  				ModelGrammar.TokenProperty("1")'  				ModelGrammar.TokenPrimitive(5.05)'  				ModelGrammar.TokenProperty("2")'  				ModelGrammar.TokenPrimitive(1986)'  				ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_ArrayAsProperty_ReturnsDocument,The following statement contains a magic number: var expected = new[]  		    {  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("BSON")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("awesome")'  				ModelGrammar.TokenPrimitive(5.05)'  				ModelGrammar.TokenPrimitive(1986)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_ArrayAsProperty_ReturnsDocument,The following statement contains a magic number: var expected = new[]  		    {  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("BSON")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("awesome")'  				ModelGrammar.TokenPrimitive(5.05)'  				ModelGrammar.TokenPrimitive(1986)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_BooleanValue_ReturnsDocument,The following statement contains a magic number: var input = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_BooleanValue_ReturnsDocument,The following statement contains a magic number: var input = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_BooleanValue_ReturnsDocument,The following statement contains a magic number: var input = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_BooleanValue_ReturnsDocument,The following statement contains a magic number: var input = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_BooleanValue_ReturnsDocument,The following statement contains a magic number: var input = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_BooleanValue_ReturnsDocument,The following statement contains a magic number: var input = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonTokenizerTests.cs,GetTokens_BooleanValue_ReturnsDocument,The following statement contains a magic number: var input = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_ArrayAsProperty_ReturnsDocument,The following statement contains a magic number: var input = new[]  		    {  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("BSON")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("awesome")'  				ModelGrammar.TokenPrimitive(5.05)'  				ModelGrammar.TokenPrimitive(1986)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_ArrayAsProperty_ReturnsDocument,The following statement contains a magic number: var input = new[]  		    {  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("BSON")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("awesome")'  				ModelGrammar.TokenPrimitive(5.05)'  				ModelGrammar.TokenPrimitive(1986)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_BooleanValue_ReturnsDocument,The following statement contains a magic number: var expected = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_BooleanValue_ReturnsDocument,The following statement contains a magic number: var expected = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_BooleanValue_ReturnsDocument,The following statement contains a magic number: var expected = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_BooleanValue_ReturnsDocument,The following statement contains a magic number: var expected = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_BooleanValue_ReturnsDocument,The following statement contains a magic number: var expected = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_BooleanValue_ReturnsDocument,The following statement contains a magic number: var expected = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonFormatterTests.cs,Format_BooleanValue_ReturnsDocument,The following statement contains a magic number: var expected = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_BooleanValue_RoundTripsJsonToBsonAndBack,The following statement contains a magic number: var expectedBinary = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_BooleanValue_RoundTripsJsonToBsonAndBack,The following statement contains a magic number: var expectedBinary = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_BooleanValue_RoundTripsJsonToBsonAndBack,The following statement contains a magic number: var expectedBinary = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_BooleanValue_RoundTripsJsonToBsonAndBack,The following statement contains a magic number: var expectedBinary = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_BooleanValue_RoundTripsJsonToBsonAndBack,The following statement contains a magic number: var expectedBinary = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_BooleanValue_RoundTripsJsonToBsonAndBack,The following statement contains a magic number: var expectedBinary = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.Bson,BsonConverterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Bson\BsonConverterTests.cs,ConvertJson2Bson_BooleanValue_RoundTripsJsonToBsonAndBack,The following statement contains a magic number: var expectedBinary = new byte[]  				{  					13' 0' 0' 0' 8' 118' 97' 108' 105' 100' 0' 1' 0  				};
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_PrivateProperty_ReturnsPropertyValue,The following statement contains a magic number: Assert.Equal(2' getter(input));
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_GetterOnlyProperty_ReturnsPropertyValue,The following statement contains a magic number: Assert.Equal(3' getter(input));
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_AnonymousObjectProperty_ReturnsPropertyValue,The following statement contains a magic number: var input = new  			{  				A = "aye"'  				B = "bee"'  				C = "sea"'  				One = 1'  				Two = 2'  				Three = 3'  				Do = "doe"'  				Re = "ray"'  				Mi = "me"  			};
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_AnonymousObjectProperty_ReturnsPropertyValue,The following statement contains a magic number: var input = new  			{  				A = "aye"'  				B = "bee"'  				C = "sea"'  				One = 1'  				Two = 2'  				Three = 3'  				Do = "doe"'  				Re = "ray"'  				Mi = "me"  			};
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertyGetter_AnonymousObjectProperty_ReturnsPropertyValue,The following statement contains a magic number: Assert.Equal(2' getter(input));
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertySetter_PrivateProperty_ReturnsPropertyValue,The following statement contains a magic number: var expected = -2;
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertySetter_SetterOnlyProperty_ReturnsPropertyValue,The following statement contains a magic number: var expected = -3;
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertySetter_AnonymousObjectProperty_ReturnsPropertyValue,The following statement contains a magic number: var input = new  			{  				A = "aye"'  				B = "bee"'  				C = "sea"'  				One = 1'  				Two = 2'  				Three = 3'  				Do = "doe"'  				Re = "ray"'  				Mi = "me"  			};
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetPropertySetter_AnonymousObjectProperty_ReturnsPropertyValue,The following statement contains a magic number: var input = new  			{  				A = "aye"'  				B = "bee"'  				C = "sea"'  				One = 1'  				Two = 2'  				Three = 3'  				Do = "doe"'  				Re = "ray"'  				Mi = "me"  			};
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldGetter_PrivateField_ReturnsFieldValue,The following statement contains a magic number: Assert.Equal(2' getter(input));
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldGetter_StaticField_ReturnsFieldValue,The following statement contains a magic number: Assert.Equal(42' getter(null));
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldSetter_PrivateField_ReturnsFieldValue,The following statement contains a magic number: var expected = -2;
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldSetter_StaticField_ChangesFieldValue,The following statement contains a magic number: setter(null' 2010);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetFieldSetter_StaticField_ChangesFieldValue,The following statement contains a magic number: Assert.Equal(2010' Example.MyStatic);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodAssortedArgsVoidReturn_BuildsProxyAndInvokes,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodAssortedArgsVoidReturn_BuildsProxyAndInvokes,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodAssortedArgsVoidReturn_BuildsProxyAndInvokes,The following statement contains a magic number: proxy(input' "alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodAssortedArgsVoidReturn_BuildsProxyAndInvokes,The following statement contains a magic number: proxy(input' "alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The following statement contains a magic number: proxy(input' "alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The following statement contains a magic number: proxy(input' "alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The following statement contains a magic number: proxy(input' "alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The following statement contains a magic number: proxy(input' "alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_MethodExtraArgs_IgnoresExtraBuildsProxyAndInvokes,The following statement contains a magic number: proxy(input' "alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsMissingWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: ArgumentException ex = Assert.Throws<ArgumentException>(  				delegate()  				{  					var actual = proxy(new Example()' "alpha"' "bravo"' "charlie"' -1' -2' -3);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsMissingWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: ArgumentException ex = Assert.Throws<ArgumentException>(  				delegate()  				{  					var actual = proxy(new Example()' "alpha"' "bravo"' "charlie"' -1' -2' -3);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetMethodProxy_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					proxy(new Example()' 1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorAssortedArgs_ReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorAssortedArgs_ReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorAssortedArgs_ReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorAssortedArgs_ReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var expected = new Example("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself");
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_CtorExtraArgs_IgnoresAndReturnsCorrectlyInstantiatedObject,The following statement contains a magic number: var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3' "deer"' "sun"' "myself"' 4' 5' 6' "extra"' false);
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsMissingWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: TypeLoadException ex = Assert.Throws<TypeLoadException>(  				delegate()  				{  					var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsMissingWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: TypeLoadException ex = Assert.Throws<TypeLoadException>(  				delegate()  				{  					var actual = (Example)factory("alpha"' "bravo"' "charlie"' -1' -2' -3);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.CodeGen,DynamicMethodGeneratorTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\CodeGen\DynamicMethodGeneratorTests.cs,GetTypeFactory_ArgsTypeMismatchWhenCalling_ThrowsArgumentNullException,The following statement contains a magic number: InvalidCastException ex = Assert.Throws<InvalidCastException>(  				delegate()  				{  					var actual = (Example)factory(1' 2' 3' 4' 5' 6' 7' 8' 9);  				});
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_AnonymousObject_ReturnsAnonymousObject,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("AString")'  				ModelGrammar.TokenPrimitive("Hello world!")'  				ModelGrammar.TokenProperty("AnInt32")'  				ModelGrammar.TokenPrimitive(42)'  				ModelGrammar.TokenProperty("AnAnonymous")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("AnotherString")'  				ModelGrammar.TokenPrimitive("Foo.")'  				ModelGrammar.TokenProperty("AnInt64")'  				ModelGrammar.TokenPrimitive( ((long)Int32.MaxValue) * 2L )'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("ADouble")'  				ModelGrammar.TokenPrimitive(Math.PI)'  				ModelGrammar.TokenObjectEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_AnonymousObject_ReturnsAnonymousObject,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("AString")'  				ModelGrammar.TokenPrimitive("Hello world!")'  				ModelGrammar.TokenProperty("AnInt32")'  				ModelGrammar.TokenPrimitive(42)'  				ModelGrammar.TokenProperty("AnAnonymous")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("AnotherString")'  				ModelGrammar.TokenPrimitive("Foo.")'  				ModelGrammar.TokenProperty("AnInt64")'  				ModelGrammar.TokenPrimitive( ((long)Int32.MaxValue) * 2L )'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("ADouble")'  				ModelGrammar.TokenPrimitive(Math.PI)'  				ModelGrammar.TokenObjectEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_AnonymousObject_ReturnsAnonymousObject,The following statement contains a magic number: var expected = new  			{  				AString = "Hello world!"'  				AnInt32 = 42'  				AnAnonymous = new  				{  					AnotherString = "Foo."'  					AnInt64 = ((long)Int32.MaxValue) * 2L  				}'  				ADouble = Math.PI  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_AnonymousObject_ReturnsAnonymousObject,The following statement contains a magic number: var expected = new  			{  				AString = "Hello world!"'  				AnInt32 = 42'  				AnAnonymous = new  				{  					AnotherString = "Foo."'  					AnInt64 = ((long)Int32.MaxValue) * 2L  				}'  				ADouble = Math.PI  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_DynamicExample_ReturnsDynamicObject,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("foo")'  				ModelGrammar.TokenPrimitive("hello world")'  				ModelGrammar.TokenProperty("number")'  				ModelGrammar.TokenPrimitive(42)'  				ModelGrammar.TokenProperty("boolean")'  				ModelGrammar.TokenPrimitive(false)'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenPrimitive(null)'  				ModelGrammar.TokenObjectEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_DynamicExample_ReturnsDynamicObject,The following statement contains a magic number: expected.number = 42;
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayMultiItem_ReturnsArrayTokens,The following statement contains a magic number: var input = new object[]  				{  					false'  					true'  					null'  					'a''  					'b''  					'c''  					1'  					2'  					3  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayMultiItem_ReturnsArrayTokens,The following statement contains a magic number: var input = new object[]  				{  					false'  					true'  					null'  					'a''  					'b''  					'c''  					1'  					2'  					3  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayMultiItem_ReturnsArrayTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenFalse'  					ModelGrammar.TokenTrue'  					ModelGrammar.TokenNull'  					ModelGrammar.TokenPrimitive('a')'  					ModelGrammar.TokenPrimitive('b')'  					ModelGrammar.TokenPrimitive('c')'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenArrayEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayMultiItem_ReturnsArrayTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenFalse'  					ModelGrammar.TokenTrue'  					ModelGrammar.TokenNull'  					ModelGrammar.TokenPrimitive('a')'  					ModelGrammar.TokenPrimitive('b')'  					ModelGrammar.TokenPrimitive('c')'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenArrayEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayNested_ReturnsNestedArrayTokens,The following statement contains a magic number: var input = new object[]  				{  					false'  					true'  					null'  					new []  					{  						'a''  						'b''  						'c'  					}'  					new []  					{  						1'  						2'  						3  					}  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayNested_ReturnsNestedArrayTokens,The following statement contains a magic number: var input = new object[]  				{  					false'  					true'  					null'  					new []  					{  						'a''  						'b''  						'c'  					}'  					new []  					{  						1'  						2'  						3  					}  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayNested_ReturnsNestedArrayTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenFalse'  					ModelGrammar.TokenTrue'  					ModelGrammar.TokenNull'  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenPrimitive('a')'  					ModelGrammar.TokenPrimitive('b')'  					ModelGrammar.TokenPrimitive('c')'  					ModelGrammar.TokenArrayEnd'  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenArrayEnd'  					ModelGrammar.TokenArrayEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ArrayNested_ReturnsNestedArrayTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenFalse'  					ModelGrammar.TokenTrue'  					ModelGrammar.TokenNull'  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenPrimitive('a')'  					ModelGrammar.TokenPrimitive('b')'  					ModelGrammar.TokenPrimitive('c')'  					ModelGrammar.TokenArrayEnd'  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenArrayEnd'  					ModelGrammar.TokenArrayEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectAnonymous_ReturnsObjectTokens,The following statement contains a magic number: var input = new  			{  				One = 1'  				Two = 2'  				Three = 3'  				Four = new  				{  					A = 'a''  					B = 'b''  					C = 'c'  				}  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectAnonymous_ReturnsObjectTokens,The following statement contains a magic number: var input = new  			{  				One = 1'  				Two = 2'  				Three = 3'  				Four = new  				{  					A = 'a''  					B = 'b''  					C = 'c'  				}  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectAnonymous_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("A")'  					ModelGrammar.TokenPrimitive('a')'  					ModelGrammar.TokenProperty("B")'  					ModelGrammar.TokenPrimitive('b')'  					ModelGrammar.TokenProperty("C")'  					ModelGrammar.TokenPrimitive('c')'  					ModelGrammar.TokenObjectEnd'  					ModelGrammar.TokenObjectEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectAnonymous_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("A")'  					ModelGrammar.TokenPrimitive('a')'  					ModelGrammar.TokenProperty("B")'  					ModelGrammar.TokenPrimitive('b')'  					ModelGrammar.TokenProperty("C")'  					ModelGrammar.TokenPrimitive('c')'  					ModelGrammar.TokenObjectEnd'  					ModelGrammar.TokenObjectEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectDictionary_ReturnsObjectTokens,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "One"' 1 }'  				{ "Two"' 2 }'  				{ "Three"' 3 }  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectDictionary_ReturnsObjectTokens,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "One"' 1 }'  				{ "Two"' 2 }'  				{ "Three"' 3 }  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectDictionary_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenObjectEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ObjectDictionary_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenObjectEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ExpandoObject_ReturnsObjectTokens,The following statement contains a magic number: input.Two = 2;
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ExpandoObject_ReturnsObjectTokens,The following statement contains a magic number: input.Three = 3;
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ExpandoObject_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenObjectEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ExpandoObject_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenObjectEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ExpandoObjectNested_ReturnsObjectTokens,The following statement contains a magic number: input.array = new object[]  			{  				false' 1' 2' Math.PI' null' "hello world."  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_ExpandoObjectNested_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  				{  					ModelGrammar.TokenObjectBegin("object")'  					ModelGrammar.TokenProperty("foo")'  					ModelGrammar.TokenPrimitive(true)'  					ModelGrammar.TokenProperty("array")'  					ModelGrammar.TokenArrayBegin("array")'  					ModelGrammar.TokenPrimitive(false)'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(Math.PI)'  					ModelGrammar.TokenPrimitive(null)'  					ModelGrammar.TokenPrimitive("hello world.")'  					ModelGrammar.TokenArrayEnd'  					ModelGrammar.TokenObjectEnd  				};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_DynamicExample_ReturnsDynamicObject,The following statement contains a magic number: input.number = 42;
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_DynamicExample_ReturnsDynamicObject,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenObjectBegin("DynamicExample")'  				ModelGrammar.TokenProperty("foo")'  				ModelGrammar.TokenPrimitive("hello world")'  				ModelGrammar.TokenProperty("number")'  				ModelGrammar.TokenPrimitive(42)'  				ModelGrammar.TokenProperty("boolean")'  				ModelGrammar.TokenPrimitive(false)'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenPrimitive(null)'  				ModelGrammar.TokenObjectEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var input = new object[] {  				"JSON Test Pattern pass1"'  				new Dictionary<string' object>  				{  					{ "object with 1 member"' new[] { "array with 1 element" } }'  				}'  				new Dictionary<string' object>()'  				new object[0]'  				-42'  				true'  				false'  				null'  				new Dictionary<string' object> {  					{ "integer"' 1234567890 }'  					{ "real"' -9876.543210 }'  					{ "e"' 0.123456789e-12 }'  					{ "E"' 1.234567890E+34 }'  					{ ""' 23456789012E66 }'  					{ "zero"' 0 }'  					{ "one"' 1 }'  					{ "space"' " " }'  					{ "quote"' "\"" }'  					{ "backslash"' "\\" }'  					{ "controls"' "\b\f\n\r\t" }'  					{ "slash"' "/ & /" }'  					{ "alpha"' "abcdefghijklmnopqrstuvwyz" }'  					{ "ALPHA"' "ABCDEFGHIJKLMNOPQRSTUVWYZ" }'  					{ "digit"' "0123456789" }'  					{ "0123456789"' "digit" }'  					{ "special"' "`1~!@#$%^&*()_+-={':[']}|;.</>?" }'  					{ "hex"' "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A" }'  					{ "true"' true }'  					{ "false"' false }'  					{ "null"' null }'  					{ "array"' new object[0] }'  					{ "object"' new Dictionary<string' object>() }'  					{ "address"' "50 St. James Street" }'  					{ "url"' "http://www.JSON.org/" }'  					{ "comment"' "// /* <!-- --" }'  					{ "# -- --> */"' " " }'  					{ " s p a c e d "' new [] { 1'2'3'4'5'6'7 } }'  					{ "compact"' new [] { 1'2'3'4'5'6'7 } }'  					{ "jsontext"' "{\"object with 1 member\":[\"array with 1 element\"]}" }'  					{ "quotes"' "&#34; \u0022 %22 0x22 034 &#x22;" }'  					{ "/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?"' "A key can be any string" }  				}'  				0.5'  				98.6'  				99.44'  				1066'  				1e1'  				0.1e1'  				1e-1'  				1e00'  				2e+00'  				2e-00'  				"rosebud"  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphComplex_ReturnsObjectTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBegin("object")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBegin("array")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphCycleTypeMaxDepth_ThrowsGraphCycleException,The following statement contains a magic number: var walker = new ModelWalker(new DataWriterSettings  			{  				GraphCycles = GraphCycleType.MaxDepth'  				MaxDepth = 25  			});
Magic Number,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphCycleTypeMaxDepthFalsePositive_ThrowsGraphCycleException,The following statement contains a magic number: var walker = new ModelWalker(new DataWriterSettings  			{  				GraphCycles = GraphCycleType.MaxDepth'  				MaxDepth = 19  			});
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_CoerceToBaseType_NoCoercionNeeded,The following statement contains a magic number: input.Two = 2;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_CoerceToBaseType_NoCoercionNeeded,The following statement contains a magic number: input.Three = 3;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_CoerceToBaseType_NoCoercionNeeded,The following statement contains a magic number: input.Four = 4;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_ExpandoToGenericDictionary_CoercesViaGenericDictionaryCopy,The following statement contains a magic number: input.Two = 2;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_ExpandoToGenericDictionary_CoercesViaGenericDictionaryCopy,The following statement contains a magic number: input.Three = 3;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_ExpandoToGenericDictionary_CoercesViaGenericDictionaryCopy,The following statement contains a magic number: input.Four = 4;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_ExpandoToGenericDictionary_CoercesViaGenericDictionaryCopy,The following statement contains a magic number: var expected = new Dictionary<string' object>  				{  					{ "One"' 1 }'  					{ "Two"' 2 }'  					{ "Three"' 3 }'  					{ "Four"' 4 }  				};
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_ExpandoToGenericDictionary_CoercesViaGenericDictionaryCopy,The following statement contains a magic number: var expected = new Dictionary<string' object>  				{  					{ "One"' 1 }'  					{ "Two"' 2 }'  					{ "Three"' 3 }'  					{ "Four"' 4 }  				};
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_ExpandoToGenericDictionary_CoercesViaGenericDictionaryCopy,The following statement contains a magic number: var expected = new Dictionary<string' object>  				{  					{ "One"' 1 }'  					{ "Two"' 2 }'  					{ "Three"' 3 }'  					{ "Four"' 4 }  				};
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_DictionaryToExpando_CoercesViaDictionaryCopy,The following statement contains a magic number: var input = new Hashtable  				{  					{ "One"' 1 }'  					{ "Two"' 2 }'  					{ "Three"' 3 }'  					{ "Four"' 4 }  				};
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_DictionaryToExpando_CoercesViaDictionaryCopy,The following statement contains a magic number: var input = new Hashtable  				{  					{ "One"' 1 }'  					{ "Two"' 2 }'  					{ "Three"' 3 }'  					{ "Four"' 4 }  				};
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_DictionaryToExpando_CoercesViaDictionaryCopy,The following statement contains a magic number: var input = new Hashtable  				{  					{ "One"' 1 }'  					{ "Two"' 2 }'  					{ "Three"' 3 }'  					{ "Four"' 4 }  				};
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_DictionaryToExpando_CoercesViaDictionaryCopy,The following statement contains a magic number: expected.Two = 2;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_DictionaryToExpando_CoercesViaDictionaryCopy,The following statement contains a magic number: expected.Three = 3;
Magic Number,JsonFx.Serialization,TypeCoercionUtilityTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\TypeCoercionUtilityTests.cs,CoerceType_DictionaryToExpando_CoercesViaDictionaryCopy,The following statement contains a magic number: expected.Four = 4;
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedStandardTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedStandardTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedStandardTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedStandardTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedStandardTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedStandardTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedStandardTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 3' 01' 05' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 3' 01' 05' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 3' 01' 05' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 3' 01' 05' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 3' 01' 05' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternStandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 3' 01' 05' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UtcDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedDaylightSavingsTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedDaylightSavingsTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedDaylightSavingsTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedDaylightSavingsTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedDaylightSavingsTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedDaylightSavingsTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_UnspecifiedDaylightSavingsTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 15' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 15' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 15' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 15' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 15' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 15' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_EasternDaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 15' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUtcTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUtcTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUtcTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUtcTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUtcTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUtcTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUtcTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUnspecifiedTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUnspecifiedTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUnspecifiedTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUnspecifiedTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUnspecifiedTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUnspecifiedTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureUnspecifiedTimeZone_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureEasternTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2100' 1' 1' 4' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureEasternTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2100' 1' 1' 4' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureEasternTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2100' 1' 1' 4' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureEasternTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2100' 1' 1' 4' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_FutureEasternTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2100' 1' 1' 4' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUnspecified_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUnspecified_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUnspecified_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUnspecified_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUnspecified_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUnspecified_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUnspecified_ReadsAsUnspecified,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUtc_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUtc_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUtc_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUtc_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUtc_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUtc_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryRead_DateTimeMaxValueUtc_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(9999' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,Iso8601DateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\Iso8601DateFilterTests.cs,TryWrite_DateTimeFullPrecision_DirectlyWritesAsUnspecified,The following statement contains a magic number: var input = new DateTime(634139450143516165L' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_StandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_StandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_StandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_StandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_StandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_StandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_StandardTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DaylightSavingsTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_FutureTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_FutureTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_FutureTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_FutureTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_FutureTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_FutureTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_FutureTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DateTimeExplicitTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 1' 2' 10' 12' 13' 0' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DateTimeExplicitTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 1' 2' 10' 12' 13' 0' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DateTimeExplicitTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 1' 2' 10' 12' 13' 0' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DateTimeExplicitTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 1' 2' 10' 12' 13' 0' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryRead_DateTimeExplicitTimeZone_ReadsAsUtc,The following statement contains a magic number: var expected = new DateTime(2010' 1' 2' 10' 12' 13' 0' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalStandardTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedStandardTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UtcDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_LocalDaylightSavingsTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_UnspecifiedDaylightSavingsTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUtcTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureLocalTimeZone_ConvertsToUtcAndWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Local);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model.Filters,MSAjaxDateFilterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\Filters\MSAjaxDateFilterTests.cs,TryWrite_FutureUnspecifiedTimeZone_DirectlyWritesAsUtc,The following statement contains a magic number: var input = new DateTime(2099' 12' 31' 23' 59' 59' 999' DateTimeKind.Unspecified);
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_MixedPrimitivesFilterAll_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_MixedPrimitivesNoFilter_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_MixedPrimitivesNoFilter_ReturnsSplitSequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenFalse  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("Hello!")  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(42)  				}'  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_MixedPrimitivesFilterNonNull_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_MixedPrimitivesFilterNonNull_ReturnsSplitSequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenFalse  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("Hello!")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(42)  				}'  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_NestedArray_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_NestedArray_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_NestedArray_ReturnsSplitSequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenFalse  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("Hello!")  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenFalse'  					ModelGrammar.TokenNull'  					ModelGrammar.TokenTrue'  					ModelGrammar.TokenPrimitive("Hello!")'  					ModelGrammar.TokenPrimitive(42)'  					ModelGrammar.TokenArrayEnd'  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(42)  				}'  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_NestedArray_ReturnsSplitSequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenFalse  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("Hello!")  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenFalse'  					ModelGrammar.TokenNull'  					ModelGrammar.TokenTrue'  					ModelGrammar.TokenPrimitive("Hello!")'  					ModelGrammar.TokenPrimitive(42)'  					ModelGrammar.TokenArrayEnd'  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(42)  				}'  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_NestedObject_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenObjectEnd'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_NestedObject_ReturnsSplitSequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenFalse  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("Hello!")  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("key1")'  					ModelGrammar.TokenNull'  					ModelGrammar.TokenProperty("key2")'  					ModelGrammar.TokenPrimitive("Hello!")'  					ModelGrammar.TokenObjectEnd'  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(42)  				}'  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_IndexFilter_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenPrimitive("Pick me!")'  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenObjectEnd'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_IndexFilter_ReturnsSplitSequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenPrimitive("Pick me!")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(42)  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_IndexFilter_ReturnsSplitSequences,The following statement contains a magic number: var actual = input.ArrayItems(index => (index % 2 == 1)).ToArray();
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_FilteringByIndexAndValue_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenObjectEnd'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenPrimitive(Math.PI)'  		        ModelGrammar.TokenArrayEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ArrayItems_FilteringByIndexAndValue_ReturnsSplitSequences,The following statement contains a magic number: var actual = input.ArrayItems(index => (index % 2 == 0)).Where(item => item.IsPrimitive()).ToArray();
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,HasProperty_PickExisting_ReturnsTrue,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenProperty("three")'  		        ModelGrammar.TokenPrimitive(3)'  		        ModelGrammar.TokenProperty("4")'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,HasProperty_PickNonExisting_ReturnsFalse,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenProperty("three")'  		        ModelGrammar.TokenPrimitive(3)'  		        ModelGrammar.TokenProperty("4")'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ObjectProperties_AllProperties_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenProperty("three")'  		        ModelGrammar.TokenPrimitive(3)'  		        ModelGrammar.TokenProperty("4")'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ObjectProperties_AllProperties_ReturnsSplitSequences,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("key1")' new[] { ModelGrammar.TokenNull } }'  				{ new DataName("key2")' new[] { ModelGrammar.TokenPrimitive("Hello!") } }'  				{ new DataName("three")' new[] { ModelGrammar.TokenPrimitive(3) } }'  				{ new DataName("4")' new[] { ModelGrammar.TokenTrue } }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ObjectProperties_OnlyOneProperty_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenProperty("three")'  		        ModelGrammar.TokenPrimitive(3)'  		        ModelGrammar.TokenProperty("4")'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ObjectProperties_NestedArrayPropertySkipped_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("three")'  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenProperty("4")'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ObjectProperties_NestedArrayPropertyReturned_ReturnsSplitSequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  		        ModelGrammar.TokenProperty("key1")'  		        ModelGrammar.TokenNull'  		        ModelGrammar.TokenProperty("key2")'  		        ModelGrammar.TokenArrayBeginUnnamed'  		        ModelGrammar.TokenFalse'  		        ModelGrammar.TokenPrimitive(42)'  		        ModelGrammar.TokenArrayEnd'  		        ModelGrammar.TokenProperty("three")'  		        ModelGrammar.TokenPrimitive("Hello!")'  		        ModelGrammar.TokenProperty("4")'  		        ModelGrammar.TokenTrue'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,ObjectProperties_NestedArrayPropertyReturned_ReturnsSplitSequences,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("key2")' new[] {  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenFalse'  					ModelGrammar.TokenPrimitive(42)'  					ModelGrammar.TokenArrayEnd'  				} }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("One")'  						ModelGrammar.TokenNull'    						ModelGrammar.TokenProperty("Two")'  						ModelGrammar.TokenArrayBeginUnnamed'  							ModelGrammar.TokenTrue'  							ModelGrammar.TokenPrimitive("2-B")'  							ModelGrammar.TokenPrimitive(23)'  						ModelGrammar.TokenArrayEnd'    						ModelGrammar.TokenProperty("Three")'  						ModelGrammar.TokenObjectBeginUnnamed'  							ModelGrammar.TokenProperty("A")'  							ModelGrammar.TokenPrimitive("3-A")'  							ModelGrammar.TokenProperty("B")'  							ModelGrammar.TokenPrimitive(32)'  							ModelGrammar.TokenProperty("C")'  							ModelGrammar.TokenPrimitive("3-C")'  						ModelGrammar.TokenObjectEnd'    						ModelGrammar.TokenProperty("Four")'  						ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjects_ReturnsAllSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjectsFindDescendantsWithProperty_ReturnsMatchingSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjectsFindDescendantsWithProperty_ReturnsMatchingSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjectsFindDescendantsWithProperty_ReturnsMatchingSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Descendants_NestedObjectsFindDescendantsWithProperty_ReturnsMatchingSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjectsReturnsAllPrimitives_ReturnsMatchingSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjectsReturnsAllPrimitives_ReturnsMatchingSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjectsReturnsAllPrimitives_ReturnsMatchingSubsequences,The following statement contains a magic number: var input = new[]  		    {  		        ModelGrammar.TokenObjectBeginUnnamed'  					ModelGrammar.TokenProperty("One")'  					ModelGrammar.TokenNull'    					ModelGrammar.TokenProperty("Two")'  					ModelGrammar.TokenArrayBeginUnnamed'  						ModelGrammar.TokenTrue'  						ModelGrammar.TokenPrimitive("2-B")'  						ModelGrammar.TokenPrimitive(23)'  					ModelGrammar.TokenArrayEnd'    					ModelGrammar.TokenProperty("Three")'  					ModelGrammar.TokenObjectBeginUnnamed'  						ModelGrammar.TokenProperty("A")'  						ModelGrammar.TokenPrimitive("3-A")'  						ModelGrammar.TokenProperty("B")'  						ModelGrammar.TokenPrimitive(32)'  						ModelGrammar.TokenProperty("C")'  						ModelGrammar.TokenPrimitive("3-C")'  					ModelGrammar.TokenObjectEnd'    					ModelGrammar.TokenProperty("Four")'  					ModelGrammar.TokenPrimitive(4)'  		        ModelGrammar.TokenObjectEnd  		    };
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjectsReturnsAllPrimitives_ReturnsMatchingSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjectsReturnsAllPrimitives_ReturnsMatchingSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjectsReturnsAllPrimitives_ReturnsMatchingSubsequences,The following statement contains a magic number: var expected = new[]  			{  				new[]  				{  					ModelGrammar.TokenNull  				}'  				new[]  				{  					ModelGrammar.TokenTrue  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("2-B")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(23)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-A")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(32)  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive("3-C")  				}'  				new[]  				{  					ModelGrammar.TokenPrimitive(4)'  				}  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("url")' new[] { ModelGrammar.TokenPrimitive("http://www.JSON.org/") } }'  				{ new DataName("compact")' new[] {  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenPrimitive(5)'  					ModelGrammar.TokenPrimitive(6)'  					ModelGrammar.TokenPrimitive(7)'  					ModelGrammar.TokenArrayEnd'  				} }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("url")' new[] { ModelGrammar.TokenPrimitive("http://www.JSON.org/") } }'  				{ new DataName("compact")' new[] {  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenPrimitive(5)'  					ModelGrammar.TokenPrimitive(6)'  					ModelGrammar.TokenPrimitive(7)'  					ModelGrammar.TokenArrayEnd'  				} }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("url")' new[] { ModelGrammar.TokenPrimitive("http://www.JSON.org/") } }'  				{ new DataName("compact")' new[] {  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenPrimitive(5)'  					ModelGrammar.TokenPrimitive(6)'  					ModelGrammar.TokenPrimitive(7)'  					ModelGrammar.TokenArrayEnd'  				} }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("url")' new[] { ModelGrammar.TokenPrimitive("http://www.JSON.org/") } }'  				{ new DataName("compact")' new[] {  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenPrimitive(5)'  					ModelGrammar.TokenPrimitive(6)'  					ModelGrammar.TokenPrimitive(7)'  					ModelGrammar.TokenArrayEnd'  				} }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("url")' new[] { ModelGrammar.TokenPrimitive("http://www.JSON.org/") } }'  				{ new DataName("compact")' new[] {  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenPrimitive(5)'  					ModelGrammar.TokenPrimitive(6)'  					ModelGrammar.TokenPrimitive(7)'  					ModelGrammar.TokenArrayEnd'  				} }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var expected = new Dictionary<DataName' IEnumerable<Token<ModelTokenType>>>  			{  				{ new DataName("url")' new[] { ModelGrammar.TokenPrimitive("http://www.JSON.org/") } }'  				{ new DataName("compact")' new[] {  					ModelGrammar.TokenArrayBeginUnnamed'  					ModelGrammar.TokenPrimitive(1)'  					ModelGrammar.TokenPrimitive(2)'  					ModelGrammar.TokenPrimitive(3)'  					ModelGrammar.TokenPrimitive(4)'  					ModelGrammar.TokenPrimitive(5)'  					ModelGrammar.TokenPrimitive(6)'  					ModelGrammar.TokenPrimitive(7)'  					ModelGrammar.TokenArrayEnd'  				} }  			};
Magic Number,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,Properties_GraphComplex_ReturnsGraph,The following statement contains a magic number: var actual = input  				.ArrayItems(index => index == 8).FirstOrDefault() // select the big object  				.Properties(name => name.LocalName == "url" || name.LocalName == "compact");
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.Linq,QueryEngineTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Linq\QueryEngineTests.cs,QueryDescendants_MatchingPropertyValue_ReturnsStronglyTypedObject,The following statement contains a magic number: var expected = new ComplexType  			{  				integer = 1234567890'  				real = -9876.543210'  				e = 0.123456789e-12'  				E = 1.234567890E+34'  				_ = 23456789012E66'  				zero = 0'  				one = 1'  				space = " "'  				quote = "\""'  				backslash = "\\"'  				controls = "\b\f\n\r\t"'  				slash = "/ & /"'  				alpha = "abcdefghijklmnopqrstuvwyz"'  				ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWYZ"'  				digit = "0123456789"'  				_0123456789 = "digit"'  				special = "`1~!@#$%^&*()_+-={':[']}|;.</>?"'  				hex = "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A"'  				@true = true'  				@false = false'  				@null = null'  				array = new object[0]'  				@object = new Dictionary<string' object>()'  				address = "50 St. James Street"'  				url = new Uri("http://www.JSON.org/")'  				comment = "// /* <!-- --"'  				Comments = " "'  				spaced = new [] { 1'2'3'4'5'6'7 }'  				compact = new [] { 1'2'3'4'5'6'7 }'  				jsontext = "{\"object with 1 member\":[\"array with 1 element\"]}"'  				quotes = "&#34; \u0022 %22 0x22 034 &#x22;"'  				A_key_can_be_any_string = "A key can be any string"  			};
Magic Number,JsonFx.IO,StringStreamTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\IO\StringStreamTests.cs,Line_MultilineString_CountsCorrectNumberOfLines,The following statement contains a magic number: Assert.Equal(4' scanner.Line);
Magic Number,JsonFx.IO,StringStreamTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\IO\StringStreamTests.cs,Column_MultilineString_CountsCorrectNumberOfColumns,The following statement contains a magic number: Assert.Equal(9' scanner.Column);
Magic Number,JsonFx.IO,TextReaderStreamTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\IO\TextReaderStreamTests.cs,Line_MultilineString_CountsCorrectNumberOfLines,The following statement contains a magic number: Assert.Equal(4' scanner.Line);
Magic Number,JsonFx.IO,TextReaderStreamTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\IO\TextReaderStreamTests.cs,Column_MultilineString_CountsCorrectNumberOfColumns,The following statement contains a magic number: Assert.Equal(9' scanner.Column);
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_OnlyDefaults_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersIsoFirst_SerializesIso8601Dates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonWriterTests.cs,Write_RecognizesMultipleDateTimeFiltersAjaxFirst_SerializesMSAjaxDates,The following statement contains a magic number: var input = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_OnlyDefaults_DeserializesIso8601DateTimeFormat,The following statement contains a magic number: var expected = new object[]  				{  					"Normal string before"'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Unspecified)'  					"Normal string after"  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_RecognizesFilters_DeserializesMultipleDateTimeFormats,The following statement contains a magic number: var expected = new object[]  		        {  		            "Normal string before"'  		            new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  		            new DateTime(2010' 7' 5' 10' 51' 17' 768' DateTimeKind.Utc)'  		            "Normal string after"  		        };
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_AllowTrailingContent_IgnoresTrailingContent,The following statement contains a magic number: var expected = new object[]  				{  					"Content embedded inside other structure"'  					true'  					null'  					42  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_ArrayCommaAfterClose_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(25L' ex.Index);
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_ArrayExtraClose_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(15L' ex.Index);
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_TimeSpans_DeserializesCorrectly,The following statement contains a magic number: var expected = new TimeSpan[]  				{  					TimeSpan.MinValue'  					new TimeSpan()'  					new TimeSpan(365' 23' 59' 59' 999)'  					TimeSpan.MaxValue  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_TimeSpans_DeserializesCorrectly,The following statement contains a magic number: var expected = new TimeSpan[]  				{  					TimeSpan.MinValue'  					new TimeSpan()'  					new TimeSpan(365' 23' 59' 59' 999)'  					TimeSpan.MaxValue  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_TimeSpans_DeserializesCorrectly,The following statement contains a magic number: var expected = new TimeSpan[]  				{  					TimeSpan.MinValue'  					new TimeSpan()'  					new TimeSpan(365' 23' 59' 59' 999)'  					TimeSpan.MaxValue  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_TimeSpans_DeserializesCorrectly,The following statement contains a magic number: var expected = new TimeSpan[]  				{  					TimeSpan.MinValue'  					new TimeSpan()'  					new TimeSpan(365' 23' 59' 59' 999)'  					TimeSpan.MaxValue  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_TimeSpans_DeserializesCorrectly,The following statement contains a magic number: var expected = new TimeSpan[]  				{  					TimeSpan.MinValue'  					new TimeSpan()'  					new TimeSpan(365' 23' 59' 59' 999)'  					TimeSpan.MaxValue  				};
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_ObjectExtraValueAfterClose_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(57L' ex.Index);
Magic Number,JsonFx.Json,JsonReaderTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonReaderTests.cs,Read_DeserializesStreamOfObject,The following statement contains a magic number: Assert.Equal(2' actual.Length);
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenInteger_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(123456)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenDouble_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(1.23456)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenNegDouble_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(-0.123456)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenNoLeadingDigitDouble_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(.123456)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenPosNoLeadingDigitDouble_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(.123456)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenNegNoLeadingDigitDouble_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(-.123456)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenNegDecimal_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(-123.456m)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenNegFloat_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(-123.456f)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenNegLong_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(-34L)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenOverflowLong_ReturnsString,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(9223372036854775800L)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_NumberTokenOverflowDecimal_ReturnsString,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(79228162514264337593543950300m)  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_TimeSpan_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(new TimeSpan(365' 23' 59' 59' 999))  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_TimeSpan_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(new TimeSpan(365' 23' 59' 59' 999))  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_TimeSpan_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(new TimeSpan(365' 23' 59' 59' 999))  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_TimeSpan_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(new TimeSpan(365' 23' 59' 59' 999))  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_TimeSpan_ReturnsNumber,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(new TimeSpan(365' 23' 59' 59' 999))  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplex_ReturnsGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonFormatterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonFormatterTests.cs,Format_GraphComplexPrettyPrint_ReturnsPrettyPrintedGraph,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_ArrayExtraComma_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(15' ex.Index);
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_ArrayDoubleExtraComma_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(22' ex.Index);
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_ArrayMissingValue_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(4' ex.Index);
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_ArrayBadValue_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(14' ex.Index);
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberInteger_ReturnsNumberToken,The following statement contains a magic number: var expected = new []  			{  				ModelGrammar.TokenPrimitive(123456)  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberFloat_ReturnsNumberToken,The following statement contains a magic number: var expected = new []  			{  				ModelGrammar.TokenPrimitive(1.23456)  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberNegFloat_ReturnsNumberToken,The following statement contains a magic number: var expected = new []  			{  				ModelGrammar.TokenPrimitive(-0.123456)  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberNoLeadingDigitFloat_ReturnsNumberToken,The following statement contains a magic number: var expected = new []  			{  				ModelGrammar.TokenPrimitive(.123456)  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberPosNoLeadingDigitFloat_ReturnsNumberToken,The following statement contains a magic number: var expected = new []  			{  				ModelGrammar.TokenPrimitive(.123456)  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberNegNoLeadingDigitFloat_ReturnsNumberToken,The following statement contains a magic number: var expected = new []  			{  				ModelGrammar.TokenPrimitive(-.123456)  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberIntegerLeadingZero_ReturnsObjectTokensWithNumberValue,The following statement contains a magic number: var expected = new []  			{  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("Numbers cannot have leading zeroes")'  				ModelGrammar.TokenPrimitive(13)'  				ModelGrammar.TokenObjectEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_NumberHexValue_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(26' ex.Index);
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_GraphComplex_ReturnsGraphTokens,The following statement contains a magic number: var expected = new[]  			{  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("JSON Test Pattern pass1")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("object with 1 member")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive("array with 1 element")'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenPrimitive(-42)'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenProperty("integer")'  				ModelGrammar.TokenPrimitive(1234567890)'  				ModelGrammar.TokenProperty("real")'  				ModelGrammar.TokenPrimitive(-9876.543210)'  				ModelGrammar.TokenProperty("e")'  				ModelGrammar.TokenPrimitive(0.123456789e-12)'  				ModelGrammar.TokenProperty("E")'  				ModelGrammar.TokenPrimitive(1.234567890E+34)'  				ModelGrammar.TokenProperty("")'  				ModelGrammar.TokenPrimitive(23456789012E66)'  				ModelGrammar.TokenProperty("zero")'  				ModelGrammar.TokenPrimitive(0)'  				ModelGrammar.TokenProperty("one")'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenProperty("space")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty("quote")'  				ModelGrammar.TokenPrimitive("\"")'  				ModelGrammar.TokenProperty("backslash")'  				ModelGrammar.TokenPrimitive("\\")'  				ModelGrammar.TokenProperty("controls")'  				ModelGrammar.TokenPrimitive("\b\f\n\r\t")'  				ModelGrammar.TokenProperty("slash")'  				ModelGrammar.TokenPrimitive("/ & /")'  				ModelGrammar.TokenProperty("alpha")'  				ModelGrammar.TokenPrimitive("abcdefghijklmnopqrstuvwyz")'  				ModelGrammar.TokenProperty("ALPHA")'  				ModelGrammar.TokenPrimitive("ABCDEFGHIJKLMNOPQRSTUVWYZ")'  				ModelGrammar.TokenProperty("digit")'  				ModelGrammar.TokenPrimitive("0123456789")'  				ModelGrammar.TokenProperty("0123456789")'  				ModelGrammar.TokenPrimitive("digit")'  				ModelGrammar.TokenProperty("special")'  				ModelGrammar.TokenPrimitive("`1~!@#$%^&*()_+-={':[']}|;.</>?")'  				ModelGrammar.TokenProperty("hex")'  				ModelGrammar.TokenPrimitive("\u0123\u4567\u89AB\uCDEF\uabcd\uef4A")'  				ModelGrammar.TokenProperty("true")'  				ModelGrammar.TokenTrue'  				ModelGrammar.TokenProperty("false")'  				ModelGrammar.TokenFalse'  				ModelGrammar.TokenProperty("null")'  				ModelGrammar.TokenNull'  				ModelGrammar.TokenProperty("array")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("object")'  				ModelGrammar.TokenObjectBeginUnnamed'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenProperty("address")'  				ModelGrammar.TokenPrimitive("50 St. James Street")'  				ModelGrammar.TokenProperty("url")'  				ModelGrammar.TokenPrimitive("http://www.JSON.org/")'  				ModelGrammar.TokenProperty("comment")'  				ModelGrammar.TokenPrimitive("// /* <!-- --")'  				ModelGrammar.TokenProperty("# -- --> */")'  				ModelGrammar.TokenPrimitive(" ")'  				ModelGrammar.TokenProperty(" s p a c e d ")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("compact")'  				ModelGrammar.TokenArrayBeginUnnamed'  				ModelGrammar.TokenPrimitive(1)'  				ModelGrammar.TokenPrimitive(2)'  				ModelGrammar.TokenPrimitive(3)'  				ModelGrammar.TokenPrimitive(4)'  				ModelGrammar.TokenPrimitive(5)'  				ModelGrammar.TokenPrimitive(6)'  				ModelGrammar.TokenPrimitive(7)'  				ModelGrammar.TokenArrayEnd'  				ModelGrammar.TokenProperty("jsontext")'  				ModelGrammar.TokenPrimitive("{\"object with 1 member\":[\"array with 1 element\"]}")'  				ModelGrammar.TokenProperty("quotes")'  				ModelGrammar.TokenPrimitive("&#34; \u0022 %22 0x22 034 &#x22;")'  				ModelGrammar.TokenProperty("/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:''./<>?")'  				ModelGrammar.TokenPrimitive("A key can be any string")'  				ModelGrammar.TokenObjectEnd'  				ModelGrammar.TokenPrimitive(0.5)'  				ModelGrammar.TokenPrimitive(98.6)'  				ModelGrammar.TokenPrimitive(99.44)'  				ModelGrammar.TokenPrimitive(1066)'  				ModelGrammar.TokenPrimitive(10.0)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(0.1)'  				ModelGrammar.TokenPrimitive(1.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive(2.0)'  				ModelGrammar.TokenPrimitive("rosebud")'  				ModelGrammar.TokenArrayEnd  			};
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_ObjectExtraComma_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(21' ex.Index);
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_IllegalExpression_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(24' ex.Index);
Magic Number,JsonFx.Json,JsonTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\JsonTokenizerTests.cs,GetTokens_IllegalInvocation_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(23' ex.Index);
Magic Number,JsonFx.Json.Resolvers,JsonResolverStrategyTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Json\Resolvers\JsonResolverStrategyTests.cs,JsonAnalyzerParse_EnumFromNumber_ReturnsEnum,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(3)  			};
Magic Number,JsonFx.Serialization.Resolvers,DataContractResolverStrategyTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Serialization\Resolvers\DataContractResolverStrategyTests.cs,JsonAnalyzerParse_EnumFromNumber_ReturnsEnum,The following statement contains a magic number: var input = new[]  			{  				ModelGrammar.TokenPrimitive(3)  			};
Magic Number,JsonFx.Xml,XmlTokenizerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlTokenizerTests.cs,GetTokens_UndeclaredPrefixes_ThrowsDeserializationException,The following statement contains a magic number: Assert.Equal(2' ex.Index);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareObjectOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new  			{  				False = false'  				LeapDay = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  				FortyTwo = 42'  				Text = "Ordinary string"  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareGenericDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Dictionary<string' object>  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDictionaryOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new Hashtable()  			{  				{ "False"' false }'  				{ "LeapDay"' new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc) }'  				{ "FortyTwo"' 42}'  				{ "Text"' "Ordinary string" }  			};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayListOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new ArrayList  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareArrayOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new object[]  				{  					false'  					new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc)'  					42'  					"Ordinary string"  				};
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDateTimeOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDateTimeOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDateTimeOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDateTimeOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDateTimeOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDateTimeOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDateTimeOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = new DateTime(2008' 2' 29' 23' 59' 59' 999' DateTimeKind.Utc);
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareInt16OutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = (short)42;
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareInt32OutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = 42;
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareDoubleOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = 3.14;
Magic Number,JsonFx.Xml,XmlWriterTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Xml\XmlWriterTests.cs,Write_CompareSingleOutputToXmlSerializer_Serializes,The following statement contains a magic number: var input = 3.14f;
Duplicate Code,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((47' 66)' (49' 68)' (51' 70)' (53' 72)' (55' 74)' (57' 76)' (59' 78)' (61' 80)' (63' 82))
Duplicate Code,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((47' 81)' (49' 83))
Duplicate Code,JsonFx.Serialization,ModelAnalyzerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelAnalyzerTests.cs,Analyze_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((47' 66)' (51' 70)' (53' 72)' (55' 74)' (57' 76)' (59' 78)' (61' 80)' (63' 82))
Duplicate Code,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphCycleTypeMaxDepthFalsePositive_ThrowsGraphCycleException,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 23)' (6' 25)' (8' 27)' (10' 29)' (12' 31)' (14' 33)' (16' 35)' (18' 37)' (20' 39)' (22' 41))
Duplicate Code,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphCycleTypeMaxDepthFalsePositive_ThrowsGraphCycleException,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 40)' (6' 42))
Duplicate Code,JsonFx.Serialization,ModelWalkerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelWalkerTests.cs,GetTokens_GraphCycleTypeMaxDepthFalsePositive_ThrowsGraphCycleException,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 23)' (8' 27)' (10' 29)' (12' 31)' (14' 33)' (16' 35)' (18' 37)' (20' 39)' (22' 41))
Duplicate Code,JsonFx.Model,ModelSubsequencerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Model\ModelSubsequencerTests.cs,DescendantsAndSelf_NestedObjects_ReturnsAllSubsequencesAndSelf,The method contains a code clone-set at the following line numbers (starting from the method definition): ((3' 27)' (33' 57))
Duplicate Code,JsonFx.Html,HtmlOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlOutTransformerTests.cs,Format_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((49' 68)' (51' 70)' (53' 72)' (55' 74)' (57' 76)' (59' 78)' (61' 80)' (63' 82)' (65' 84)' (67' 86))
Duplicate Code,JsonFx.Html,HtmlOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlOutTransformerTests.cs,Format_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((49' 83)' (51' 85))
Duplicate Code,JsonFx.Html,HtmlOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlOutTransformerTests.cs,Format_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((49' 68)' (53' 72)' (55' 74)' (57' 76)' (59' 78)' (61' 80)' (63' 82)' (65' 84)' (67' 86))
Duplicate Code,JsonFx.Html,HtmlOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlOutTransformerTests.cs,Format_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((88' 107)' (89' 108)' (90' 109)' (91' 110)' (92' 111)' (93' 112)' (94' 113)' (95' 114)' (96' 115)' (97' 116)' (98' 117)' (99' 118)' (100' 119)' (101' 120)' (102' 121)' (103' 122)' (104' 123)' (105' 124)' (106' 125))
Duplicate Code,JsonFx.Html,HtmlOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlOutTransformerTests.cs,Format_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((88' 124)' (89' 125))
Duplicate Code,JsonFx.Html,HtmlOutTransformerTests,D:\research\architectureSmells\repos\jsonfx_jsonfx\src\JsonFx.Tests\Html\HtmlOutTransformerTests.cs,Format_ArrayNestedDeeply_ReturnsExpectedArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((88' 107)' (90' 109)' (91' 110)' (92' 111)' (93' 112)' (94' 113)' (95' 114)' (96' 115)' (97' 116)' (98' 117)' (99' 118)' (100' 119)' (101' 120)' (102' 121)' (103' 122)' (104' 123)' (105' 124)' (106' 125))
