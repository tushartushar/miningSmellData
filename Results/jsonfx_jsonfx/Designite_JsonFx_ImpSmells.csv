Implementation smell,Namespace,Class,File,Method,Description
Long Method,JsonFx.Model,ModelWalker,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelWalker.cs,GetTokens,The method has 123 lines of code.
Long Method,JsonFx.Html,HtmlFilter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFilter.cs,GetTaxonomy,The method has 167 lines of code.
Long Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The method has 109 lines of code.
Long Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The method has 858 lines of code.
Long Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,The method has 104 lines of code.
Long Method,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildMap,The method has 153 lines of code.
Long Method,JsonFx.Linq,ExpressionVisitor,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\ExpressionVisitor.cs,Visit,The method has 140 lines of code.
Complex Method,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetFieldGetter,Cyclomatic complexity of the method is 28
Complex Method,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetMethodProxy,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Model,ModelAnalyzer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelAnalyzer.cs,ConsumeValue,Cyclomatic complexity of the method is 9
Complex Method,JsonFx.Model,ModelAnalyzer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelAnalyzer.cs,ConsumeObject,Cyclomatic complexity of the method is 10
Complex Method,JsonFx.Model,ModelAnalyzer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelAnalyzer.cs,ConsumeArray,Cyclomatic complexity of the method is 14
Complex Method,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,HasProperty,Cyclomatic complexity of the method is 16
Complex Method,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,PropertiesIterator,Cyclomatic complexity of the method is 15
Complex Method,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,DescendantsIterator,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SpliceNextValueLazy,Cyclomatic complexity of the method is 17
Complex Method,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SpliceNextValue,Cyclomatic complexity of the method is 15
Complex Method,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SkipNextValue,Cyclomatic complexity of the method is 15
Complex Method,JsonFx.Model,ModelWalker,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelWalker.cs,GetTokens,Cyclomatic complexity of the method is 44
Complex Method,JsonFx.EcmaScript,EcmaScriptIdentifier,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptIdentifier.cs,IsValidIdentifier,Cyclomatic complexity of the method is 9
Complex Method,JsonFx.EcmaScript,EcmaScriptIdentifier,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptIdentifier.cs,IsReservedWord,Cyclomatic complexity of the method is 64
Complex Method,JsonFx.EcmaScript,EcmaScriptFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptFormatter.cs,WriteNamespaceDeclaration,Cyclomatic complexity of the method is 10
Complex Method,JsonFx.EcmaScript,EcmaScriptFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptFormatter.cs,WriteEcmaScriptRegExp,Cyclomatic complexity of the method is 10
Complex Method,JsonFx.Html,HtmlFilter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFilter.cs,VoidTagRequired,Cyclomatic complexity of the method is 19
Complex Method,JsonFx.Html,HtmlFilter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFilter.cs,CloseTagOptional,Cyclomatic complexity of the method is 19
Complex Method,JsonFx.Html,HtmlFilter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFilter.cs,GetTaxonomy,Cyclomatic complexity of the method is 141
Complex Method,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,Format,Cyclomatic complexity of the method is 19
Complex Method,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteTag,Cyclomatic complexity of the method is 10
Complex Method,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteAttribute,Cyclomatic complexity of the method is 12
Complex Method,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,HtmlEncode,Cyclomatic complexity of the method is 15
Complex Method,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,HtmlAttributeEncode,Cyclomatic complexity of the method is 19
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,GetTokens,Cyclomatic complexity of the method is 15
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanTag,Cyclomatic complexity of the method is 15
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,Cyclomatic complexity of the method is 35
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedValue,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanAttributeValue,Cyclomatic complexity of the method is 13
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,IsTagComplete,Cyclomatic complexity of the method is 9
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,EmitTag,Cyclomatic complexity of the method is 23
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntity,Cyclomatic complexity of the method is 12
Complex Method,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,Cyclomatic complexity of the method is 595
Complex Method,JsonFx.Html,HtmlOutTransformer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlOutTransformer.cs,TransformValue,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Html,HtmlOutTransformer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlOutTransformer.cs,TransformArray,Cyclomatic complexity of the method is 10
Complex Method,JsonFx.Html,HtmlOutTransformer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlOutTransformer.cs,TransformObject,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.IO,StringStream,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\IO\StringStream.cs,UpdateStats,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.IO,TextReaderStream,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\IO\TextReaderStream.cs,UpdateStats,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Serialization,DataName,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\DataName.cs,GetTypeName,Cyclomatic complexity of the method is 40
Complex Method,JsonFx.Serialization,DataName,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\DataName.cs,GetStandardPrefix,Cyclomatic complexity of the method is 18
Complex Method,JsonFx.Serialization,Token,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Token`1.cs,ToString,Cyclomatic complexity of the method is 36
Complex Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,InstantiateObject,Cyclomatic complexity of the method is 13
Complex Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,SetMemberValue,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,Cyclomatic complexity of the method is 32
Complex Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceList,Cyclomatic complexity of the method is 11
Complex Method,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,Cyclomatic complexity of the method is 10
Complex Method,JsonFx.Serialization.Providers,DataWriterProvider,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Providers\DataWriterProvider.cs,DataWriterProvider,Cyclomatic complexity of the method is 8
Complex Method,JsonFx.Serialization.Resolvers,ConventionResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ConventionResolverStrategy.cs,GetName,Cyclomatic complexity of the method is 13
Complex Method,JsonFx.Serialization.Resolvers,ConventionResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ConventionResolverStrategy.cs,SplitWords,Cyclomatic complexity of the method is 9
Complex Method,JsonFx.Serialization.Resolvers,FactoryMap,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,FactoryMap,Cyclomatic complexity of the method is 15
Complex Method,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildMap,Cyclomatic complexity of the method is 29
Complex Method,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildEnumMap,Cyclomatic complexity of the method is 16
Complex Method,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetValueIgnoredCallback,Cyclomatic complexity of the method is 10
Complex Method,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetName,Cyclomatic complexity of the method is 9
Complex Method,JsonFx.Linq,ExpressionVisitor,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\ExpressionVisitor.cs,Visit,Cyclomatic complexity of the method is 106
Complex Method,JsonFx.Linq,ExpressionVisitor,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\ExpressionVisitor.cs,VisitBinding,Cyclomatic complexity of the method is 8
Long Parameter List,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteTag,The method has 5 parameters.
Long Parameter List,JsonFx.Serialization,DeserializationException,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Exceptions.cs,DeserializationException,The method has 5 parameters.
Long Parameter List,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,SetMemberValue,The method has 5 parameters.
Long Statement,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The length of the statement  "		if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) { " is 121.
Long Statement,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The length of the statement  "		if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) { " is 121.
Long Statement,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetPropertySetter,The length of the statement  "	// Create a dynamic method with a return type of void' one parameter taking the instance and the other taking the new value. " is 124.
Long Statement,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetFieldSetter,The length of the statement  "	// Create a dynamic method with a return type of void' one parameter taking the instance and the other taking the new value. " is 124.
Long Statement,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetMethodProxy,The length of the statement  "		methodInfo = declaringType.GetMethod (methodName' BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy' null' argTypes' null); " is 196.
Long Statement,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetMethodProxy,The length of the statement  "		methodInfo = declaringType.GetMethod (methodName' BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy); " is 174.
Long Statement,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetTypeFactory,The length of the statement  "	ConstructorInfo ctor = type.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy' null' Type.EmptyTypes' null); " is 175.
Long Statement,JsonFx.CodeGen,DynamicMethodGenerator,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\CodeGen\DynamicMethodGenerator.cs,GetTypeFactory,The length of the statement  "	ConstructorInfo ctor = type.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy' null' args' null); " is 164.
Long Statement,JsonFx.Model,ModelAnalyzer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelAnalyzer.cs,ConsumeObject,The length of the statement  "			throw new TokenException<ModelTokenType> (token' String.Format (ModelAnalyzer.ErrorExpectedPropertyName' token.TokenType)); " is 123.
Long Statement,JsonFx.Model,ModelAnalyzer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelAnalyzer.cs,ConsumeArray,The length of the statement  "			throw new TokenException<ModelTokenType> (token' String.Format (ModelAnalyzer.ErrorExpectedArrayItem' token.TokenType)); " is 120.
Long Statement,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SpliceNextValueLazy,The length of the statement  "		throw new TokenException<ModelTokenType> (token' String.Format (ModelSubsequencer.ErrorInvalidPropertyValue' token.TokenType)); " is 127.
Long Statement,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SpliceNextValue,The length of the statement  "		throw new TokenException<ModelTokenType> (token' String.Format (ModelSubsequencer.ErrorInvalidPropertyValue' token.TokenType)); " is 127.
Long Statement,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SkipNextValue,The length of the statement  "		throw new TokenException<ModelTokenType> (token' String.Format (ModelSubsequencer.ErrorInvalidPropertyValue' token.TokenType)); " is 127.
Long Statement,JsonFx.Model,Query,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\Query`1.cs,Properties,The length of the statement  "	return this.Sequences.SelectMany (sequence => sequence.Properties (predicate)).ToLookup (pair => pair.Key' pair => new Query<T> (this.Analyzer' pair.Value)); " is 157.
Long Statement,JsonFx.Model.Filters,Iso8601DateFilter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\Filters\Iso8601DateFilter.cs,TryParseIso8601,The length of the statement  "	if (!DateTime.TryParseExact (date' Iso8601DateFilter.FullFormat' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind | DateTimeStyles.AllowWhiteSpaces | DateTimeStyles.NoCurrentDateDefault' out value)) { " is 210.
Long Statement,JsonFx.Model.Filters,MSAjaxDateFilter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\Filters\MSAjaxDateFilter.cs,TryParseMSAjaxDate,The length of the statement  "	if (!match.Success || !Int64.TryParse (match.Groups [1].Value' NumberStyles.Integer' CultureInfo.InvariantCulture' out ticks)) { " is 128.
Long Statement,JsonFx.EcmaScript,EcmaScriptFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptFormatter.cs,WriteNamespaceDeclaration,The length of the statement  "				writer.Write (EcmaScriptFormatter.RootDeclarationDebug' ns' String.Join (NamespaceDelim' nsParts' 0' nsParts.Length - 1)); " is 122.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,Format,The length of the statement  "			if (this.ScopeChain.ContainsNamespace (tagName.NamespaceUri) || (String.IsNullOrEmpty (tagName.NamespaceUri) && !this.ScopeChain.ContainsPrefix (String.Empty))) { " is 162.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,Format,The length of the statement  "					attributes = this.canonicalForm ? (IDictionary<DataName' Token<MarkupTokenType>>)new CanonicalList () : (IDictionary<DataName' Token<MarkupTokenType>>)new Dictionary<DataName' Token<MarkupTokenType>> (); " is 203.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,Format,The length of the statement  "					if (!this.ScopeChain.ContainsNamespace (attrName.NamespaceUri) && (!String.IsNullOrEmpty (attrName.NamespaceUri) || this.ScopeChain.ContainsPrefix (String.Empty))) { " is 165.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteTag,The length of the statement  "			string attrPrefix = this.ScopeChain.EnsurePrefix (attribute.Key.Prefix' attribute.Key.NamespaceUri) ?? attribute.Key.Prefix; " is 124.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteLocalName,The length of the statement  "		if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch == '_') || (ch >= '\u00C0' && ch <= '\u00D6') || (ch >= '\u00D8' && ch <= '\u00F6') || (ch >= '\u00F8' && ch <= '\u02FF') || (ch >= '\u0370' && ch <= '\u037D') || (ch >= '\u037F' && ch <= '\u1FFF') || (ch >= '\u200C' && ch <= '\u200D') || (ch >= '\u2070' && ch <= '\u218F') || (ch >= '\u2C00' && ch <= '\u2FEF') || (ch >= '\u3001' && ch <= '\uD7FF') || (ch >= '\uF900' && ch <= '\uFDCF') || (ch >= '\uFDF0' && ch <= '\uFFFD')) { " is 492.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteLocalName,The length of the statement  "		if ((i > 0) && ((ch >= '0' && ch <= '9') || (ch == '-') || (ch == '.') || (ch == '\u00B7') || (ch >= '\u0300' && ch <= '\u036F') || (ch >= '\u203F' && ch <= '\u2040'))) { " is 170.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,HtmlEncode,The length of the statement  "			if (((ch < ' ') && (ch != '\n') && (ch != '\t')) || (encodeNonAscii && (ch >= 0x7F)) || ((ch >= 0x7F) && (ch <= 0x84)) || ((ch >= 0x86) && (ch <= 0x9F)) || ((ch >= 0xFDD0) && (ch <= 0xFDEF))) { " is 193.
Long Statement,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,HtmlAttributeEncode,The length of the statement  "			if ((ch < ' ') || (encodeNonAscii && (ch >= 0x7F)) || ((ch >= 0x7F) && (ch <= 0x84)) || ((ch >= 0x86) && (ch <= 0x9F)) || ((ch >= 0xFDD0) && (ch <= 0xFDEF))) { " is 159.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed (MarkupGrammar.OperatorPhpExpressionBegin' MarkupGrammar.OperatorProcessingInstructionEnd' this.ScanUnparsedValue (scanner' MarkupGrammar.OperatorPhpExpressionBegin' MarkupGrammar.OperatorProcessingInstructionEnd)); " is 250.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed (MarkupGrammar.OperatorProcessingInstructionBegin' MarkupGrammar.OperatorProcessingInstructionEnd' this.ScanUnparsedValue (scanner' String.Empty' MarkupGrammar.OperatorProcessingInstructionEnd)); " is 230.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed ("%--"' "--%"' this.ScanUnparsedValue (scanner' MarkupGrammar.OperatorCommentBegin' String.Concat (MarkupGrammar.OperatorCommentEnd' MarkupGrammar.OperatorCode))); " is 198.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed (String.Concat (MarkupGrammar.OperatorCode' ch)' MarkupGrammar.OperatorCodeEnd' this.ScanUnparsedValue (scanner' String.Empty' MarkupGrammar.OperatorCodeEnd)); " is 194.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed (MarkupGrammar.OperatorCodeBlockBegin' MarkupGrammar.OperatorCodeEnd' this.ScanUnparsedValue (scanner' String.Empty' MarkupGrammar.OperatorCodeEnd)); " is 184.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed ("#--"' "--#"' this.ScanUnparsedValue (scanner' MarkupGrammar.OperatorCommentBegin' String.Concat (MarkupGrammar.OperatorCommentEnd' MarkupGrammar.OperatorT4))); " is 196.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed (String.Concat (MarkupGrammar.OperatorT4' ch)' MarkupGrammar.OperatorT4End' this.ScanUnparsedValue (scanner' String.Empty' MarkupGrammar.OperatorT4End)); " is 188.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanUnparsedBlock,The length of the statement  "			return MarkupGrammar.TokenUnparsed (MarkupGrammar.OperatorT4BlockBegin' MarkupGrammar.OperatorT4End' this.ScanUnparsedValue (scanner' String.Empty' MarkupGrammar.OperatorT4End)); " is 178.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanAttributeValue,The length of the statement  "					throw new DeserializationException ("Missing attribute value closing delimiter"' scanner.Index' scanner.Line' scanner.Column); " is 126.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanAttributeValue,The length of the statement  "		while (!scanner.IsCompleted && ch != MarkupGrammar.OperatorElementClose && ch != MarkupGrammar.OperatorElementEnd && !CharUtility.IsWhiteSpace (ch)) { " is 150.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,ScanQName,The length of the statement  "		throw new DeserializationException (String.Format ("Invalid element name ({0})"' name)' scanner.Index' scanner.Line' scanner.Column' ex); " is 137.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,EmitTag,The length of the statement  "			DataName attrName = new DataName (attr.QName.Name' attr.QName.Prefix' this.ScopeChain.GetNamespace (attr.QName.Prefix' false)); " is 127.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,EmitText,The length of the statement  "	if (token != null && token.TokenType == MarkupTokenType.Primitive && token.Value is string && // prevent appending to attribute values " is 134.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntity,The length of the statement  "	if (scanner.IsCompleted || CharUtility.IsWhiteSpace (ch) || ch == MarkupGrammar.OperatorEntityBegin || ch == MarkupGrammar.OperatorElementBegin) { " is 146.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntity,The length of the statement  "		if (Int32.TryParse (chunk' isHex ? NumberStyles.AllowHexSpecifier : NumberStyles.None' CultureInfo.InvariantCulture' out utf16)) { " is 130.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntity,The length of the statement  "			return String.Concat (MarkupGrammar.OperatorEntityBegin' MarkupGrammar.OperatorEntityNum' MarkupGrammar.OperatorEntityHex' chunk); " is 130.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,IsNameStartChar,The length of the statement  "	return (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch == ':') || (ch == '_') || (ch >= '\u00C0' && ch <= '\u00D6') || (ch >= '\u00D8' && ch <= '\u00F6') || (ch >= '\u00F8' && ch <= '\u02FF') || (ch >= '\u0370' && ch <= '\u037D') || (ch >= '\u037F' && ch <= '\u1FFF') || (ch >= '\u200C' && ch <= '\u200D') || (ch >= '\u2070' && ch <= '\u218F') || (ch >= '\u2C00' && ch <= '\u2FEF') || (ch >= '\u3001' && ch <= '\uD7FF') || (ch >= '\uF900' && ch <= '\uFDCF') || (ch >= '\uFDF0' && ch <= '\uFFFD'); " is 508.
Long Statement,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,IsNameChar,The length of the statement  "	return HtmlTokenizer.IsNameStartChar (ch) || (ch >= '0' && ch <= '9') || (ch == '-') || (ch == '.') || (ch == '\u00B7') || (ch >= '\u0300' && ch <= '\u036F') || (ch >= '\u203F' && ch <= '\u2040'); " is 196.
Long Statement,JsonFx.Json.Resolvers,JsonResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Json\Resolvers\JsonResolverStrategy.cs,IsPropertyIgnored,The length of the statement  "	return base.IsPropertyIgnored (member' isImmutableType) || TypeCoercionUtility.HasAttribute<JsonIgnoreAttribute> (member); " is 122.
Long Statement,JsonFx.Json.Resolvers,JsonResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Json\Resolvers\JsonResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "	JsonSpecifiedPropertyAttribute specifiedPropertyAttr = TypeCoercionUtility.GetAttribute<JsonSpecifiedPropertyAttribute> (member); " is 129.
Long Statement,JsonFx.Json.Resolvers,JsonResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Json\Resolvers\JsonResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "		PropertyInfo specProp = objType.GetProperty (specifiedPropertyAttr.SpecifiedProperty' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy); " is 188.
Long Statement,JsonFx.Markup,UnparsedBlock,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Markup\UnparsedBlock.cs,ToString,The length of the statement  "	return String.Concat (MarkupGrammar.OperatorElementBegin' this.Begin' this.Value' this.End' MarkupGrammar.OperatorElementEnd); " is 126.
Long Statement,JsonFx.Markup,UnparsedBlock,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Markup\UnparsedBlock.cs,Equals,The length of the statement  "	return StringComparer.Ordinal.Equals (this.Begin' that.Begin) && StringComparer.Ordinal.Equals (this.End' that.End) && StringComparer.Ordinal.Equals (this.Value' that.Value); " is 174.
Long Statement,JsonFx.Serialization,DataName,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\DataName.cs,Equals,The length of the statement  "	return StringComparer.Ordinal.Equals (this.NamespaceUri' that.NamespaceUri) && StringComparer.Ordinal.Equals (this.Prefix' that.Prefix) && StringComparer.Ordinal.Equals (this.LocalName' that.LocalName); " is 202.
Long Statement,JsonFx.Serialization,Token,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Token`1.cs,Equals,The length of the statement  "	return EqualityComparer<T>.Default.Equals (this.TokenType' that.TokenType) && EqualityComparer<DataName>.Default.Equals (this.Name' that.Name) && EqualityComparer<object>.Default.Equals (this.Value' that.Value); " is 211.
Long Statement,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,InstantiateObjectDefaultCtor,The length of the statement  "	if (targetType == null || targetType.IsValueType || targetType.IsAbstract || targetType == typeof(object) || targetType == typeof(string)) { " is 140.
Long Statement,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,The length of the statement  "				date = DateTime.Parse ((string)value' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind | DateTimeStyles.AllowWhiteSpaces | DateTimeStyles.NoCurrentDateDefault); " is 170.
Long Statement,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,The length of the statement  "		throw new TypeCoercionException (String.Format ("Error converting {0} to {1}"' value.GetType ().FullName' targetType.FullName)' ex); " is 132.
Long Statement,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceList,The length of the statement  "		throw new TypeCoercionException (String.Format ("Error converting {0} to {1}"' value.GetType ().FullName' targetType.FullName)' ex); " is 132.
Long Statement,JsonFx.Serialization.Resolvers,DataContractResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\DataContractResolverStrategy.cs,IsPropertyIgnored,The length of the statement  "		return !TypeCoercionUtility.HasAttribute (member' DataContractResolverStrategy.DataMemberType) || TypeCoercionUtility.HasAttribute (member' DataContractResolverStrategy.IgnoreDataMemberType); " is 191.
Long Statement,JsonFx.Serialization.Resolvers,DataContractResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\DataContractResolverStrategy.cs,IsFieldIgnored,The length of the statement  "		return !TypeCoercionUtility.HasAttribute (member' DataContractResolverStrategy.DataMemberType) || TypeCoercionUtility.HasAttribute (member' DataContractResolverStrategy.IgnoreDataMemberType); " is 191.
Long Statement,JsonFx.Serialization.Resolvers,FactoryMap,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,IsImmutableType,The length of the statement  "	return !type.IsInterface && !type.IsAbstract && (type.IsValueType || (type.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy' null'  " is 198.
Long Statement,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildMap,The length of the statement  "	if (typeof(IDictionary<string' object>).IsAssignableFrom (objectType) || typeof(IDictionary).IsAssignableFrom (objectType)) { " is 125.
Long Statement,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildMap,The length of the statement  "	foreach (PropertyInfo info in objectType.GetProperties (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy)) { " is 160.
Long Statement,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildMap,The length of the statement  "	foreach (FieldInfo info in objectType.GetFields (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy)) { " is 153.
Long Statement,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildEnumMap,The length of the statement  "	foreach (FieldInfo info in enumType.GetFields (BindingFlags.Static | BindingFlags.Public | BindingFlags.FlattenHierarchy)) { " is 124.
Long Statement,JsonFx.Xml,XmlReader,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\XmlInTransformer.cs,GetTokenizer,The length of the statement  "	return new TransformTokenizer<MarkupTokenType' ModelTokenType> (new XmlTokenizer ()' new XmlInTransformer (this.Settings)); " is 123.
Long Statement,JsonFx.Xml,XmlWriter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\XmlOutTransformer.cs,GetFormatter,The length of the statement  "	return new TransformFormatter<ModelTokenType' MarkupTokenType> (new XmlFormatter (this.Settings)' new XmlOutTransformer (this.Settings)); " is 137.
Long Statement,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,IsPropertyIgnored,The length of the statement  "	return base.IsPropertyIgnored (member' isImmutableType) || TypeCoercionUtility.HasAttribute<XmlIgnoreAttribute> (member); " is 121.
Long Statement,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "	PropertyInfo specProp = objType.GetProperty (member.Name + SpecifiedSuffix' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy); " is 178.
Long Statement,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "	MethodInfo shouldSerialize = objType.GetMethod (ShouldSerializePrefix + member.Name' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy); " is 187.
Long Statement,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "	if (shouldSerialize != null && shouldSerialize.ReturnType == typeof(bool) && shouldSerialize.GetParameters ().Length == 0) { " is 124.
Long Statement,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "			return (value == null) || Object.Equals (false' shouldSerializeProxy (target)) || Object.Equals (false' specifiedPropertyGetter (target)); " is 138.
Long Statement,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "			return (value == null) || Object.Equals (defaultValue' value) || Object.Equals (false' specifiedPropertyGetter (target)); " is 121.
Long Statement,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,GetValueIgnoredCallback,The length of the statement  "		return (value == null) || Object.Equals (defaultValue' value) || Object.Equals (false' shouldSerializeProxy (target)) || Object.Equals (false' specifiedPropertyGetter (target)); " is 177.
Long Statement,JsonFx.Linq,ExpressionVisitor,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\ExpressionVisitor.cs,VisitBinding,The length of the statement  "		throw new NotSupportedException (String.Format (ExpressionVisitor<T>.ErrorUnexpectedMemberBinding' binding.BindingType)); " is 121.
Long Statement,JsonFx.Linq,ExpressionWalker,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\ExpressionWalker.cs,GetMemberName,The length of the statement  "		return String.Concat (GetTypeName (method.ReturnType)' " "' GetTypeName (method.DeclaringType)' '.'' method.Name' '<'' String.Join ("' "' types)' '>'); " is 151.
Long Statement,JsonFx.Linq,QueryEngine,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\QueryEngine.cs,Translate,The length of the statement  "	//var walker = new ExpressionWalker(new JsonFx.Json.JsonWriter.JsonFormatter(new DataWriterSettings { PrettyPrint=true })); " is 123.
Long Statement,JsonFx.Linq,QueryEngine,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\QueryEngine.cs,Translate,The length of the statement  "		if (targetType.IsGenericType && (typeof(IQueryable).IsAssignableFrom (targetType)) || (typeof(IEnumerable).IsAssignableFrom (targetType))) { " is 140.
Long Statement,JsonFx.Linq,QueryEngine,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\QueryEngine.cs,VisitConstant,The length of the statement  "	if (genericArgs != null && genericArgs.Length == 1 && queryType.MakeGenericType (genericArgs).IsAssignableFrom (type)) { " is 120.
Long Statement,JsonFx.Linq,QueryEngine,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\QueryEngine.cs,VisitLambda,The length of the statement  "				context.Parameters [lambda.Parameters [i].Name] = Expression.Parameter (typeof(TokenSequence)' lambda.Parameters [i].Name); " is 123.
Long Statement,JsonFx.Linq,QueryEngine,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\QueryEngine.cs,VisitLambda,The length of the statement  "		return Expression.Lambda (lambda.Type.GetGenericTypeDefinition ().MakeGenericType (exprTypeArgs)' body' context.Parameters.Values); " is 131.
Long Statement,JsonFx.Linq,QueryEngine,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Linq\QueryEngine.cs,VisitMemberAccess,The length of the statement  "	var memberAccess = Expression.Call (QueryEngine.MemberAccess' context.Parameters [p.Name]' Expression.Constant (map.DataName)); " is 127.
Complex Conditional,JsonFx.EcmaScript,EcmaScriptIdentifier,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptIdentifier.cs,IsValidIdentifier,The conditional expression  "((ch >= 'a') && (ch <= 'z')) || ((ch >= 'A') && (ch <= 'Z')) || (ch == '_') || (ch == '$')"  is complex.
Complex Conditional,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteLocalName,The conditional expression  "(ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch == '_') || (ch >= '\u00C0' && ch <= '\u00D6') || (ch >= '\u00D8' && ch <= '\u00F6') || (ch >= '\u00F8' && ch <= '\u02FF') || (ch >= '\u0370' && ch <= '\u037D') || (ch >= '\u037F' && ch <= '\u1FFF') || (ch >= '\u200C' && ch <= '\u200D') || (ch >= '\u2070' && ch <= '\u218F') || (ch >= '\u2C00' && ch <= '\u2FEF') || (ch >= '\u3001' && ch <= '\uD7FF') || (ch >= '\uF900' && ch <= '\uFDCF') || (ch >= '\uFDF0' && ch <= '\uFFFD')"  is complex.
Complex Conditional,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteLocalName,The conditional expression  "(i > 0) && ((ch >= '0' && ch <= '9') || (ch == '-') || (ch == '.') || (ch == '\u00B7') || (ch >= '\u0300' && ch <= '\u036F') || (ch >= '\u203F' && ch <= '\u2040'))"  is complex.
Complex Conditional,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,HtmlEncode,The conditional expression  "((ch < ' ') && (ch != '\n') && (ch != '\t')) || (encodeNonAscii && (ch >= 0x7F)) || ((ch >= 0x7F) && (ch <= 0x84)) || ((ch >= 0x86) && (ch <= 0x9F)) || ((ch >= 0xFDD0) && (ch <= 0xFDEF))"  is complex.
Complex Conditional,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,HtmlAttributeEncode,The conditional expression  "(ch < ' ') || (encodeNonAscii && (ch >= 0x7F)) || ((ch >= 0x7F) && (ch <= 0x84)) || ((ch >= 0x86) && (ch <= 0x9F)) || ((ch >= 0xFDD0) && (ch <= 0xFDEF))"  is complex.
Complex Conditional,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,EmitText,The conditional expression  "token != null && token.TokenType == MarkupTokenType.Primitive && token.Value is string && // prevent appending to attribute values  (count == 1 || tokens [count - 2].TokenType != MarkupTokenType.Attribute)"  is complex.
Complex Conditional,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntity,The conditional expression  "scanner.IsCompleted || CharUtility.IsWhiteSpace (ch) || ch == MarkupGrammar.OperatorEntityBegin || ch == MarkupGrammar.OperatorElementBegin"  is complex.
Complex Conditional,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,InstantiateObjectDefaultCtor,The conditional expression  "targetType == null || targetType.IsValueType || targetType.IsAbstract || targetType == typeof(object) || targetType == typeof(string)"  is complex.
Complex Conditional,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,InstantiateObjectDefaultCtor,The conditional expression  "(factory == null) || (factory.Ctor == null) || ((factory.CtorArgs != null) && (factory.CtorArgs.Length > 0))"  is complex.
Complex Conditional,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The conditional expression  "genericType == typeof(IList<>) || genericType == typeof(IEnumerable<>) ||   #if !NET20 && !NET30 && !WINDOWS_PHONE  genericType == typeof(IQueryable<>) || genericType == typeof(IOrderedQueryable<>) ||   #endif  genericType == typeof(ICollection<>)"  is complex.
Complex Conditional,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The conditional expression  "targetType == typeof(IList) || targetType == typeof(IEnumerable) ||   #if !NET20 && !NET30 && !WINDOWS_PHONE  targetType == typeof(IQueryable) || targetType == typeof(IOrderedQueryable) ||   #endif  targetType == typeof(ICollection)"  is complex.
Empty Catch Block,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,InstantiateObject,The method has an empty catch block.
Empty Catch Block,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,InstantiateObject,The method has an empty catch block.
Empty Catch Block,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,The method has an empty catch block.
Empty Catch Block,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,The method has an empty catch block.
Empty Catch Block,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,CoerceType,The method has an empty catch block.
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,BsonObjectID,The following statement contains a magic number: if (bytes.Length != 12) {  	throw new ArgumentException ("ObjectID is exact 12 bytes"' "bytes");  }  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,BsonObjectID,The following statement contains a magic number: this.Bytes = new byte[12];  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,BsonObjectID,The following statement contains a magic number: this.Bytes [2] = (byte)((seconds >> 0x08) % 0xFF);  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,BsonObjectID,The following statement contains a magic number: this.Bytes [3] = (byte)(seconds % 0xFF);  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToString,The following statement contains a magic number: for (int i = 0' j = 0; i < 24; i += 2' j++) {  	hex [i] = CharUtility.GetHexDigit (bytes [j] / 0x10);  	hex [i] = CharUtility.GetHexDigit (bytes [j] % 0x10);  }  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToString,The following statement contains a magic number: for (int i = 0' j = 0; i < 24; i += 2' j++) {  	hex [i] = CharUtility.GetHexDigit (bytes [j] / 0x10);  	hex [i] = CharUtility.GetHexDigit (bytes [j] % 0x10);  }  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToString,The following statement contains a magic number: i += 2
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToByteArray,The following statement contains a magic number: Buffer.BlockCopy (this.Bytes' 0' bytes' 0' 12);  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: if (String.IsNullOrEmpty (value) || value.Length != 24) {  	result = BsonObjectID.Empty;  	return false;  }  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 24; i += 2) {  	byte digit;  	if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) {  		result = BsonObjectID.Empty;  		return false;  	}  	bytes [i] = digit;  }  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 24; i += 2) {  	byte digit;  	if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) {  		result = BsonObjectID.Empty;  		return false;  	}  	bytes [i] = digit;  }  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 24; i += 2) {  	byte digit;  	if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) {  		result = BsonObjectID.Empty;  		return false;  	}  	bytes [i] = digit;  }  
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: i += 2
Magic Number,JsonFx.Bson,BsonObjectID,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) {  	result = BsonObjectID.Empty;  	return false;  }  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToString,The following statement contains a magic number: for (int i = 0' j = 0; i < 24; i += 2' j++) {  	hex [i] = BsonBinary.GetHexDigit (bytes [j] / 0x10);  	hex [i] = BsonBinary.GetHexDigit (bytes [j] % 0x10);  }  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToString,The following statement contains a magic number: for (int i = 0' j = 0; i < 24; i += 2' j++) {  	hex [i] = BsonBinary.GetHexDigit (bytes [j] / 0x10);  	hex [i] = BsonBinary.GetHexDigit (bytes [j] % 0x10);  }  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToString,The following statement contains a magic number: i += 2
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,ToByteArray,The following statement contains a magic number: Buffer.BlockCopy (this.Bytes' 0' bytes' 0' 12);  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < value.Length; i += 2) {  	byte digit;  	if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) {  		result = BsonBinary.Empty;  		return false;  	}  	bytes [i] = digit;  }  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < value.Length; i += 2) {  	byte digit;  	if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) {  		result = BsonBinary.Empty;  		return false;  	}  	bytes [i] = digit;  }  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: i += 2
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,TryParse,The following statement contains a magic number: if (!Byte.TryParse (value.Substring (i' 2)' NumberStyles.AllowHexSpecifier' NumberFormatInfo.InvariantInfo' out digit)) {  	result = BsonBinary.Empty;  	return false;  }  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,GetHexDigit,The following statement contains a magic number: if (i < 10) {  	return (char)(i + '0');  }  
Magic Number,JsonFx.Bson,BsonBinary,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Bson\BsonTypes.cs,GetHexDigit,The following statement contains a magic number: return (char)((i - 10) + 'a');  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,EmitText,The following statement contains a magic number: if (token != null && token.TokenType == MarkupTokenType.Primitive && token.Value is string && // prevent appending to attribute values  (count == 1 || tokens [count - 2].TokenType != MarkupTokenType.Attribute)) {  	// concatenate string literals into single value  	tokens [count - 1] = MarkupGrammar.TokenPrimitive (String.Concat (token.Value' value));  	return;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("AElig")) {  	return 198;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 198;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Aacute")) {  	return 193;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 193;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Acirc")) {  	return 194;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 194;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Agrave")) {  	return 192;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 192;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Alpha")) {  	return 913;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 913;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Aring")) {  	return 197;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 197;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Atilde")) {  	return 195;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 195;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Auml")) {  	return 196;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 196;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Beta")) {  	return 914;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 914;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ccedil")) {  	return 199;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 199;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Chi")) {  	return 935;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 935;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Dagger")) {  	return 8225;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8225;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Delta")) {  	return 916;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 916;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ETH")) {  	return 208;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 208;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Eacute")) {  	return 201;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 201;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ecirc")) {  	return 202;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 202;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Egrave")) {  	return 200;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 200;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Epsilon")) {  	return 917;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 917;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Eta")) {  	return 919;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 919;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Euml")) {  	return 203;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 203;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Gamma")) {  	return 915;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 915;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Iacute")) {  	return 205;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 205;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Icirc")) {  	return 206;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 206;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Igrave")) {  	return 204;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 204;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Iota")) {  	return 921;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 921;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Iuml")) {  	return 207;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 207;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Kappa")) {  	return 922;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 922;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Lambda")) {  	return 923;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 923;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Mu")) {  	return 924;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 924;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ntilde")) {  	return 209;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 209;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Nu")) {  	return 925;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 925;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("OElig")) {  	return 338;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 338;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Oacute")) {  	return 211;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 211;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ocirc")) {  	return 212;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 212;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ograve")) {  	return 210;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 210;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Omega")) {  	return 937;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 937;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Omicron")) {  	return 927;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 927;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Oslash")) {  	return 216;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 216;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Otilde")) {  	return 213;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 213;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ouml")) {  	return 214;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 214;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Phi")) {  	return 934;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 934;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Pi")) {  	return 928;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 928;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Prime")) {  	return 8243;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8243;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Psi")) {  	return 936;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 936;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Rho")) {  	return 929;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 929;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Scaron")) {  	return 352;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 352;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Sigma")) {  	return 931;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 931;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("THORN")) {  	return 222;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 222;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Tau")) {  	return 932;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 932;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Theta")) {  	return 920;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 920;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Uacute")) {  	return 218;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 218;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ucirc")) {  	return 219;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 219;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Ugrave")) {  	return 217;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 217;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Upsilon")) {  	return 933;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 933;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Uuml")) {  	return 220;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 220;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Xi")) {  	return 926;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 926;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Yacute")) {  	return 221;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 221;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Yuml")) {  	return 376;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 376;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("Zeta")) {  	return 918;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 918;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("aacute")) {  	return 225;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 225;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("acirc")) {  	return 226;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 226;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("acute")) {  	return 180;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 180;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("aelig")) {  	return 230;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 230;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("agrave")) {  	return 224;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 224;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("alefsym")) {  	return 8501;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8501;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("alpha")) {  	return 945;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 945;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("amp")) {  	return 38;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 38;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("and")) {  	return 8743;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8743;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ang")) {  	return 8736;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8736;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("apos")) {  	return 39;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 39;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("aring")) {  	return 229;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 229;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("asymp")) {  	return 8776;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8776;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("atilde")) {  	return 227;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 227;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("auml")) {  	return 228;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 228;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("bdquo")) {  	return 8222;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8222;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("beta")) {  	return 946;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 946;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("brvbar")) {  	return 166;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 166;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("bull")) {  	return 8226;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8226;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("cap")) {  	return 8745;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8745;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ccedil")) {  	return 231;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 231;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("cedil")) {  	return 184;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 184;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("cent")) {  	return 162;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 162;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("chi")) {  	return 967;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 967;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("circ")) {  	return 710;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 710;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("clubs")) {  	return 9827;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 9827;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("cong")) {  	return 8773;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8773;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("copy")) {  	return 169;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 169;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("crarr")) {  	return 8629;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8629;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("cup")) {  	return 8746;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8746;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("curren")) {  	return 164;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 164;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("dArr")) {  	return 8659;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8659;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("dagger")) {  	return 8224;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8224;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("darr")) {  	return 8495;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8495;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("deg")) {  	return 176;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 176;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("delta")) {  	return 948;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 948;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("diams")) {  	return 9830;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 9830;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("divide")) {  	return 247;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 247;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("eacute")) {  	return 233;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 233;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ecirc")) {  	return 234;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 234;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("egrave")) {  	return 232;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 232;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("empty")) {  	return 8709;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8709;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("emsp")) {  	return 8195;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8195;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ensp")) {  	return 8194;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8194;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("epsilon")) {  	return 949;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 949;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("equiv")) {  	return 8801;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8801;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("eta")) {  	return 951;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 951;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("eth")) {  	return 240;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 240;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("euml")) {  	return 235;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 235;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("euro")) {  	return 8364;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8364;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("exist")) {  	return 8707;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8707;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("fnof")) {  	return 402;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 402;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("forall")) {  	return 8704;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8704;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("frac12")) {  	return 189;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 189;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("frac14")) {  	return 188;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 188;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("frac34")) {  	return 190;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 190;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("frasl")) {  	return 8260;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8260;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("gamma")) {  	return 947;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 947;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ge")) {  	return 8805;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8805;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("gt")) {  	return 62;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 62;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("hArr")) {  	return 8660;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8660;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("harr")) {  	return 8596;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8596;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("hearts")) {  	return 9829;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 9829;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("hellip")) {  	return 8230;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8230;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("iacute")) {  	return 237;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 237;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("icirc")) {  	return 238;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 238;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("iexcl")) {  	return 161;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 161;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("igrave")) {  	return 236;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 236;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("image")) {  	return 8465;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8465;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("infin")) {  	return 8734;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8734;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("int")) {  	return 8747;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8747;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("iota")) {  	return 953;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 953;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("iquest")) {  	return 191;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 191;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("isin")) {  	return 8712;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8712;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("iuml")) {  	return 239;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 239;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("kappa")) {  	return 954;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 954;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lArr")) {  	return 8656;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8656;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lambda")) {  	return 955;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 955;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lang")) {  	return 9001;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 9001;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("laquo")) {  	return 171;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 171;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("larr")) {  	return 8592;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8592;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lceil")) {  	return 8968;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8968;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ldquo")) {  	return 8220;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8220;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("le")) {  	return 8804;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8804;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lfloor")) {  	return 8970;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8970;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lowast")) {  	return 8727;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8727;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("loz")) {  	return 9674;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 9674;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lrm")) {  	return 8206;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8206;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lsaquo")) {  	return 8249;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8249;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lsquo")) {  	return 8216;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8216;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("lt")) {  	return 60;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 60;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("macr")) {  	return 175;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 175;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("mdash")) {  	return 8212;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8212;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("micro")) {  	return 181;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 181;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("middot")) {  	return 183;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 183;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("minus")) {  	return 8722;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8722;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("mu")) {  	return 956;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 956;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("nabla")) {  	return 8711;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8711;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("nbsp")) {  	return 160;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 160;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ndash")) {  	return 8211;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8211;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ne")) {  	return 8800;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8800;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ni")) {  	return 8715;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8715;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("not")) {  	return 172;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 172;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("notin")) {  	return 8713;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8713;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("nsub")) {  	return 8836;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8836;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ntilde")) {  	return 241;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 241;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("nu")) {  	return 957;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 957;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("oacute")) {  	return 243;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 243;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ocirc")) {  	return 244;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 244;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("oelig")) {  	return 339;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 339;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ograve")) {  	return 242;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 242;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("oline")) {  	return 8254;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8254;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("omega")) {  	return 969;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 969;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("omicron")) {  	return 959;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 959;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("oplus")) {  	return 8853;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8853;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("or")) {  	return 8744;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8744;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ordf")) {  	return 170;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 170;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ordm")) {  	return 186;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 186;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("oslash")) {  	return 248;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 248;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("otilde")) {  	return 245;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 245;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("otimes")) {  	return 8855;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8855;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ouml")) {  	return 246;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 246;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("para")) {  	return 182;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 182;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("part")) {  	return 8706;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8706;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("permil")) {  	return 8240;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8240;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("perp")) {  	return 8869;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8869;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("phi")) {  	return 966;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 966;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("pi")) {  	return 960;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 960;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("piv")) {  	return 982;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 982;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("plusmn")) {  	return 177;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 177;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("pound")) {  	return 163;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 163;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("prime")) {  	return 8242;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8242;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("prod")) {  	return 8719;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8719;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("prop")) {  	return 8733;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8733;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("psi")) {  	return 968;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 968;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("quot")) {  	return 34;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 34;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rArr")) {  	return 8658;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8658;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("radic")) {  	return 8730;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8730;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rang")) {  	return 9002;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 9002;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("raquo")) {  	return 187;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 187;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rarr")) {  	return 8594;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8594;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rceil")) {  	return 8969;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8969;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rdquo")) {  	return 8221;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8221;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("real")) {  	return 8476;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8476;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("reg")) {  	return 174;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 174;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rfloor")) {  	return 8971;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8971;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rho")) {  	return 961;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 961;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rlm")) {  	return 8207;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8207;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rsaquo")) {  	return 8250;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8250;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("rsquo")) {  	return 8217;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8217;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sbquo")) {  	return 8218;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8218;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("scaron")) {  	return 353;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 353;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sdot")) {  	return 8901;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8901;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sect")) {  	return 167;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 167;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("shy")) {  	return 173;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 173;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sigma")) {  	return 963;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 963;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sigmaf")) {  	return 962;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 962;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sim")) {  	return 8764;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8764;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("spades")) {  	return 9824;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 9824;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sub")) {  	return 8834;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8834;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sube")) {  	return 8838;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8838;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sum")) {  	return 8721;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8721;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sup")) {  	return 8835;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8835;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sup1")) {  	return 185;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 185;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sup2")) {  	return 178;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 178;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("sup3")) {  	return 179;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 179;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("supe")) {  	return 8839;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8839;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("szlig")) {  	return 223;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 223;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("tau")) {  	return 964;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 964;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("there4")) {  	return 8756;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8756;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("theta")) {  	return 952;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 952;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("thetasym")) {  	return 977;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 977;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("thinsp")) {  	return 8201;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8201;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("thorn")) {  	return 254;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 254;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("tilde")) {  	return 732;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 732;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("times")) {  	return 215;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 215;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("trade")) {  	return 8482;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8482;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("uArr")) {  	return 8657;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8657;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("uacute")) {  	return 250;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 250;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("uarr")) {  	return 8593;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8593;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ucirc")) {  	return 251;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 251;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("ugrave")) {  	return 249;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 249;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("uml")) {  	return 168;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 168;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("upsih")) {  	return 978;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 978;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("upsilon")) {  	return 965;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 965;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("uuml")) {  	return 252;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 252;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("weierp")) {  	return 8472;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8472;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("xi")) {  	return 958;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 958;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("yacute")) {  	return 253;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 253;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("yen")) {  	return 165;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 165;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("yuml")) {  	return 255;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 255;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("zeta")) {  	return 950;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 950;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("zwj")) {  	return 8205;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8205;  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: if (name.Equals ("zwnj")) {  	return 8204;  }  
Magic Number,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following statement contains a magic number: return 8204;  
Magic Number,JsonFx.Markup,UnparsedBlock,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Markup\UnparsedBlock.cs,GetHashCode,The following statement contains a magic number: num = (-1521134295 * num) + StringComparer.Ordinal.GetHashCode (this.Begin);  
Magic Number,JsonFx.Markup,UnparsedBlock,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Markup\UnparsedBlock.cs,GetHashCode,The following statement contains a magic number: num = (-1521134295 * num) + StringComparer.Ordinal.GetHashCode (this.End);  
Magic Number,JsonFx.Markup,UnparsedBlock,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Markup\UnparsedBlock.cs,GetHashCode,The following statement contains a magic number: return ((-1521134295 * num) + StringComparer.Ordinal.GetHashCode (this.Value));  
Magic Number,JsonFx.Serialization,DataName,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\DataName.cs,GetHashCode,The following statement contains a magic number: hash = (-1521134295 * hash) + StringComparer.Ordinal.GetHashCode (this.LocalName ?? String.Empty);  
Magic Number,JsonFx.Serialization,DataName,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\DataName.cs,GetHashCode,The following statement contains a magic number: hash = (-1521134295 * hash) + StringComparer.Ordinal.GetHashCode (this.Prefix ?? String.Empty);  
Magic Number,JsonFx.Serialization,DataName,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\DataName.cs,GetHashCode,The following statement contains a magic number: hash = (-1521134295 * hash) + StringComparer.Ordinal.GetHashCode (this.NamespaceUri ?? String.Empty);  
Magic Number,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The following statement contains a magic number: if (targetType.IsInterface) {  	if (targetType.IsGenericType) {  		Type genericType = targetType.GetGenericTypeDefinition ();  		if (genericType == typeof(IList<>) || genericType == typeof(IEnumerable<>) ||   		#if !NET20 && !NET30 && !WINDOWS_PHONE  		genericType == typeof(IQueryable<>) || genericType == typeof(IOrderedQueryable<>) ||   		#endif  		genericType == typeof(ICollection<>)) {  			Type[] genericArgs = targetType.GetGenericArguments ();  			targetType = typeof(List<>).MakeGenericType (genericArgs);  		} else if (genericType == typeof(ISet<>)) {  			Type[] genericArgs = targetType.GetGenericArguments ();  			targetType = typeof(HashSet<>).MakeGenericType (genericArgs);  		} else if (genericType == typeof(IDictionary<' >)) {  			Type[] genericArgs = targetType.GetGenericArguments ();  			if (genericArgs.Length == 2 && genericArgs [0] == typeof(string) && genericArgs [0] == typeof(object)) {  				// allow ExpandoObject in NET40' otherwise Dictionary<string' object>  				targetType = typeof(JsonObject);  			} else {  				targetType = typeof(Dictionary<' >).MakeGenericType (genericArgs);  			}  		}  	} else if (targetType == typeof(IList) || targetType == typeof(IEnumerable) ||   	#if !NET20 && !NET30 && !WINDOWS_PHONE  	targetType == typeof(IQueryable) || targetType == typeof(IOrderedQueryable) ||   	#endif  	targetType == typeof(ICollection)) {  		targetType = typeof(object[]);  	} else if (targetType == typeof(IDictionary)) {  		// <rant>cannot use ExpandoObject here because it does not implement IDictionary</rant>  		targetType = typeof(Dictionary<string' object>);  	}   	#if NET40 && !WINDOWS_PHONE  	else if (targetType == typeof(System.Dynamic.IDynamicMetaObjectProvider)) {  		targetType = typeof(System.Dynamic.ExpandoObject);  	}  	#endif  }  
Magic Number,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The following statement contains a magic number: if (targetType.IsGenericType) {  	Type genericType = targetType.GetGenericTypeDefinition ();  	if (genericType == typeof(IList<>) || genericType == typeof(IEnumerable<>) ||   	#if !NET20 && !NET30 && !WINDOWS_PHONE  	genericType == typeof(IQueryable<>) || genericType == typeof(IOrderedQueryable<>) ||   	#endif  	genericType == typeof(ICollection<>)) {  		Type[] genericArgs = targetType.GetGenericArguments ();  		targetType = typeof(List<>).MakeGenericType (genericArgs);  	} else if (genericType == typeof(ISet<>)) {  		Type[] genericArgs = targetType.GetGenericArguments ();  		targetType = typeof(HashSet<>).MakeGenericType (genericArgs);  	} else if (genericType == typeof(IDictionary<' >)) {  		Type[] genericArgs = targetType.GetGenericArguments ();  		if (genericArgs.Length == 2 && genericArgs [0] == typeof(string) && genericArgs [0] == typeof(object)) {  			// allow ExpandoObject in NET40' otherwise Dictionary<string' object>  			targetType = typeof(JsonObject);  		} else {  			targetType = typeof(Dictionary<' >).MakeGenericType (genericArgs);  		}  	}  } else if (targetType == typeof(IList) || targetType == typeof(IEnumerable) ||   #if !NET20 && !NET30 && !WINDOWS_PHONE  targetType == typeof(IQueryable) || targetType == typeof(IOrderedQueryable) ||   #endif  targetType == typeof(ICollection)) {  	targetType = typeof(object[]);  } else if (targetType == typeof(IDictionary)) {  	// <rant>cannot use ExpandoObject here because it does not implement IDictionary</rant>  	targetType = typeof(Dictionary<string' object>);  }   #if NET40 && !WINDOWS_PHONE  else if (targetType == typeof(System.Dynamic.IDynamicMetaObjectProvider)) {  	targetType = typeof(System.Dynamic.ExpandoObject);  }  
Magic Number,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The following statement contains a magic number: if (genericType == typeof(IList<>) || genericType == typeof(IEnumerable<>) ||   #if !NET20 && !NET30 && !WINDOWS_PHONE  genericType == typeof(IQueryable<>) || genericType == typeof(IOrderedQueryable<>) ||   #endif  genericType == typeof(ICollection<>)) {  	Type[] genericArgs = targetType.GetGenericArguments ();  	targetType = typeof(List<>).MakeGenericType (genericArgs);  } else if (genericType == typeof(ISet<>)) {  	Type[] genericArgs = targetType.GetGenericArguments ();  	targetType = typeof(HashSet<>).MakeGenericType (genericArgs);  } else if (genericType == typeof(IDictionary<' >)) {  	Type[] genericArgs = targetType.GetGenericArguments ();  	if (genericArgs.Length == 2 && genericArgs [0] == typeof(string) && genericArgs [0] == typeof(object)) {  		// allow ExpandoObject in NET40' otherwise Dictionary<string' object>  		targetType = typeof(JsonObject);  	} else {  		targetType = typeof(Dictionary<' >).MakeGenericType (genericArgs);  	}  }  
Magic Number,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The following statement contains a magic number: if (genericType == typeof(ISet<>)) {  	Type[] genericArgs = targetType.GetGenericArguments ();  	targetType = typeof(HashSet<>).MakeGenericType (genericArgs);  } else if (genericType == typeof(IDictionary<' >)) {  	Type[] genericArgs = targetType.GetGenericArguments ();  	if (genericArgs.Length == 2 && genericArgs [0] == typeof(string) && genericArgs [0] == typeof(object)) {  		// allow ExpandoObject in NET40' otherwise Dictionary<string' object>  		targetType = typeof(JsonObject);  	} else {  		targetType = typeof(Dictionary<' >).MakeGenericType (genericArgs);  	}  }  
Magic Number,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The following statement contains a magic number: if (genericType == typeof(IDictionary<' >)) {  	Type[] genericArgs = targetType.GetGenericArguments ();  	if (genericArgs.Length == 2 && genericArgs [0] == typeof(string) && genericArgs [0] == typeof(object)) {  		// allow ExpandoObject in NET40' otherwise Dictionary<string' object>  		targetType = typeof(JsonObject);  	} else {  		targetType = typeof(Dictionary<' >).MakeGenericType (genericArgs);  	}  }  
Magic Number,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,ResolveInterfaceType,The following statement contains a magic number: if (genericArgs.Length == 2 && genericArgs [0] == typeof(string) && genericArgs [0] == typeof(object)) {  	// allow ExpandoObject in NET40' otherwise Dictionary<string' object>  	targetType = typeof(JsonObject);  } else {  	targetType = typeof(Dictionary<' >).MakeGenericType (genericArgs);  }  
Magic Number,JsonFx.Serialization,TypeCoercionUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\TypeCoercionUtility.cs,GetDictionaryItemType,The following statement contains a magic number: if (genericArgs.Length != 2 || !genericArgs [0].IsAssignableFrom (typeof(string))) {  	if (typeof(IDictionary).IsAssignableFrom (targetType)) {  		// can build from non-generic IDictionary  		return null;  	}  	// only supports variants of IDictionary<string' TVal>  	throw new ArgumentException (String.Format (TypeCoercionUtility.ErrorGenericIDictionaryKeys' targetType));  }  
Magic Number,JsonFx.Utils,CharUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Utils\CharUtility.cs,GetHexDigit,The following statement contains a magic number: if (i < 10) {  	return (char)(i + '0');  }  
Magic Number,JsonFx.Utils,CharUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Utils\CharUtility.cs,GetHexDigit,The following statement contains a magic number: return (char)((i - 10) + 'a');  
Magic Number,JsonFx.Utils,CharUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Utils\CharUtility.cs,GetHexString,The following statement contains a magic number: while (i > 0) {  	hex = String.Concat (CharUtility.GetHexDigit ((int)(i % 0x10))' hex);  	i >>= 4;  }  
Magic Number,JsonFx.Utils,CharUtility,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Utils\CharUtility.cs,GetHexString,The following statement contains a magic number: i >>= 4;  
Magic Number,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,SortMembers,The following statement contains a magic number: if (members is ICollection<MemberMap>) {  	count = ((ICollection<MemberMap>)members).Count;  	if (count <= 1) {  		// special cases which don't require reordering  		foreach (MemberMap map in members) {  			yield return map;  		}  		yield break;  	}  } else {  	count = 5;  }  
Magic Number,JsonFx.Xml.Resolvers,XmlResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Xml\Resolvers\XmlResolverStrategy.cs,SortMembers,The following statement contains a magic number: count = 5;  
Duplicate Code,JsonFx.Serialization.Resolvers,ResolverCache,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ResolverCache.cs,BuildMap,The method contains a code clone-set at the following line numbers (starting from the method definition): ((62' 91)' (95' 124))
Missing Default,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SpliceNextValue,The following switch statement is missing a default case: switch (stream.Pop ().TokenType) {  case ModelTokenType.ArrayBegin:  case ModelTokenType.ObjectBegin: {  	depth++;  	break;  }  case ModelTokenType.ArrayEnd:  case ModelTokenType.ObjectEnd: {  	depth--;  	break;  }  }  
Missing Default,JsonFx.Model,ModelSubsequencer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelSubsequencer.cs,SkipNextValue,The following switch statement is missing a default case: switch (stream.Pop ().TokenType) {  case ModelTokenType.ArrayBegin:  case ModelTokenType.ObjectBegin: {  	depth++;  	break;  }  case ModelTokenType.ArrayEnd:  case ModelTokenType.ObjectEnd: {  	depth--;  	break;  }  }  
Missing Default,JsonFx.Model,ModelWalker,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Model\ModelWalker.cs,GetTokens,The following switch statement is missing a default case: switch (Type.GetTypeCode (type)) {  case TypeCode.Boolean: {  	tokens.Add (true.Equals (value) ? ModelGrammar.TokenTrue : ModelGrammar.TokenFalse);  	return;  }  case TypeCode.Byte:  case TypeCode.Decimal:  case TypeCode.Int16:  case TypeCode.Int32:  case TypeCode.Int64:  case TypeCode.SByte:  case TypeCode.UInt16:  case TypeCode.UInt32:  case TypeCode.UInt64: {  	tokens.Add (ModelGrammar.TokenPrimitive ((ValueType)value));  	return;  }  case TypeCode.Double: {  	double doubleVal = (double)value;  	if (Double.IsNaN (doubleVal)) {  		tokens.Add (ModelGrammar.TokenNaN);  	} else if (Double.IsPositiveInfinity (doubleVal)) {  		tokens.Add (ModelGrammar.TokenPositiveInfinity);  	} else if (Double.IsNegativeInfinity (doubleVal)) {  		tokens.Add (ModelGrammar.TokenNegativeInfinity);  	} else {  		tokens.Add (ModelGrammar.TokenPrimitive (doubleVal));  	}  	return;  }  case TypeCode.Single: {  	float floatVal = (float)value;  	if (Single.IsNaN (floatVal)) {  		// use the Double equivalent  		tokens.Add (ModelGrammar.TokenNaN);  	} else if (Single.IsPositiveInfinity (floatVal)) {  		// use the Double equivalent  		tokens.Add (ModelGrammar.TokenPositiveInfinity);  	} else if (Single.IsNegativeInfinity (floatVal)) {  		// use the Double equivalent  		tokens.Add (ModelGrammar.TokenNegativeInfinity);  	} else {  		tokens.Add (ModelGrammar.TokenPrimitive (floatVal));  	}  	return;  }  case TypeCode.Char:  case TypeCode.DateTime:  case TypeCode.String: {  	tokens.Add (ModelGrammar.TokenPrimitive (value));  	return;  }  case TypeCode.DBNull:  case TypeCode.Empty: {  	tokens.Add (ModelGrammar.TokenNull);  	return;  }  }  
Missing Default,JsonFx.EcmaScript,EcmaScriptFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptFormatter.cs,WriteEcmaScriptRegExp,The following switch statement is missing a default case: switch (regex.Options & (RegexOptions.IgnoreCase | RegexOptions.Multiline)) {  case RegexOptions.IgnoreCase: {  	modifiers += "i";  	break;  }  case RegexOptions.Multiline: {  	modifiers += "m";  	break;  }  case RegexOptions.IgnoreCase | RegexOptions.Multiline: {  	modifiers += "im";  	break;  }  }  
Missing Default,JsonFx.EcmaScript,EcmaScriptFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\EcmaScript\EcmaScriptFormatter.cs,WriteEcmaScriptRegExp,The following switch statement is missing a default case: switch (pattern [i]) {  case EcmaScriptFormatter.RegExpLiteralDelim: {  	writer.Write (pattern.Substring (start' i - start));  	start = i + 1;  	writer.Write (EcmaScriptFormatter.OperatorCharEscape);  	writer.Write (pattern [i]);  	break;  }  }  
Missing Default,JsonFx.Html,HtmlFilter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFilter.cs,GetTaxonomy,The following switch statement is missing a default case: switch (tag) {  case "a":  case "abbr":  case "acronym":  case "area":  case "bdo":  case "cite":  case "code":  case "dfn":  case "em":  case "isindex":  case "kbd":  case "map":  case "q":  case "samp":  case "span":  case "strong":  case "time":  case "var":  case "wbr": {  	return HtmlTaxonomy.Inline;  }  case "audio":  case "bgsound":  case "img":  case "sound":  case "source": {  	return HtmlTaxonomy.Media | HtmlTaxonomy.Inline;  }  case "canvas":  case "math":  case "svg":  case "video": {  	// TODO: decide if it is worth adding all the SVG elements now that HTML5 recognizes  	// http://www.w3.org/TR/SVGTiny12/elementTable.html  	// TODO: decide if it is worth adding all the MathML elements now that HTML5 recognizes  	// http://www.w3.org/TR/MathML/chapter2.html#fund.overview  	return HtmlTaxonomy.Media | HtmlTaxonomy.Block;  }  case "b":  case "big":  case "blink":  case "figcaption":  case "font":  case "i":  case "marquee":  case "mark":  case "rp":  case "rt":  case "ruby":  case "s":  case "small":  case "strike":  case "sub":  case "sup":  case "tt":  case "u": {  	return HtmlTaxonomy.Style | HtmlTaxonomy.Inline;  }  case "address":  case "article":  case "asside":  case "blockquote":  case "bq":  case "br":  case "center":  case "del":  case "details":  case "div":  case "figure":  case "footer":  case "h1":  case "h2":  case "h3":  case "h4":  case "h5":  case "h6":  case "header":  case "hgroup":  case "hr":  case "ins":  case "nav":  case "nobr":  case "p":  case "pre":  case "section":  case "summary": {  	return HtmlTaxonomy.Block;  }  case "command":  case "dl":  case "dd":  case "dir":  case "dt":  case "lh":  case "li":  case "menu":  case "ol":  case "ul": {  	return HtmlTaxonomy.List;  }  case "caption":  case "col":  case "colgroup":  case "table":  case "tbody":  case "td":  case "th":  case "thead":  case "tfoot":  case "tr": {  	return HtmlTaxonomy.Table;  }  case "button":  case "datalist":  case "fieldset":  case "form":  case "keygen":  case "input":  case "label":  case "legend":  case "meter":  case "optgroup":  case "option":  case "output":  case "progress":  case "select":  case "textarea": {  	return HtmlTaxonomy.Form;  }  case "applet":  case "embed":  case "noembed":  case "object":  case "param": {  	return HtmlTaxonomy.Plugin;  }  case "basefont":  case "link":  case "style": {  	return HtmlTaxonomy.Style | HtmlTaxonomy.Document;  }  case "noscript":  case "script": {  	return HtmlTaxonomy.Script | HtmlTaxonomy.Document;  }  case "base":  case "body":  case "frame":  case "frameset":  case "head":  case "html":  case "iframe":  case "meta":  case "noframes":  case "title": {  	return HtmlTaxonomy.Document;  }  }  
Missing Default,JsonFx.Html,HtmlFormatter,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlFormatter.cs,WriteAttribute,The following switch statement is missing a default case: switch (this.EmptyAttributes) {  case EmptyAttributeType.Html: {  	return;  }  case EmptyAttributeType.Xhtml: {  	attrValue = localName;  	break;  }  case EmptyAttributeType.Xml: {  	break;  }  }  
Missing Default,JsonFx.Html,HtmlTokenizer,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Html\HtmlTokenizer.cs,DecodeEntityName,The following switch statement is missing a default case: switch (name [0]) {  case 'A':  	if (name.Equals ("AElig")) {  		return 198;  	}  	if (name.Equals ("Aacute")) {  		return 193;  	}  	if (name.Equals ("Acirc")) {  		return 194;  	}  	if (name.Equals ("Agrave")) {  		return 192;  	}  	if (name.Equals ("Alpha")) {  		return 913;  	}  	if (name.Equals ("Aring")) {  		return 197;  	}  	if (name.Equals ("Atilde")) {  		return 195;  	}  	if (name.Equals ("Auml")) {  		return 196;  	}  	break;  case 'B':  	if (name.Equals ("Beta")) {  		return 914;  	}  	break;  case 'C':  	if (name.Equals ("Ccedil")) {  		return 199;  	}  	if (name.Equals ("Chi")) {  		return 935;  	}  	break;  case 'D':  	if (name.Equals ("Dagger")) {  		return 8225;  	}  	if (name.Equals ("Delta")) {  		return 916;  	}  	break;  case 'E':  	if (name.Equals ("ETH")) {  		return 208;  	}  	if (name.Equals ("Eacute")) {  		return 201;  	}  	if (name.Equals ("Ecirc")) {  		return 202;  	}  	if (name.Equals ("Egrave")) {  		return 200;  	}  	if (name.Equals ("Epsilon")) {  		return 917;  	}  	if (name.Equals ("Eta")) {  		return 919;  	}  	if (name.Equals ("Euml")) {  		return 203;  	}  	break;  case 'G':  	if (name.Equals ("Gamma")) {  		return 915;  	}  	break;  case 'I':  	if (name.Equals ("Iacute")) {  		return 205;  	}  	if (name.Equals ("Icirc")) {  		return 206;  	}  	if (name.Equals ("Igrave")) {  		return 204;  	}  	if (name.Equals ("Iota")) {  		return 921;  	}  	if (name.Equals ("Iuml")) {  		return 207;  	}  	break;  case 'K':  	if (name.Equals ("Kappa")) {  		return 922;  	}  	break;  case 'L':  	if (name.Equals ("Lambda")) {  		return 923;  	}  	break;  case 'M':  	if (name.Equals ("Mu")) {  		return 924;  	}  	break;  case 'N':  	if (name.Equals ("Ntilde")) {  		return 209;  	}  	if (name.Equals ("Nu")) {  		return 925;  	}  	break;  case 'O':  	if (name.Equals ("OElig")) {  		return 338;  	}  	if (name.Equals ("Oacute")) {  		return 211;  	}  	if (name.Equals ("Ocirc")) {  		return 212;  	}  	if (name.Equals ("Ograve")) {  		return 210;  	}  	if (name.Equals ("Omega")) {  		return 937;  	}  	if (name.Equals ("Omicron")) {  		return 927;  	}  	if (name.Equals ("Oslash")) {  		return 216;  	}  	if (name.Equals ("Otilde")) {  		return 213;  	}  	if (name.Equals ("Ouml")) {  		return 214;  	}  	break;  case 'P':  	if (name.Equals ("Phi")) {  		return 934;  	}  	if (name.Equals ("Pi")) {  		return 928;  	}  	if (name.Equals ("Prime")) {  		return 8243;  	}  	if (name.Equals ("Psi")) {  		return 936;  	}  	break;  case 'R':  	if (name.Equals ("Rho")) {  		return 929;  	}  	break;  case 'S':  	if (name.Equals ("Scaron")) {  		return 352;  	}  	if (name.Equals ("Sigma")) {  		return 931;  	}  	break;  case 'T':  	if (name.Equals ("THORN")) {  		return 222;  	}  	if (name.Equals ("Tau")) {  		return 932;  	}  	if (name.Equals ("Theta")) {  		return 920;  	}  	break;  case 'U':  	if (name.Equals ("Uacute")) {  		return 218;  	}  	if (name.Equals ("Ucirc")) {  		return 219;  	}  	if (name.Equals ("Ugrave")) {  		return 217;  	}  	if (name.Equals ("Upsilon")) {  		return 933;  	}  	if (name.Equals ("Uuml")) {  		return 220;  	}  	break;  case 'X':  	if (name.Equals ("Xi")) {  		return 926;  	}  	break;  case 'Y':  	if (name.Equals ("Yacute")) {  		return 221;  	}  	if (name.Equals ("Yuml")) {  		return 376;  	}  	break;  case 'Z':  	if (name.Equals ("Zeta")) {  		return 918;  	}  	break;  case 'a':  	if (name.Equals ("aacute")) {  		return 225;  	}  	if (name.Equals ("acirc")) {  		return 226;  	}  	if (name.Equals ("acute")) {  		return 180;  	}  	if (name.Equals ("aelig")) {  		return 230;  	}  	if (name.Equals ("agrave")) {  		return 224;  	}  	if (name.Equals ("alefsym")) {  		return 8501;  	}  	if (name.Equals ("alpha")) {  		return 945;  	}  	if (name.Equals ("amp")) {  		return 38;  	}  	if (name.Equals ("and")) {  		return 8743;  	}  	if (name.Equals ("ang")) {  		return 8736;  	}  	if (name.Equals ("apos")) {  		return 39;  	}  	if (name.Equals ("aring")) {  		return 229;  	}  	if (name.Equals ("asymp")) {  		return 8776;  	}  	if (name.Equals ("atilde")) {  		return 227;  	}  	if (name.Equals ("auml")) {  		return 228;  	}  	break;  case 'b':  	if (name.Equals ("bdquo")) {  		return 8222;  	}  	if (name.Equals ("beta")) {  		return 946;  	}  	if (name.Equals ("brvbar")) {  		return 166;  	}  	if (name.Equals ("bull")) {  		return 8226;  	}  	break;  case 'c':  	if (name.Equals ("cap")) {  		return 8745;  	}  	if (name.Equals ("ccedil")) {  		return 231;  	}  	if (name.Equals ("cedil")) {  		return 184;  	}  	if (name.Equals ("cent")) {  		return 162;  	}  	if (name.Equals ("chi")) {  		return 967;  	}  	if (name.Equals ("circ")) {  		return 710;  	}  	if (name.Equals ("clubs")) {  		return 9827;  	}  	if (name.Equals ("cong")) {  		return 8773;  	}  	if (name.Equals ("copy")) {  		return 169;  	}  	if (name.Equals ("crarr")) {  		return 8629;  	}  	if (name.Equals ("cup")) {  		return 8746;  	}  	if (name.Equals ("curren")) {  		return 164;  	}  	break;  case 'd':  	if (name.Equals ("dArr")) {  		return 8659;  	}  	if (name.Equals ("dagger")) {  		return 8224;  	}  	if (name.Equals ("darr")) {  		return 8495;  	}  	if (name.Equals ("deg")) {  		return 176;  	}  	if (name.Equals ("delta")) {  		return 948;  	}  	if (name.Equals ("diams")) {  		return 9830;  	}  	if (name.Equals ("divide")) {  		return 247;  	}  	break;  case 'e':  	if (name.Equals ("eacute")) {  		return 233;  	}  	if (name.Equals ("ecirc")) {  		return 234;  	}  	if (name.Equals ("egrave")) {  		return 232;  	}  	if (name.Equals ("empty")) {  		return 8709;  	}  	if (name.Equals ("emsp")) {  		return 8195;  	}  	if (name.Equals ("ensp")) {  		return 8194;  	}  	if (name.Equals ("epsilon")) {  		return 949;  	}  	if (name.Equals ("equiv")) {  		return 8801;  	}  	if (name.Equals ("eta")) {  		return 951;  	}  	if (name.Equals ("eth")) {  		return 240;  	}  	if (name.Equals ("euml")) {  		return 235;  	}  	if (name.Equals ("euro")) {  		return 8364;  	}  	if (name.Equals ("exist")) {  		return 8707;  	}  	break;  case 'f':  	if (name.Equals ("fnof")) {  		return 402;  	}  	if (name.Equals ("forall")) {  		return 8704;  	}  	if (name.Equals ("frac12")) {  		return 189;  	}  	if (name.Equals ("frac14")) {  		return 188;  	}  	if (name.Equals ("frac34")) {  		return 190;  	}  	if (name.Equals ("frasl")) {  		return 8260;  	}  	break;  case 'g':  	if (name.Equals ("gamma")) {  		return 947;  	}  	if (name.Equals ("ge")) {  		return 8805;  	}  	if (name.Equals ("gt")) {  		return 62;  	}  	break;  case 'h':  	if (name.Equals ("hArr")) {  		return 8660;  	}  	if (name.Equals ("harr")) {  		return 8596;  	}  	if (name.Equals ("hearts")) {  		return 9829;  	}  	if (name.Equals ("hellip")) {  		return 8230;  	}  	break;  case 'i':  	if (name.Equals ("iacute")) {  		return 237;  	}  	if (name.Equals ("icirc")) {  		return 238;  	}  	if (name.Equals ("iexcl")) {  		return 161;  	}  	if (name.Equals ("igrave")) {  		return 236;  	}  	if (name.Equals ("image")) {  		return 8465;  	}  	if (name.Equals ("infin")) {  		return 8734;  	}  	if (name.Equals ("int")) {  		return 8747;  	}  	if (name.Equals ("iota")) {  		return 953;  	}  	if (name.Equals ("iquest")) {  		return 191;  	}  	if (name.Equals ("isin")) {  		return 8712;  	}  	if (name.Equals ("iuml")) {  		return 239;  	}  	break;  case 'k':  	if (name.Equals ("kappa")) {  		return 954;  	}  	break;  case 'l':  	if (name.Equals ("lArr")) {  		return 8656;  	}  	if (name.Equals ("lambda")) {  		return 955;  	}  	if (name.Equals ("lang")) {  		return 9001;  	}  	if (name.Equals ("laquo")) {  		return 171;  	}  	if (name.Equals ("larr")) {  		return 8592;  	}  	if (name.Equals ("lceil")) {  		return 8968;  	}  	if (name.Equals ("ldquo")) {  		return 8220;  	}  	if (name.Equals ("le")) {  		return 8804;  	}  	if (name.Equals ("lfloor")) {  		return 8970;  	}  	if (name.Equals ("lowast")) {  		return 8727;  	}  	if (name.Equals ("loz")) {  		return 9674;  	}  	if (name.Equals ("lrm")) {  		return 8206;  	}  	if (name.Equals ("lsaquo")) {  		return 8249;  	}  	if (name.Equals ("lsquo")) {  		return 8216;  	}  	if (name.Equals ("lt")) {  		return 60;  	}  	break;  case 'm':  	if (name.Equals ("macr")) {  		return 175;  	}  	if (name.Equals ("mdash")) {  		return 8212;  	}  	if (name.Equals ("micro")) {  		return 181;  	}  	if (name.Equals ("middot")) {  		return 183;  	}  	if (name.Equals ("minus")) {  		return 8722;  	}  	if (name.Equals ("mu")) {  		return 956;  	}  	break;  case 'n':  	if (name.Equals ("nabla")) {  		return 8711;  	}  	if (name.Equals ("nbsp")) {  		return 160;  	}  	if (name.Equals ("ndash")) {  		return 8211;  	}  	if (name.Equals ("ne")) {  		return 8800;  	}  	if (name.Equals ("ni")) {  		return 8715;  	}  	if (name.Equals ("not")) {  		return 172;  	}  	if (name.Equals ("notin")) {  		return 8713;  	}  	if (name.Equals ("nsub")) {  		return 8836;  	}  	if (name.Equals ("ntilde")) {  		return 241;  	}  	if (name.Equals ("nu")) {  		return 957;  	}  	break;  case 'o':  	if (name.Equals ("oacute")) {  		return 243;  	}  	if (name.Equals ("ocirc")) {  		return 244;  	}  	if (name.Equals ("oelig")) {  		return 339;  	}  	if (name.Equals ("ograve")) {  		return 242;  	}  	if (name.Equals ("oline")) {  		return 8254;  	}  	if (name.Equals ("omega")) {  		return 969;  	}  	if (name.Equals ("omicron")) {  		return 959;  	}  	if (name.Equals ("oplus")) {  		return 8853;  	}  	if (name.Equals ("or")) {  		return 8744;  	}  	if (name.Equals ("ordf")) {  		return 170;  	}  	if (name.Equals ("ordm")) {  		return 186;  	}  	if (name.Equals ("oslash")) {  		return 248;  	}  	if (name.Equals ("otilde")) {  		return 245;  	}  	if (name.Equals ("otimes")) {  		return 8855;  	}  	if (name.Equals ("ouml")) {  		return 246;  	}  	break;  case 'p':  	if (name.Equals ("para")) {  		return 182;  	}  	if (name.Equals ("part")) {  		return 8706;  	}  	if (name.Equals ("permil")) {  		return 8240;  	}  	if (name.Equals ("perp")) {  		return 8869;  	}  	if (name.Equals ("phi")) {  		return 966;  	}  	if (name.Equals ("pi")) {  		return 960;  	}  	if (name.Equals ("piv")) {  		return 982;  	}  	if (name.Equals ("plusmn")) {  		return 177;  	}  	if (name.Equals ("pound")) {  		return 163;  	}  	if (name.Equals ("prime")) {  		return 8242;  	}  	if (name.Equals ("prod")) {  		return 8719;  	}  	if (name.Equals ("prop")) {  		return 8733;  	}  	if (name.Equals ("psi")) {  		return 968;  	}  	break;  case 'q':  	if (name.Equals ("quot")) {  		return 34;  	}  	break;  case 'r':  	if (name.Equals ("rArr")) {  		return 8658;  	}  	if (name.Equals ("radic")) {  		return 8730;  	}  	if (name.Equals ("rang")) {  		return 9002;  	}  	if (name.Equals ("raquo")) {  		return 187;  	}  	if (name.Equals ("rarr")) {  		return 8594;  	}  	if (name.Equals ("rceil")) {  		return 8969;  	}  	if (name.Equals ("rdquo")) {  		return 8221;  	}  	if (name.Equals ("real")) {  		return 8476;  	}  	if (name.Equals ("reg")) {  		return 174;  	}  	if (name.Equals ("rfloor")) {  		return 8971;  	}  	if (name.Equals ("rho")) {  		return 961;  	}  	if (name.Equals ("rlm")) {  		return 8207;  	}  	if (name.Equals ("rsaquo")) {  		return 8250;  	}  	if (name.Equals ("rsquo")) {  		return 8217;  	}  	break;  case 's':  	if (name.Equals ("sbquo")) {  		return 8218;  	}  	if (name.Equals ("scaron")) {  		return 353;  	}  	if (name.Equals ("sdot")) {  		return 8901;  	}  	if (name.Equals ("sect")) {  		return 167;  	}  	if (name.Equals ("shy")) {  		return 173;  	}  	if (name.Equals ("sigma")) {  		return 963;  	}  	if (name.Equals ("sigmaf")) {  		return 962;  	}  	if (name.Equals ("sim")) {  		return 8764;  	}  	if (name.Equals ("spades")) {  		return 9824;  	}  	if (name.Equals ("sub")) {  		return 8834;  	}  	if (name.Equals ("sube")) {  		return 8838;  	}  	if (name.Equals ("sum")) {  		return 8721;  	}  	if (name.Equals ("sup")) {  		return 8835;  	}  	if (name.Equals ("sup1")) {  		return 185;  	}  	if (name.Equals ("sup2")) {  		return 178;  	}  	if (name.Equals ("sup3")) {  		return 179;  	}  	if (name.Equals ("supe")) {  		return 8839;  	}  	if (name.Equals ("szlig")) {  		return 223;  	}  	break;  case 't':  	if (name.Equals ("tau")) {  		return 964;  	}  	if (name.Equals ("there4")) {  		return 8756;  	}  	if (name.Equals ("theta")) {  		return 952;  	}  	if (name.Equals ("thetasym")) {  		return 977;  	}  	if (name.Equals ("thinsp")) {  		return 8201;  	}  	if (name.Equals ("thorn")) {  		return 254;  	}  	if (name.Equals ("tilde")) {  		return 732;  	}  	if (name.Equals ("times")) {  		return 215;  	}  	if (name.Equals ("trade")) {  		return 8482;  	}  	break;  case 'u':  	if (name.Equals ("uArr")) {  		return 8657;  	}  	if (name.Equals ("uacute")) {  		return 250;  	}  	if (name.Equals ("uarr")) {  		return 8593;  	}  	if (name.Equals ("ucirc")) {  		return 251;  	}  	if (name.Equals ("ugrave")) {  		return 249;  	}  	if (name.Equals ("uml")) {  		return 168;  	}  	if (name.Equals ("upsih")) {  		return 978;  	}  	if (name.Equals ("upsilon")) {  		return 965;  	}  	if (name.Equals ("uuml")) {  		return 252;  	}  	break;  case 'w':  	if (name.Equals ("weierp")) {  		return 8472;  	}  	break;  case 'x':  	if (name.Equals ("xi")) {  		return 958;  	}  	break;  case 'y':  	if (name.Equals ("yacute")) {  		return 253;  	}  	if (name.Equals ("yen")) {  		return 165;  	}  	if (name.Equals ("yuml")) {  		return 255;  	}  	break;  case 'z':  	if (name.Equals ("zeta")) {  		return 950;  	}  	if (name.Equals ("zwj")) {  		return 8205;  	}  	if (name.Equals ("zwnj")) {  		return 8204;  	}  	break;  }  
Missing Default,JsonFx.Serialization,DataName,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\DataName.cs,GetTypeName,The following switch statement is missing a default case: switch (Type.GetTypeCode (type)) {  case TypeCode.DBNull:  case TypeCode.Empty: {  	return "object";  }  case TypeCode.Boolean: {  	return "boolean";  }  case TypeCode.Byte: {  	return "unsignedByte";  }  case TypeCode.Char: {  	return "Char";  }  case TypeCode.Decimal: {  	return "decimal";  }  case TypeCode.Double: {  	return "double";  }  case TypeCode.Int16: {  	return "short";  }  case TypeCode.Int32: {  	return "int";  }  case TypeCode.Int64: {  	return "long";  }  case TypeCode.SByte: {  	return "byte";  }  case TypeCode.Single: {  	return "float";  }  case TypeCode.UInt16: {  	return "unsignedShort";  }  case TypeCode.UInt32: {  	return "unsignedInt";  }  case TypeCode.UInt64: {  	return "unsignedLong";  }  case TypeCode.String: {  	return "string";  }  case TypeCode.DateTime: {  	return "dateTime";  }  case TypeCode.Object: {  	break;  }  }  
Missing Default,JsonFx.Serialization,Token,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Token`1.cs,ToString,The following switch statement is missing a default case: switch (Type.GetTypeCode (type)) {  case TypeCode.Boolean: {  	return true.Equals (value) ? "true" : "false";  }  case TypeCode.Byte: {  	return ((byte)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.Char: {  	return Char.ToString ((char)value);  }  case TypeCode.DateTime: {  	// default unhandled dates to ISO-8601 with full precision  	return ((DateTime)value).ToString (Token<T>.FullDateTimeFormat);  }  case TypeCode.DBNull:  case TypeCode.Empty: {  	return String.Empty;  }  case TypeCode.Decimal: {  	return ((decimal)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.Double: {  	return ((double)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.Int16: {  	return ((short)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.Int32: {  	return ((int)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.Int64: {  	return ((long)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.SByte: {  	return ((sbyte)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.Single: {  	return ((float)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.String: {  	return (string)value;  }  case TypeCode.UInt16: {  	return ((ushort)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.UInt32: {  	return ((uint)value).ToString ("g"' CultureInfo.InvariantCulture);  }  case TypeCode.UInt64: {  	return ((ulong)value).ToString ("g"' CultureInfo.InvariantCulture);  }  }  
Missing Default,JsonFx.Serialization.Resolvers,ConventionResolverStrategy,F:\newReposMay17\jsonfx_jsonfx\src\JsonFx\Serialization\Resolvers\ConventionResolverStrategy.cs,GetName,The following switch statement is missing a default case: switch (this.Casing) {  case WordCasing.PascalCase: {  	string word = words [i];  	if (word.Length <= 1) {  		#if SILVERLIGHT && (NET20 || NET30 || NET35)  										words[i] = word.ToUpper(); #else  		words [i] = word.ToUpperInvariant ();  		#endif  	} else {  		#if SILVERLIGHT && (NET20 || NET30 || NET35)  										words[i] = Char.ToUpper(word[0])+word.Substring(1).ToLower(); #else  		words [i] = Char.ToUpperInvariant (word [0]) + word.Substring (1).ToLowerInvariant ();  		#endif  	}  	break;  }  case WordCasing.CamelCase: {  	string word = words [i];  	if (i == 0) {  		#if SILVERLIGHT && (NET20 || NET30 || NET35)  										words[i] = word.ToLower(); #else  		words [i] = word.ToLowerInvariant ();  		#endif  	} else if (word.Length <= 1) {  		#if SILVERLIGHT && (NET20 || NET30 || NET35)  										words[i] = word.ToUpper(); #else  		words [i] = word.ToUpperInvariant ();  		#endif  	} else {  		#if SILVERLIGHT && (NET20 || NET30 || NET35)  										words[i] = Char.ToUpper(word[0])+word.Substring(1).ToLower(); #else  		words [i] = Char.ToUpperInvariant (word [0]) + word.Substring (1).ToLowerInvariant ();  		#endif  	}  	break;  }  case WordCasing.Lowercase: {  	#if SILVERLIGHT && (NET20 || NET30 || NET35)  								words[i] = words[i].ToLower(); #else  	words [i] = words [i].ToLowerInvariant ();  	#endif  	break;  }  case WordCasing.Uppercase: {  	#if SILVERLIGHT && (NET20 || NET30 || NET35)  								words[i] = words[i].ToUpper(); #else  	words [i] = words [i].ToUpperInvariant ();  	#endif  	break;  }  }  
