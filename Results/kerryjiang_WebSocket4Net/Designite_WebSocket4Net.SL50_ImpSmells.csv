Implementation smell,Namespace,Class,File,Method,Description
Long Method,WebSocket4Net.Protocol,HandshakeReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\HandshakeReader.cs,GetCommandInfo,The method has 114 lines of code.
Complex Method,WebSocket4Net,Extensions,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Extensions.cs,ParseMimeHeader,Cyclomatic complexity of the method is 9
Complex Method,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,Cyclomatic complexity of the method is 13
Complex Method,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,Cyclomatic complexity of the method is 8
Complex Method,WebSocket4Net.Common,ArraySegmentList,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Common\ArraySegmentList.cs,GetElementInternalIndex,Cyclomatic complexity of the method is 10
Complex Method,WebSocket4Net.Common,ArraySegmentList,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Common\ArraySegmentList.cs,QuickSearchSegment,Cyclomatic complexity of the method is 8
Complex Method,WebSocket4Net.Protocol,DraftHybi00DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00DataReader.cs,GetCommandInfo,Cyclomatic complexity of the method is 12
Complex Method,WebSocket4Net.Protocol,DraftHybi10DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10DataReader.cs,GetCommandInfo,Cyclomatic complexity of the method is 8
Long Parameter List,WebSocket4Net,JsonWebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\JsonWebSocket.cs,JsonWebSocket,The method has 6 parameters.
Long Parameter List,WebSocket4Net,JsonWebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\JsonWebSocket.cs,JsonWebSocket,The method has 7 parameters.
Long Parameter List,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,Initialize,The method has 9 parameters.
Long Parameter List,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,WebSocket,The method has 9 parameters.
Long Parameter List,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,WebSocket,The method has 9 parameters.
Long Parameter List,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The method has 5 parameters.
Long Parameter List,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,r1,The method has 7 parameters.
Long Parameter List,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,r2,The method has 7 parameters.
Long Parameter List,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,r3,The method has 7 parameters.
Long Parameter List,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,r4,The method has 7 parameters.
Long Parameter List,WebSocket4Net.Protocol,DraftHybi10DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10DataReader.cs,AddArraySegment,The method has 5 parameters.
Long Parameter List,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The method has 5 parameters.
Long Parameter List,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,SendDataFragment,The method has 5 parameters.
Long Parameter List,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,MaskData,The method has 7 parameters.
Long Statement,WebSocket4Net,Extensions,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Extensions.cs,IsSimpleType,The length of the statement  "	return type.IsValueType || type.IsPrimitive || m_SimpleTypes.Contains (type) || Convert.GetTypeCode (type) != TypeCode.Object; " is 126.
Long Statement,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The length of the statement  "		m_WebSocketTimer = new Timer (OnPingTimerCallback' ProtocolProcessor' AutoSendPingInterval * 1000' AutoSendPingInterval * 1000); " is 128.
Long Statement,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnClosed,The length of the statement  "	if (m_StateCode == WebSocketStateConst.Closing || m_StateCode == WebSocketStateConst.Open || m_StateCode == WebSocketStateConst.Connecting) " is 139.
Long Statement,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,Close,The length of the statement  "	if (Interlocked.CompareExchange (ref m_StateCode' WebSocketStateConst.Closed' WebSocketStateConst.None) == WebSocketStateConst.None) { " is 134.
Long Statement,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,Close,The length of the statement  "	if (Interlocked.CompareExchange (ref m_StateCode' WebSocketStateConst.Closing' WebSocketStateConst.Connecting) == WebSocketStateConst.Connecting) { " is 147.
Long Statement,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHash,The length of the statement  "		throw new System.ArgumentNullException ("encoding"' "Unable to calculate hash over a string without a default encoding. Consider using the GetHash(string) overload to use UTF8 Encoding"); " is 187.
Long Statement,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashString,The length of the statement  "		throw new System.ArgumentNullException ("encoding"' "Unable to calculate hash over a string without a default encoding. Consider using the GetHashString(string) overload to use UTF8 Encoding"); " is 193.
Long Statement,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The length of the statement  "	//Padding is a single bit 1' followed by the number of 0s required to make size congruent to 448 modulo 512. Step 1 of RFC 1321   " is 127.
Long Statement,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The length of the statement  "	//The CLR ensures that our buffer is 0-assigned' we don't need to explicitly set it. This is why it ends up being quicker to just " is 129.
Long Statement,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The length of the statement  "		//Create an entirely new chunk due to the 0-assigned trick mentioned above' to avoid an extra function call clearing the array " is 126.
Long Statement,WebSocket4Net.Command,BadRequest,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Command\BadRequest.cs,ExecuteCommand,The length of the statement  "			session.FireError (new Exception (string.Format ("the server(version: {0}) doesn't support the websocket protocol version your client was using"' websocketVersion))); " is 166.
Long Statement,WebSocket4Net.Common,ArraySegmentList,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Common\ArraySegmentList.cs,Decode,The length of the statement  "		decoder.Convert (segment.Array' decodeOffset' toBeDecoded' charsBuffer' totalChars' charsBuffer.Length - totalChars' flush' out bytesUsed' out charsUsed' out completed); " is 169.
Long Statement,WebSocket4Net.Protocol,DraftHybi00DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00DataReader.cs,GetCommandInfo,The length of the statement  "					var commandInfo = new WebSocketCommandInfo (OpCode.Text.ToString ()' Encoding.UTF8.GetString (readBuffer' offset + skipByteCount' i - offset - skipByteCount)); " is 159.
Long Statement,WebSocket4Net.Protocol,DraftHybi00DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00DataReader.cs,GetCommandInfo,The length of the statement  "				var commandInfo = new WebSocketCommandInfo (OpCode.Text.ToString ()' Encoding.UTF8.GetString (readBuffer' offset + skipByteCount' requiredSize)); " is 145.
Long Statement,WebSocket4Net.Protocol,DraftHybi00Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00Processor.cs,SendHandshake,The length of the statement  "	handshakeBuilder.AppendWithCrCf (string.IsNullOrEmpty (websocket.Origin) ? websocket.TargetUri.Host : websocket.Origin); " is 120.
Long Statement,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The length of the statement  "		MaskData (playloadData' offset' length' fragment' fragment.Length - length' fragment' fragment.Length - maskLength - length); " is 125.
Long Statement,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,SendData,The length of the statement  "		fragments.Add (new ArraySegment<byte> (EncodeDataFrame (i == 0 ? OpCode.Binary : 0' i == lastPieceIndex' playloadData.Array' playloadData.Offset' playloadData.Count))); " is 168.
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,CreateClient,The following statement contains a magic number: if (port == 80)  	HandshakeHost = TargetUri.Host;  else  	HandshakeHost = TargetUri.Host + ":" + port;  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The following statement contains a magic number: if (EnableAutoSendPing && ProtocolProcessor.SupportPingPong) {  	//Ping auto sending interval's default value is 60 seconds  	if (AutoSendPingInterval <= 0)  		AutoSendPingInterval = 60;  	m_WebSocketTimer = new Timer (OnPingTimerCallback' ProtocolProcessor' AutoSendPingInterval * 1000' AutoSendPingInterval * 1000);  }  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The following statement contains a magic number: if (EnableAutoSendPing && ProtocolProcessor.SupportPingPong) {  	//Ping auto sending interval's default value is 60 seconds  	if (AutoSendPingInterval <= 0)  		AutoSendPingInterval = 60;  	m_WebSocketTimer = new Timer (OnPingTimerCallback' ProtocolProcessor' AutoSendPingInterval * 1000' AutoSendPingInterval * 1000);  }  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The following statement contains a magic number: if (EnableAutoSendPing && ProtocolProcessor.SupportPingPong) {  	//Ping auto sending interval's default value is 60 seconds  	if (AutoSendPingInterval <= 0)  		AutoSendPingInterval = 60;  	m_WebSocketTimer = new Timer (OnPingTimerCallback' ProtocolProcessor' AutoSendPingInterval * 1000' AutoSendPingInterval * 1000);  }  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The following statement contains a magic number: if (AutoSendPingInterval <= 0)  	AutoSendPingInterval = 60;  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The following statement contains a magic number: AutoSendPingInterval = 60;  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The following statement contains a magic number: m_WebSocketTimer = new Timer (OnPingTimerCallback' ProtocolProcessor' AutoSendPingInterval * 1000' AutoSendPingInterval * 1000);  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,OnHandshaked,The following statement contains a magic number: m_WebSocketTimer = new Timer (OnPingTimerCallback' ProtocolProcessor' AutoSendPingInterval * 1000' AutoSendPingInterval * 1000);  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,Close,The following statement contains a magic number: m_WebSocketTimer = new Timer (CheckCloseHandshake' null' 5 * 1000' Timeout.Infinite);  
Magic Number,WebSocket4Net,WebSocket,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocket.cs,Close,The following statement contains a magic number: m_WebSocketTimer = new Timer (CheckCloseHandshake' null' 5 * 1000' Timeout.Infinite);  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (opCode == OpCode.Close) {  	var firstFrame = frames [0];  	length = (int)firstFrame.ActualPayloadLength;  	offset = firstFrame.InnerData.Count - length;  	var stringBuilder = new StringBuilder ();  	if (length >= 2) {  		offset = firstFrame.InnerData.Count - length;  		var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  		}  	} else if (length > 0) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  	}  	if (frames.Count > 1) {  		for (var i = 1; i < frames.Count; i++) {  			var frame = frames [i];  			offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  			length = (int)frame.ActualPayloadLength;  			if (frame.HasMask) {  				frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  			}  			stringBuilder.Append (frame.InnerData.Decode (Encoding.UTF8' offset' length));  		}  	}  	Text = stringBuilder.ToString ();  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (opCode == OpCode.Close) {  	var firstFrame = frames [0];  	length = (int)firstFrame.ActualPayloadLength;  	offset = firstFrame.InnerData.Count - length;  	var stringBuilder = new StringBuilder ();  	if (length >= 2) {  		offset = firstFrame.InnerData.Count - length;  		var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  		}  	} else if (length > 0) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  	}  	if (frames.Count > 1) {  		for (var i = 1; i < frames.Count; i++) {  			var frame = frames [i];  			offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  			length = (int)frame.ActualPayloadLength;  			if (frame.HasMask) {  				frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  			}  			stringBuilder.Append (frame.InnerData.Decode (Encoding.UTF8' offset' length));  		}  	}  	Text = stringBuilder.ToString ();  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (opCode == OpCode.Close) {  	var firstFrame = frames [0];  	length = (int)firstFrame.ActualPayloadLength;  	offset = firstFrame.InnerData.Count - length;  	var stringBuilder = new StringBuilder ();  	if (length >= 2) {  		offset = firstFrame.InnerData.Count - length;  		var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  		}  	} else if (length > 0) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  	}  	if (frames.Count > 1) {  		for (var i = 1; i < frames.Count; i++) {  			var frame = frames [i];  			offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  			length = (int)frame.ActualPayloadLength;  			if (frame.HasMask) {  				frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  			}  			stringBuilder.Append (frame.InnerData.Decode (Encoding.UTF8' offset' length));  		}  	}  	Text = stringBuilder.ToString ();  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (opCode == OpCode.Close) {  	var firstFrame = frames [0];  	length = (int)firstFrame.ActualPayloadLength;  	offset = firstFrame.InnerData.Count - length;  	var stringBuilder = new StringBuilder ();  	if (length >= 2) {  		offset = firstFrame.InnerData.Count - length;  		var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  		}  	} else if (length > 0) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  	}  	if (frames.Count > 1) {  		for (var i = 1; i < frames.Count; i++) {  			var frame = frames [i];  			offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  			length = (int)frame.ActualPayloadLength;  			if (frame.HasMask) {  				frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  			}  			stringBuilder.Append (frame.InnerData.Decode (Encoding.UTF8' offset' length));  		}  	}  	Text = stringBuilder.ToString ();  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (opCode == OpCode.Close) {  	var firstFrame = frames [0];  	length = (int)firstFrame.ActualPayloadLength;  	offset = firstFrame.InnerData.Count - length;  	var stringBuilder = new StringBuilder ();  	if (length >= 2) {  		offset = firstFrame.InnerData.Count - length;  		var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  		}  	} else if (length > 0) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  	}  	if (frames.Count > 1) {  		for (var i = 1; i < frames.Count; i++) {  			var frame = frames [i];  			offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  			length = (int)frame.ActualPayloadLength;  			if (frame.HasMask) {  				frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  			}  			stringBuilder.Append (frame.InnerData.Decode (Encoding.UTF8' offset' length));  		}  	}  	Text = stringBuilder.ToString ();  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (opCode == OpCode.Close) {  	var firstFrame = frames [0];  	length = (int)firstFrame.ActualPayloadLength;  	offset = firstFrame.InnerData.Count - length;  	var stringBuilder = new StringBuilder ();  	if (length >= 2) {  		offset = firstFrame.InnerData.Count - length;  		var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  		}  	} else if (length > 0) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  	}  	if (frames.Count > 1) {  		for (var i = 1; i < frames.Count; i++) {  			var frame = frames [i];  			offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  			length = (int)frame.ActualPayloadLength;  			if (frame.HasMask) {  				frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  			}  			stringBuilder.Append (frame.InnerData.Decode (Encoding.UTF8' offset' length));  		}  	}  	Text = stringBuilder.ToString ();  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	offset = firstFrame.InnerData.Count - length;  	var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  	}  } else if (length > 0) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	offset = firstFrame.InnerData.Count - length;  	var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  	}  } else if (length > 0) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	offset = firstFrame.InnerData.Count - length;  	var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  	}  } else if (length > 0) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	offset = firstFrame.InnerData.Count - length;  	var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  	}  } else if (length > 0) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	offset = firstFrame.InnerData.Count - length;  	var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  	}  } else if (length > 0) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	offset = firstFrame.InnerData.Count - length;  	var closeStatusCode = firstFrame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  	}  } else if (length > 0) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset' length));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length > 2) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length > 2) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length > 2) {  	stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: stringBuilder.Append (firstFrame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2));  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (opCode != 2) {  	var stringBuilder = new StringBuilder ();  	for (var i = 0; i < frames.Count; i++) {  		var frame = frames [i];  		offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  		length = (int)frame.ActualPayloadLength;  		if (frame.HasMask) {  			frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  		}  		stringBuilder.Append (frame.InnerData.Decode (Encoding.UTF8' offset' length));  	}  	Text = stringBuilder.ToString ();  } else {  	var resultBuffer = new byte[frames.Sum (f => (int)f.ActualPayloadLength)];  	int copied = 0;  	for (var i = 0; i < frames.Count; i++) {  		var frame = frames [i];  		offset = frame.InnerData.Count - (int)frame.ActualPayloadLength;  		length = (int)frame.ActualPayloadLength;  		if (frame.HasMask) {  			frame.InnerData.DecodeMask (frame.MaskKey' offset' length);  		}  		frame.InnerData.CopyTo (resultBuffer' offset' copied' length);  		copied += length;  	}  	Data = resultBuffer;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (frame.OpCode == OpCode.Close) {  	if (length >= 2) {  		var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  		} else {  			Text = string.Empty;  		}  		return;  	}  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (frame.OpCode == OpCode.Close) {  	if (length >= 2) {  		var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  		} else {  			Text = string.Empty;  		}  		return;  	}  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (frame.OpCode == OpCode.Close) {  	if (length >= 2) {  		var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  		} else {  			Text = string.Empty;  		}  		return;  	}  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (frame.OpCode == OpCode.Close) {  	if (length >= 2) {  		var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  		} else {  			Text = string.Empty;  		}  		return;  	}  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (frame.OpCode == OpCode.Close) {  	if (length >= 2) {  		var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  		} else {  			Text = string.Empty;  		}  		return;  	}  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (frame.OpCode == OpCode.Close) {  	if (length >= 2) {  		var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  		CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  		if (length > 2) {  			Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  		} else {  			Text = string.Empty;  		}  		return;  	}  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  	} else {  		Text = string.Empty;  	}  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  	} else {  		Text = string.Empty;  	}  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  	} else {  		Text = string.Empty;  	}  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  	} else {  		Text = string.Empty;  	}  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  	} else {  		Text = string.Empty;  	}  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length >= 2) {  	var closeStatusCode = frame.InnerData.ToArrayData (offset' 2);  	CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  	if (length > 2) {  		Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  	} else {  		Text = string.Empty;  	}  	return;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: CloseStatusCode = (short)(closeStatusCode [0] * 256 + closeStatusCode [1]);  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length > 2) {  	Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  } else {  	Text = string.Empty;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length > 2) {  	Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  } else {  	Text = string.Empty;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (length > 2) {  	Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  } else {  	Text = string.Empty;  }  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: Text = frame.InnerData.Decode (Encoding.UTF8' offset + 2' length - 2);  
Magic Number,WebSocket4Net,WebSocketCommandInfo,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\WebSocketCommandInfo.cs,WebSocketCommandInfo,The following statement contains a magic number: if (frame.OpCode != 2) {  	if (length > 0)  		Text = frame.InnerData.Decode (Encoding.UTF8' offset' length);  	else  		Text = string.Empty;  } else {  	if (length > 0)  		Data = frame.InnerData.ToArrayData (offset' length);  	else  		Data = new byte[0];  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHash,The following statement contains a magic number: while (startIndex <= input.Length - 64) {  	MD5Core.GetHashBlock (input' ref abcd' startIndex);  	startIndex += 64;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHash,The following statement contains a magic number: while (startIndex <= input.Length - 64) {  	MD5Core.GetHashBlock (input' ref abcd' startIndex);  	startIndex += 64;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHash,The following statement contains a magic number: startIndex += 64;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHash,The following statement contains a magic number: return MD5Core.GetHashFinalBlock (input' startIndex' input.Length - startIndex' abcd' (Int64)input.Length * 8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: if (cbSize <= 56) {  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  } else//We need an aditional chunk to store the length   {  	GetHashBlock (working' ref ABCD' 0);  	//Create an entirely new chunk due to the 0-assigned trick mentioned above' to avoid an extra function call clearing the array  	working = new byte[64];  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: if (cbSize <= 56) {  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  } else//We need an aditional chunk to store the length   {  	GetHashBlock (working' ref ABCD' 0);  	//Create an entirely new chunk due to the 0-assigned trick mentioned above' to avoid an extra function call clearing the array  	working = new byte[64];  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: if (cbSize <= 56) {  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  } else//We need an aditional chunk to store the length   {  	GetHashBlock (working' ref ABCD' 0);  	//Create an entirely new chunk due to the 0-assigned trick mentioned above' to avoid an extra function call clearing the array  	working = new byte[64];  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: if (cbSize <= 56) {  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  } else//We need an aditional chunk to store the length   {  	GetHashBlock (working' ref ABCD' 0);  	//Create an entirely new chunk due to the 0-assigned trick mentioned above' to avoid an extra function call clearing the array  	working = new byte[64];  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: if (cbSize <= 56) {  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  } else//We need an aditional chunk to store the length   {  	GetHashBlock (working' ref ABCD' 0);  	//Create an entirely new chunk due to the 0-assigned trick mentioned above' to avoid an extra function call clearing the array  	working = new byte[64];  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: if (cbSize <= 56) {  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  } else//We need an aditional chunk to store the length   {  	GetHashBlock (working' ref ABCD' 0);  	//Create an entirely new chunk due to the 0-assigned trick mentioned above' to avoid an extra function call clearing the array  	working = new byte[64];  	Array.Copy (length' 0' working' 56' 8);  	GetHashBlock (working' ref ABCD' 0);  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (length' 0' working' 56' 8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (length' 0' working' 56' 8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: working = new byte[64];  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (length' 0' working' 56' 8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (length' 0' working' 56' 8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (ABCD.A)' 0' output' 0' 4);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (ABCD.B)' 0' output' 4' 4);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (ABCD.B)' 0' output' 4' 4);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (ABCD.C)' 0' output' 8' 4);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (ABCD.C)' 0' output' 8' 4);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (ABCD.D)' 0' output' 12' 4);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashFinalBlock,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (ABCD.D)' 0' output' 12' 4);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r1 (a' b' c' d' temp [0]' 7' 0xd76aa478);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r1 (d' a' b' c' temp [1]' 12' 0xe8c7b756);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [2]' 17' 0x242070db);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [2]' 17' 0x242070db);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [3]' 22' 0xc1bdceee);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [3]' 22' 0xc1bdceee);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r1 (a' b' c' d' temp [4]' 7' 0xf57c0faf);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r1 (a' b' c' d' temp [4]' 7' 0xf57c0faf);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r1 (d' a' b' c' temp [5]' 12' 0x4787c62a);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r1 (d' a' b' c' temp [5]' 12' 0x4787c62a);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [6]' 17' 0xa8304613);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [6]' 17' 0xa8304613);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [7]' 22' 0xfd469501);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [7]' 22' 0xfd469501);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r1 (a' b' c' d' temp [8]' 7' 0x698098d8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r1 (a' b' c' d' temp [8]' 7' 0x698098d8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r1 (d' a' b' c' temp [9]' 12' 0x8b44f7af);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r1 (d' a' b' c' temp [9]' 12' 0x8b44f7af);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [10]' 17' 0xffff5bb1);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [10]' 17' 0xffff5bb1);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [11]' 22' 0x895cd7be);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [11]' 22' 0x895cd7be);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r1 (a' b' c' d' temp [12]' 7' 0x6b901122);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r1 (a' b' c' d' temp [12]' 7' 0x6b901122);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r1 (d' a' b' c' temp [13]' 12' 0xfd987193);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r1 (d' a' b' c' temp [13]' 12' 0xfd987193);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [14]' 17' 0xa679438e);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r1 (c' d' a' b' temp [14]' 17' 0xa679438e);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [15]' 22' 0x49b40821);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r1 (b' c' d' a' temp [15]' 22' 0x49b40821);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r2 (a' b' c' d' temp [1]' 5' 0xf61e2562);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [6]' 9' 0xc040b340);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [6]' 9' 0xc040b340);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [11]' 14' 0x265e5a51);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [11]' 14' 0x265e5a51);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r2 (b' c' d' a' temp [0]' 20' 0xe9b6c7aa);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r2 (a' b' c' d' temp [5]' 5' 0xd62f105d);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r2 (a' b' c' d' temp [5]' 5' 0xd62f105d);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [10]' 9' 0x02441453);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [10]' 9' 0x02441453);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [15]' 14' 0xd8a1e681);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [15]' 14' 0xd8a1e681);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r2 (b' c' d' a' temp [4]' 20' 0xe7d3fbc8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r2 (b' c' d' a' temp [4]' 20' 0xe7d3fbc8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r2 (a' b' c' d' temp [9]' 5' 0x21e1cde6);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r2 (a' b' c' d' temp [9]' 5' 0x21e1cde6);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [14]' 9' 0xc33707d6);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [14]' 9' 0xc33707d6);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [3]' 14' 0xf4d50d87);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [3]' 14' 0xf4d50d87);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r2 (b' c' d' a' temp [8]' 20' 0x455a14ed);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r2 (b' c' d' a' temp [8]' 20' 0x455a14ed);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r2 (a' b' c' d' temp [13]' 5' 0xa9e3e905);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r2 (a' b' c' d' temp [13]' 5' 0xa9e3e905);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [2]' 9' 0xfcefa3f8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r2 (d' a' b' c' temp [2]' 9' 0xfcefa3f8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [7]' 14' 0x676f02d9);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r2 (c' d' a' b' temp [7]' 14' 0x676f02d9);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r2 (b' c' d' a' temp [12]' 20' 0x8d2a4c8a);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r2 (b' c' d' a' temp [12]' 20' 0x8d2a4c8a);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r3 (a' b' c' d' temp [5]' 4' 0xfffa3942);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r3 (a' b' c' d' temp [5]' 4' 0xfffa3942);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r3 (d' a' b' c' temp [8]' 11' 0x8771f681);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r3 (d' a' b' c' temp [8]' 11' 0x8771f681);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [11]' 16' 0x6d9d6122);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [11]' 16' 0x6d9d6122);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [14]' 23' 0xfde5380c);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [14]' 23' 0xfde5380c);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r3 (a' b' c' d' temp [1]' 4' 0xa4beea44);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r3 (d' a' b' c' temp [4]' 11' 0x4bdecfa9);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r3 (d' a' b' c' temp [4]' 11' 0x4bdecfa9);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [7]' 16' 0xf6bb4b60);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [7]' 16' 0xf6bb4b60);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [10]' 23' 0xbebfbc70);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [10]' 23' 0xbebfbc70);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r3 (a' b' c' d' temp [13]' 4' 0x289b7ec6);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r3 (a' b' c' d' temp [13]' 4' 0x289b7ec6);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r3 (d' a' b' c' temp [0]' 11' 0xeaa127fa);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [3]' 16' 0xd4ef3085);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [3]' 16' 0xd4ef3085);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [6]' 23' 0x04881d05);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [6]' 23' 0x04881d05);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r3 (a' b' c' d' temp [9]' 4' 0xd9d4d039);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r3 (a' b' c' d' temp [9]' 4' 0xd9d4d039);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r3 (d' a' b' c' temp [12]' 11' 0xe6db99e5);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r3 (d' a' b' c' temp [12]' 11' 0xe6db99e5);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [15]' 16' 0x1fa27cf8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r3 (c' d' a' b' temp [15]' 16' 0x1fa27cf8);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [2]' 23' 0xc4ac5665);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r3 (b' c' d' a' temp [2]' 23' 0xc4ac5665);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r4 (a' b' c' d' temp [0]' 6' 0xf4292244);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [7]' 10' 0x432aff97);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [7]' 10' 0x432aff97);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [14]' 15' 0xab9423a7);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [14]' 15' 0xab9423a7);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r4 (b' c' d' a' temp [5]' 21' 0xfc93a039);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r4 (b' c' d' a' temp [5]' 21' 0xfc93a039);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r4 (a' b' c' d' temp [12]' 6' 0x655b59c3);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r4 (a' b' c' d' temp [12]' 6' 0x655b59c3);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [3]' 10' 0x8f0ccc92);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [3]' 10' 0x8f0ccc92);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [10]' 15' 0xffeff47d);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [10]' 15' 0xffeff47d);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r4 (b' c' d' a' temp [1]' 21' 0x85845dd1);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r4 (a' b' c' d' temp [8]' 6' 0x6fa87e4f);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r4 (a' b' c' d' temp [8]' 6' 0x6fa87e4f);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [15]' 10' 0xfe2ce6e0);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [15]' 10' 0xfe2ce6e0);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [6]' 15' 0xa3014314);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [6]' 15' 0xa3014314);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r4 (b' c' d' a' temp [13]' 21' 0x4e0811a1);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r4 (b' c' d' a' temp [13]' 21' 0x4e0811a1);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r4 (a' b' c' d' temp [4]' 6' 0xf7537e82);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: a = r4 (a' b' c' d' temp [4]' 6' 0xf7537e82);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [11]' 10' 0xbd3af235);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: d = r4 (d' a' b' c' temp [11]' 10' 0xbd3af235);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [2]' 15' 0x2ad7d2bb);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: c = r4 (c' d' a' b' temp [2]' 15' 0x2ad7d2bb);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r4 (b' c' d' a' temp [9]' 21' 0xeb86d391);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,GetHashBlock,The following statement contains a magic number: b = r4 (b' c' d' a' temp [9]' 21' 0xeb86d391);  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,LSR,The following statement contains a magic number: return ((i << s) | (i >> (32 - s)));  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	result [i] = (uint)input [ibStart + i * 4];  	result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  	result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  	result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  }  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] = (uint)input [ibStart + i * 4];  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 1] << 8;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 2] << 16;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  
Magic Number,WebSocket4Net,MD5Core,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5.cs,Converter,The following statement contains a magic number: result [i] += (uint)input [ibStart + i * 4 + 3] << 24;  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,Initialize,The following statement contains a magic number: _data = new byte[64];  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: if (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  	// Process message of 64 bytes (512 bits)  	MD5Core.GetHashBlock (_data' ref _abcd' 0);  	startIndex += 64 - _dataSize;  	totalArrayLength -= 64;  	while (totalArrayLength >= 64) {  		Array.Copy (array' startIndex' _data' 0' 64);  		MD5Core.GetHashBlock (array' ref _abcd' startIndex);  		totalArrayLength -= 64;  		startIndex += 64;  	}  	_dataSize = totalArrayLength;  	Array.Copy (array' startIndex' _data' 0' totalArrayLength);  } else {  	Array.Copy (array' startIndex' _data' _dataSize' cbSize);  	_dataSize = totalArrayLength;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: Array.Copy (array' startIndex' _data' _dataSize' 64 - _dataSize);  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: startIndex += 64 - _dataSize;  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: totalArrayLength -= 64;  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: while (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' 0' 64);  	MD5Core.GetHashBlock (array' ref _abcd' startIndex);  	totalArrayLength -= 64;  	startIndex += 64;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: while (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' 0' 64);  	MD5Core.GetHashBlock (array' ref _abcd' startIndex);  	totalArrayLength -= 64;  	startIndex += 64;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: while (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' 0' 64);  	MD5Core.GetHashBlock (array' ref _abcd' startIndex);  	totalArrayLength -= 64;  	startIndex += 64;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: while (totalArrayLength >= 64) {  	Array.Copy (array' startIndex' _data' 0' 64);  	MD5Core.GetHashBlock (array' ref _abcd' startIndex);  	totalArrayLength -= 64;  	startIndex += 64;  }  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: Array.Copy (array' startIndex' _data' 0' 64);  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: totalArrayLength -= 64;  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashCore,The following statement contains a magic number: startIndex += 64;  
Magic Number,WebSocket4Net,MD5Managed,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\MD5Managed.cs,HashFinal,The following statement contains a magic number: base.HashValue = MD5Core.GetHashFinalBlock (_data' 0' _dataSize' _abcd' _totalLength * 8);  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: NormalClosure = 1000;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: GoingAway = 1001;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: ProtocolError = 1002;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: NotAcceptableData = 1003;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: TooLargeFrame = 1004;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: InvalidUTF8 = 1007;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: ViolatePolicy = 1000;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: ExtensionNotMatch = 1000;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: UnexpectedCondition = 1000;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: TLSHandshakeFailure = 1000;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeHybi10,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: NoStatusCode = 1005;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: NormalClosure = 1000;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: GoingAway = 1001;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: ProtocolError = 1002;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: NotAcceptableData = 1003;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: TooLargeFrame = 1009;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: InvalidUTF8 = 1007;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: ViolatePolicy = 1008;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: ExtensionNotMatch = 1010;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: UnexpectedCondition = 1011;  
Magic Number,WebSocket4Net.Protocol,CloseStatusCodeRfc6455,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: NoStatusCode = 1005;  
Magic Number,WebSocket4Net.Protocol,DraftHybi00DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00DataReader.cs,GetCommandInfo,The following statement contains a magic number: if ((m_Type.Value & 0x80) == 0x00) {  	byte lookForByte = 0xFF;  	int i;  	for (i = offset + skipByteCount; i < offset + length; i++) {  		if (readBuffer [i] == lookForByte) {  			left = length - (i - offset + 1);  			if (BufferSegments.Count <= 0) {  				var commandInfo = new WebSocketCommandInfo (OpCode.Text.ToString ()' Encoding.UTF8.GetString (readBuffer' offset + skipByteCount' i - offset - skipByteCount));  				Reset (false);  				return commandInfo;  			} else {  				this.BufferSegments.AddSegment (readBuffer' offset + skipByteCount' i - offset - skipByteCount' false);  				var commandInfo = new WebSocketCommandInfo (OpCode.Text.ToString ()' BufferSegments.Decode (Encoding.UTF8));  				Reset (true);  				return commandInfo;  			}  		}  	}  	this.AddArraySegment (readBuffer' offset + skipByteCount' length - skipByteCount);  	return null;  } else//10000000: Collect protocol data by length   {  	while (!m_Length.HasValue) {  		if (length <= skipByteCount) {  			//No data to read  			return null;  		}  		byte lengthByte = readBuffer [skipByteCount];  		//Closing handshake  		if (lengthByte == 0x00 && m_Type.Value == m_ClosingHandshakeType) {  			var commandInfo = new WebSocketCommandInfo (OpCode.Close.ToString ());  			Reset (true);  			return commandInfo;  		}  		int thisLength = (int)(lengthByte & 0x7F);  		m_TempLength = m_TempLength * 128 + thisLength;  		skipByteCount++;  		if ((lengthByte & 0x80) != 0x80) {  			m_Length = m_TempLength;  			break;  		}  	}  	int requiredSize = m_Length.Value - BufferSegments.Count;  	int leftSize = length - skipByteCount;  	if (leftSize < requiredSize) {  		this.AddArraySegment (readBuffer' skipByteCount' length - skipByteCount);  		return null;  	} else {  		left = leftSize - requiredSize;  		if (BufferSegments.Count <= 0) {  			var commandInfo = new WebSocketCommandInfo (OpCode.Text.ToString ()' Encoding.UTF8.GetString (readBuffer' offset + skipByteCount' requiredSize));  			Reset (false);  			return commandInfo;  		} else {  			this.BufferSegments.AddSegment (readBuffer' offset + skipByteCount' requiredSize' false);  			var commandInfo = new WebSocketCommandInfo (BufferSegments.Decode (Encoding.UTF8));  			Reset (true);  			return commandInfo;  		}  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi00DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00DataReader.cs,GetCommandInfo,The following statement contains a magic number: while (!m_Length.HasValue) {  	if (length <= skipByteCount) {  		//No data to read  		return null;  	}  	byte lengthByte = readBuffer [skipByteCount];  	//Closing handshake  	if (lengthByte == 0x00 && m_Type.Value == m_ClosingHandshakeType) {  		var commandInfo = new WebSocketCommandInfo (OpCode.Close.ToString ());  		Reset (true);  		return commandInfo;  	}  	int thisLength = (int)(lengthByte & 0x7F);  	m_TempLength = m_TempLength * 128 + thisLength;  	skipByteCount++;  	if ((lengthByte & 0x80) != 0x80) {  		m_Length = m_TempLength;  		break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi00DataReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00DataReader.cs,GetCommandInfo,The following statement contains a magic number: m_TempLength = m_TempLength * 128 + thisLength;  
Magic Number,WebSocket4Net.Protocol,DraftHybi00Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00Processor.cs,DraftHybi00Processor,The following statement contains a magic number: for (int i = 33; i <= 126; i++) {  	char currentChar = (char)i;  	if (char.IsLetter (currentChar))  		m_CharLib.Add (currentChar);  	else if (char.IsDigit (currentChar))  		m_DigLib.Add (currentChar);  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi00Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00Processor.cs,DraftHybi00Processor,The following statement contains a magic number: for (int i = 33; i <= 126; i++) {  	char currentChar = (char)i;  	if (char.IsLetter (currentChar))  		m_CharLib.Add (currentChar);  	else if (char.IsDigit (currentChar))  		m_DigLib.Add (currentChar);  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi00Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi00Processor.cs,SendMessage,The following statement contains a magic number: websocket.Client.Send (sendBuffer' 0' bytesCount + 2);  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + maskLength + length];  	fragment [1] = (byte)length;  } else if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment = new byte[2 + maskLength + length];  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + maskLength + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  } else {  	fragment = new byte[10 + maskLength + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment = new byte[4 + maskLength + length];  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment [1] = (byte)126;  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment [2] = (byte)(length / 256);  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment [2] = (byte)(length / 256);  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment [3] = (byte)(length % 256);  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment [3] = (byte)(length % 256);  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment = new byte[10 + maskLength + length];  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: fragment [1] = (byte)127;  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,EncodeDataFrame,The following statement contains a magic number: for (int i = 9; i > 1; i--) {  	fragment [i] = (byte)(left % unit);  	left = left / unit;  	if (left == 0)  		break;  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,SendCloseHandshake,The following statement contains a magic number: if (!string.IsNullOrEmpty (closeReason)) {  	int bytesCount = Encoding.UTF8.GetBytes (closeReason' 0' closeReason.Length' playloadData' 2);  	SendDataFragment (websocket' OpCode.Close' playloadData' 0' bytesCount + 2);  } else {  	SendDataFragment (websocket' OpCode.Close' playloadData' 0' playloadData.Length);  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,SendCloseHandshake,The following statement contains a magic number: if (!string.IsNullOrEmpty (closeReason)) {  	int bytesCount = Encoding.UTF8.GetBytes (closeReason' 0' closeReason.Length' playloadData' 2);  	SendDataFragment (websocket' OpCode.Close' playloadData' 0' bytesCount + 2);  } else {  	SendDataFragment (websocket' OpCode.Close' playloadData' 0' playloadData.Length);  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,SendCloseHandshake,The following statement contains a magic number: SendDataFragment (websocket' OpCode.Close' playloadData' 0' bytesCount + 2);  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,GenerateMask,The following statement contains a magic number: for (var i = offset; i < maxPos; i++) {  	mask [i] = (byte)m_Random.Next (0' 255);  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,GenerateMask,The following statement contains a magic number: mask [i] = (byte)m_Random.Next (0' 255);  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,MaskData,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	var pos = offset + i;  	outputData [outputOffset++] = (byte)(rawData [pos] ^ mask [maskOffset + i % 4]);  }  
Magic Number,WebSocket4Net.Protocol,DraftHybi10Processor,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\DraftHybi10Processor.cs,MaskData,The following statement contains a magic number: outputData [outputOffset++] = (byte)(rawData [pos] ^ mask [maskOffset + i % 4]);  
Magic Number,WebSocket4Net.Protocol,ProtocolProcessorBase,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\ProtocolProcessorBase.cs,ValidateVerbLine,The following statement contains a magic number: if (parts.Length < 3)  	return false;  
Magic Number,WebSocket4Net.Protocol,ProtocolProcessorBase,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\ProtocolProcessorBase.cs,ValidateVerbLine,The following statement contains a magic number: return statusCode == 101;  
Magic Number,WebSocket4Net.Protocol.FramePartReader,ExtendedLenghtReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght == 126)  	required += 2;  else  	required += 8;  
Magic Number,WebSocket4Net.Protocol.FramePartReader,ExtendedLenghtReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght == 126)  	required += 2;  else  	required += 8;  
Magic Number,WebSocket4Net.Protocol.FramePartReader,ExtendedLenghtReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght == 126)  	required += 2;  else  	required += 8;  
Magic Number,WebSocket4Net.Protocol.FramePartReader,ExtendedLenghtReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: required += 2;  
Magic Number,WebSocket4Net.Protocol.FramePartReader,ExtendedLenghtReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: required += 8;  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.Length < 2) {  	nextPartReader = this;  	return -1;  }  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght < 126) {  	if (frame.HasMask)  		nextPartReader = MaskKeyReader;  	else {  		if (frame.ActualPayloadLength == 0) {  			nextPartReader = null;  			return (int)((long)frame.Length - 2);  		}  		nextPartReader = PayloadDataReader;  	}  } else {  	nextPartReader = ExtendedLenghtReader;  }  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght < 126) {  	if (frame.HasMask)  		nextPartReader = MaskKeyReader;  	else {  		if (frame.ActualPayloadLength == 0) {  			nextPartReader = null;  			return (int)((long)frame.Length - 2);  		}  		nextPartReader = PayloadDataReader;  	}  } else {  	nextPartReader = ExtendedLenghtReader;  }  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.HasMask)  	nextPartReader = MaskKeyReader;  else {  	if (frame.ActualPayloadLength == 0) {  		nextPartReader = null;  		return (int)((long)frame.Length - 2);  	}  	nextPartReader = PayloadDataReader;  }  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.ActualPayloadLength == 0) {  	nextPartReader = null;  	return (int)((long)frame.Length - 2);  }  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: return (int)((long)frame.Length - 2);  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.Length > 2)  	return nextPartReader.Process (2' frame' out nextPartReader);  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.Length > 2)  	return nextPartReader.Process (2' frame' out nextPartReader);  
Magic Number,WebSocket4Net.Protocol.FramePartReader,FixPartReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: return nextPartReader.Process (2' frame' out nextPartReader);  
Magic Number,WebSocket4Net.Protocol.FramePartReader,MaskKeyReader,F:\newReposMay17\kerryjiang_WebSocket4Net\WebSocket4Net.Silverlight\..\WebSocket4Net\Protocol\FramePartReader\MaskKeyReader.cs,Process,The following statement contains a magic number: frame.MaskKey = frame.InnerData.ToArrayData (lastLength' 4);  
