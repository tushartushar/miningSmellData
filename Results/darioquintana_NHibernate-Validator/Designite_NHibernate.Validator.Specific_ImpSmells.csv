Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NHibernate.Validator.Specific.Br,CEPValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CEPValidator.cs,IsValid,Cyclomatic complexity of the method is 8
Complex Method,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,Cyclomatic complexity of the method is 8
Long Statement,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The length of the statement  "	return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11); " is 125.
Long Statement,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The length of the statement  "	if (!((int.Parse (piva.Substring (0' 7)) != 0) && (int.Parse (piva.Substring (7' 3)) >= 0) && (int.Parse (piva.Substring (7' 3)) < 201))) { " is 139.
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: for (int i = 5' c = 0' j = 7; c != 10; i--' c++) {  	if (i >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * i);  	} else {  		bint = true;  	}  	if (bint && j >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * j);  		j--;  	}  }  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: for (int i = 5' c = 0' j = 7; c != 10; i--' c++) {  	if (i >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * i);  	} else {  		bint = true;  	}  	if (bint && j >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * j);  		j--;  	}  }  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: for (int i = 5' c = 0' j = 7; c != 10; i--' c++) {  	if (i >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * i);  	} else {  		bint = true;  	}  	if (bint && j >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * j);  		j--;  	}  }  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: for (int i = 5' c = 0' j = 7; c != 10; i--' c++) {  	if (i >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * i);  	} else {  		bint = true;  	}  	if (bint && j >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * j);  		j--;  	}  }  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: for (int i = 5' c = 0' j = 7; c != 10; i--' c++) {  	if (i >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * i);  	} else {  		bint = true;  	}  	if (bint && j >= 2) {  		sum += (char.GetNumericValue (cuit [c]) * j);  		j--;  	}  }  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: if (i >= 2) {  	sum += (char.GetNumericValue (cuit [c]) * i);  } else {  	bint = true;  }  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: if (bint && j >= 2) {  	sum += (char.GetNumericValue (cuit [c]) * j);  	j--;  }  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: verificationChar = verificationChar == 11 ? 0 : verificationChar == 10 ? 9 : verificationChar;  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: verificationChar = verificationChar == 11 ? 0 : verificationChar == 10 ? 9 : verificationChar;  
Magic Number,NHibernate.Validator.Specific.Ar,CUITValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Ar\CUITValidator.cs,IsValid,The following statement contains a magic number: verificationChar = verificationChar == 11 ? 0 : verificationChar == 10 ? 9 : verificationChar;  
Magic Number,NHibernate.Validator.Specific.Br,CEPValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CEPValidator.cs,IsValid,The following statement contains a magic number: if (cep.Length < 8) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Br,CEPValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CEPValidator.cs,IsValid,The following statement contains a magic number: if (cep.Length == 8) {  	if (!IsInteger (cep)) {  		return false;  	}  }  
Magic Number,NHibernate.Validator.Specific.Br,CEPValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CEPValidator.cs,IsValid,The following statement contains a magic number: if (cep.Length > 8) {  	if (!mask.IsMatch (cep)) {  		return false;  	}  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,ValidaCPF,The following statement contains a magic number: if (cpf.Length < 11) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,ValidaCPF,The following statement contains a magic number: if (cpf.Length == 11) {  	return Verifica (cpf);  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,Verifica,The following statement contains a magic number: if (!VerificaDigito (cpf.Substring (0' 9)' Convert.ToInt16 (cpf [9].ToString ()))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,Verifica,The following statement contains a magic number: if (!VerificaDigito (cpf.Substring (0' 9)' Convert.ToInt16 (cpf [9].ToString ()))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,Verifica,The following statement contains a magic number: if (!VerificaDigito (cpf.Substring (0' 10)' Convert.ToInt16 (cpf [10].ToString ()))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,Verifica,The following statement contains a magic number: if (!VerificaDigito (cpf.Substring (0' 10)' Convert.ToInt16 (cpf [10].ToString ()))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,VerificaDigito,The following statement contains a magic number: if (resto < 2) {  	digitoCalculado = 0;  } else {  	digitoCalculado = 11 - resto;  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,VerificaDigito,The following statement contains a magic number: if (resto < 2) {  	digitoCalculado = 0;  } else {  	digitoCalculado = 11 - resto;  }  
Magic Number,NHibernate.Validator.Specific.Br,CPFValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Br\CPFValidator.cs,VerificaDigito,The following statement contains a magic number: digitoCalculado = 11 - resto;  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: if (oib.Length != 11) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.Hr,OIBValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Hr\OIBValidator.cs,CheckOib,The following statement contains a magic number: return digits [10] == 11 - digits.Take (10).Aggregate (10' (x1' x2) => ((x1 + x2) % 10 == 0 ? 10 : (x1 + x2) % 10) * 2 % 11);  
Magic Number,NHibernate.Validator.Specific.It,CodiceFiscaleValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\CodiceFiscaleValidator.cs,IsValid,The following statement contains a magic number: if (codiceFiscale.Length != 16)  	return false;  
Magic Number,NHibernate.Validator.Specific.It,CodiceFiscaleValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\CodiceFiscaleValidator.cs,IsValid,The following statement contains a magic number: for (int i = 0; i < 15; i++) {  	char c = caratteriChar [i];  	int x = "0123456789".IndexOf (c);  	if (x != -1)  		c = listaControllo [x];  	x = listaControllo.IndexOf (c);  	// Verifico che sia pari. Partendo da 0 il controllo � "scombinato"  	if ((i % 2) == 0)  		x = listaCodiciDispari [x];  	else  		x = listaCodiciPari [x];  	somma += x;  }  
Magic Number,NHibernate.Validator.Specific.It,CodiceFiscaleValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\CodiceFiscaleValidator.cs,IsValid,The following statement contains a magic number: for (int i = 0; i < 15; i++) {  	char c = caratteriChar [i];  	int x = "0123456789".IndexOf (c);  	if (x != -1)  		c = listaControllo [x];  	x = listaControllo.IndexOf (c);  	// Verifico che sia pari. Partendo da 0 il controllo � "scombinato"  	if ((i % 2) == 0)  		x = listaCodiciDispari [x];  	else  		x = listaCodiciPari [x];  	somma += x;  }  
Magic Number,NHibernate.Validator.Specific.It,CodiceFiscaleValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\CodiceFiscaleValidator.cs,IsValid,The following statement contains a magic number: if ((i % 2) == 0)  	x = listaCodiciDispari [x];  else  	x = listaCodiciPari [x];  
Magic Number,NHibernate.Validator.Specific.It,CodiceFiscaleValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\CodiceFiscaleValidator.cs,IsValid,The following statement contains a magic number: return (listaControllo [somma % 26] == codiceFiscale [15]);  
Magic Number,NHibernate.Validator.Specific.It,CodiceFiscaleValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\CodiceFiscaleValidator.cs,IsValid,The following statement contains a magic number: return (listaControllo [somma % 26] == codiceFiscale [15]);  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if (piva.Length > 11) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if (!((int.Parse (piva.Substring (0' 7)) != 0) && (int.Parse (piva.Substring (7' 3)) >= 0) && (int.Parse (piva.Substring (7' 3)) < 201))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if (!((int.Parse (piva.Substring (0' 7)) != 0) && (int.Parse (piva.Substring (7' 3)) >= 0) && (int.Parse (piva.Substring (7' 3)) < 201))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if (!((int.Parse (piva.Substring (0' 7)) != 0) && (int.Parse (piva.Substring (7' 3)) >= 0) && (int.Parse (piva.Substring (7' 3)) < 201))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if (!((int.Parse (piva.Substring (0' 7)) != 0) && (int.Parse (piva.Substring (7' 3)) >= 0) && (int.Parse (piva.Substring (7' 3)) < 201))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if (!((int.Parse (piva.Substring (0' 7)) != 0) && (int.Parse (piva.Substring (7' 3)) >= 0) && (int.Parse (piva.Substring (7' 3)) < 201))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if (!((int.Parse (piva.Substring (0' 7)) != 0) && (int.Parse (piva.Substring (7' 3)) >= 0) && (int.Parse (piva.Substring (7' 3)) < 201))) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int j = int.Parse (piva.Substring (i' 1));  	if ((i + 1) % 2 == 0) {  		j *= 2;  		char[] c = j.ToString ("00").ToCharArray ();  		somma += int.Parse (c [0].ToString ());  		somma += int.Parse (c [1].ToString ());  	} else {  		somma += j;  	}  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int j = int.Parse (piva.Substring (i' 1));  	if ((i + 1) % 2 == 0) {  		j *= 2;  		char[] c = j.ToString ("00").ToCharArray ();  		somma += int.Parse (c [0].ToString ());  		somma += int.Parse (c [1].ToString ());  	} else {  		somma += j;  	}  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int j = int.Parse (piva.Substring (i' 1));  	if ((i + 1) % 2 == 0) {  		j *= 2;  		char[] c = j.ToString ("00").ToCharArray ();  		somma += int.Parse (c [0].ToString ());  		somma += int.Parse (c [1].ToString ());  	} else {  		somma += j;  	}  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if ((i + 1) % 2 == 0) {  	j *= 2;  	char[] c = j.ToString ("00").ToCharArray ();  	somma += int.Parse (c [0].ToString ());  	somma += int.Parse (c [1].ToString ());  } else {  	somma += j;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if ((i + 1) % 2 == 0) {  	j *= 2;  	char[] c = j.ToString ("00").ToCharArray ();  	somma += int.Parse (c [0].ToString ());  	somma += int.Parse (c [1].ToString ());  } else {  	somma += j;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: j *= 2;  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: if ((somma.ToString ("00").Substring (1' 1) == "0") && (piva.Substring (10' 1) != "0")) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.It,PartitaIvaValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\It\PartitaIvaValidator.cs,IsValid,The following statement contains a magic number: somma = int.Parse (piva.Substring (10' 1)) + int.Parse (somma.ToString ("00").Substring (1' 1));  
Magic Number,NHibernate.Validator.Specific.Pl,NIPValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Pl\NIPValidator.cs,HasValidChecksum,The following statement contains a magic number: result %= 11;  
Magic Number,NHibernate.Validator.Specific.Pl,PESELValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Pl\PESELValidator.cs,HasValidChecksum,The following statement contains a magic number: return result % 10 == 0;  
Magic Number,NHibernate.Validator.Specific.Pl,REGONValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Pl\REGONValidator.cs,HasValidChecksum,The following statement contains a magic number: result %= 11;  
Magic Number,NHibernate.Validator.Specific.Pl,REGONValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Pl\REGONValidator.cs,HasValidChecksum,The following statement contains a magic number: return (result % 10 == Int32.Parse (number [totNumbers - 1].ToString ()));  
Magic Number,NHibernate.Validator.Specific.Uy,CedulaIdentidadValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Uy\CedulaIdentidadValidator.cs,IsValid,The following statement contains a magic number: if (cedula.Length > 8) {  	return false;  }  
Magic Number,NHibernate.Validator.Specific.Uy,CedulaIdentidadValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Uy\CedulaIdentidadValidator.cs,IsValid,The following statement contains a magic number: for (int i = 0; i < cedula.Length - 1; i++) {  	int digito = Convert.ToInt32 (cedula [i].ToString ()) * dvs [i];  	sum += digito % 10;  }  
Magic Number,NHibernate.Validator.Specific.Uy,CedulaIdentidadValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Uy\CedulaIdentidadValidator.cs,IsValid,The following statement contains a magic number: sum += digito % 10;  
Magic Number,NHibernate.Validator.Specific.Uy,CedulaIdentidadValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Uy\CedulaIdentidadValidator.cs,IsValid,The following statement contains a magic number: return cedula [cedula.Length - 1].ToString () == Convert.ToString ((10 - sum % 10) % 10);  
Magic Number,NHibernate.Validator.Specific.Uy,CedulaIdentidadValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Uy\CedulaIdentidadValidator.cs,IsValid,The following statement contains a magic number: return cedula [cedula.Length - 1].ToString () == Convert.ToString ((10 - sum % 10) % 10);  
Magic Number,NHibernate.Validator.Specific.Uy,CedulaIdentidadValidator,F:\newReposMay17\darioquintana_NHibernate-Validator\src\NHibernate.Validator.Specific\Uy\CedulaIdentidadValidator.cs,IsValid,The following statement contains a magic number: return cedula [cedula.Length - 1].ToString () == Convert.ToString ((10 - sum % 10) % 10);  
