Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SysCallHacker,EventProperties,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\EventProperties.cs,EventProperties,Cyclomatic complexity of the method is 12
Long Parameter List,SysCallHacker,EventProperties,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\EventProperties.cs,EventProperties,The method has 5 parameters.
Long Statement,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,timerUpdate_Tick,The length of the statement  "			statusBar.Text = _events.Count.ToString ("N0") + " events' " + blocksWritten.ToString ("N0") + " blocks' " + blocksDropped.ToString ("N0") + " dropped (" + ((double)blocksDropped / (blocksWritten + blocksDropped) * 100).ToString ("F2") + "%)"; " is 243.
Long Statement,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,listEvents_RetrieveVirtualItem,The length of the statement  "		_processes.ContainsKey (logEvent.Event.ProcessId) ? _processes [logEvent.Event.ProcessId].Name : logEvent.Event.ProcessId.ToString ()' " is 134.
Empty Catch Block,SysCallHacker,EventProperties,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\EventProperties.cs,EventProperties,The method has an empty catch block.
Magic Number,SysCallHacker,EventProperties,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\EventProperties.cs,EventProperties,The following statement contains a magic number: for (int i = 0; i < _event.Event.Arguments.Length; i++) {  	ListViewItem item = new ListViewItem ();  	item.Text = i.ToString ();  	item.SubItems.Add (new ListViewItem.ListViewSubItem (item' "0x" + _event.Event.Arguments [i].ToString ("x")));  	if (_event.Arguments [i] != null) {  		string text = "";  		SsData data = _event.Arguments [i];  		if (data is SsSimple) {  			text = (data as SsSimple).Argument.ToString ();  		}  		else if (data is SsHandle) {  			SsHandle handle = data as SsHandle;  			if (!string.IsNullOrEmpty (handle.Name))  				text = handle.TypeName + ": " + handle.Name;  			else  				text = handle.TypeName + ": PID: " + handle.ProcessId.ToString () + "' TID: " + handle.ThreadId.ToString ();  		}  		else if (data is SsUnicodeString) {  			text = (data as SsUnicodeString).String;  		}  		else if (data is SsObjectAttributes) {  			SsObjectAttributes oa = data as SsObjectAttributes;  			text = "";  			if (oa.RootDirectory != null)  				text = oa.RootDirectory.Name;  			if (oa.ObjectName != null) {  				if (!string.IsNullOrEmpty (text))  					text = text + "\\" + oa.ObjectName.String;  				else  					text = oa.ObjectName.String;  			}  		}  		else if (data is SsClientId) {  			text = "PID: " + (data as SsClientId).Original.ProcessId.ToString () + "' TID: " + (data as SsClientId).Original.ThreadId.ToString ();  		}  		item.SubItems.Add (new ListViewItem.ListViewSubItem (item' text));  		item.SubItems.Add (new ListViewItem.ListViewSubItem (item' _event.Arguments [i].GetType ().Name.Remove (0' 2)));  	}  	else {  		item.SubItems.Add (new ListViewItem.ListViewSubItem (item' ""));  		item.SubItems.Add (new ListViewItem.ListViewSubItem (item' ""));  	}  	listArguments.Items.Add (item);  }  
Magic Number,SysCallHacker,EventProperties,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\EventProperties.cs,EventProperties,The following statement contains a magic number: if (_event.Arguments [i] != null) {  	string text = "";  	SsData data = _event.Arguments [i];  	if (data is SsSimple) {  		text = (data as SsSimple).Argument.ToString ();  	}  	else if (data is SsHandle) {  		SsHandle handle = data as SsHandle;  		if (!string.IsNullOrEmpty (handle.Name))  			text = handle.TypeName + ": " + handle.Name;  		else  			text = handle.TypeName + ": PID: " + handle.ProcessId.ToString () + "' TID: " + handle.ThreadId.ToString ();  	}  	else if (data is SsUnicodeString) {  		text = (data as SsUnicodeString).String;  	}  	else if (data is SsObjectAttributes) {  		SsObjectAttributes oa = data as SsObjectAttributes;  		text = "";  		if (oa.RootDirectory != null)  			text = oa.RootDirectory.Name;  		if (oa.ObjectName != null) {  			if (!string.IsNullOrEmpty (text))  				text = text + "\\" + oa.ObjectName.String;  			else  				text = oa.ObjectName.String;  		}  	}  	else if (data is SsClientId) {  		text = "PID: " + (data as SsClientId).Original.ProcessId.ToString () + "' TID: " + (data as SsClientId).Original.ThreadId.ToString ();  	}  	item.SubItems.Add (new ListViewItem.ListViewSubItem (item' text));  	item.SubItems.Add (new ListViewItem.ListViewSubItem (item' _event.Arguments [i].GetType ().Name.Remove (0' 2)));  }  else {  	item.SubItems.Add (new ListViewItem.ListViewSubItem (item' ""));  	item.SubItems.Add (new ListViewItem.ListViewSubItem (item' ""));  }  
Magic Number,SysCallHacker,EventProperties,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\EventProperties.cs,EventProperties,The following statement contains a magic number: item.SubItems.Add (new ListViewItem.ListViewSubItem (item' _event.Arguments [i].GetType ().Name.Remove (0' 2)));  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,MainWindow,The following statement contains a magic number: symbols.EnumSymbols ("ntdll!Zw*"' symbol =>  {  	int number = Marshal.ReadInt32 ((symbol.Address.ToIntPtr ().Decrement (ntdllBase)).Increment (view.Memory).Increment (1));  	_sysCallNames.Add (number' "Nt" + symbol.Name.Substring (2));  	_reverseSysCallNames.Add ("Nt" + symbol.Name.Substring (2)' number);  	return true;  });  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,MainWindow,The following statement contains a magic number: symbols.EnumSymbols ("ntdll!Zw*"' symbol =>  {  	int number = Marshal.ReadInt32 ((symbol.Address.ToIntPtr ().Decrement (ntdllBase)).Increment (view.Memory).Increment (1));  	_sysCallNames.Add (number' "Nt" + symbol.Name.Substring (2));  	_reverseSysCallNames.Add ("Nt" + symbol.Name.Substring (2)' number);  	return true;  });  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,MainWindow,The following statement contains a magic number: _sysCallNames.Add (number' "Nt" + symbol.Name.Substring (2));  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,MainWindow,The following statement contains a magic number: _reverseSysCallNames.Add ("Nt" + symbol.Name.Substring (2)' number);  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,MainWindow,The following statement contains a magic number: _logger = new SsLogger (4096' false);  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,timerUpdate_Tick,The following statement contains a magic number: if (blocksWritten > 0 || blocksDropped > 0) {  	lock (_events) {  		statusBar.Text = _events.Count.ToString ("N0") + " events' " + blocksWritten.ToString ("N0") + " blocks' " + blocksDropped.ToString ("N0") + " dropped (" + ((double)blocksDropped / (blocksWritten + blocksDropped) * 100).ToString ("F2") + "%)";  	}  }  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,timerUpdate_Tick,The following statement contains a magic number: lock (_events) {  	statusBar.Text = _events.Count.ToString ("N0") + " events' " + blocksWritten.ToString ("N0") + " blocks' " + blocksDropped.ToString ("N0") + " dropped (" + ((double)blocksDropped / (blocksWritten + blocksDropped) * 100).ToString ("F2") + "%)";  }  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,timerUpdate_Tick,The following statement contains a magic number: statusBar.Text = _events.Count.ToString ("N0") + " events' " + blocksWritten.ToString ("N0") + " blocks' " + blocksDropped.ToString ("N0") + " dropped (" + ((double)blocksDropped / (blocksWritten + blocksDropped) * 100).ToString ("F2") + "%)";  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,listEvents_RetrieveVirtualItem,The following statement contains a magic number: if (logEvent.Arguments.Length > 2) {  	SsObjectAttributes oa = logEvent.Arguments [2] as SsObjectAttributes;  	if (oa != null) {  		if (oa.ObjectName != null)  			objectName = oa.ObjectName.String;  	}  }  
Magic Number,SysCallHacker,MainWindow,C:\repos\prresearcher_pr-Researcher\process-Researcher\ExtraTools\SysCallHacker\MainWindow.cs,listEvents_RetrieveVirtualItem,The following statement contains a magic number: if (logEvent.Arguments.Length > 2) {  	SsObjectAttributes oa = logEvent.Arguments [2] as SsObjectAttributes;  	if (oa != null) {  		if (oa.ObjectName != null)  			objectName = oa.ObjectName.String;  	}  }  
