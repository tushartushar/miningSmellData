Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExpressionToCodeLib.Internal,CSharpFriendlyTypeName,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\CSharpFriendlyTypeName.cs,AliasNameOrNull,Cyclomatic complexity of the method is 18
Complex Method,ExpressionToCodeLib.Internal,EqualityExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\EqualityExpressions.cs,ExtractEqualityType,Cyclomatic complexity of the method is 12
Complex Method,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,Cyclomatic complexity of the method is 8
Complex Method,ExpressionToCodeLib.Internal,ExpressionTypeDispatcher,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionTypeDispatch.Generated.cs,ExpressionDispatch,Cyclomatic complexity of the method is 87
Complex Method,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ComplexObjectToPseudoCode,Cyclomatic complexity of the method is 11
Complex Method,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,OutermostValue,Cyclomatic complexity of the method is 8
Long Parameter List,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,ArgListDispatch,The method has 5 parameters. Parameters: arguments' value' open' close' joiner
Long Parameter List,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatTypeWithListInitializerOrNull,The method has 5 parameters. Parameters: config' val' indent' valueSize' enumerableVal
Long Parameter List,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,PrintInitializerContents,The method has 6 parameters. Parameters: config' list' keyType' valueType' indent' valueSize
Long Parameter List,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,FindSubExpressionValues,The method has 5 parameters. Parameters: config' node' subExprNode' subExpressionValues' outerValueIsAssertionFailure
Long Parameter List,ExpressionToCodeLib.Internal,ValuesOnStalksCodeAnnotator,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ValuesOnStalksCodeAnnotator.cs,AppendTo,The method has 6 parameters. Parameters: config' sb' nodeInfos' node' ignoreInitialSpace' showTopExpressionValue
Long Identifier,ExpressionToCodeLib,CodeAnnotators,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\CodeAnnotators.cs,,The length of the parameter SubExpressionPerLineCodeAnnotator is 33.
Long Identifier,ExpressionToCodeLib,ExpressionToCodeConfigurationValue,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\ExpressionToCodeConfiguration.cs,,The length of the parameter AlwaysUseExplicitTypeArguments is 30.
Long Identifier,ExpressionToCodeLib,ExpressionToCodeConfiguration,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\ExpressionToCodeConfiguration.cs,WithAlwaysUseExplicitTypeArguments,The length of the parameter alwaysUseExplicitTypeArguments is 30.
Long Identifier,ExpressionToCodeLib.Internal,CSharpFriendlyTypeName,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\CSharpFriendlyTypeName.cs,,The length of the parameter IncludeGenericTypeArgumentNames is 31.
Long Identifier,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,AddStringInterpolation,The length of the parameter interpolationArgumentsStringified is 33.
Long Identifier,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,CreateGenericArgumentsIfNecessary,The length of the parameter relevantBindingFlagsForOverloads is 32.
Long Statement,ExpressionToCodeLib,ExpressionTreeAssertion,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\ExpressionTreeAssertion.cs,Assert,The length of the statement  "                throw new InvalidOperationException(config.Value.CodeAnnotator.AnnotateExpressionTree(config' assertion.Body' "evaluating assertion aborted due to exception: " + msg' true)' e); " is 177.
Long Statement,ExpressionToCodeLib,ExpressionTreeAssertion,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\ExpressionTreeAssertion.cs,Assert,The length of the statement  "                throw new InvalidOperationException(config.Value.CodeAnnotator.AnnotateExpressionTree(config' assertion.Body' msg ?? "assertion failed"' true)' null); " is 150.
Long Statement,ExpressionToCodeLib.Internal,EqualityExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\EqualityExpressions.cs,ExtractEqualityType,The length of the statement  "                    } else if (HaveSameGenericDefinition(mce.Method' ((Func<IEnumerable<int>' IEnumerable<int>' bool>)Enumerable.SequenceEqual).GetMethodInfo())) { " is 143.
Long Statement,ExpressionToCodeLib.Internal,EqualityExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\EqualityExpressions.cs,DisagreeingEqualities,The length of the statement  "                ((Func<IEnumerable<int>' IEnumerable<int>' bool>)Enumerable.SequenceEqual).GetMethodInfo().GetGenericMethodDefinition(); " is 120.
Long Statement,ExpressionToCodeLib.Internal,EqualityExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\EqualityExpressions.cs,DisagreeingEqualities,The length of the statement  "                    ReportIfError(EqualityExpressionClass.NotEqualsOp' EvalBoolExpr(config' Expression.Not(Expression.NotEqual(leftC' rightC))))' " is 125.
Long Statement,ExpressionToCodeLib.Internal,EqualityExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\EqualityExpressions.cs,IsImplementationOfInterfaceMethod,The length of the statement  "            return interfaceMap.InterfaceMethods.Where((t' i) => t.Name == methodName && method.Equals(interfaceMap.TargetMethods[i])) " is 122.
Long Statement,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,The length of the statement  "            } else if (mce.Object != null && mce.Method.Attributes.HasFlag(MethodAttributes.SpecialName) && mce.Method.Name == "get_Item") { " is 128.
Long Statement,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,AddStringInterpolation,The length of the statement  "                        ? StringifiedExpression.WithChildren(new[] { StringifiedExpression.TextOnly("(")' this.ExpressionDispatch(child)' StringifiedExpression.TextOnly(")") }) " is 152.
Long Statement,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,AddStringInterpolation,The length of the statement  "            var parsed = FormatStringParser.ParseFormatString(formatString' interpolationArgumentsStringified.Cast<object>().ToArray()); " is 124.
Long Statement,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,CreateGenericArgumentsIfNecessary,The length of the statement  "                            && otherMethod.GetParameters().Select(pi => pi.ParameterType).SequenceEqual(method.GetParameters().Select(pi => pi.ParameterType)) " is 130.
Long Statement,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,CreateGenericArgumentsIfNecessary,The length of the statement  "                        .All(typeParameter => genericMethodDefinition.GetParameters().Any(parameter => ContainsInferableType(parameter.ParameterType' typeParameter)))) { " is 145.
Long Statement,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchElementInit,The length of the statement  "                return StringifiedExpression.WithChildren(ArgListDispatch(elemInit.Arguments.Select(SingleChildDispatch)' null' "{ "' " }").ToArray()); //?? " is 140.
Long Statement,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchParameter,The length of the statement  "            return StringifiedExpression.TextAndExpr(parameterExpression.Name ?? parameterExpression.Type.Name + parameterExpression.GetHashCode()' e); " is 139.
Long Statement,ExpressionToCodeLib.Internal,ExpressionTypeDispatcher,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionTypeDispatch.Generated.cs,ExpressionDispatch,The length of the statement  "				throw new ArgumentOutOfRangeException("Could not dispatch expr with nodetype "+e.NodeType+" and type " +e.GetType().Name'nie); " is 126.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ComplexObjectToPseudoCode,The length of the statement  "                return ElidePossiblyMultilineString(config' retval ?? throw new InvalidOperationException("retval cannot be null for strings")' indent' valueSize).Trim(); " is 154.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ComplexObjectToPseudoCode,The length of the statement  "                return FormatTypeWithListInitializerOrNull(config' val' indent' valueSize' enumerableVal) ?? FormatEnumerable(config' enumerableVal' indent' valueSize); " is 152.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ComplexObjectToPseudoCode,The length of the statement  "            } else if (val is IStructuralComparable tuple && val is IComparable && CSharpFriendlyTypeName.IsValueTupleType(val.GetType().GetTypeInfo())) { " is 142.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatTypeWithListInitializerOrNull,The length of the statement  "                    && typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<'>).MakeGenericType(indexPars[0].ParameterType' pi.PropertyType)) is Type keyEnumerableType " is 152.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatTypeWithListInitializerOrNull,The length of the statement  "                    return "new " + typeName + " " + PrintInitializerContents(config' enumerableVal' indexPars[0].ParameterType' pi.PropertyType' indent' valueSize - typeName.Length); " is 163.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ElidePossiblyMultilineString,The length of the statement  "            var stringBoundaryPrefix = lines[0].StartsWith("@\""' StringComparison.Ordinal) ? 2 : lines[0].StartsWith("\""' StringComparison.Ordinal) ? 1 : 0; " is 146.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatLiteralInitializerContents,The length of the statement  "                    + string.Join(""' contents.Select(s => ElidePossiblyMultilineString(config' s' indent + 4' valueSize - 3) + (s == "..." ? "" : "'"))) " is 133.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,PrintInitializerContents,The length of the statement  "                stringify = (IInitializerStringifier)Activator.CreateInstance(typeof(InitializerStringifier<'>).MakeGenericType(keyType' valueType)); " is 133.
Long Statement,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,PrintInitializerContents,The length of the statement  "            return FormatLiteralInitializerContents(config' stringify.PrintInitializerContents(config' list).ToArray()' indent' valueSize); " is 127.
Long Statement,ExpressionToCodeLib.Internal,NastyHackyTupleCollector,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,Compare,The length of the statement  "                if (CollectedObjects.Count == nesting * 7 && x is IStructuralComparable tuple && tuple is IComparable && CSharpFriendlyTypeName.IsValueTupleType(tuple.GetType().GetTypeInfo())) { " is 178.
Long Statement,ExpressionToCodeLib.Internal,InitializerStringifier<TKey;TValue>,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,PrintInitializerContents,The length of the statement  "                        yield return $"[{ComplexObjectToPseudoCode(config' item.Key' 0)}] = {ComplexObjectToPseudoCode(config' item.Value' 0)}"; " is 120.
Long Statement,ExpressionToCodeLib.Internal,ReflectionHelpers,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ReflectionHelpers.cs,GuessTypeClass,The length of the statement  "                        "Can't deal with unknown-style compiler generated class " + type.FullName + " " + named_AnonymousType + "' " + named_DisplayClass + "' " + isGeneric " is 148.
Long Statement,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,ComposeToSingleString,The length of the statement  "                var maxLineLength = SubExpressions.Max(sub => sub.SubExpression.Length + spacedArrow.Length + sub.ValueAsString.Length as int?) ?? 0; " is 133.
Long Statement,ExpressionToCodeLib.Internal,ValuesOnStalksCodeAnnotator,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ValuesOnStalksCodeAnnotator.cs,AppendTo,The length of the statement  "                    var valueString = node.OptionalValue == null ? null : ObjectToCodeImpl.ExpressionValueAsCode(config' node.OptionalValue' 0); " is 124.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,UnwrapEnumBinOp,The conditional expression  "expr1nonnullableType.GetTypeInfo().IsEnum                  && expr1nonnullableType.GetTypeInfo().GetEnumUnderlyingType() == expr2nonnullableType                  || expr1nonnullableType == typeof(char) && expr2nonnullableType == typeof(int)"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,UnaryDispatchConvert,The conditional expression  "!config.Value.OmitImplicitCasts                  || !ReflectionHelpers.CanImplicitlyCast(operand.Type' e.Type)                  || typeof(Delegate).IsAssignableFrom(operand.Type) && operand.NodeType == ExpressionType.Lambda                  || typeof(Expression).IsAssignableFrom(operand.Type) && operand.NodeType == ExpressionType.Quote"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,The conditional expression  "optPropertyInfo != null                  && (optPropertyInfo.Name == "Item"                      || mce.Object?.Type == typeof(string) && optPropertyInfo.Name == "Chars")"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,The conditional expression  "mce.Method.Equals(createDelegate) && mce.Arguments.Count == 3                  && mce.Arguments[2].NodeType == ExpressionType.Constant && mce.Arguments[2].Type == typeof(MethodInfo)"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,The conditional expression  "mce.Method.Name == "CreateDelegate"                  && mce.Arguments.Count == 2                  && mce.Object?.Type == typeof(MethodInfo)                  && mce.Object.NodeType == ExpressionType.Constant                  && mce.Method.GetParameters()[1].ParameterType == typeof(object)"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,The conditional expression  "mce.Object == null                  && mce.Type.FullName == "System.FormattableString"                  && mce.Method.DeclaringType?.FullName == "System.Runtime.CompilerServices.FormattableStringFactory"                  && mce.Method.Name == "Create"                  && mce.Arguments.Count == 2                  && mce.Arguments[0] is ConstantExpression formattableStringFormat                  && mce.Arguments[1] is NewArrayExpression formattableStringArguments"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,The conditional expression  "mce.Object == null                  && mce.Type == typeof(string)                  && mce.Method.DeclaringType == typeof(string)                  && mce.Method.Name == "Format"                  && mce.Arguments.Count == 2                  && mce.Arguments[0] is ConstantExpression formatStringExpr                  && formatStringExpr.Type == typeof(string)                  && mce.Arguments[1].Type == typeof(object[])                  && mce.Arguments[1] is NewArrayExpression interpolationArguments"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ExpressionToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ExpressionToCodeImpl.cs,DispatchCall,The conditional expression  "mce.Object == null                  && mce.Type == typeof(string)                  && mce.Method.DeclaringType == typeof(string)                  && mce.Method.Name == "Format"                  && mce.Arguments.Count >= 2                  && mce.Arguments[0] is ConstantExpression formatString2Expr                  && formatString2Expr.Type == typeof(string)                  && mce.Method.GetParameters().Skip(1).All(pi => pi.ParameterType == typeof(object))"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatTypeWithListInitializerOrNull,The conditional expression  "pi.Name == "Item"                      && pi.CanWrite                      && pi.GetIndexParameters() is ParameterInfo[] indexPars                      && indexPars.Length == 1                      && typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<'>).MakeGenericType(indexPars[0].ParameterType' pi.PropertyType)) is Type keyEnumerableType                      && keyEnumerableType.IsAssignableFrom(type)"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,NastyHackyTupleCollector,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,Compare,The conditional expression  "CollectedObjects.Count == nesting * 7 && x is IStructuralComparable tuple && tuple is IComparable && CSharpFriendlyTypeName.IsValueTupleType(tuple.GetType().GetTypeInfo())"  is complex.
Complex Conditional,ExpressionToCodeLib.Internal,ReflectionHelpers,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ReflectionHelpers.cs,GuessTypeClass,The conditional expression  "!isBuiltin && isGeneric && !isNested && named_AnonymousType"  is complex.
Magic Number,ExpressionToCodeLib.Internal,CSharpFriendlyTypeName,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\CSharpFriendlyTypeName.cs,ValueTupleTypeNameOrNull,The following statement contains a magic number: nextIdx == 7 && IsValueTupleType(typePar.GetTypeInfo())
Magic Number,ExpressionToCodeLib.Internal,ObjectStringifyImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectStringifyImpl.cs,PreferLiteralSyntax,The following statement contains a magic number: count > 3
Magic Number,ExpressionToCodeLib.Internal,ObjectStringifyImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectStringifyImpl.cs,PreferLiteralSyntax,The following statement contains a magic number: c < 32 && c != '\r' || c == '\\'
Magic Number,ExpressionToCodeLib.Internal,ObjectStringifyImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectStringifyImpl.cs,EscapeCharForString,The following statement contains a magic number: c < 32 || CharUnicodeInfo.GetUnicodeCategory(c) == UnicodeCategory.Control
Magic Number,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ElideAfter,The following statement contains a magic number: var maxLength = Math.Max(10' len);
Magic Number,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ElidePossiblyMultilineString,The following statement contains a magic number: lines.Length < 2
Magic Number,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,ElidePossiblyMultilineString,The following statement contains a magic number: var stringBoundaryPrefix = lines[0].StartsWith("@\""' StringComparison.Ordinal) ? 2 : lines[0].StartsWith("\""' StringComparison.Ordinal) ? 1 : 0;
Magic Number,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatLiteralInitializerContents,The following statement contains a magic number: return "{"                      + string.Join(""' contents.Select(s => ElidePossiblyMultilineString(config' s' indent + 4' valueSize - 3) + (s == "..." ? "" : "'")))                      + "\n" + new string(' '' indent)                      + "}";
Magic Number,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatLiteralInitializerContents,The following statement contains a magic number: return "{"                      + string.Join(""' contents.Select(s => ElidePossiblyMultilineString(config' s' indent + 4' valueSize - 3) + (s == "..." ? "" : "'")))                      + "\n" + new string(' '' indent)                      + "}";
Magic Number,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatLiteralInitializerContents,The following statement contains a magic number: contents.Sum(s => s.Length + 2) > Math.Min(valueSize' 120) || contents.Any(s => s.Any(c => c == '\n'))
Magic Number,ExpressionToCodeLib.Internal,ObjectToCodeImpl,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,FormatLiteralInitializerContents,The following statement contains a magic number: contents.Sum(s => s.Length + 2) > Math.Min(valueSize' 120) || contents.Any(s => s.Any(c => c == '\n'))
Magic Number,ExpressionToCodeLib.Internal,NastyHackyTupleCollector,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ObjectToCodeImpl.cs,Compare,The following statement contains a magic number: CollectedObjects.Count == nesting * 7 && x is IStructuralComparable tuple && tuple is IComparable && CSharpFriendlyTypeName.IsValueTupleType(tuple.GetType().GetTypeInfo())
Magic Number,ExpressionToCodeLib.Internal,ReflectionHelpers,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ReflectionHelpers.cs,GetPropertyIfGetter,The following statement contains a magic number: var pName = mi.Name.Substring(4);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,OutermostValue,The following statement contains a magic number: return ObjectToCodeImpl.ExpressionValueAsCode(config' node.OptionalValue' 10);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,FindSubExpressionValues,The following statement contains a magic number: var valueString = ObjectToCodeImpl.ExpressionValueAsCode(config' node.OptionalValue' 10);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,FindSubExpressionValues,The following statement contains a magic number: var maxSize = Math.Max(40' config.Value.MaximumValueLength ?? 200);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,FindSubExpressionValues,The following statement contains a magic number: var maxSize = Math.Max(40' config.Value.MaximumValueLength ?? 200);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,FindSubExpressionValues,The following statement contains a magic number: var subExprString = sb.Length <= maxSize                          ? sb.ToString()                          : sb.ToString(0' maxSize / 2 - 1) + "  …  " + sb.ToString(sb.Length - (maxSize / 2 - 1)' maxSize / 2 - 1);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,FindSubExpressionValues,The following statement contains a magic number: var subExprString = sb.Length <= maxSize                          ? sb.ToString()                          : sb.ToString(0' maxSize / 2 - 1) + "  …  " + sb.ToString(sb.Length - (maxSize / 2 - 1)' maxSize / 2 - 1);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,FindSubExpressionValues,The following statement contains a magic number: var subExprString = sb.Length <= maxSize                          ? sb.ToString()                          : sb.ToString(0' maxSize / 2 - 1) + "  …  " + sb.ToString(sb.Length - (maxSize / 2 - 1)' maxSize / 2 - 1);
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,ComposeToSingleString,The following statement contains a magic number: return ExpressionString + "\n"                      + string.Join(                          ""'                          maxLineLength <= 80 && maxExprLength <= 30 && !containsANewline                              ? SubExpressions.Select(sub => sub.SubExpression.PadLeft(maxExprLength) + spacedArrow + sub.ValueAsString + "\n")                              : SubExpressions.Select(sub => sub.SubExpression + "\n  " + spacedArrow + sub.ValueAsString + "\n\n")                      );
Magic Number,ExpressionToCodeLib.Internal,ExpressionWithSubExpressions,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\SubExpressionPerLineCodeAnnotator.cs,ComposeToSingleString,The following statement contains a magic number: return ExpressionString + "\n"                      + string.Join(                          ""'                          maxLineLength <= 80 && maxExprLength <= 30 && !containsANewline                              ? SubExpressions.Select(sub => sub.SubExpression.PadLeft(maxExprLength) + spacedArrow + sub.ValueAsString + "\n")                              : SubExpressions.Select(sub => sub.SubExpression + "\n  " + spacedArrow + sub.ValueAsString + "\n\n")                      );
Magic Number,ExpressionToCodeLib.Internal,ValuesOnStalksCodeAnnotator,D:\research\architectureSmells\repos\EamonNerbonne_ExpressionToCode\ExpressionToCodeLib\Internal\ValuesOnStalksCodeAnnotator.cs,AppendTo,The following statement contains a magic number: nodeInfos.Add(new SubExpressionInfo { Location = pos0 + trimmedText.Length / 2' Value = valueString });
