Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ADO.ConnectedLayer,DataReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\ConnectedLayer\DataReaderExample.cs,Example,Cyclomatic complexity of the method is 12
Complex Method,ADO.DisconnectedLayer,DataTableReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\DataTableReaderExample.cs,Example,Cyclomatic complexity of the method is 9
Long Statement,TestingMoqingDebugging.Debugging,PerformanceEncounterCustomExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\PerformanceEncounterExample.cs,InitCounters,The length of the statement  "			PerformanceCounterCategory.Create ("Category"' "Example Counter"' PerformanceCounterCategoryType.SingleInstance' counters); " is 123.
Complex Conditional,ADO.DisconnectedLayer,DataTableReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\DataTableReaderExample.cs,Example,The conditional expression  "aValue < 0 || bValue < 0 || aValue.GetType () != typeof(int) || bValue.GetType () != typeof(int)"  is complex.
Magic Number,MultiThreading.ConcurrentCollections,BlockingCollectionExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\BlockingCollectionExample.cs,Run,The following statement contains a magic number: var taker = Task<int>.Run (() => {                       				var take = 0;  				while (take < 10) {				  					take = collection.Take ();  				}  				return take;  			});
Magic Number,MultiThreading.ConcurrentCollections,BlockingCollectionExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\BlockingCollectionExample.cs,Run,The following statement contains a magic number: var adder = Task.Run (() => {    				for (int x = 0; x <= 10; x++) {  					collection.Add (x);  				}  			});
Magic Number,MultiThreading.ConcurrentCollections,BlockingCollectionExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\BlockingCollectionExample.cs,ConsumingEnumerablexample,The following statement contains a magic number: var adder = Task.Run (() => {    				for (int x = 0; x <= 10; x++) {  					collection.Add (x);  					System.Threading.Thread.Sleep (1);  				}  				collection.CompleteAdding ();  			});
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentBag,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentBagExample.cs,Run,The following statement contains a magic number: var collection = new ConcurrentBag<int> (){ 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,Run,The following statement contains a magic number: Action adder = () => {    				for (var x = 0; x < 10; x++) {  					dict.TryAdd (x.ToString ()' x);  				}    				for (var x = 0; x < 10; x++) {  					dict.TryUpdate (x.ToString ()' x * x' x);  				}    			};
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,Run,The following statement contains a magic number: Action adder = () => {    				for (var x = 0; x < 10; x++) {  					dict.TryAdd (x.ToString ()' x);  				}    				for (var x = 0; x < 10; x++) {  					dict.TryUpdate (x.ToString ()' x * x' x);  				}    			};
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,AddOrUpdate,The following statement contains a magic number: Func<string'int' int> updateFunc = (x' y) => y * 2;
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,AddOrUpdate,The following statement contains a magic number: new int[]{1'2}
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,AddOrUpdate,The following statement contains a magic number: new int[]{1'2'3}
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,AddOrUpdate,The following statement contains a magic number: new int[]{1'2'3}
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,GetOrAdd,The following statement contains a magic number: dict.GetOrAdd (x.ToString ()' (aVal) => int.Parse (aVal) * 2);
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,GetOrAdd,The following statement contains a magic number: new int[]{1'2}
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,GetOrAdd,The following statement contains a magic number: new int[]{1'2'3}
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentDictionaryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExample.cs,GetOrAdd,The following statement contains a magic number: new int[]{1'2'3}
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentQueueExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentQueueExample.cs,Run,The following statement contains a magic number: x < 10
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentStackExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentStackExample.cs,Example,The following statement contains a magic number: x < 10
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentStackExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentStackExample.cs,ConcurrentStackExampleRange,The following statement contains a magic number: stack.PushRange (new int[] { 1' 2' 3 });
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentStackExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentStackExample.cs,ConcurrentStackExampleRange,The following statement contains a magic number: stack.PushRange (new int[] { 1' 2' 3 });
Magic Number,MultiThreading.ConcurrentCollections,ConcurrentStackExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ConcurrentCollections\ConcurrentStackExample.cs,ConcurrentStackExampleRange,The following statement contains a magic number: return stack.TryPopRange (new int[2]);
Magic Number,MultiThreading.ThreadSynchronization,InterlockedExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\InterlockedExample.cs,InterlockedExample,The following statement contains a magic number: Interlocked.Add (ref ANumber' 10);
Magic Number,MultiThreading.ThreadSynchronization,InterlockedExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\InterlockedExample.cs,InterlockedExample,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,MultiThreading.ThreadSynchronization,InterlockedExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\InterlockedExample.cs,OtherThreadMethod,The following statement contains a magic number: Interlocked.Add (ref ANumber' 10);
Magic Number,MultiThreading.ThreadSynchronization,LockRegion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\LockRegion.cs,LockRegion,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.ThreadSynchronization,LockRegion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\LockRegion.cs,AMethod,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.ThreadSynchronization,MonitorExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\MonitorExample.cs,DoEnter,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,MultiThreading.ThreadSynchronization,MonitorExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\MonitorExample.cs,DoTryEnter,The following statement contains a magic number: Thread.Sleep (200);
Magic Number,MultiThreading.ThreadSynchronization,ThreadJoinExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\ThreadJoinExample.cs,ThreadJoinExample,The following statement contains a magic number: Thread t2 = new Thread (() => {   				Counter++;  				Thread.Sleep (2);  			});
Magic Number,MultiThreading.ThreadSynchronization,ThreadStaticLocalExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\ThreadStaticLocal.cs,DoThreadStatic,The following statement contains a magic number: x < 10
Magic Number,MultiThreading.ThreadSynchronization,ThreadStaticLocalExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\ThreadStaticLocal.cs,DoThreadStatic,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.ThreadSynchronization,ThreadStaticLocalExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\ThreadStaticLocal.cs,DoThreadLocal,The following statement contains a magic number: x < 10
Magic Number,MultiThreading.ThreadSynchronization,ThreadStaticLocalExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\ThreadStaticLocal.cs,DoThreadLocal,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.ThreadSynchronization,SynchronizedAttributeExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\SynchronizedAttributeExample.cs,DoBombCounter,The following statement contains a magic number: Thread t = new Thread (() => {   					SAE.Counter++;  					Thread.Sleep (10);  				});
Magic Number,MultiThreading.ThreadSynchronization,SynchronizedAttributeExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\SynchronizedAttributeExample.cs,DoBombCounter,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.ThreadSynchronization,SynchronizedAttributeExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\SynchronizedAttributeExample.cs,DoBombCounter,The following statement contains a magic number: x < 4
Magic Number,MultiThreading.ThreadSynchronization,SynchronizedAttributeExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\ThreadSynchronization\SynchronizedAttributeExample.cs,DoBombCounter,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,ADO.Connections,ConnectionStringBuilderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\Connections\ConnectionStringBuilderExample.cs,Example,The following statement contains a magic number: builder ["ConnectionTimeout"] = 60;
Magic Number,ADO.ConnectedLayer,DataReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\ConnectedLayer\DataReaderExample.cs,Example,The following statement contains a magic number: var val3 = dr.GetInt32 (2);
Magic Number,ADO.ConnectedLayer,DataReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\ConnectedLayer\DataReaderExample.cs,Example,The following statement contains a magic number: var val4 = dr.GetDecimal (3);
Magic Number,ADO.ConnectedLayer,DataReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\ConnectedLayer\DataReaderExample.cs,Example,The following statement contains a magic number: var val5 = dr.GetDouble (3);
Magic Number,ADO.ConnectedLayer,DataReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\ConnectedLayer\DataReaderExample.cs,Example,The following statement contains a magic number: var val6 = dr.GetString (2);
Magic Number,ADO.ConnectedLayer,ExecutingAStoredProcedureExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\ConnectedLayer\ExecutingAStoredProcedureExample.cs,Example,The following statement contains a magic number: paramTwo.Size = 10;
Magic Number,ADO.DisconnectedLayer,DataTableReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\DataTableReaderExample.cs,Example,The following statement contains a magic number: var anInt = reader.GetInt32 (2);
Magic Number,ADO.DisconnectedLayer,DataTableReaderExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\DataTableReaderExample.cs,Example,The following statement contains a magic number: var aDecimal = reader.GetDecimal (3);
Magic Number,ADO.DisconnectedLayer,StronglyTypedDataSetExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\StronglyTypedDataSetExample.cs,Example,The following statement contains a magic number: myTable.AddMyTableRow (2' "James Pond"' true);
Magic Number,ADO.DisconnectedLayer,LinqToDataSet,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\LinqToDataSet.cs,LinqToDataSet,The following statement contains a magic number: AddRow ("Ivor"' 34);
Magic Number,ADO.DisconnectedLayer,LinqToDataSet,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\LinqToDataSet.cs,LinqToDataSet,The following statement contains a magic number: AddRow ("John"' 31);
Magic Number,ADO.DisconnectedLayer,LinqToDataSet,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\LinqToDataSet.cs,LinqToDataSet,The following statement contains a magic number: AddRow ("Fred"' 33);
Magic Number,ADO.DisconnectedLayer,LinqToDataSet,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\LinqToDataSet.cs,LinqToDataSet,The following statement contains a magic number: AddRow ("Bob"' 30);
Magic Number,ADO.DisconnectedLayer,LinqToDataSet,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\LinqToDataSet.cs,LinqToDataSet,The following statement contains a magic number: AddRow ("Peter"' 32);
Magic Number,ADO.DisconnectedLayer,CreateSchemaExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\ADO\DisconnectedLayer\CreateSchemaExample.cs,CreateSchemaExample,The following statement contains a magic number: x <= 10
Magic Number,Advanced.XML,HydrationExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\Advanced\XML\HydrationExample.cs,BuildXElementWithLinq,The following statement contains a magic number: var models = new List<MyModel> () {  				new MyModel () { AnInt = 1' AString = "A"' ABool = true }'  				new MyModel () { AnInt = 2' AString = "B"' ABool = false }  			};
Magic Number,Advanced.XML,LinqToXMLExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\Advanced\XML\LinqToXMLExample.cs,LinqToXMLExample,The following statement contains a magic number: var models = new List<MyModel> () {  				new MyModel () { AnInt = 1' AString = "A"' ABool = true }'  				new MyModel () { AnInt = 2' AString = "B"' ABool = false }'  				new MyModel () { AnInt = 3' AString = "C"' ABool = false }'  				new MyModel () { AnInt = 4' AString = "D"' ABool = true }  			};
Magic Number,Advanced.XML,LinqToXMLExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\Advanced\XML\LinqToXMLExample.cs,LinqToXMLExample,The following statement contains a magic number: var models = new List<MyModel> () {  				new MyModel () { AnInt = 1' AString = "A"' ABool = true }'  				new MyModel () { AnInt = 2' AString = "B"' ABool = false }'  				new MyModel () { AnInt = 3' AString = "C"' ABool = false }'  				new MyModel () { AnInt = 4' AString = "D"' ABool = true }  			};
Magic Number,Advanced.XML,LinqToXMLExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\Advanced\XML\LinqToXMLExample.cs,LinqToXMLExample,The following statement contains a magic number: var models = new List<MyModel> () {  				new MyModel () { AnInt = 1' AString = "A"' ABool = true }'  				new MyModel () { AnInt = 2' AString = "B"' ABool = false }'  				new MyModel () { AnInt = 3' AString = "C"' ABool = false }'  				new MyModel () { AnInt = 4' AString = "D"' ABool = true }  			};
Magic Number,Advanced.XML,LinqToXMLExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\Advanced\XML\LinqToXMLExample.cs,Add,The following statement contains a magic number: var newModel = new XElement ("Model"'   				               new XAttribute ("AnInt"' 5)'             				               new XElement ("AString"' "E")'  				               new XElement ("ABool"' true));
Magic Number,Advanced.XML,LinqToXMLExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\Advanced\XML\LinqToXMLExample.cs,Edit,The following statement contains a magic number: xDoc.Descendants ("Model").First ().Attribute ("AnInt").SetValue (5);
Magic Number,MultiThreading.Spawning,AsynchronousDelegatesExamples,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\AsynchronousDelegates.cs,IsCompleted,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,AsynchronousDelegatesExamples,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\AsynchronousDelegates.cs,AsyncCallbackWithState,The following statement contains a magic number: var ar = d.BeginInvoke (true' 10'   				         new AsyncCallback (MyCallback)'   				         new object ());
Magic Number,MultiThreading.Spawning,AsynchronousDelegatesExamples,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\AsynchronousDelegates.cs,AsyncCallbackWithState,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,ForEach,The following statement contains a magic number: Parallel.ForEach (new List<int> () { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' anElement => {   				/*Some Process */   				//Thread.Sleep (1);  				count++;  			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,For,The following statement contains a magic number: Parallel.For (0' 10' i => {   				//Thread.Sleep (1);  				count++;  				/* Some Process */   			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,Stop,The following statement contains a magic number: Parallel.For (0' Int32.MaxValue' (i' loopState) => {   			  				count++;  				Thread.Sleep(1);    				if (i > 10) {  					loopState.Stop ();  				}  				/*Some Process */   			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,Break,The following statement contains a magic number: Parallel.For (0' Int32.MaxValue' (i' loopState) => {     				Thread.Sleep (1);  				count++;  				if (i > 10) {  					loopState.Stop ();  				}  				/* Some Process */   			});
Magic Number,MultiThreading.Spawning,ParallelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParallelExample.cs,Invoke,The following statement contains a magic number: Thread.Sleep (25);
Magic Number,MultiThreading.Spawning,ParameterizedThreadStartCancelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParameterizedThreadStartCancel.cs,ParameterizedThreadStartCancelExample,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ParameterizedThreadStartCancelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParameterizedThreadStartCancel.cs,ParameterizedThreadStartCancelExample,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ParameterizedThreadStartCancelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParameterizedThreadStartCancel.cs,ParameterizedThreadStartCancelExample,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ParameterizedThreadStartCancelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParameterizedThreadStartCancel.cs,MyMethod,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ParameterizedThreadStartCancelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ParameterizedThreadStartCancel.cs,MyMethod,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExtensions,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithDegreeOfParallelism,The following statement contains a magic number: return myData.AsParallel ().WithDegreeOfParallelism (2).Select (x => x).ToList ();
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsOrdered,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 1' 2' 3' 4' 5' 6 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,AsSequential,The following statement contains a magic number: var myData = new List<int> () { 9' 8' 7' 6' 5' 4' 3' 2' 1 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,ForAll,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellationExtension,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,CancellatioNatural,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,WithExecutionMode,The following statement contains a magic number: var myData = new List<int> () { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MultiThreading.Spawning,PLINQExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\PLINQExample.cs,PauseSelect,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,Result,The following statement contains a magic number: var aTask = new Task<bool> (() => {  				Thread.Sleep (10);  				IsSet = true;  				return true;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,ChildTasks,The following statement contains a magic number: Task<int[]> parent = Task.Run (() => {  				var results = new int[2];   				new Task (() => results [0] = 1'                       					TaskCreationOptions.AttachedToParent).Start ();                   				new Task (() => results [1] = 2'   					TaskCreationOptions.AttachedToParent).Start ();			             				return results;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,ChildTasks,The following statement contains a magic number: Task<int[]> parent = Task.Run (() => {  				var results = new int[2];   				new Task (() => results [0] = 1'                       					TaskCreationOptions.AttachedToParent).Start ();                   				new Task (() => results [1] = 2'   					TaskCreationOptions.AttachedToParent).Start ();			             				return results;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,TaskFactory,The following statement contains a magic number: Task<int[]> parent = Task.Run (() => {    				var results = new int[2];                       				TaskFactory tf = new TaskFactory (  					                 TaskCreationOptions.AttachedToParent'                      					                 TaskContinuationOptions.ExecuteSynchronously);                     				Task t1 = tf.StartNew (() => results [0] = 1);                   				Task t2 = tf.StartNew (() => results [1] = 2);      				         				Thread.Sleep(1);  				Task.WaitAll(t1' t2);     				return results;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,TaskFactory,The following statement contains a magic number: Task<int[]> parent = Task.Run (() => {    				var results = new int[2];                       				TaskFactory tf = new TaskFactory (  					                 TaskCreationOptions.AttachedToParent'                      					                 TaskContinuationOptions.ExecuteSynchronously);                     				Task t1 = tf.StartNew (() => results [0] = 1);                   				Task t2 = tf.StartNew (() => results [1] = 2);      				         				Thread.Sleep(1);  				Task.WaitAll(t1' t2);     				return results;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAll,The following statement contains a magic number: var tasks = new Task<int>[3];
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAll,The following statement contains a magic number: tasks [1] = Task.Run (() => {   				return 2;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAll,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				return 3;  			}  			);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAll,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				return 3;  			}  			);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: Task<int>[] tasks = new Task<int>[3];
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: tasks [0] = Task.Run (() => {  				Thread.Sleep (10);  				return 1;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: tasks [1] = Task.Run (() => {  				Thread.Sleep (20);  				return 2;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: tasks [1] = Task.Run (() => {  				Thread.Sleep (20);  				return 2;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				Thread.Sleep (30);  				return 3;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				Thread.Sleep (30);  				return 3;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				Thread.Sleep (30);  				return 3;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WaitAny,The following statement contains a magic number: result < 6
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WhenAll,The following statement contains a magic number: var tasks = new Task<int>[3];
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WhenAll,The following statement contains a magic number: tasks [0] = Task.Run (() => {  			  				Thread.Sleep (10);  				return 1;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WhenAll,The following statement contains a magic number: tasks [1] = Task.Run (() => {  				Thread.Sleep (20);  				return 2;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WhenAll,The following statement contains a magic number: tasks [1] = Task.Run (() => {  				Thread.Sleep (20);  				return 2;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WhenAll,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				Thread.Sleep (30);  				return 3;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WhenAll,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				Thread.Sleep (30);  				return 3;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,WhenAll,The following statement contains a magic number: tasks [2] = Task.Run (() => {  				Thread.Sleep (30);  				return 3;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,TimingOutATask,The following statement contains a magic number: var longRunning = Task.Run (() => {  				Thread.Sleep (10000);  				return 1;  			});
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,TimingOutATask,The following statement contains a magic number: Task.WaitAny (new[] { longRunning }' 10);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,CancellingATask,The following statement contains a magic number: Task.Run (() => {    				Thread.Sleep (10);    				while (true) {  					cts.Token.ThrowIfCancellationRequested ();  					Thread.Sleep (10);  				}					     			}' token).ContinueWith ((t) => {   				isCancelled = true;  			}' TaskContinuationOptions.OnlyOnCanceled);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,CancellingATask,The following statement contains a magic number: Task.Run (() => {    				Thread.Sleep (10);    				while (true) {  					cts.Token.ThrowIfCancellationRequested ();  					Thread.Sleep (10);  				}					     			}' token).ContinueWith ((t) => {   				isCancelled = true;  			}' TaskContinuationOptions.OnlyOnCanceled);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,CancellingATask,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,CancellingATask,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,TaskExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\TaskExample.cs,CancellingATask,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ThreadPoolCancelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ThreadPoolCancelExample.cs,ThreadPoolCancelExample,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ThreadPoolCancelExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ThreadPoolCancelExample.cs,ThreadPoolCancelExample,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning,ThreadPoolExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\MultiThreading\Spawning\ThreadPoolExample.cs,ThreadPoolExample,The following statement contains a magic number: Thread.Sleep (25);
Magic Number,TestingMoqingDebugging.Debugging,DebugExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\DebugExample.cs,Run,The following statement contains a magic number: int i = 1 + 2;
Magic Number,TestingMoqingDebugging.Debugging,LineDirective,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\LineDirective.cs,Example,The following statement contains a magic number: int b = 2;
Magic Number,TestingMoqingDebugging.Debugging,LineDirective,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\LineDirective.cs,Example,The following statement contains a magic number: int c = 3;
Magic Number,TestingMoqingDebugging.Debugging,LineDirective,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\LineDirective.cs,Example,The following statement contains a magic number: int d = 4;
Magic Number,TestingMoqingDebugging.Debugging,PerformanceEncounterCustomExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\PerformanceEncounterExample.cs,WriteCounters,The following statement contains a magic number: rateCounter.IncrementBy (x + 10);
Magic Number,TestingMoqingDebugging.Debugging,PerformanceEncounterCustomExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\PerformanceEncounterExample.cs,WriteCounters,The following statement contains a magic number: x < 5
Magic Number,TestingMoqingDebugging.Debugging,TraceSourceExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\TraceSourceExample.cs,Example,The following statement contains a magic number: TraceSource.TraceData (TraceEventType.Information' 1' new object[] { 1' 2' 3 });
Magic Number,TestingMoqingDebugging.Debugging,TraceSourceExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\TraceSourceExample.cs,Example,The following statement contains a magic number: TraceSource.TraceData (TraceEventType.Information' 1' new object[] { 1' 2' 3 });
Magic Number,TestingMoqingDebugging.Debugging,PerformanceCounterMemoryExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\TestingMoqingDebugging\Debugging\PerformanceCounterMemoryExample.cs,Example,The following statement contains a magic number: x < 1000
Missing Default,Advanced.XML,VAlidateXML,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamples\Advanced\XML\VAlidateXML.cs,ValidationEventHandler,The following switch statement is missing a default case: switch (e.Severity) {           			case XmlSeverityType.Error:               				HasError = true;  				break;           			case XmlSeverityType.Warning:               				HasWarning = true;  				break;       			}
