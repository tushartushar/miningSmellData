Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,SumConditionals_LinqExt,The length of the statement  "			var maleSonsCount = people.Where (x => x.Gender == Gender.Male).Sum (x => x.Children.Where (y => y.Gender == Gender.Male).Count ());  " is 132.
Long Statement,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ToList_LinqExt,The length of the statement  "			Assert.AreEqual ("Dave"' samplePeople.Find (x => x.Name.Equals ("Dave"' StringComparison.CurrentCultureIgnoreCase)).Name); " is 122.
Long Statement,Advanced.Delegates.Tests,ActionFuncAndPredicate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\ActionFuncAndPredicate.cs,FuncExamples,The length of the statement  "            Func<string> eHandler = () => string.Empty; // no parameters requires () unlike entities with only one parameter. when there is a return type we don't need {} " is 158.
Long Statement,Advanced.Delegates.Tests,ActionFuncAndPredicate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\ActionFuncAndPredicate.cs,PredicateExamples,The length of the statement  "            Predicate<int> bHandler = anInt => { return anInt > 1; };   // with only one parameter we don't need () surrounding the parameters " is 130.
Long Statement,Advanced.Delegates.Tests,DelegatesTestsWithGenerics,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\DelegatesToLambdaWithGenerics.cs,Test01CreateADelegateInstance,The length of the statement  "            ConcatToString<int> concatToStringHandler = new ConcatToString<int>(DelegatesTestsWithGenerics.ConcatToStringImplementation); " is 125.
Long Statement,Advanced.Delegates.Tests,DelegatesTestsWithGenerics,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\DelegatesToLambdaWithGenerics.cs,Test03AnonymousFunction,The length of the statement  "            ConcatToString<int> concatToStringHandler = delegate(int aValue' int bValue) { return string.Format("{0}{1}"' aValue' bValue); }; " is 129.
Long Statement,Advanced.Delegates.Tests,DelegatesToLambdaWithGlobalGenericsFunctions,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\DelegatesToLambdaWithGlobalGenericsFunctions.cs,Test03AnonymousFunction,The length of the statement  "            Func<int' int' string> concatToStringHandler = delegate(int aValue' int bValue) { return string.Format("{0}{1}"' aValue' bValue); }; " is 132.
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestAdd,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestAdd,The following statement contains a magic number: var two = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestAddInt,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPostIncrement,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPostIncrement,The following statement contains a magic number: Assert.AreEqual (11' one.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPostIncrement,The following statement contains a magic number: Assert.AreEqual (11' two.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPostDecrement,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPostDecrement,The following statement contains a magic number: Assert.AreEqual (9' one.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPostDecrement,The following statement contains a magic number: Assert.AreEqual (9' two.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPreIncrement,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPreIncrement,The following statement contains a magic number: Assert.AreEqual (11' one.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPreIncrement,The following statement contains a magic number: Assert.AreEqual (11' two.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPreDecrement,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPreDecrement,The following statement contains a magic number: Assert.AreEqual (9' one.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestPreDecrement,The following statement contains a magic number: Assert.AreEqual (9' two.Value);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestComparative,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestComparative,The following statement contains a magic number: var two = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestComparative,The following statement contains a magic number: var three = new ClassA (11);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestCompare,The following statement contains a magic number: var one = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestCompare,The following statement contains a magic number: var two = new ClassA (11);
Magic Number,Advanced.AdvancedFeatures.Tests,OperatorOverloadExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\OperatorOverloadExampleTests.cs,TestCompare,The following statement contains a magic number: var three = new ClassA (10);
Magic Number,Advanced.AdvancedFeatures.Tests,NullableExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\NullableExampleTest.cs,TestCase,The following statement contains a magic number: int aNull = 999;
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Lazy<List<int>> samples = new Lazy<List<int>>( () => new List<int>(){1'2'3'4'5'6'7'8'9});
Magic Number,Advanced.AdvancedFeatures.Tests,LazyLoadExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\LazyLoadExampleTest.cs,TestLazy,The following statement contains a magic number: Assert.AreEqual(9' samples.Value.Count);
Magic Number,Advanced.AdvancedFeatures.Tests,IndexedMethodExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\IndexedMethodExampleTest.cs,TestDblIntIndexedClass,The following statement contains a magic number: foo [1' 2] = 3;
Magic Number,Advanced.AdvancedFeatures.Tests,IndexedMethodExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\IndexedMethodExampleTest.cs,TestDblIntIndexedClass,The following statement contains a magic number: foo [1' 2] = 3;
Magic Number,Advanced.AdvancedFeatures.Tests,IndexedMethodExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\IndexedMethodExampleTest.cs,TestDblIntIndexedClass,The following statement contains a magic number: Assert.AreEqual (3' foo [1' 2]);
Magic Number,Advanced.AdvancedFeatures.Tests,IndexedMethodExampleTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\AdvancedFeatures\IndexedMethodExampleTest.cs,TestDblIntIndexedClass,The following statement contains a magic number: Assert.AreEqual (3' foo [1' 2]);
Magic Number,Advanced.AdvancedFeatures.Tests,RegularExspressionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\RegularExspressions\RegularExspressionTests.cs,TestMatches,The following statement contains a magic number: Assert.AreEqual(3' m.Count);
Magic Number,Advanced.AdvancedFeatures.Tests,RegularExspressionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\RegularExspressions\RegularExspressionTests.cs,TestMatches,The following statement contains a magic number: Assert.AreEqual(3' m[1].Index);
Magic Number,Advanced.AdvancedFeatures.Tests,RegularExspressionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\RegularExspressions\RegularExspressionTests.cs,TestMatches,The following statement contains a magic number: Assert.AreEqual(6' m[2].Index);
Magic Number,Advanced.AdvancedFeatures.Tests,RegularExspressionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\RegularExspressions\RegularExspressionTests.cs,TestMatches,The following statement contains a magic number: Assert.AreEqual(6' m[2].Index);
Magic Number,Advanced.AdvancedFeatures.Tests,RegularExspressionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\RegularExspressions\RegularExspressionTests.cs,TestMatches,The following statement contains a magic number: Assert.AreEqual("C3"' m[2].Value);
Magic Number,Advanced.AdvancedFeatures.Tests,RegularExspressionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\RegularExspressions\RegularExspressionTests.cs,TestSplit,The following statement contains a magic number: Assert.AreEqual (3' results.Length);
Magic Number,Advanced.AdvancedFeatures.Tests,RegularExspressionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\RegularExspressions\RegularExspressionTests.cs,TestSplit,The following statement contains a magic number: Assert.AreEqual ("C"' results [2]);
Magic Number,AssembliesReflectionSecurity.DynamicRuntime.Tests,DynamicTypeExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\AssembliesReflectionSecurity\DynamicRuntime\DynamicTypeExampleTests.cs,TestWithDynamic,The following statement contains a magic number: Assert.AreEqual (4' DynamicTypeExample.WithDynamic ());
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: int[] arrayInts = { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: int[] arrayInts = { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: Assert.AreEqual (3' arrayInts.Length);
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: List<int> listInts = new List<int> { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: List<int> listInts = new List<int> { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: Assert.AreEqual (3' listInts.Count);
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: ArrayList arrayListInts = new ArrayList { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: ArrayList arrayListInts = new ArrayList { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: Assert.AreEqual (3' arrayListInts.Count);
Magic Number,Advanced.Collections.Tests,CollectionInitializationTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\CollectionInitialization.cs,CollectionInitialization,The following statement contains a magic number: Assert.AreEqual (2' foos.Count);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestIndexMethod,The following statement contains a magic number: myInts [0] = 999;
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestIndexMethod,The following statement contains a magic number: Assert.AreEqual (999' myInts [0]);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: var collInitOne = new int[] { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: var collInitOne = new int[] { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: Assert.AreEqual (3' collInitOne.Length);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: int[] collInitTwo = { 1' 2' 3' 4 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: int[] collInitTwo = { 1' 2' 3' 4 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: int[] collInitTwo = { 1' 2' 3' 4 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: Assert.AreEqual (4' collInitTwo.Length);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: var collInitThree = new int[5] { 1' 2' 3' 4' 5 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: var collInitThree = new int[5] { 1' 2' 3' 4' 5 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: var collInitThree = new int[5] { 1' 2' 3' 4' 5 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: var collInitThree = new int[5] { 1' 2' 3' 4' 5 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: var collInitThree = new int[5] { 1' 2' 3' 4' 5 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestCollectionInitializer,The following statement contains a magic number: Assert.AreEqual (5' collInitThree.Length);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestMultiDimensionArray,The following statement contains a magic number: var mdArray = new int[3' 3];
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestMultiDimensionArray,The following statement contains a magic number: var mdArray = new int[3' 3];
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestMultiDimensionArray,The following statement contains a magic number: mdArray [1' 2] = 9;
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestMultiDimensionArray,The following statement contains a magic number: mdArray [1' 2] = 9;
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestMultiDimensionArray,The following statement contains a magic number: Assert.AreEqual (9' mdArray [1' 2]);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestMultiDimensionArray,The following statement contains a magic number: Assert.AreEqual (9' mdArray [1' 2]);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestJaggedArray,The following statement contains a magic number: var jaggedArray = new int[6][];
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestJaggedArray,The following statement contains a magic number: jaggedArray [0] = new int[2];
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestJaggedArray,The following statement contains a magic number: jaggedArray [1] = new int[20];
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestJaggedArray,The following statement contains a magic number: Assert.AreEqual (6' jaggedArray.Length);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestJaggedArray,The following statement contains a magic number: Assert.AreEqual (2' jaggedArray [0].Length);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestJaggedArray,The following statement contains a magic number: Assert.AreEqual (20' jaggedArray [1].Length);
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestSort,The following statement contains a magic number: var sortArray = new int[] { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestSort,The following statement contains a magic number: var sortArray = new int[] { 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayExampleTests.cs,TestSort,The following statement contains a magic number: Assert.AreEqual (3' sortArray [0]);
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: anArrayList.InsertRange( 1' new ArrayList(){1'2'3'4'5'6'7'8'9} );
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual (10' anArrayList.Count);
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestIteration,The following statement contains a magic number: ArrayList anArrayList = new ArrayList (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestIteration,The following statement contains a magic number: ArrayList anArrayList = new ArrayList (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestIteration,The following statement contains a magic number: Assert.AreEqual (3' count);
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestToArray,The following statement contains a magic number: ArrayList anArrayList = new ArrayList (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestToArray,The following statement contains a magic number: ArrayList anArrayList = new ArrayList (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestSort,The following statement contains a magic number: ArrayList anArrayList = new ArrayList (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestSort,The following statement contains a magic number: ArrayList anArrayList = new ArrayList (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ArrayListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ArrayListExampleTests.cs,TestSort,The following statement contains a magic number: Assert.AreEqual (3' anArrayList [0]);
Magic Number,Advanced.Collections.Tests,DictionaryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\DictionaryExampleTests.cs,TestIteration,The following statement contains a magic number: aDict.Add ("Two"' 2);
Magic Number,Advanced.Collections.Tests,DictionaryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\DictionaryExampleTests.cs,TestIteration,The following statement contains a magic number: aDict.Add ("Three"' 3);
Magic Number,Advanced.Collections.Tests,DictionaryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\DictionaryExampleTests.cs,TestIteration,The following statement contains a magic number: Assert.AreEqual (11' count);
Magic Number,Advanced.Collections.Tests,DictionaryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\DictionaryExampleTests.cs,TestIteration,The following statement contains a magic number: Assert.AreEqual (6' sum);
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestUnionWith,The following statement contains a magic number: var bSet = new HashSet<int> { 1' 2 };
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestUnionWith,The following statement contains a magic number: Assert.IsTrue (aSet.Contains (2));
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestUnionWith,The following statement contains a magic number: Assert.AreEqual (2' aSet.Count);
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestExceptWith,The following statement contains a magic number: var aSet = new HashSet<int> { 1' 2 };
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestExceptWith,The following statement contains a magic number: Assert.IsTrue (aSet.Contains (2));
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestIntersectWith,The following statement contains a magic number: var aSet = new HashSet<int> { 1' 2 };
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestIntersectWith,The following statement contains a magic number: Assert.IsFalse (aSet.Contains (2));
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestSubSetSuperSet,The following statement contains a magic number: var aSet = new HashSet<int> { 1' 2 };
Magic Number,Advanced.Collections.Tests,HashSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\HashSetExampleTests.cs,TestOverlaps,The following statement contains a magic number: var aSet = new HashSet<int> { 1' 2 };
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestAddGetRemove,The following statement contains a magic number: Assert.AreEqual (3' foos.Count);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestAddGetRemove,The following statement contains a magic number: foos [2] = "MooFoey!";
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestAddGetRemove,The following statement contains a magic number: Assert.AreEqual ("MooFoey!"' foos [2]);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestAddGetRemove,The following statement contains a magic number: Assert.AreEqual (4' foos.Count);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestAddGetRemove,The following statement contains a magic number: Assert.AreEqual (3' foos.Count);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestAddGetRemove,The following statement contains a magic number: Assert.AreEqual (4' foos.Count);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestAddGetRemove,The following statement contains a magic number: Assert.AreEqual (7' foos.Count);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestIteration,The following statement contains a magic number: var foos = new List<int> (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestIteration,The following statement contains a magic number: var foos = new List<int> (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestIteration,The following statement contains a magic number: Assert.AreEqual (6' sum);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestCapacityAndTrim,The following statement contains a magic number: var foos = new List<int> (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,TestCapacityAndTrim,The following statement contains a magic number: var foos = new List<int> (){ 1' 2' 3 };
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,Foo,The following statement contains a magic number: Assert.AreEqual ("Aa"' foos [2]);
Magic Number,Advanced.Collections.Tests,ListExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ListExampleTests.cs,Foo,The following statement contains a magic number: Assert.AreEqual ("aa"' foos [2]);
Magic Number,Advanced.Collections.Tests,ObservableCollectionExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ObservableCollectionExampleTests.cs,TestCollections,The following statement contains a magic number: foo.CollectionChanged += (object sender' NotifyCollectionChangedEventArgs e) => {    				if (e.Action == NotifyCollectionChangedAction.Add) {  					addCount += 1;  					addSum += e.NewItems.Cast<int> ().Sum (x => x);  				}    				if (e.Action == NotifyCollectionChangedAction.Remove) {  					removeCount += 1;  					removeSum += e.OldItems.Cast<int> ().Except (e.NewItems.Cast<int> ()).Sum (x => x);  				}    				foo.Add (1);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 1);    				foo.Add (2);  				Assert.AreEqual (addCount' 2);  				Assert.AreEqual (addSum' 3);    				foo.Remove (2);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 2);  			};
Magic Number,Advanced.Collections.Tests,ObservableCollectionExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ObservableCollectionExampleTests.cs,TestCollections,The following statement contains a magic number: foo.CollectionChanged += (object sender' NotifyCollectionChangedEventArgs e) => {    				if (e.Action == NotifyCollectionChangedAction.Add) {  					addCount += 1;  					addSum += e.NewItems.Cast<int> ().Sum (x => x);  				}    				if (e.Action == NotifyCollectionChangedAction.Remove) {  					removeCount += 1;  					removeSum += e.OldItems.Cast<int> ().Except (e.NewItems.Cast<int> ()).Sum (x => x);  				}    				foo.Add (1);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 1);    				foo.Add (2);  				Assert.AreEqual (addCount' 2);  				Assert.AreEqual (addSum' 3);    				foo.Remove (2);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 2);  			};
Magic Number,Advanced.Collections.Tests,ObservableCollectionExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ObservableCollectionExampleTests.cs,TestCollections,The following statement contains a magic number: foo.CollectionChanged += (object sender' NotifyCollectionChangedEventArgs e) => {    				if (e.Action == NotifyCollectionChangedAction.Add) {  					addCount += 1;  					addSum += e.NewItems.Cast<int> ().Sum (x => x);  				}    				if (e.Action == NotifyCollectionChangedAction.Remove) {  					removeCount += 1;  					removeSum += e.OldItems.Cast<int> ().Except (e.NewItems.Cast<int> ()).Sum (x => x);  				}    				foo.Add (1);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 1);    				foo.Add (2);  				Assert.AreEqual (addCount' 2);  				Assert.AreEqual (addSum' 3);    				foo.Remove (2);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 2);  			};
Magic Number,Advanced.Collections.Tests,ObservableCollectionExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ObservableCollectionExampleTests.cs,TestCollections,The following statement contains a magic number: foo.CollectionChanged += (object sender' NotifyCollectionChangedEventArgs e) => {    				if (e.Action == NotifyCollectionChangedAction.Add) {  					addCount += 1;  					addSum += e.NewItems.Cast<int> ().Sum (x => x);  				}    				if (e.Action == NotifyCollectionChangedAction.Remove) {  					removeCount += 1;  					removeSum += e.OldItems.Cast<int> ().Except (e.NewItems.Cast<int> ()).Sum (x => x);  				}    				foo.Add (1);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 1);    				foo.Add (2);  				Assert.AreEqual (addCount' 2);  				Assert.AreEqual (addSum' 3);    				foo.Remove (2);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 2);  			};
Magic Number,Advanced.Collections.Tests,ObservableCollectionExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\ObservableCollectionExampleTests.cs,TestCollections,The following statement contains a magic number: foo.CollectionChanged += (object sender' NotifyCollectionChangedEventArgs e) => {    				if (e.Action == NotifyCollectionChangedAction.Add) {  					addCount += 1;  					addSum += e.NewItems.Cast<int> ().Sum (x => x);  				}    				if (e.Action == NotifyCollectionChangedAction.Remove) {  					removeCount += 1;  					removeSum += e.OldItems.Cast<int> ().Except (e.NewItems.Cast<int> ()).Sum (x => x);  				}    				foo.Add (1);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 1);    				foo.Add (2);  				Assert.AreEqual (addCount' 2);  				Assert.AreEqual (addSum' 3);    				foo.Remove (2);  				Assert.AreEqual (addCount' 1);  				Assert.AreEqual (addSum' 2);  			};
Magic Number,Advanced.Collections.Tests,QueueExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\QueueExampleTests.cs,TestExample,The following statement contains a magic number: foos.Enqueue (2);
Magic Number,Advanced.Collections.Tests,QueueExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\QueueExampleTests.cs,TestExample,The following statement contains a magic number: Assert.AreEqual (2' foos.Peek ());
Magic Number,Advanced.Collections.Tests,SortedSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\SortedSetExampleTests.cs,TestExample,The following statement contains a magic number: foos.Add (new Foo (){ Age = 9 });
Magic Number,Advanced.Collections.Tests,SortedSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\SortedSetExampleTests.cs,TestExample,The following statement contains a magic number: foos.Add (new Foo (){ Age = 5 });
Magic Number,Advanced.Collections.Tests,SortedSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\SortedSetExampleTests.cs,TestExample,The following statement contains a magic number: foos.Add (new Foo (){ Age = 11 });
Magic Number,Advanced.Collections.Tests,SortedSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\SortedSetExampleTests.cs,TestExample,The following statement contains a magic number: Assert.AreEqual (11' foos.Max.Age);
Magic Number,Advanced.Collections.Tests,StackExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\StackExampleTests.cs,TestStackExample,The following statement contains a magic number: fooStack.Push (2);
Magic Number,Advanced.Collections.Tests,StackExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\StackExampleTests.cs,TestStackExample,The following statement contains a magic number: Assert.AreEqual (2' fooStack.Peek ());
Magic Number,Advanced.Collections.Tests,StackExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Collections\StackExampleTests.cs,TestStackExample,The following statement contains a magic number: Assert.AreEqual (2' fooStack.Pop ());
Magic Number,Advanced.Streams.Tests,BinaryReaderWriterTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\BinaryReaderWriterTests.cs,TestCase,The following statement contains a magic number: var theData = new TheData (){ ABool = true' AChar = 'A'' ADouble = 2' AnInt = 33 };
Magic Number,Advanced.Streams.Tests,BinaryReaderWriterTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\BinaryReaderWriterTests.cs,TestCase,The following statement contains a magic number: var theData = new TheData (){ ABool = true' AChar = 'A'' ADouble = 2' AnInt = 33 };
Magic Number,Advanced.Streams.Tests,StreamReaderWriterExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\StreamReaderWriterExampleTests.cs,TestCase,The following statement contains a magic number: var theData = new TheData (){ ABool = true' AChar = 'A'' ADouble = 2' AnInt = 33 };
Magic Number,Advanced.Streams.Tests,StreamReaderWriterExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\StreamReaderWriterExampleTests.cs,TestCase,The following statement contains a magic number: var theData = new TheData (){ ABool = true' AChar = 'A'' ADouble = 2' AnInt = 33 };
Magic Number,Advanced.Streams.Tests,StreamReaderWriterExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\StreamReaderWriterExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (theData.ADouble.ToString ()' aOutStrings [2]);
Magic Number,Advanced.Streams.Tests,StreamReaderWriterExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\StreamReaderWriterExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (theData.AnInt.ToString ()' aOutStrings [3]);
Magic Number,Advanced.Streams.Tests,FileSystemWatcherExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\FileSystemWatcherExampleTests.cs,TestCase,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,Advanced.Streams.Tests,FileSystemWatcherExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\FileSystemWatcherExampleTests.cs,TestCase,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,Advanced.Streams.Tests,FileSystemWatcherExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\FileSystemWatcherExampleTests.cs,TestCase,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,Advanced.Streams.Tests,FileSystemWatcherExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\FileSystemWatcherExampleTests.cs,TestCase,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,Advanced.Streams.Tests,FileSystemWatcherExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Streams\FileSystemWatcherExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (3' watcher.OnChangedCount);
Magic Number,Advanced.Serialization.Tests,JavaScriptSerializerExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Serialization\JavaScriptSerializerExampleTests.cs,TestCase,The following statement contains a magic number: var models = new List<MyModel> () {  				new MyModel () { AnInt = 1' AString = "A"' ABool = true }'  				new MyModel () { AnInt = 2' AString = "B"' ABool = false }'  				new MyModel () { AnInt = 3' AString = "C"' ABool = false }'  				new MyModel () { AnInt = 4' AString = "D"' ABool = true }'  			};
Magic Number,Advanced.Serialization.Tests,JavaScriptSerializerExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Serialization\JavaScriptSerializerExampleTests.cs,TestCase,The following statement contains a magic number: var models = new List<MyModel> () {  				new MyModel () { AnInt = 1' AString = "A"' ABool = true }'  				new MyModel () { AnInt = 2' AString = "B"' ABool = false }'  				new MyModel () { AnInt = 3' AString = "C"' ABool = false }'  				new MyModel () { AnInt = 4' AString = "D"' ABool = true }'  			};
Magic Number,Advanced.Serialization.Tests,JavaScriptSerializerExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Serialization\JavaScriptSerializerExampleTests.cs,TestCase,The following statement contains a magic number: var models = new List<MyModel> () {  				new MyModel () { AnInt = 1' AString = "A"' ABool = true }'  				new MyModel () { AnInt = 2' AString = "B"' ABool = false }'  				new MyModel () { AnInt = 3' AString = "C"' ABool = false }'  				new MyModel () { AnInt = 4' AString = "D"' ABool = true }'  			};
Magic Number,Advanced.XML.Tests,LinqToXMLExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\XML\LinqToXMLExampleTests.cs,TestQueryInt,The following statement contains a magic number: Assert.AreEqual(2' sut.GetAnIntes (2));
Magic Number,Advanced.XML.Tests,LinqToXMLExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\XML\LinqToXMLExampleTests.cs,TestQueryInt,The following statement contains a magic number: Assert.AreEqual(2' sut.GetAnIntes (2));
Magic Number,Advanced.XML.Tests,LinqToXMLExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\XML\LinqToXMLExampleTests.cs,TestQueryString,The following statement contains a magic number: Assert.AreEqual(4' sut.GetAStrings ().Count);
Magic Number,Advanced.XML.Tests,LinqToXMLExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\XML\LinqToXMLExampleTests.cs,TestAdd,The following statement contains a magic number: Assert.AreEqual(5' sut.Add ());
Magic Number,Advanced.XML.Tests,LinqToXMLExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\XML\LinqToXMLExampleTests.cs,TestRemove,The following statement contains a magic number: Assert.AreEqual(3' sut.Remove ());
Magic Number,Advanced.XML.Tests,LinqToXMLExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\XML\LinqToXMLExampleTests.cs,TestEdit,The following statement contains a magic number: Assert.AreEqual(5' sut.Edit ());
Magic Number,AssembliesReflectionSecurity.Assembilies.Tests,ConfigurationManagerExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\AssembliesReflectionSecurity\Assemblies\ConfigurationManagerExampleTests.cs,TestIterCount,The following statement contains a magic number: Assert.AreEqual (2' ConfigurationManagerExample.GetIterCount ());
Magic Number,MultiThreading.Spawning.Tests,ParameterizedThreadStartExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\ParameterizedThreadStartExampleTests.cs,TestCase,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,MultiThreading.Spawning.Tests,TimerExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\TimerExampleTests.cs,TestCase,The following statement contains a magic number: Assert.Greater (100' sut.Count);
Magic Number,MultiThreading.Spawning.Tests,TaskExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\TaskExampleTests.cs,TestChildTasks,The following statement contains a magic number: Assert.AreEqual (3' result);
Magic Number,MultiThreading.Spawning.Tests,TaskExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\TaskExampleTests.cs,TestTaskFactory,The following statement contains a magic number: Assert.AreEqual (3' result);
Magic Number,MultiThreading.Spawning.Tests,TaskExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\TaskExampleTests.cs,TestWaitAll,The following statement contains a magic number: Assert.AreEqual (6' result);
Magic Number,MultiThreading.Spawning.Tests,TaskExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\TaskExampleTests.cs,TestWaitAny,The following statement contains a magic number: Assert.AreEqual (6' result);
Magic Number,MultiThreading.Spawning.Tests,TaskExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\TaskExampleTests.cs,TestWhenAll,The following statement contains a magic number: Assert.AreEqual (6' result);
Magic Number,MultiThreading.Spawning.Tests,ParallelExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\ParallelExampleTests.cs,TestFor,The following statement contains a magic number: Assert.AreEqual (10' sut.count);
Magic Number,MultiThreading.Spawning.Tests,ParallelExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\ParallelExampleTests.cs,TestForEach,The following statement contains a magic number: Assert.AreEqual (10' sut.count);
Magic Number,MultiThreading.Spawning.Tests,ParallelExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\ParallelExampleTests.cs,TestStop,The following statement contains a magic number: Assert.GreaterOrEqual (10' sut.count);
Magic Number,MultiThreading.Spawning.Tests,ParallelExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\ParallelExampleTests.cs,TestBreak,The following statement contains a magic number: Assert.GreaterOrEqual (10' sut.count);
Magic Number,MultiThreading.Spawning.Tests,ParallelExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\ParallelExampleTests.cs,TestInvoke,The following statement contains a magic number: Assert.AreEqual (4' sut.count);
Magic Number,MultiThreading.Spawning.Tests,AsyncExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\AsyncExampleTests.cs,TestCaseNo,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning.Tests,FileIOAsyncExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\FileIOAsyncExampleTests.cs,TestCase,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning.Tests,FileIOAsyncExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\FileIOAsyncExampleTests.cs,TestCase,The following statement contains a magic number: Thread.Sleep (10);
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExtensions,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExtensions ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithDegreeOfParallelism,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithDegreeOfParallelism ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsOrdered,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 9' 8' 7' 1' 2' 3' 4' 5' 6 }' sut.AsOrdered ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestAsSequential,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.AsSequential ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestForAll,The following statement contains a magic number: Assert.AreEqual (9' sut.ForAll ().Count);
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellationExtension,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellationExtension ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestCancellatioNatural,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.CancellatioNatural ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.Spawning.Tests,PLINQExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\Spawning\PLINQExampleTests.cs,TestWithExecutionMode,The following statement contains a magic number: Assert.AreEqual (new List<int> (){ 1' 2' 3' 4' 5' 6' 7' 8' 9 }' sut.WithExecutionMode ());
Magic Number,MultiThreading.ThreadSynchronization.Tests,AutoResetEventExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ThreadSynchronization\AutoResetEventExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (3' sut.Counter);
Magic Number,MultiThreading.ThreadSynchronization.Tests,InterlockedExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ThreadSynchronization\InterlockedExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (20' sut.ANumber);
Magic Number,MultiThreading.ThreadSynchronization.Tests,LockRegionTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ThreadSynchronization\LockRegionTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (2' sut.Counter);
Magic Number,MultiThreading.ThreadSynchronization.Tests,MonitorExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ThreadSynchronization\MonitorExampleTests.cs,TestEnterExample,The following statement contains a magic number: Assert.AreEqual (2' sut.Counter);
Magic Number,MultiThreading.ThreadSynchronization.Tests,ThreadJoinExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ThreadSynchronization\ThreadJoinExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (2' sut.Counter);
Magic Number,MultiThreading.ThreadSynchronization.Tests,SynchronizationAttributeExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ThreadSynchronization\SynchronizationAttributeExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (4' sut.SAE.Counter);
Magic Number,MultiThreading.ConcurrentCollections.Tests,BlockingCollectionExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\BlockingCollectionExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (10' result);
Magic Number,MultiThreading.ConcurrentCollections.Tests,BlockingCollectionExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\BlockingCollectionExampleTests.cs,TestGetConsumingEnumerablexample,The following statement contains a magic number: Assert.AreEqual (10' result);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentBagTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentBagTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (10' sut.Count);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentDictionaryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExampleTests.cs,TestTryAddUpdate,The following statement contains a magic number: Assert.AreEqual (285' sut.Result);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentDictionaryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExampleTests.cs,TestAddOrUpdate,The following statement contains a magic number: Assert.AreEqual (12' sut.Result);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentDictionaryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentDictionaryExampleTests.cs,TestGetOrAdd,The following statement contains a magic number: Assert.AreEqual (12' sut.Result);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentQueueExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentQueueExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (10' sut.Put);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentQueueExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentQueueExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (10' sut.Take);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentStackExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentStackExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (10' sut.Take);
Magic Number,MultiThreading.ConcurrentCollections.Tests,ConcurrentStackExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\MultiThreading\ConcurrentCollections\ConcurrentStackExampleTests.cs,TestCaseTwo,The following statement contains a magic number: Assert.AreEqual(2' sut.ConcurrentStackExampleRange ());
Magic Number,AssembliesReflectionSecurity.Security.Tests,ToHashTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\AssembliesReflectionSecurity\Security\ToHashTest.cs,TestCase,The following statement contains a magic number: var sut = new ToHash (){ FieldString = "AString"' FieldBool = true' FieldInt = 99' FieldDecimal = 66.666m };
Magic Number,AssembliesReflectionSecurity.Security.Tests,ToHashTest,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\AssembliesReflectionSecurity\Security\ToHashTest.cs,TestCase,The following statement contains a magic number: var sut = new ToHash (){ FieldString = "AString"' FieldBool = true' FieldInt = 99' FieldDecimal = 66.666m };
Magic Number,ADO.ConnectedLayer.Tests,DataReaderMultiSelectExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\ConnectedLayer\DataReaderMultiSelectExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (2' count);
Magic Number,ADO.DisconnectedLayer.Tests,AccesingDataWithinADataSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\AccesingDataWithinADataSetExampleTests.cs,TestAccessingDataTable,The following statement contains a magic number: Assert.AreEqual (2' tableCount);
Magic Number,ADO.DisconnectedLayer.Tests,AccesingDataWithinADataSetExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\AccesingDataWithinADataSetExampleTests.cs,TestAccessingDataColumn,The following statement contains a magic number: Assert.AreEqual (4' colCount);
Magic Number,ADO.DisconnectedLayer.Tests,CallingAStoredProcesureExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\CallingAStoredProcesureExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (2' aDS.Tables.Count);
Magic Number,ADO.DisconnectedLayer.Tests,LinqToDataSetTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\LinqToDataSetTests.cs,TestSelectAll,The following statement contains a magic number: Assert.AreEqual (5' result.Count);
Magic Number,ADO.DisconnectedLayer.Tests,LinqToDataSetTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\LinqToDataSetTests.cs,TestSelectAllOrderByAgeDescending,The following statement contains a magic number: Assert.AreEqual (5' result.Count);
Magic Number,ADO.DisconnectedLayer.Tests,LinqToDataSetTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\LinqToDataSetTests.cs,TestSelectAllOrderByAgeDescending,The following statement contains a magic number: Assert.AreEqual (34' result.FirstOrDefault () ["Age"]);
Magic Number,ADO.DisconnectedLayer.Tests,LinqToDataSetTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\LinqToDataSetTests.cs,TestSelectAllOrderByAgeDescending,The following statement contains a magic number: Assert.AreEqual (30' result.LastOrDefault () ["Age"]);
Magic Number,ADO.DisconnectedLayer.Tests,LinqToDataSetTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\LinqToDataSetTests.cs,TestGetTotalAgeViaAnonymous,The following statement contains a magic number: Assert.AreEqual (160' result);
Magic Number,ADO.DisconnectedLayer.Tests,ManipulateDataExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\ManipulateDataExampleTests.cs,TestDataRowState,The following statement contains a magic number: row [0] = 11;
Magic Number,ADO.DisconnectedLayer.Tests,ManipulateDataExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\ManipulateDataExampleTests.cs,TestDeletingExample,The following statement contains a magic number: Assert.AreEqual (preCount - 2' aDataTable.Rows.Count);
Magic Number,ADO.DisconnectedLayer.Tests,ManipulateDataExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\ManipulateDataExampleTests.cs,TestUpdatingExample,The following statement contains a magic number: aDataTable.Rows [0] ["idMyTable"] = 987654321;
Magic Number,ADO.DisconnectedLayer.Tests,ManipulateDataExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\ManipulateDataExampleTests.cs,TestUpdatingExample,The following statement contains a magic number: aDataRow ["idMyTable"] = 987654321;
Magic Number,ADO.DisconnectedLayer.Tests,ManipulateDataExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\ManipulateDataExampleTests.cs,TestValidatingExample,The following statement contains a magic number: Assert.AreEqual (2' dataRow.GetColumnsInError ().Length);
Magic Number,ADO.DisconnectedLayer.Tests,CreateSchemaExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\CreateSchemaExampleTests.cs,TestRelations,The following statement contains a magic number: x < 10
Magic Number,ADO.DisconnectedLayer.Tests,CreateSchemaExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\ADO\DisconnectedLayer\CreateSchemaExampleTests.cs,TestRelations,The following statement contains a magic number: sut.DS.Tables ["TheParent"].Rows [5].Delete ();
Magic Number,TestingMoqingDebugging.Debugging.Tests,EventLogSampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\Debugging\EventLogSampleTests.cs,TestSubscribe,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,TestingMoqingDebugging.Debugging.Tests,EventLogSampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\Debugging\EventLogSampleTests.cs,TestSubscribe,The following statement contains a magic number: x < 10
Magic Number,TestingMoqingDebugging.Debugging.Tests,PerformanceCounterMemoryExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\Debugging\PerformanceCounterMemoryExampleTests.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (1000' result.Count);
Magic Number,TestingMoqingDebugging.Debugging.Tests,PerformanceEncounterCustomExampleTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\Debugging\PerformanceEncounterCustomExampleTests.cs,TestCase,The following statement contains a magic number: Assert.GreaterOrEqual (hit' 5);
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListInts,The following statement contains a magic number: Assert.AreEqual (5.5' MeanCalculator.Calculate<int> (new List<int> (){1' 2' 3' 4' 5' 6' 7' 8' 9' 10}));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: var calc = MeanCalculator.Calculate<double>   				(new List<double> (){1.1' 2.2' 3.3' 4.4' 5.5' 6.6' 7.7' 8.9' 9.9});
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: Assert.AreEqual (5.51' Math.Round (calc' 2));
Magic Number,Advanced.Generics.Tests,MeanCalculatorTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\MeanCalculatorTests.cs,CanCalculateMeanOfListDecimas,The following statement contains a magic number: Assert.AreEqual (5.51' Math.Round (calc' 2));
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseTests.cs,ReturnsCorrectValueWhenCanParse,The following statement contains a magic number: Assert.AreEqual (11' "11".Parse<int> ());
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseTests.cs,ReturnsCorrectTypeWhenCanParse,The following statement contains a magic number: Assert.AreEqual (11m' aValue);
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseWithDefauyltTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseWithDefaultTests.cs,ReturnsDefaultValueWhenCanNotParse,The following statement contains a magic number: Assert.AreEqual (11' "AAA".Parse<int> (11));
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseWithDefauyltTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseWithDefaultTests.cs,ReturnsDefaultValueWhenCanNotParse,The following statement contains a magic number: Assert.AreEqual (11' "AAA".Parse<int> (11));
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseWithDefauyltTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseWithDefaultTests.cs,ReturnsCorrectValueWhenCanParse,The following statement contains a magic number: Assert.AreEqual (11' "11".Parse<int> (1));
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseWithDefauyltTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseWithDefaultTests.cs,ReturnsCorrectTypeWhenCanParse,The following statement contains a magic number: Assert.AreEqual (11.11m' aValue);
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseWithDefauyltTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseWithDefaultTests.cs,ReturnsCorrectTypeWhenCanNotParse,The following statement contains a magic number: var aValue = "aaa".Parse<decimal> (11.11m);
Magic Number,Advanced.Generics.Tests,PrimativeTypeParseWithDefauyltTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeParseWithDefaultTests.cs,ReturnsCorrectTypeWhenCanNotParse,The following statement contains a magic number: Assert.AreEqual (11.11m' aValue);
Magic Number,Advanced.Generics.Tests,PrimativeTypeTryParseTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeTryParseTests.cs,ReturnsCorrectValueWhenCanParse,The following statement contains a magic number: Assert.AreEqual (11' "11".TryParse<int> ());
Magic Number,Advanced.Generics.Tests,PrimativeTypeTryParseTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Generics\PrimativeTypeTryParseTests.cs,ReturnsCorrectTypeWhenCanParse,The following statement contains a magic number: Assert.AreEqual (11' aValue);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Count_LinqExt,The following statement contains a magic number: Assert.AreEqual (7' count);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Count_Linq,The following statement contains a magic number: Assert.AreEqual (7' count);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,CountConditions_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' count);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,CountConditions_Linq,The following statement contains a magic number: Assert.AreEqual (5' count);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,CountNested_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' samplePeople.Where (x => x.Name == "Sara").First ().ChildrenCount);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,CountNested_Linq,The following statement contains a magic number: Assert.AreEqual (3' samplePeople.Where (x => x.Name == "Sara").First ().ChildrenCount);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,CountGrouped_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' samplePeople.Where (x => x.Name == "Sara").First ().ChildrenCount);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Sum_LinqExt,The following statement contains a magic number: Assert.AreEqual (10' childrenCount);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,SumConditionals_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' maleSonsCount);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Min_Linq,The following statement contains a magic number: Assert.AreEqual (5' children.Where( x => x.Gender == Gender.Male).FirstOrDefault().Value);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Min_Linq,The following statement contains a magic number: Assert.AreEqual (2' children.Where( x => x.Gender == Gender.Female).FirstOrDefault().Value);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Max_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' maxChildrenCount);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Average_LinqExt,The following statement contains a magic number: Assert.AreEqual (1.43' Math.Round (avgChildrenCount' 2));
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,Average_LinqExt,The following statement contains a magic number: Assert.AreEqual (1.43' Math.Round (avgChildrenCount' 2));
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,MinMaxGrouped_LinqExt,The following statement contains a magic number: var samplePeople = people.GroupBy (x => x.Gender).  				Select (y => new { Key = y.Key'   					Average = Math.Round (y.Average (z => z.Children.Count ())' 2)'  					Min = y.Min (z => z.Children.Count ())'  					Max = y.Max (z => z.Children.Count ())}  			);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,MinMaxGrouped_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,MinMaxGrouped_LinqExt,The following statement contains a magic number: Assert.AreEqual (2.5m' samplePeople.Where (x => x.Key == Gender.Female).FirstOrDefault ().Average);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,MinMaxGrouped_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Where (x => x.Key == Gender.Female).FirstOrDefault ().Min);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,MinMaxGrouped_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' samplePeople.Where (x => x.Key == Gender.Female).FirstOrDefault ().Max);
Magic Number,Advanced.Linq.Tests,Aggregate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Aggregate.cs,MinMaxGrouped_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Where (x => x.Key == Gender.Male).FirstOrDefault ().Max);
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ToArray_LinqExt,The following statement contains a magic number: Assert.AreEqual (7' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ToList_LinqExt,The following statement contains a magic number: Assert.AreEqual (7' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ToDictionary_LinqExt,The following statement contains a magic number: Assert.AreEqual (7' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ToDictionary_LinqExt,The following statement contains a magic number: Assert.AreEqual (7' samplePeople.Keys.Count);
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: var sampleIntNumbers = new List<object> (){ 1'2'3'4'5'6m'7'8m'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,OfType_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' sampleDecimalNumbers.Count ());
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<object> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,Cast_LinqExt,The following statement contains a magic number: Assert.AreEqual (10' sampleIntNumbers.Count ());
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: var sampleObjNumbers = new List<int> (){ 1'2'3'4'5'6'7'8'9'10};
Magic Number,Advanced.Linq.Tests,Conversion,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Conversions.cs,ConvertAll_LinqExt,The following statement contains a magic number: Assert.AreEqual (10' sampleIntNumbers.Count ());
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,Where_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' people.Where (x => x.Age < 30).Count ());
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,Where_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' people.Where (x => x.Age < 30).Count ());
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,Where_Linq,The following statement contains a magic number: var count = (from p in people  			             where p.Age < 30  			             select p).Count ();
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,Where_Linq,The following statement contains a magic number: Assert.AreEqual (3' count);
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,WhereWithIndex_LinqExt,The following statement contains a magic number: Assert.AreEqual (1' people.Where (( x' index ) => index <= 4 && x.Age < 30).Count ());
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,WhereWithIndex_LinqExt,The following statement contains a magic number: Assert.AreEqual (1' people.Where (( x' index ) => index <= 4 && x.Age < 30).Count ());
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,WhereWithDrilled_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' people.Where (x => x.Children.Count () > 0).Count ());
Magic Number,Advanced.Linq.Tests,Filters,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Filters.cs,WhereWithDrilled_Linq,The following statement contains a magic number: Assert.AreEqual (5' count);
Magic Number,Advanced.Linq.Tests,Generation,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Generation.cs,Range_LinqExt,The following statement contains a magic number: var sampleInts = Enumerable.Range(1' 10);
Magic Number,Advanced.Linq.Tests,Generation,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Generation.cs,Range_LinqExt,The following statement contains a magic number: Assert.AreEqual (10' sampleInts.Count());
Magic Number,Advanced.Linq.Tests,Generation,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Generation.cs,Range_LinqExt,The following statement contains a magic number: Assert.AreEqual (10' sampleInts.Last());
Magic Number,Advanced.Linq.Tests,Generation,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Generation.cs,Repeat_LinqExt,The following statement contains a magic number: var sampleInts = Enumerable.Repeat(1' 10);
Magic Number,Advanced.Linq.Tests,Generation,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Generation.cs,Repeat_LinqExt,The following statement contains a magic number: Assert.AreEqual (10' sampleInts.Count());
Magic Number,Advanced.Linq.Tests,Generation,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Generation.cs,Repeat_LinqExt,The following statement contains a magic number: Assert.AreEqual (10' sampleInts.Sum());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GroupBy_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GroupBy_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' samplePeople.First ().Value);
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GroupBy_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Last ().Value);
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GroupBy_Linq,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GroupBy_Linq,The following statement contains a magic number: Assert.AreEqual (5' samplePeople.First ().Value);
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GroupBy_Linq,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Last ().Value);
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GrouprBySelectInto_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GrouprBySelectInto_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' samplePeople.First ().Value.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GrouprBySelectInto_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Last ().Value.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GrouprBySelectInto_Linq,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GrouprBySelectInto_Linq,The following statement contains a magic number: Assert.AreEqual (5' samplePeople.First ().Value.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,GrouprBySelectInto_Linq,The following statement contains a magic number: Assert.AreEqual (2' samplePeople.Last ().Value.Count ());
Magic Number,Advanced.Linq.Tests,Grouping,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Grouping.cs,MultipleGroup,The following statement contains a magic number: Assert.AreEqual (7' samplePeople.Count ());
Magic Number,Advanced.Linq.Tests,Ordering,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Ordering.cs,OrderByThenBy_LinqExt,The following statement contains a magic number: Assert.AreEqual (21' orderdPeople.First ().Age);
Magic Number,Advanced.Linq.Tests,Ordering,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Ordering.cs,OrderByThenBy_LinqExt,The following statement contains a magic number: Assert.AreEqual (55' orderdPeople.Last ().Age);
Magic Number,Advanced.Linq.Tests,Ordering,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Ordering.cs,OrderByThenBy_Linq,The following statement contains a magic number: Assert.AreEqual (21' orderdPeople.First ().Age);
Magic Number,Advanced.Linq.Tests,Ordering,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Ordering.cs,OrderByThenBy_Linq,The following statement contains a magic number: Assert.AreEqual (55' orderdPeople.Last ().Age);
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,Take_LinqExt,The following statement contains a magic number: var firstThreePeople = people.Take (3);
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,Take_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' firstThreePeople.Count ());
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,NestedTake_LinqExt,The following statement contains a magic number: var firstTwoPeople = people.Where (x => x.Gender == Gender.Male).Take (2);
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,NestedTake_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' firstTwoPeople.Count ());
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,NestedTake_Linq,The following statement contains a magic number: var firstTwoPeople =   				(from p in people  				  where p.Gender == Gender.Male   				  select new { p.Name' p.Age' p.Gender' p.Children }).Take (2);
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,NestedTake_Linq,The following statement contains a magic number: Assert.AreEqual (2' firstTwoPeople.Count ());
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,Skip_LinqExt,The following statement contains a magic number: var allButFirstFour = people.Skip (4);
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,Skip_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' allButFirstFour.Count ());
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,TakeWhile_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' allButFirstFour.Count ());
Magic Number,Advanced.Linq.Tests,Partitioning,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Partitioning.cs,SkipWhile_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' allButFirstFour.Count ());
Magic Number,Advanced.Linq.Tests,Projection,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Projection.cs,Select_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' allFemaleNames.Count ());
Magic Number,Advanced.Linq.Tests,Projection,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Projection.cs,Select_Linq,The following statement contains a magic number: Assert.AreEqual (2' allFemaleNames.Count ());
Magic Number,Advanced.Linq.Tests,Projection,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Projection.cs,SelectWithAnonymous_LinqExt,The following statement contains a magic number: Assert.AreEqual (55' parentsNameAndAge.First ().Age);
Magic Number,Advanced.Linq.Tests,Projection,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Projection.cs,SelectWithAnonymous_Linq,The following statement contains a magic number: Assert.AreEqual (55' parentsNameAndAge.First ().Age);
Magic Number,Advanced.Linq.Tests,Projection,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Projection.cs,SelectWithMulitpleFrom_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' boysWithFemaleParents.Count ());
Magic Number,Advanced.Linq.Tests,Projection,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Projection.cs,SelectWithMulitpleFrom_Linq,The following statement contains a magic number: Assert.AreEqual (2' boysWithFemaleParents.Count ());
Magic Number,Advanced.Linq.Tests,Projection,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Projection.cs,SelectMany_LinqExt,The following statement contains a magic number: Assert.AreEqual (9' people.SelectMany (x => x.AllPeople).Where (x => x.Gender == Gender.Male).Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_LinqExt,The following statement contains a magic number: var numbers = new List<int> (){ 1'1'2'2'3'4'5 };
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_LinqExt,The following statement contains a magic number: var numbers = new List<int> (){ 1'1'2'2'3'4'5 };
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_LinqExt,The following statement contains a magic number: var numbers = new List<int> (){ 1'1'2'2'3'4'5 };
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_LinqExt,The following statement contains a magic number: var numbers = new List<int> (){ 1'1'2'2'3'4'5 };
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_LinqExt,The following statement contains a magic number: var numbers = new List<int> (){ 1'1'2'2'3'4'5 };
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' distinctNumbers.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' distinctNumbers.Last ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Distinct_Linq,The following statement contains a magic number: Assert.AreEqual (7' distinctNumbers.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,DistinctWithEqualityComparer_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' distinctSex.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,DistinctWithEqualityComparer_Linq,The following statement contains a magic number: Assert.AreEqual (2' distinctSex.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Union_LinqExt,The following statement contains a magic number: Assert.AreEqual (17' allPeople.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Union_Linq,The following statement contains a magic number: Assert.AreEqual (17' orderedAllPeople.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: Assert.AreEqual (2' groupInter.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: Assert.AreEqual (4' groupInter.First ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_LinqExt,The following statement contains a magic number: Assert.AreEqual (5' groupInter.Last ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: Assert.AreEqual (2' groupInter.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: Assert.AreEqual (4' groupInter.First ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Intersect_Linq,The following statement contains a magic number: Assert.AreEqual (5' groupInter.Last ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' groupExcept.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_LinqExt,The following statement contains a magic number: Assert.AreEqual (3' groupExcept.Last ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: Assert.AreEqual (3' groupExcept.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Except_Linq,The following statement contains a magic number: Assert.AreEqual (3' groupExcept.Last ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: Assert.AreEqual (9' groupExcept.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_LinqExt,The following statement contains a magic number: Assert.AreEqual (7' groupExcept.Last ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: Assert.AreEqual (9' groupBothOrdered.Count ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,Concat_Linq,The following statement contains a magic number: Assert.AreEqual (7' groupBothOrdered.Last ());
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOne = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOneAgain = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOneAgain = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOneAgain = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupOneAgain = new List<int> (){ 1'2'3'4'5};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,Set,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\Operators\Set.cs,EqualAll_LinqExt,The following statement contains a magic number: var groupTwo = new List<int> (){4'5'6'7};
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("John"' 35' Gender.Male'   			    	new List<Person> (){   						GetPerson( "Billy"' 8' Gender.Male)'  						GetPerson( "Emily"' 6' Gender.Female)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("John"' 35' Gender.Male'   			    	new List<Person> (){   						GetPerson( "Billy"' 8' Gender.Male)'  						GetPerson( "Emily"' 6' Gender.Female)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("John"' 35' Gender.Male'   			    	new List<Person> (){   						GetPerson( "Billy"' 8' Gender.Male)'  						GetPerson( "Emily"' 6' Gender.Female)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("James"' 45' Gender.Male'   			    	new List<Person> (){   						GetPerson( "Simon"' 18' Gender.Male)'  						GetPerson( "Johnny"' 16' Gender.Female)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("James"' 45' Gender.Male'   			    	new List<Person> (){   						GetPerson( "Simon"' 18' Gender.Male)'  						GetPerson( "Johnny"' 16' Gender.Female)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("James"' 45' Gender.Male'   			    	new List<Person> (){   						GetPerson( "Simon"' 18' Gender.Male)'  						GetPerson( "Johnny"' 16' Gender.Female)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("Jane"' 55' Gender.Female'   			    	new List<Person> (){   						GetPerson( "Peter"' 16' Gender.Male)'  						GetPerson( "Paul"' 20' Gender.Male)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("Jane"' 55' Gender.Female'   			    	new List<Person> (){   						GetPerson( "Peter"' 16' Gender.Male)'  						GetPerson( "Paul"' 20' Gender.Male)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("Jane"' 55' Gender.Female'   			    	new List<Person> (){   						GetPerson( "Peter"' 16' Gender.Male)'  						GetPerson( "Paul"' 20' Gender.Male)}  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("Sara"' 45' Gender.Female'   			    	new List<Person> (){   						GetPerson( "Sally"' 18' Gender.Female)'  						GetPerson( "Tilly"' 16' Gender.Female)'  						GetPerson( "Fredrica"' 16' Gender.Female) }  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("Sara"' 45' Gender.Female'   			    	new List<Person> (){   						GetPerson( "Sally"' 18' Gender.Female)'  						GetPerson( "Tilly"' 16' Gender.Female)'  						GetPerson( "Fredrica"' 16' Gender.Female) }  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("Sara"' 45' Gender.Female'   			    	new List<Person> (){   						GetPerson( "Sally"' 18' Gender.Female)'  						GetPerson( "Tilly"' 16' Gender.Female)'  						GetPerson( "Fredrica"' 16' Gender.Female) }  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (  				GetPerson ("Sara"' 45' Gender.Female'   			    	new List<Person> (){   						GetPerson( "Sally"' 18' Gender.Female)'  						GetPerson( "Tilly"' 16' Gender.Female)'  						GetPerson( "Fredrica"' 16' Gender.Female) }  			)  			);
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (GetPerson ("Jullius"' 21' Gender.Male));
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (GetPerson ("Dave"' 23' Gender.Male));
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (GetPerson ("George"' 25' Gender.Male' new List<Person>(){ GetPerson ("George"' 25' Gender.Unknown)}));
Magic Number,Advanced.Linq.Tests,SampleDataProvider,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Linq\SampleData\SampleDataProvider.cs,GetSampleData,The following statement contains a magic number: people.Add (GetPerson ("George"' 25' Gender.Male' new List<Person>(){ GetPerson ("George"' 25' Gender.Unknown)}));
Magic Number,Advanced.Delegates.Tests,ActionFuncAndPredicate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\ActionFuncAndPredicate.cs,PredicateExamples,The following statement contains a magic number: Assert.AreEqual(true' aHandler(2));
Magic Number,Advanced.Delegates.Tests,ActionFuncAndPredicate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\ActionFuncAndPredicate.cs,PredicateExamples,The following statement contains a magic number: Assert.AreEqual(true' bHandler(2));
Magic Number,Advanced.Delegates.Tests,ActionFuncAndPredicate,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\ActionFuncAndPredicate.cs,PredicateExamples,The following statement contains a magic number: Assert.AreEqual(true' cHandler(2));
Magic Number,Advanced.Delegates.Tests,EventExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\EventExample.cs,TestIsGreaterThanDelegate,The following statement contains a magic number: Assert.IsTrue(isGreaterThanHandler(2' 2));
Magic Number,Advanced.Delegates.Tests,EventExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\EventExample.cs,TestIsGreaterThanDelegate,The following statement contains a magic number: Assert.IsTrue(isGreaterThanHandler(2' 2));
Magic Number,Advanced.Delegates.Tests,MulticastDelegateExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\MulticastDelegateExample.cs,TestIsGreaterThanDelegate,The following statement contains a magic number: Assert.IsTrue(isGreaterThanHandler(2' 2));
Magic Number,Advanced.Delegates.Tests,MulticastDelegateExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\Advanced\Delegates\MulticastDelegateExample.cs,TestIsGreaterThanDelegate,The following statement contains a magic number: Assert.IsTrue(isGreaterThanHandler(2' 2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,AssertWasCalledTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\AssertWasCalledTests.cs,WhenProperySetCalled,The following statement contains a magic number: sut.AProperty = 9;
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,AssertWasCalledTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\AssertWasCalledTests.cs,WhenProperySetCalled,The following statement contains a magic number: sut.AssertWasCalled (x => x.AProperty = 9);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ExpectCallTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\ExpectCallTests.cs,WhenReadonlyPropertyCalled,The following statement contains a magic number: sut.Expect (x => x.AReadonlyPropery).Return (9);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ExpectCallTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\ExpectCallTests.cs,WhenReadonlyPropertyCalled,The following statement contains a magic number: Assert.AreEqual (sut.AReadonlyPropery' 9);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ExpectCallTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\ExpectCallTests.cs,WhenPropertyGetCalled,The following statement contains a magic number: sut.Expect (x => x.AProperty).Return (9);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ExpectCallTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\ExpectCallTests.cs,WhenPropertyGetCalled,The following statement contains a magic number: Assert.AreEqual (sut.AProperty' 9);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ExpectCallTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\ExpectCallTests.cs,WhenPropertySetCalledWithArguments,The following statement contains a magic number: sut.Expect (x => x.AProperty).SetPropertyWithArgument (11);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ExpectCallTests,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Mocks\ExpectCallTests.cs,WhenPropertySetCalledWithArguments,The following statement contains a magic number: sut.AProperty = 11;
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ByRefAndOutExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ByRefAndOutExample.cs,RefExample,The following statement contains a magic number: sut.Stub (x => x.Do (Arg<int>.Is.Equal (1)' ref Arg<int>.Ref (RIS.Equal (0)' 10).Dummy)).Return (1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ByRefAndOutExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ByRefAndOutExample.cs,RefExample,The following statement contains a magic number: Assert.That (refValue.Equals (10));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ByRefAndOutExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ByRefAndOutExample.cs,OutExample,The following statement contains a magic number: sut.Stub (x => x.Do (Arg<int>.Is.Equal (1)' Arg<string>.Is.Equal ("Hello")' out Arg<int>.Out (10).Dummy)).Return (1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ByRefAndOutExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ByRefAndOutExample.cs,OutExample,The following statement contains a magic number: Assert.That (outValue.Equals (10));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,RepeatExample,The following statement contains a magic number: this.sut.Stub(x => x.Do()).Return(2).Repeat.Twice();
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,RepeatExample,The following statement contains a magic number: this.sut.Stub(x => x.Do()).Return(3).Repeat.Times(3);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,RepeatExample,The following statement contains a magic number: this.sut.Stub(x => x.Do()).Return(3).Repeat.Times(3);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,RepeatExample,The following statement contains a magic number: this.sut.Stub(x => x.Do()).Return(4).Repeat.Times(4);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,RepeatExample,The following statement contains a magic number: this.sut.Stub(x => x.Do()).Return(4).Repeat.Times(4);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,RepeatExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\RepeatExample.cs,WhenRepeatCalled,The following statement contains a magic number: int[] returns = { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,StubProperty,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\StubProperty.cs,WhenSetCalled,The following statement contains a magic number: sut.AProperty = 2;
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,StubProperty,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\StubProperty.cs,WhenSetCalled,The following statement contains a magic number: Assert.That(sut.AProperty.Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IgnoreArguments,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IgnoreArguments.cs,IgnoreArgumentsTest,The following statement contains a magic number: Assert.That(sut.Do(10).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IgnoreArguments,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IgnoreArguments.cs,IgnoreArgumentsTest,The following statement contains a magic number: Assert.That(sut.Do(-10).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsAnything,The following statement contains a magic number: Assert.That(sut.Do(10).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsAnything,The following statement contains a magic number: Assert.That(sut.Do(-10).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsEqualIsNotEqual,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.Is.NotEqual(1))).Return(10);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsEqualIsNotEqual,The following statement contains a magic number: Assert.That(sut.Do(-10).Equals(10));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsEqualIsNotEqual,The following statement contains a magic number: Assert.That(sut.Do(-10).Equals(10));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsNullIsNotNull,The following statement contains a magic number: sut.Stub(x => x.DoIFoo(Arg<Foo>.Is.NotNull)).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsNullIsNotNull,The following statement contains a magic number: Assert.That(sut.DoIFoo(new Foo()).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsTypeOf,The following statement contains a magic number: sut.Stub(x => x.DoIFoo(Arg<Moo>.Is.TypeOf)).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsTypeOf,The following statement contains a magic number: Assert.That(sut.DoIFoo(new Moo()).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,LessThanGreaterThan,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.Is.LessThanOrEqual(10))).Return(1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,LessThanGreaterThan,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.Is.GreaterThan(10))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,LessThanGreaterThan,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.Is.GreaterThan(10))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,LessThanGreaterThan,The following statement contains a magic number: Assert.That(sut.Do(10).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,LessThanGreaterThan,The following statement contains a magic number: Assert.That(sut.Do(11).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,LessThanGreaterThan,The following statement contains a magic number: Assert.That(sut.Do(11).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsSameNotSame,The following statement contains a magic number: sut.Stub(x => x.DoIFoo(Arg<Foo>.Is.NotSame(foo))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,IsConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\IsConstraints.cs,IsSameNotSame,The following statement contains a magic number: Assert.That(sut.DoIFoo(new Foo()).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Element,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Element(1' RIS.GreaterThanOrEqual(2)))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Element,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Element(1' RIS.GreaterThanOrEqual(2)))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Element,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 0' 2 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Element,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 0' 2 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Element,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 0' 20 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Element,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 0' 20 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Equal(new int[] { 1' 2' 3 }))).Return(1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Equal(new int[] { 1' 2' 3 }))).Return(1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Equal(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Equal(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Equal(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.Equal(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 1' 2' 3 }).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 1' 2' 3 }).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,Equal,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.IsIn(4))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<List<int>>.List.IsIn(4))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 1' 2' 3 }).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 1' 2' 3 }).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,IsIn,The following statement contains a magic number: Assert.That(sut.Do(new List<int> { 4' 5' 6 }).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.List.OneOf(new int[] { 1' 2' 3 }))).Return(1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.List.OneOf(new int[] { 1' 2' 3 }))).Return(1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.List.OneOf(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.List.OneOf(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.List.OneOf(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.List.OneOf(new int[] { 4' 5' 6 }))).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: Assert.That(sut.Do(4).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,ListConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\ListConstraints.cs,OneOf,The following statement contains a magic number: Assert.That(sut.Do(4).Equals(2));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,MatchesConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\MatchesConstraints.cs,IsMatching,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.Matches(y => y > 5))).Return(1);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,MatchesConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\MatchesConstraints.cs,IsMatching,The following statement contains a magic number: sut.Stub(x => x.Do(Arg<int>.Matches(y => y <= 5))).Return(0);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,MatchesConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\MatchesConstraints.cs,IsMatching,The following statement contains a magic number: Assert.That(sut.Do(4).Equals(0));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,MatchesConstraints,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\ArgumentConstraints\MatchesConstraints.cs,IsMatching,The following statement contains a magic number: Assert.That(sut.Do(6).Equals(1));
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,LiteralExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\LiteralExample.cs,LiteralExample,The following statement contains a magic number: this.sut.Stub(x => x.Do("Foo")).Return(2);
Magic Number,TestingMoqingDebugging.RhinoMocks.Tests,LiteralExample,D:\research\architectureSmells\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\DotNetExamples\DotNetExamplesTests\TestingMoqingDebugging\RhinoMocks\Stubs\LiteralExample.cs,TestCase,The following statement contains a magic number: Assert.AreEqual (2' sut.Do ("Foo"));
