Implementation smell,Namespace,Class,File,Method,Description
Long Method,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The method has 118 lines of code.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestAssertions,The length of the statement  "			Assert.IsAssignableFrom (typeof(List<decimal>)' new List<decimal> ()); 	// http://msdn.microsoft.com/en-gb/library/system.type.isassignablefrom.aspx " is 148.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestAssertions,The length of the statement  "			CollectionAssert.AreEquivalent (new List<decimal> (){ 0m' 1m }' new List<decimal> (){ 1m' 0m }); // Same as AreEqual though order does not mater " is 144.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestAssertions,The length of the statement  "			CollectionAssert.AreNotEquivalent (new List<decimal> (){ 0m' 1m }' new List<decimal> (){ 1m' 2m });  // Same as AreNotEqual though order does not matter " is 152.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestAssertions,The length of the statement  "			CollectionAssert.IsSubsetOf (new List<decimal> (){ 1m }' new List<decimal> (){ 0m' 1m }); // {1} is considered a SubSet of {1'2} " is 128.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestAssertions,The length of the statement  "			CollectionAssert.IsOrdered (new List<int> (){ 3'2'1}' new ReverseComparer()); // Only supports ICompare and not ICompare<T> as of version 2.6 " is 141.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The length of the statement  "			Assert.That (20000000000000004.0' Is.EqualTo (20000000000000000.0).Within (1).Ulps); // Pass tollerance with units of last place " is 128.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The length of the statement  "			Assert.That (new double[] {1.0'2.0'3.0'4.0}' Is.EqualTo (new  int['] {{1'2}' {3'4}}).AsCollection); // Compare data and not collection (flattens a collection of collections) " is 173.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The length of the statement  "			Assert.That( new List<int>(){1'2'3}' Is.EquivalentTo( new List<int>(){3'2'1})); // Same data without carring about the order " is 124.
Long Statement,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The length of the statement  "			Assert.That(List.Map(new List<string>(){"1"' "22"' "333"}).Property("Length")'  // Allows all elememts in a list to have a condition provided for them " is 150.
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,RandomAttributeTest,The following statement contains a magic number: Assert.That(value' Is.InRange(1'10));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestAssertions,The following statement contains a magic number: CollectionAssert.IsOrdered (new List<int> (){ 3'2'1}' new ReverseComparer());
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestAssertions,The following statement contains a magic number: CollectionAssert.IsOrdered (new List<int> (){ 3'2'1}' new ReverseComparer());
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (1' Is.Not.EqualTo (2));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (1.1' Is.EqualTo (1.2).Within (0.1));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (1.1' Is.EqualTo (1.2).Within (0.1));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (1.1' Is.EqualTo (1.2).Within (0.1));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (1.1' Is.EqualTo (1.01).Within (10).Percent);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (1.1' Is.EqualTo (1.01).Within (10).Percent);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (1.1' Is.EqualTo (1.01).Within (10).Percent);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (20000000000000004.0' Is.EqualTo (20000000000000000.0).Within (1).Ulps);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (20000000000000004.0' Is.EqualTo (20000000000000000.0).Within (1).Ulps);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.EqualTo (new int[] {1'2'3}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.EqualTo (new int[] {1'2'3}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.EqualTo (new int[] {1'2'3}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.EqualTo (new int[] {1'2'3}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.Not.EqualTo (new int[] {1'2'3' 4}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.Not.EqualTo (new int[] {1'2'3' 4}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.Not.EqualTo (new int[] {1'2'3' 4}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.Not.EqualTo (new int[] {1'2'3' 4}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0}' Is.Not.EqualTo (new int[] {1'2'3' 4}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0'4.0}' Is.EqualTo (new  int['] {{1'2}' {3'4}}).AsCollection);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0'4.0}' Is.EqualTo (new  int['] {{1'2}' {3'4}}).AsCollection);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0'4.0}' Is.EqualTo (new  int['] {{1'2}' {3'4}}).AsCollection);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0'4.0}' Is.EqualTo (new  int['] {{1'2}' {3'4}}).AsCollection);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0'4.0}' Is.EqualTo (new  int['] {{1'2}' {3'4}}).AsCollection);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That (new double[] {1.0'2.0'3.0'4.0}' Is.EqualTo (new  int['] {{1'2}' {3'4}}).AsCollection);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.Unique);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.Unique);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(1' Is.LessThan(2));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(1' Is.AtMost(2));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(1' Is.InRange(1'2));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.All.GreaterThan(0) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.All.GreaterThan(0) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.All.GreaterThan(0) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.All.GreaterThan(0) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.None.GreaterThan(4));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.None.GreaterThan(4));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.None.GreaterThan(4));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Some.GreaterThan(2));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Some.GreaterThan(2));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Some.GreaterThan(2));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Count.EqualTo(3));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Count.EqualTo(3));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Count.EqualTo(3));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.Unique);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.Unique);
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Member(1));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Has.Member(1));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.EquivalentTo( new List<int>(){3'2'1}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.EquivalentTo( new List<int>(){3'2'1}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.EquivalentTo( new List<int>(){3'2'1}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'3}' Is.EquivalentTo( new List<int>(){3'2'1}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'}' Is.SubsetOf( new List<int>(){3'2'1}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'}' Is.SubsetOf( new List<int>(){3'2'1}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){1'2'}' Is.SubsetOf( new List<int>(){3'2'1}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( 2' Is.Not.EqualTo( 1 ));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){ 1' 2' 3 }' Is.All.GreaterThan( 0 ) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( new List<int>(){ 1' 2' 3 }' Is.All.GreaterThan( 0 ) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( 1' Is.GreaterThan( 0 ).And.LessThan( 2 ) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( 1' Is.GreaterThan( 0 ) & Is.LessThan( 2 ) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( 1' Is.LessThan( 10 ) | Is.GreaterThan( 0 ) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That( 1' Is.LessThan( 10 ).Or.GreaterThan( 0 ) );
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(() => { return true;}' Is.True.After(10));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(() => { return true;}' Is.True.After(10' 10));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(() => { return true;}' Is.True.After(10' 10));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(List.Map(new List<string>(){"1"' "22"' "333"}).Property("Length")'  // Allows all elememts in a list to have a condition provided for them  			            Is.EqualTo(new List<int>(){1'2'3}));
Magic Number,NUnitCheatSheet,Test,C:\repos\lukewickstead_DOT-NET-on-Linux\DetailedExamples\NUnitCheatSheet\NUnitCheatSheet\NUnitCheatSheet.cs,TestConstraints,The following statement contains a magic number: Assert.That(List.Map(new List<string>(){"1"' "22"' "333"}).Property("Length")'  // Allows all elememts in a list to have a condition provided for them  			            Is.EqualTo(new List<int>(){1'2'3}));
