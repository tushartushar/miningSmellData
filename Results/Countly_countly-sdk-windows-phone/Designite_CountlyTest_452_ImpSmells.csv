Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateMetrics,The length of the statement  "            Metrics m = new Metrics(v[index]' v[index + 1]' v[index + 2]' v[index + 3]' v[index + 4]' v[index + 5]' locale);//todo' fix locale " is 130.
Long Statement,TestProject_common,CountlyImpl,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\pcl\CountlyTest_452\CountlyImpl.cs,CreateCountlyConfig,The length of the statement  "            return new CountlyConfig() { serverUrl = ServerInfo.serverURL' appKey = ServerInfo.appKey' appVersion = ServerInfo.appVersion' fileSystem = FileSystem.Current }; " is 161.
Complex Conditional,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,ValidateDataPointUpload,The conditional expression  "Countly.Instance.Events.Count > 0 ||                   Countly.Instance.Exceptions.Count > 0 ||                   Countly.Instance.Sessions.Count > 0 ||                   Countly.Instance.StoredRequests.Count > 0 ||                  Countly.UserDetails.isChanged"  is complex.
Magic Number,TestProject_common,ConsentTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ConsentTests.cs,ConsentSimpleAllowedThenRemoved,The following statement contains a magic number: Assert.Equal(2 + previousCount' Countly.Instance.Sessions.Count);
Magic Number,TestProject_common,ConsentTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ConsentTests.cs,ConsentSimpleAllowedThenRemoved,The following statement contains a magic number: Assert.Equal(4' Countly.Instance.StoredRequests.Count);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDNoMerge,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user1"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDNoMerge,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDNoMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDNoMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDNoMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDNoMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMerge,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user1"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMerge,The following statement contains a magic number: Api.Instance.DeviceMergeWaitTime = 500;
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMerge,The following statement contains a magic number: res = await Countly.RecordEvent("Some event same user"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMergeMultiple,The following statement contains a magic number: Api.Instance.DeviceMergeWaitTime = 500;
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,ChengeDeviceIDWithMergeMultiple,The following statement contains a magic number: res = await Countly.RecordEvent("Some event user2"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,SettingUserDetailsMultiple,The following statement contains a magic number: b < 2
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,SettingUserDetailsMultiple,The following statement contains a magic number: a < 2
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event1"' 123);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event2"' 123' 456);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event2"' 123' 456);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event3"' 4234' 1236.12' 234.5' null);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event3"' 4234' 1236.12' 234.5' null);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event3"' 4234' 1236.12' 234.5' null);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event4"' 123' 456' segm);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event4"' 123' 456' segm);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event5"' 123' 456' 42.54' segm);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event5"' 123' 456' 42.54' segm);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,MultipleEvents,The following statement contains a magic number: res = await Countly.RecordEvent("Some event5"' 123' 456' 42.54' segm);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,VeryLargeEventName,The following statement contains a magic number: int steps = 10;
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,VeryLargeEventName,The following statement contains a magic number: String[] str = TestHelper.CreateLargeStrings(steps' 1000);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,VeryLargeEventName,The following statement contains a magic number: Thread.Sleep(5);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,VeryLargeException,The following statement contains a magic number: int steps = 10;
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,VeryLargeException,The following statement contains a magic number: String[] str = TestHelper.CreateLargeStrings(steps' 1000);
Magic Number,TestProject_common,CountlyTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\CountlyTestCases.cs,VeryLargeException,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,StorageCollections,The following statement contains a magic number: int itemAmount = 150;
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_18_1,The following statement contains a magic number: Assert.Equal(50' Countly.Instance.Events.Count);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_18_1,The following statement contains a magic number: Assert.Equal(50' Countly.Instance.Exceptions.Count);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_18_1,The following statement contains a magic number: Assert.Equal(3' Countly.Instance.Sessions.Count);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_18_1,The following statement contains a magic number: Assert.Equal(56' cud.BirthYear);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_002,The following statement contains a magic number: Assert.Equal(100' Countly.Instance.Events.Count);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_002,The following statement contains a magic number: Assert.Equal(100' Countly.Instance.Exceptions.Count);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_002,The following statement contains a magic number: Assert.Equal(102' Countly.Instance.Sessions.Count);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_002,The following statement contains a magic number: Assert.Equal(150' Countly.Instance.StoredRequests.Count);
Magic Number,TestProject_common,DataStructureSerializationTests,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\DataStructureSerializationTests.cs,BasicDeserialization_002,The following statement contains a magic number: Assert.Equal(975' cud.BirthYear);
Magic Number,TestProject_common,FlowControlTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\FlowControlTestCases.cs,SimpleControlFlow,The following statement contains a magic number: await Countly.Instance.SessionUpdate(10);
Magic Number,TestProject_common,FlowControlTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\FlowControlTestCases.cs,SimpleControlFlow,The following statement contains a magic number: Countly.Instance.lastSessionUpdateTime = DateTime.Now.AddSeconds(-10);
Magic Number,TestProject_common,RequestTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\RequestTestCases.cs,BaseRequestBasic,The following statement contains a magic number: String req = RequestHelper.CreateBaseRequest("a"' "b"' 123);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateBeginSession,The following statement contains a magic number: BeginSession bs = new BeginSession(v[indexData + 0]' v[indexData + 1]' v[indexData + 2]' m' timestamp);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateCustomInfo,The following statement contains a magic number: ci.Add(v[index + 2]' v[index + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateCustomInfo,The following statement contains a magic number: ci.Add(v[index + 2]' v[index + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Custom.Add(v[indexData + 2]' v[indexData + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Custom.Add(v[indexData + 2]' v[indexData + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Email = v[indexData + 4];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Gender = v[indexData + 5];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Username = v[indexData + 6];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Phone = v[indexData + 7];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Organization = v[indexData + 8];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Name = v[indexData + 9];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,PopulateCountlyUserDetails,The following statement contains a magic number: cud.Picture = v[indexData + 10];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateDeviceId,The following statement contains a magic number: indexIdMethod = indexIdMethod % 6;
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateDeviceId,The following statement contains a magic number: switch (indexIdMethod)              {                  case 0:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;                  case 1:                      method = DeviceBase.DeviceIdMethodInternal.cpuId;                      break;                  case 2:                      method = DeviceBase.DeviceIdMethodInternal.windowsGUID;                      break;                  case 3:                      method = DeviceBase.DeviceIdMethodInternal.winHardwareToken;                      break;                  case 4:                      method = DeviceBase.DeviceIdMethodInternal.multipleWindowsFields;                      break;                  case 5:                      method = DeviceBase.DeviceIdMethodInternal.developerSupplied;                      break;                  default:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;              }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateDeviceId,The following statement contains a magic number: switch (indexIdMethod)              {                  case 0:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;                  case 1:                      method = DeviceBase.DeviceIdMethodInternal.cpuId;                      break;                  case 2:                      method = DeviceBase.DeviceIdMethodInternal.windowsGUID;                      break;                  case 3:                      method = DeviceBase.DeviceIdMethodInternal.winHardwareToken;                      break;                  case 4:                      method = DeviceBase.DeviceIdMethodInternal.multipleWindowsFields;                      break;                  case 5:                      method = DeviceBase.DeviceIdMethodInternal.developerSupplied;                      break;                  default:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;              }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateDeviceId,The following statement contains a magic number: switch (indexIdMethod)              {                  case 0:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;                  case 1:                      method = DeviceBase.DeviceIdMethodInternal.cpuId;                      break;                  case 2:                      method = DeviceBase.DeviceIdMethodInternal.windowsGUID;                      break;                  case 3:                      method = DeviceBase.DeviceIdMethodInternal.winHardwareToken;                      break;                  case 4:                      method = DeviceBase.DeviceIdMethodInternal.multipleWindowsFields;                      break;                  case 5:                      method = DeviceBase.DeviceIdMethodInternal.developerSupplied;                      break;                  default:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;              }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateDeviceId,The following statement contains a magic number: switch (indexIdMethod)              {                  case 0:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;                  case 1:                      method = DeviceBase.DeviceIdMethodInternal.cpuId;                      break;                  case 2:                      method = DeviceBase.DeviceIdMethodInternal.windowsGUID;                      break;                  case 3:                      method = DeviceBase.DeviceIdMethodInternal.winHardwareToken;                      break;                  case 4:                      method = DeviceBase.DeviceIdMethodInternal.multipleWindowsFields;                      break;                  case 5:                      method = DeviceBase.DeviceIdMethodInternal.developerSupplied;                      break;                  default:                      method = DeviceBase.DeviceIdMethodInternal.none;                      break;              }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: TimeSpan ts = new TimeSpan(iv[index]' iv[index + 1]' iv[index + 2]' iv[index + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: TimeSpan ts = new TimeSpan(iv[index]' iv[index + 1]' iv[index + 2]' iv[index + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: cust.Add(v[index + 1]' v[index + 2]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: cust.Add(v[index + 3]' v[index + 4]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: cust.Add(v[index + 3]' v[index + 4]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Device = v[index + 5];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Error = v[index + 6];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Logs = v[index + 7];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Manufacture = v[index + 8];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Name = v[index + 9];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.NonFatal = bv[index % 2];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Online = bv[(index + 1) % 2];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Orientation = v[index + 10];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.OS = v[index + 11];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.OSVersion = v[index + 12];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Resolution = v[index + 13];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateExceptionEvent,The following statement contains a magic number: ee.Run = lv[index + 2];
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateMetrics,The following statement contains a magic number: Metrics m = new Metrics(v[index]' v[index + 1]' v[index + 2]' v[index + 3]' v[index + 4]' v[index + 5]' locale);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateMetrics,The following statement contains a magic number: Metrics m = new Metrics(v[index]' v[index + 1]' v[index + 2]' v[index + 3]' v[index + 4]' v[index + 5]' locale);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateMetrics,The following statement contains a magic number: Metrics m = new Metrics(v[index]' v[index + 1]' v[index + 2]' v[index + 3]' v[index + 4]' v[index + 5]' locale);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateMetrics,The following statement contains a magic number: Metrics m = new Metrics(v[index]' v[index + 1]' v[index + 2]' v[index + 3]' v[index + 4]' v[index + 5]' locale);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateSegmentation,The following statement contains a magic number: se.Add(v[index + 2]' v[index + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateSegmentation,The following statement contains a magic number: se.Add(v[index + 2]' v[index + 3]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateCountlyEvent,The following statement contains a magic number: CountlyEvent ce = new CountlyEvent(v[index]' iv[index]' dv[index]' dv[index + 1]' se' 234343);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateCountlyEvent,The following statement contains a magic number: cust.Add(v[index + 1]' v[index + 2]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateCountlyEvent,The following statement contains a magic number: cust.Add(v[index + 3]' v[index + 4]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateCountlyEvent,The following statement contains a magic number: cust.Add(v[index + 3]' v[index + 4]);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListEvents,The following statement contains a magic number: CountlyEvent ce = TestHelper.CreateCountlyEvent(a % 5);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListExceptions,The following statement contains a magic number: ExceptionEvent ce = TestHelper.CreateExceptionEvent(a % 5);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListSessions,The following statement contains a magic number: switch (a % 3)                  {                      case 0:                          se = TestHelper.CreateBeginSession(a % 5' a % 4);                          break;                      case 1:                          se = TestHelper.CreateEndSession(a % 5);                          break;                      case 2:                      default:                          se = TestHelper.CreateUpdateSession(a % 5' a % 6);                          break;                  }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListSessions,The following statement contains a magic number: switch (a % 3)                  {                      case 0:                          se = TestHelper.CreateBeginSession(a % 5' a % 4);                          break;                      case 1:                          se = TestHelper.CreateEndSession(a % 5);                          break;                      case 2:                      default:                          se = TestHelper.CreateUpdateSession(a % 5' a % 6);                          break;                  }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListSessions,The following statement contains a magic number: switch (a % 3)                  {                      case 0:                          se = TestHelper.CreateBeginSession(a % 5' a % 4);                          break;                      case 1:                          se = TestHelper.CreateEndSession(a % 5);                          break;                      case 2:                      default:                          se = TestHelper.CreateUpdateSession(a % 5' a % 6);                          break;                  }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListSessions,The following statement contains a magic number: switch (a % 3)                  {                      case 0:                          se = TestHelper.CreateBeginSession(a % 5' a % 4);                          break;                      case 1:                          se = TestHelper.CreateEndSession(a % 5);                          break;                      case 2:                      default:                          se = TestHelper.CreateUpdateSession(a % 5' a % 6);                          break;                  }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListSessions,The following statement contains a magic number: switch (a % 3)                  {                      case 0:                          se = TestHelper.CreateBeginSession(a % 5' a % 4);                          break;                      case 1:                          se = TestHelper.CreateEndSession(a % 5);                          break;                      case 2:                      default:                          se = TestHelper.CreateUpdateSession(a % 5' a % 6);                          break;                  }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListSessions,The following statement contains a magic number: switch (a % 3)                  {                      case 0:                          se = TestHelper.CreateBeginSession(a % 5' a % 4);                          break;                      case 1:                          se = TestHelper.CreateEndSession(a % 5);                          break;                      case 2:                      default:                          se = TestHelper.CreateUpdateSession(a % 5' a % 6);                          break;                  }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateListSessions,The following statement contains a magic number: switch (a % 3)                  {                      case 0:                          se = TestHelper.CreateBeginSession(a % 5' a % 4);                          break;                      case 1:                          se = TestHelper.CreateEndSession(a % 5);                          break;                      case 2:                      default:                          se = TestHelper.CreateUpdateSession(a % 5' a % 6);                          break;                  }
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,CreateQueueStoredRequests,The following statement contains a magic number: StoredRequest sr = CreateStoredRequest(a % 10);
Magic Number,TestProject_common,TestHelper,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestHelper.cs,ValidateDataPointUpload,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesSession,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesCustomInfo,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesCountlyUserDetails,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesDeviceId,The following statement contains a magic number: DeviceId did4 = TestHelper.CreateDeviceId(i' i + 2);
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesDeviceId,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesExceptionEvent,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesMetrics,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesSegmentationItem,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesSegmentation,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesCountlyEvent,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,TestingEntities,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\TestingEntities.cs,ComparingEntitiesStoredRequest,The following statement contains a magic number: i < 3
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,PrepareThreadSleepTimes,The following statement contains a magic number: Random rnd = new Random(100);
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,PrepareThreadSleepTimes,The following statement contains a magic number: times[a] = rnd.Next(10' 200);
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,PrepareThreadSleepTimes,The following statement contains a magic number: times[a] = rnd.Next(10' 200);
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: int choice = a % 6;
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkEvents,The following statement contains a magic number: switch (choice)                  {                      case 0:                          Countly.RecordEvent(eventKeys[0]);                          break;                      case 1:                          Countly.RecordEvent(eventKeys[1]' 3);                          break;                      case 2:                          Countly.RecordEvent(eventKeys[2]' 3' 4);                          break;                      case 3:                          Segmentation segm = new Segmentation();                          segm.Add("foo"' "bar");                          segm.Add("anti"' "dote");                          Countly.RecordEvent(eventKeys[3]' 3' segm);                          break;                      case 4:                          Segmentation segm2 = new Segmentation();                          segm2.Add("what"' "is");                          segm2.Add("world"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' segm2);                          break;                      default:                      case 5:                          Segmentation segm3 = new Segmentation();                          segm3.Add("what3"' "is");                          segm3.Add("world2"' "ending");                          Countly.RecordEvent(eventKeys[4]' 3' 4.3' 6.7' segm3);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkExceptions,The following statement contains a magic number: int choice = a % 4;
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkExceptions,The following statement contains a magic number: switch (choice)                  {                      case 0:                          res = Countly.RecordException("Big error 1").Result;                          break;                      case 1:                          res = Countly.RecordException(exToUse.Message' exToUse.StackTrace).Result;                          break;                      case 2:                          res = Countly.RecordException(exToUse.Message' exToUse.StackTrace' dict).Result;                          break;                      case 3:                      default:                          res = Countly.RecordException(exToUse.Message' exToUse.StackTrace' dict' false).Result;                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkExceptions,The following statement contains a magic number: switch (choice)                  {                      case 0:                          res = Countly.RecordException("Big error 1").Result;                          break;                      case 1:                          res = Countly.RecordException(exToUse.Message' exToUse.StackTrace).Result;                          break;                      case 2:                          res = Countly.RecordException(exToUse.Message' exToUse.StackTrace' dict).Result;                          break;                      case 3:                      default:                          res = Countly.RecordException(exToUse.Message' exToUse.StackTrace' dict' false).Result;                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkUserDetails,The following statement contains a magic number: Random rnd = new Random(2);
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkMergeDeviceId,The following statement contains a magic number: Random rnd = new Random(2);
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkMergeDeviceId,The following statement contains a magic number: Api.Instance.DeviceMergeWaitTime = 500;
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkMergeDeviceId,The following statement contains a magic number: switch (a % 2)                  {                      case 0:                          Countly.Instance.ChangeDeviceId(deviceId' false);                          break;                      case 1:                          Countly.Instance.ChangeDeviceId(deviceId' true);                          break;                  }
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkSetLocation,The following statement contains a magic number: Random rnd = new Random(2);
Magic Number,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkSetLocation,The following statement contains a magic number: switch (a % 2)                  {                      case 0:                          res = Countly.Instance.SetLocation("fdsf").Result;                          break;                      case 1:                      default:                          res = Countly.Instance.DisableLocation().Result;                          break;                  }
Missing Default,TestProject_common,ThreadingTestCases,D:\research\architectureSmells\repos\Countly_countly-sdk-windows-phone\countlyCommon\TestingRelated\ThreadingTestCases.cs,ThreadWorkMergeDeviceId,The following switch statement is missing a default case: switch (a % 2)                  {                      case 0:                          Countly.Instance.ChangeDeviceId(deviceId' false);                          break;                      case 1:                          Countly.Instance.ChangeDeviceId(deviceId' true);                          break;                  }
