Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Authorize,The length of the statement  "			string redirectUri = new UriBuilder ("https"' context.Request.Uri.Host' 443' context.Request.Uri.PathAndQuery).ToString (); " is 123.
Long Statement,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Authorize,The length of the statement  "					return _options.Users.Any (user => user.Validate (login' password' _options.LoginCaseSensitive)) || Challenge (context); " is 120.
Long Statement,Hangfire.Dashboard,BasicAuthAuthorizationUser,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationUser.cs,Validate,The length of the statement  "	if (login.Equals (Login' loginCaseSensitive ? StringComparison.InvariantCulture : StringComparison.InvariantCultureIgnoreCase) == true) { " is 137.
Magic Number,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Authorize,The following statement contains a magic number: if ((_options.SslRedirect == true) && (context.Request.Uri.Scheme != "https")) {  	context.Response.OnSendingHeaders (state => {  		string redirectUri = new UriBuilder ("https"' context.Request.Uri.Host' 443' context.Request.Uri.PathAndQuery).ToString ();  		context.Response.StatusCode = 301;  		context.Response.Redirect (redirectUri);  	}' null);  	return false;  }  
Magic Number,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Authorize,The following statement contains a magic number: if ((_options.SslRedirect == true) && (context.Request.Uri.Scheme != "https")) {  	context.Response.OnSendingHeaders (state => {  		string redirectUri = new UriBuilder ("https"' context.Request.Uri.Host' 443' context.Request.Uri.PathAndQuery).ToString ();  		context.Response.StatusCode = 301;  		context.Response.Redirect (redirectUri);  	}' null);  	return false;  }  
Magic Number,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Authorize,The following statement contains a magic number: context.Response.OnSendingHeaders (state => {  	string redirectUri = new UriBuilder ("https"' context.Request.Uri.Host' 443' context.Request.Uri.PathAndQuery).ToString ();  	context.Response.StatusCode = 301;  	context.Response.Redirect (redirectUri);  }' null);  
Magic Number,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Authorize,The following statement contains a magic number: context.Response.OnSendingHeaders (state => {  	string redirectUri = new UriBuilder ("https"' context.Request.Uri.Host' 443' context.Request.Uri.PathAndQuery).ToString ();  	context.Response.StatusCode = 301;  	context.Response.Redirect (redirectUri);  }' null);  
Magic Number,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Authorize,The following statement contains a magic number: context.Response.StatusCode = 301;  
Magic Number,Hangfire.Dashboard,BasicAuthAuthorizationFilter,F:\newReposMay17\HangfireIO_Hangfire.Dashboard.Authorization\src\Hangfire.Dashboard.Authorization\BasicAuthAuthorizationFilter.cs,Challenge,The following statement contains a magic number: context.Response.StatusCode = 401;  
