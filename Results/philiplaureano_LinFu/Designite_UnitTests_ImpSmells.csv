Implementation smell,Namespace,Class,File,Method,Description
Virtual Method Call from Constructor,LinFu.UnitTests,BaseTestFixture,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\BaseTestFixture.cs,BaseTestFixture,The constructor "BaseTestFixture" calls a virtual method "Init".
Empty Catch Block,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,Term,The method has an empty catch block.
Magic Number,LinFu.UnitTests.Finders,FinderTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Finders\FinderTests.cs,ShouldBeAbleToAddLambdasAsCriteria,The following statement contains a magic number: fuzzyList.Add(5);
Magic Number,LinFu.UnitTests.Finders,FinderTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Finders\FinderTests.cs,ShouldBeAbleToAddLambdasAsCriteria,The following statement contains a magic number: fuzzyList.AddCriteria(item => item == 5);
Magic Number,LinFu.UnitTests.Finders,FinderTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Finders\FinderTests.cs,ShouldBeAbleToAddLambdasAsCriteria,The following statement contains a magic number: Assert.Equal(5' fuzzyList.BestMatch().Item);
Magic Number,LinFu.UnitTests.Finders,FinderTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Finders\FinderTests.cs,ShouldBeAbleToDetermineBestFuzzyMatch,The following statement contains a magic number: mockFuzzyItem.Expect(f => f.Confidence).Returns(.8);
Magic Number,LinFu.UnitTests.Finders,FinderTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Finders\FinderTests.cs,ShouldBeAbleToDetermineBestFuzzyMatch,The following statement contains a magic number: otherMockFuzzyItem.Expect(f => f.Confidence).Returns(.1);
Magic Number,LinFu.UnitTests.Finders,FinderTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Finders\FinderTests.cs,ShouldNotBeAbleToIgnoreFailedCriticalCriteria,The following statement contains a magic number: var trueCriteria = GetMockCriteria(true' CriteriaType.Standard' 2);
Magic Number,LinFu.UnitTests.IOC,FileWatcherTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\FileWatcherTests.cs,ShouldLoadAssemblyIntoLoaderAtRuntime,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,GetContainerWithMockSampleServices,The following statement contains a magic number: i < 10
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,GetContainerWithMockSampleServices,The following statement contains a magic number: Assert.True(services.Count() == 10);
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldCallStronglyTypedFunctorInsteadOfActualFactory,The following statement contains a magic number: Assert.Equal(2' container.GetService<int>("Add"' 1' 1));
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldCallStronglyTypedFunctorInsteadOfActualFactory,The following statement contains a magic number: Assert.Equal(3' container.GetService<int>("Add"' 1' 1' 1));
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldCallStronglyTypedFunctorInsteadOfActualFactory,The following statement contains a magic number: Assert.Equal(4' container.GetService<int>("Add"' 1' 1' 1' 1));
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldCreateTypeWithAdditionalParameters,The following statement contains a magic number: var instance =                 container.AutoCreate(typeof(SampleClassWithAdditionalArgument)' 42) as                     SampleClassWithAdditionalArgument;
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldCreateTypeWithAdditionalParameters,The following statement contains a magic number: Assert.True(instance.Argument == 42);
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldResolveClassWithMultipleNonServiceArgumentConstructors,The following statement contains a magic number: var sampleService = container.GetService<ISampleService>("ClassWithMultipleNonServiceArgumentConstructors"'                 "test"' 42' SampleEnum.One' (decimal) 3.14' 42);
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldResolveClassWithMultipleNonServiceArgumentConstructors,The following statement contains a magic number: var sampleService = container.GetService<ISampleService>("ClassWithMultipleNonServiceArgumentConstructors"'                 "test"' 42' SampleEnum.One' (decimal) 3.14' 42);
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldResolveClassWithMultipleNonServiceArgumentConstructors,The following statement contains a magic number: var sampleService = container.GetService<ISampleService>("ClassWithMultipleNonServiceArgumentConstructors"'                 "test"' 42' SampleEnum.One' (decimal) 3.14' 42);
Magic Number,LinFu.UnitTests.IOC,ResolutionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\ResolutionTests.cs,ShouldResolveConstructorWithAdditionalArgument,The following statement contains a magic number: var context = new MethodFinderContext(42);
Magic Number,LinFu.UnitTests.IOC,FluentPropertyInjectionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\FluentPropertyInjectionTests.cs,TestPropertyInjection,The following statement contains a magic number: mockTarget.Expect(t => t.SetValue(123));
Magic Number,LinFu.UnitTests.IOC,FluentPropertyInjectionTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\FluentPropertyInjectionTests.cs,TestPropertyInjection,The following statement contains a magic number: container.Initialize<IInjectionTarget>(serviceName)                     .With(service => service.SetValue(123));
Magic Number,LinFu.UnitTests.IOC,InversionOfControlTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\InversionOfControlTests.cs,ContainerMustBeAbleToReturnAListOfServices,The following statement contains a magic number: i < 10
Magic Number,LinFu.UnitTests.IOC,InversionOfControlTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\InversionOfControlTests.cs,ContainerMustBeAbleToReturnAListOfServices,The following statement contains a magic number: Assert.True(services.Count() == 10);
Magic Number,LinFu.UnitTests.IOC,InversionOfControlTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\InversionOfControlTests.cs,ContainerMustGetMultipleServicesOfTheSameTypeInOneCall,The following statement contains a magic number: var mockServiceCount = 10;
Magic Number,LinFu.UnitTests.IOC,InversionOfControlTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\InversionOfControlTests.cs,ContainerShouldBeAbleToCreateAGenericServiceImplementationThatHasAConstructorWithPrimitiveArguments,The following statement contains a magic number: s = container.GetService<ISampleService<int>>(42' "frobozz"' false);
Magic Number,LinFu.UnitTests.IOC,InversionOfControlTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\InversionOfControlTests.cs,ContainerShouldBeAbleToCreateAGenericServiceImplementationThatHasAConstructorWithPrimitiveArguments,The following statement contains a magic number: s = container.GetService<ISampleService<int>>(42' "frobozz");
Magic Number,LinFu.UnitTests.IOC,InversionOfControlTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\IOC\InversionOfControlTests.cs,ContainerShouldBeAbleToCreateAGenericServiceImplementationThatHasAConstructorWithPrimitiveArguments,The following statement contains a magic number: s = container.GetService<ISampleService<int>>(42' false);
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldCacheProxyTypes,The following statement contains a magic number: var runCount = 10;
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldCreateProxyWithVirtualSetterInitializedInCtor,The following statement contains a magic number: Func<IInvocationInfo' object> implementation = info =>             {                 var methodName = info.TargetMethod.Name;                  if (methodName == "DoSomething")                     info.Arguments[0] = 54321;                  if (methodName == "get_SomeProp")                     return "blah";                  return null;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldCreateProxyWithVirtualSetterInitializedInCtor,The following statement contains a magic number: Assert.Equal(54321' value);
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportMethodCallsWithGenericReturnValuesFromGenericMethodTypeArguments,The following statement contains a magic number: Func<IInvocationInfo' object> methodBody = info =>             {                 var typeArguments = info.TypeArguments;                  // Match the type arguments                 Assert.Equal(typeof(int)' typeArguments[0]);                 dummyList.Add(12345);                 return 12345;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportMethodCallsWithGenericReturnValuesFromGenericMethodTypeArguments,The following statement contains a magic number: Func<IInvocationInfo' object> methodBody = info =>             {                 var typeArguments = info.TypeArguments;                  // Match the type arguments                 Assert.Equal(typeof(int)' typeArguments[0]);                 dummyList.Add(12345);                 return 12345;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportMethodCallsWithGenericReturnValuesFromHostGenericTypeArguments,The following statement contains a magic number: var proxy = CreateProxy<ClassWithMethodReturnValueFromTypeArgument<int>>(                 info =>                 {                     // Make sure that the method return type                      // matches the given return type                     Assert.True(info.ReturnType == typeof(int));                     return 54321;                 });
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportMethodCallsWithGenericReturnValuesFromHostGenericTypeArguments,The following statement contains a magic number: Assert.Equal(54321' result);
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportMethodCallsWithOpenGenericParameters,The following statement contains a magic number: Func<IInvocationInfo' object> methodBody = info =>             {                 var typeArguments = info.TypeArguments;                  // Match the type arguments                 Assert.Equal(typeof(int)' typeArguments[0]);                  dummyList.Add(12345);                  return dummyList;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportMethodsCallsWithGenericTypeDefinitionReturnType,The following statement contains a magic number: Func<IInvocationInfo' object> methodBody = info =>             {                 var typeArguments = info.TypeArguments;                  // Match the type arguments                  Assert.Equal(typeof(int)' typeArguments[0]);                 dummyList.Add(12345);                 return dummyList;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportOutArguments,The following statement contains a magic number: Func<IInvocationInfo' object> implementation = info =>             {                 info.Arguments[0] = 54321;                 return null;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportOutArguments,The following statement contains a magic number: Assert.Equal(54321' value);
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportRefArguments,The following statement contains a magic number: Func<IInvocationInfo' object> implementation = info =>             {                 info.Arguments[0] = 54321;                 return null;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportRefArguments,The following statement contains a magic number: Assert.Equal(54321' value);
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportSerialization,The following statement contains a magic number: Func<IInvocationInfo' object> methodBody = info =>             {                 var typeArguments = info.TypeArguments;                  // Match the type arguments                 Assert.Equal(typeof(int)' typeArguments[0]);                 dummyList.Add(12345);                 return dummyList;             };
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportSubclassingFromGenericTypes,The following statement contains a magic number: proxy.Add(12345);
Magic Number,LinFu.UnitTests.Proxy,ProxyFactoryTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxyFactoryTests.cs,ShouldSupportSubclassingFromGenericTypes,The following statement contains a magic number: Assert.True(actualList[0] == 12345);
Magic Number,LinFu.UnitTests.Proxy,ProxySerializationTests,C:\research\architectureSmells\repos\philiplaureano_LinFu\src\UnitTests\Proxy\ProxySerializationTests.cs,ShouldSupportSerialization,The following statement contains a magic number: Assert.True(constructors.Length == 2);
