Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BoxViewCircle,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewCircle\BoxViewCircle\BoxViewCircle\BoxViewClockPage.cs,BoxViewClockPage,The following statement contains a magic number: absoluteLayout.SizeChanged += (sender' args) =>                  {                      Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);                      double radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;                      double circumference = 2 * Math.PI * radius;                      double length = circumference / COUNT;                        for (int index = 0; index < absoluteLayout.Children.Count; index++)                      {                          BoxView boxView = (BoxView)absoluteLayout.Children[index];                            // Position every BoxView at the top.                          AbsoluteLayout.SetLayoutBounds(boxView'                              new Rectangle(center.X - length / 2'                                               center.Y - radius'                                               length'                                               THICKNESS));                            // Set the AnchorX and AnchorY properties so rotation is                           //      around the center of the AbsoluteLayout.                          boxView.AnchorX = 0.5;                          boxView.AnchorY = radius / THICKNESS;                            // Set a unique Rotation for each BoxView.                          boxView.Rotation = index * 360.0 / COUNT;                      }                  };
Magic Number,BoxViewCircle,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewCircle\BoxViewCircle\BoxViewCircle\BoxViewClockPage.cs,BoxViewClockPage,The following statement contains a magic number: absoluteLayout.SizeChanged += (sender' args) =>                  {                      Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);                      double radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;                      double circumference = 2 * Math.PI * radius;                      double length = circumference / COUNT;                        for (int index = 0; index < absoluteLayout.Children.Count; index++)                      {                          BoxView boxView = (BoxView)absoluteLayout.Children[index];                            // Position every BoxView at the top.                          AbsoluteLayout.SetLayoutBounds(boxView'                              new Rectangle(center.X - length / 2'                                               center.Y - radius'                                               length'                                               THICKNESS));                            // Set the AnchorX and AnchorY properties so rotation is                           //      around the center of the AbsoluteLayout.                          boxView.AnchorX = 0.5;                          boxView.AnchorY = radius / THICKNESS;                            // Set a unique Rotation for each BoxView.                          boxView.Rotation = index * 360.0 / COUNT;                      }                  };
Magic Number,BoxViewCircle,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewCircle\BoxViewCircle\BoxViewCircle\BoxViewClockPage.cs,BoxViewClockPage,The following statement contains a magic number: absoluteLayout.SizeChanged += (sender' args) =>                  {                      Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);                      double radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;                      double circumference = 2 * Math.PI * radius;                      double length = circumference / COUNT;                        for (int index = 0; index < absoluteLayout.Children.Count; index++)                      {                          BoxView boxView = (BoxView)absoluteLayout.Children[index];                            // Position every BoxView at the top.                          AbsoluteLayout.SetLayoutBounds(boxView'                              new Rectangle(center.X - length / 2'                                               center.Y - radius'                                               length'                                               THICKNESS));                            // Set the AnchorX and AnchorY properties so rotation is                           //      around the center of the AbsoluteLayout.                          boxView.AnchorX = 0.5;                          boxView.AnchorY = radius / THICKNESS;                            // Set a unique Rotation for each BoxView.                          boxView.Rotation = index * 360.0 / COUNT;                      }                  };
Magic Number,BoxViewCircle,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewCircle\BoxViewCircle\BoxViewCircle\BoxViewClockPage.cs,BoxViewClockPage,The following statement contains a magic number: absoluteLayout.SizeChanged += (sender' args) =>                  {                      Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);                      double radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;                      double circumference = 2 * Math.PI * radius;                      double length = circumference / COUNT;                        for (int index = 0; index < absoluteLayout.Children.Count; index++)                      {                          BoxView boxView = (BoxView)absoluteLayout.Children[index];                            // Position every BoxView at the top.                          AbsoluteLayout.SetLayoutBounds(boxView'                              new Rectangle(center.X - length / 2'                                               center.Y - radius'                                               length'                                               THICKNESS));                            // Set the AnchorX and AnchorY properties so rotation is                           //      around the center of the AbsoluteLayout.                          boxView.AnchorX = 0.5;                          boxView.AnchorY = radius / THICKNESS;                            // Set a unique Rotation for each BoxView.                          boxView.Rotation = index * 360.0 / COUNT;                      }                  };
Magic Number,BoxViewCircle,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewCircle\BoxViewCircle\BoxViewCircle\BoxViewClockPage.cs,BoxViewClockPage,The following statement contains a magic number: absoluteLayout.SizeChanged += (sender' args) =>                  {                      Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);                      double radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;                      double circumference = 2 * Math.PI * radius;                      double length = circumference / COUNT;                        for (int index = 0; index < absoluteLayout.Children.Count; index++)                      {                          BoxView boxView = (BoxView)absoluteLayout.Children[index];                            // Position every BoxView at the top.                          AbsoluteLayout.SetLayoutBounds(boxView'                              new Rectangle(center.X - length / 2'                                               center.Y - radius'                                               length'                                               THICKNESS));                            // Set the AnchorX and AnchorY properties so rotation is                           //      around the center of the AbsoluteLayout.                          boxView.AnchorX = 0.5;                          boxView.AnchorY = radius / THICKNESS;                            // Set a unique Rotation for each BoxView.                          boxView.Rotation = index * 360.0 / COUNT;                      }                  };
Magic Number,BoxViewCircle,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewCircle\BoxViewCircle\BoxViewCircle\BoxViewClockPage.cs,BoxViewClockPage,The following statement contains a magic number: absoluteLayout.SizeChanged += (sender' args) =>                  {                      Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);                      double radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;                      double circumference = 2 * Math.PI * radius;                      double length = circumference / COUNT;                        for (int index = 0; index < absoluteLayout.Children.Count; index++)                      {                          BoxView boxView = (BoxView)absoluteLayout.Children[index];                            // Position every BoxView at the top.                          AbsoluteLayout.SetLayoutBounds(boxView'                              new Rectangle(center.X - length / 2'                                               center.Y - radius'                                               length'                                               THICKNESS));                            // Set the AnchorX and AnchorY properties so rotation is                           //      around the center of the AbsoluteLayout.                          boxView.AnchorX = 0.5;                          boxView.AnchorY = radius / THICKNESS;                            // Set a unique Rotation for each BoxView.                          boxView.Rotation = index * 360.0 / COUNT;                      }                  };
Magic Number,BoxViewCircle,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewCircle\BoxViewCircle\BoxViewCircle\BoxViewClockPage.cs,BoxViewClockPage,The following statement contains a magic number: absoluteLayout.SizeChanged += (sender' args) =>                  {                      Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);                      double radius = Math.Min(absoluteLayout.Width' absoluteLayout.Height) / 2;                      double circumference = 2 * Math.PI * radius;                      double length = circumference / COUNT;                        for (int index = 0; index < absoluteLayout.Children.Count; index++)                      {                          BoxView boxView = (BoxView)absoluteLayout.Children[index];                            // Position every BoxView at the top.                          AbsoluteLayout.SetLayoutBounds(boxView'                              new Rectangle(center.X - length / 2'                                               center.Y - radius'                                               length'                                               THICKNESS));                            // Set the AnchorX and AnchorY properties so rotation is                           //      around the center of the AbsoluteLayout.                          boxView.AnchorX = 0.5;                          boxView.AnchorY = radius / THICKNESS;                            // Set a unique Rotation for each BoxView.                          boxView.Rotation = index * 360.0 / COUNT;                      }                  };
