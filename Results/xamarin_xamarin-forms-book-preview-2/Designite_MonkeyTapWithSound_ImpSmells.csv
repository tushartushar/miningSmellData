Implementation smell,Namespace,Class,File,Method,Description
Magic Number,MonkeyTap,MonkeyTapPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter08\MonkeyTap\MonkeyTap\MonkeyTap\MonkeyTapPage.xaml.cs,InitializeBoxViewColors,The following statement contains a magic number: for (int index = 0; index < 4; index++)                  boxViews[index].Color = colors[index].WithLuminosity(offLuminosity);
Magic Number,MonkeyTap,MonkeyTapPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter08\MonkeyTap\MonkeyTap\MonkeyTap\MonkeyTapPage.xaml.cs,StartSequence,The following statement contains a magic number: sequence.Add(random.Next(4));
Magic Number,MonkeyTap,MonkeyTapPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter08\MonkeyTap\MonkeyTap\MonkeyTap\MonkeyTapPage.xaml.cs,EndGame,The following statement contains a magic number: for (int index = 0; index < 4; index++)                  boxViews[index].Color = Color.Gray;
Magic Number,MonkeyTapWithSound,MonkeyTapWithSoundPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSoundPage.cs,EndGame,The following statement contains a magic number: SoundPlayer.PlaySound(65.4' errorDuration);
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: short[] shortBuffer = new short[samplingRate * duration / 1000];
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: for (int i = 0; i < shortBuffer.Length; i++)              {                  // Define triangle wave                  double sample;                    // 0 to 1                  if (angle < 0.25)                      sample = 4 * angle;                    // 1 to -1                  else if (angle < 0.75)                      sample = 4 * (0.5 - angle);                    // -1 to 0                  else                      sample = 4 * (angle - 1);                    shortBuffer[i] = (short)(32767 * sample);                  angle += angleIncrement;                    while (angle > 1)                      angle -= 1;              }
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: for (int i = 0; i < shortBuffer.Length; i++)              {                  // Define triangle wave                  double sample;                    // 0 to 1                  if (angle < 0.25)                      sample = 4 * angle;                    // 1 to -1                  else if (angle < 0.75)                      sample = 4 * (0.5 - angle);                    // -1 to 0                  else                      sample = 4 * (angle - 1);                    shortBuffer[i] = (short)(32767 * sample);                  angle += angleIncrement;                    while (angle > 1)                      angle -= 1;              }
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: for (int i = 0; i < shortBuffer.Length; i++)              {                  // Define triangle wave                  double sample;                    // 0 to 1                  if (angle < 0.25)                      sample = 4 * angle;                    // 1 to -1                  else if (angle < 0.75)                      sample = 4 * (0.5 - angle);                    // -1 to 0                  else                      sample = 4 * (angle - 1);                    shortBuffer[i] = (short)(32767 * sample);                  angle += angleIncrement;                    while (angle > 1)                      angle -= 1;              }
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: for (int i = 0; i < shortBuffer.Length; i++)              {                  // Define triangle wave                  double sample;                    // 0 to 1                  if (angle < 0.25)                      sample = 4 * angle;                    // 1 to -1                  else if (angle < 0.75)                      sample = 4 * (0.5 - angle);                    // -1 to 0                  else                      sample = 4 * (angle - 1);                    shortBuffer[i] = (short)(32767 * sample);                  angle += angleIncrement;                    while (angle > 1)                      angle -= 1;              }
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: for (int i = 0; i < shortBuffer.Length; i++)              {                  // Define triangle wave                  double sample;                    // 0 to 1                  if (angle < 0.25)                      sample = 4 * angle;                    // 1 to -1                  else if (angle < 0.75)                      sample = 4 * (0.5 - angle);                    // -1 to 0                  else                      sample = 4 * (angle - 1);                    shortBuffer[i] = (short)(32767 * sample);                  angle += angleIncrement;                    while (angle > 1)                      angle -= 1;              }
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: for (int i = 0; i < shortBuffer.Length; i++)              {                  // Define triangle wave                  double sample;                    // 0 to 1                  if (angle < 0.25)                      sample = 4 * angle;                    // 1 to -1                  else if (angle < 0.75)                      sample = 4 * (0.5 - angle);                    // -1 to 0                  else                      sample = 4 * (angle - 1);                    shortBuffer[i] = (short)(32767 * sample);                  angle += angleIncrement;                    while (angle > 1)                      angle -= 1;              }
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: for (int i = 0; i < shortBuffer.Length; i++)              {                  // Define triangle wave                  double sample;                    // 0 to 1                  if (angle < 0.25)                      sample = 4 * angle;                    // 1 to -1                  else if (angle < 0.75)                      sample = 4 * (0.5 - angle);                    // -1 to 0                  else                      sample = 4 * (angle - 1);                    shortBuffer[i] = (short)(32767 * sample);                  angle += angleIncrement;                    while (angle > 1)                      angle -= 1;              }
Magic Number,MonkeyTapWithSound,SoundPlayer,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter09\MonkeyTapWithSound\MonkeyTapWithSound\MonkeyTapWithSound\SoundPlayer.cs,PlaySound,The following statement contains a magic number: byte[] byteBuffer = new byte[2 * shortBuffer.Length];
