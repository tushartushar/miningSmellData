Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: Point center = new Point(absoluteLayout.Width / 2' absoluteLayout.Height / 2);
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: double radius = 0.45 * Math.Min(absoluteLayout.Width' absoluteLayout.Height);
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: for (int index = 0; index < tickMarks.Length; index++)              {                  double size = radius / (index % 5 == 0 ? 15 : 30);                  double radians = index * 2 * Math.PI / tickMarks.Length;                  double x = center.X + radius * Math.Sin(radians) - size / 2;                  double y = center.Y - radius * Math.Cos(radians) - size / 2;                  AbsoluteLayout.SetLayoutBounds(tickMarks[index]' new Rectangle(x' y' size' size));                  tickMarks[index].Rotation = 180 * radians / Math.PI;              }
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: for (int index = 0; index < tickMarks.Length; index++)              {                  double size = radius / (index % 5 == 0 ? 15 : 30);                  double radians = index * 2 * Math.PI / tickMarks.Length;                  double x = center.X + radius * Math.Sin(radians) - size / 2;                  double y = center.Y - radius * Math.Cos(radians) - size / 2;                  AbsoluteLayout.SetLayoutBounds(tickMarks[index]' new Rectangle(x' y' size' size));                  tickMarks[index].Rotation = 180 * radians / Math.PI;              }
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: for (int index = 0; index < tickMarks.Length; index++)              {                  double size = radius / (index % 5 == 0 ? 15 : 30);                  double radians = index * 2 * Math.PI / tickMarks.Length;                  double x = center.X + radius * Math.Sin(radians) - size / 2;                  double y = center.Y - radius * Math.Cos(radians) - size / 2;                  AbsoluteLayout.SetLayoutBounds(tickMarks[index]' new Rectangle(x' y' size' size));                  tickMarks[index].Rotation = 180 * radians / Math.PI;              }
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: for (int index = 0; index < tickMarks.Length; index++)              {                  double size = radius / (index % 5 == 0 ? 15 : 30);                  double radians = index * 2 * Math.PI / tickMarks.Length;                  double x = center.X + radius * Math.Sin(radians) - size / 2;                  double y = center.Y - radius * Math.Cos(radians) - size / 2;                  AbsoluteLayout.SetLayoutBounds(tickMarks[index]' new Rectangle(x' y' size' size));                  tickMarks[index].Rotation = 180 * radians / Math.PI;              }
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: for (int index = 0; index < tickMarks.Length; index++)              {                  double size = radius / (index % 5 == 0 ? 15 : 30);                  double radians = index * 2 * Math.PI / tickMarks.Length;                  double x = center.X + radius * Math.Sin(radians) - size / 2;                  double y = center.Y - radius * Math.Cos(radians) - size / 2;                  AbsoluteLayout.SetLayoutBounds(tickMarks[index]' new Rectangle(x' y' size' size));                  tickMarks[index].Rotation = 180 * radians / Math.PI;              }
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: for (int index = 0; index < tickMarks.Length; index++)              {                  double size = radius / (index % 5 == 0 ? 15 : 30);                  double radians = index * 2 * Math.PI / tickMarks.Length;                  double x = center.X + radius * Math.Sin(radians) - size / 2;                  double y = center.Y - radius * Math.Cos(radians) - size / 2;                  AbsoluteLayout.SetLayoutBounds(tickMarks[index]' new Rectangle(x' y' size' size));                  tickMarks[index].Rotation = 180 * radians / Math.PI;              }
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,OnAbsoluteLayoutSizeChanged,The following statement contains a magic number: for (int index = 0; index < tickMarks.Length; index++)              {                  double size = radius / (index % 5 == 0 ? 15 : 30);                  double radians = index * 2 * Math.PI / tickMarks.Length;                  double x = center.X + radius * Math.Sin(radians) - size / 2;                  double y = center.Y - radius * Math.Cos(radians) - size / 2;                  AbsoluteLayout.SetLayoutBounds(tickMarks[index]' new Rectangle(x' y' size' size));                  tickMarks[index].Rotation = 180 * radians / Math.PI;              }
Magic Number,BoxViewClock,BoxViewClockPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter21\BoxViewClock\BoxViewClock\BoxViewClock\BoxViewClockPage.xaml.cs,LayoutHand,The following statement contains a magic number: AbsoluteLayout.SetLayoutBounds(boxView'                  new Rectangle(center.X - 0.5 * width'                                  center.Y - offset * height'                                  width' height));
