Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: uint duration = 5 * 60 * 1000;
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: uint duration = 5 * 60 * 1000;
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: uint duration = 5 * 60 * 1000;
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: while (true)              {                  await Task.WhenAll(                      image.RotateTo(307 * 360' duration)'                      image.RotateXTo(251 * 360' duration)'                      image.RotateYTo(199 * 360' duration));                    image.Rotation = 0;                  image.RotationX = 0;                  image.RotationY = 0;              }
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: while (true)              {                  await Task.WhenAll(                      image.RotateTo(307 * 360' duration)'                      image.RotateXTo(251 * 360' duration)'                      image.RotateYTo(199 * 360' duration));                    image.Rotation = 0;                  image.RotationX = 0;                  image.RotationY = 0;              }
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: while (true)              {                  await Task.WhenAll(                      image.RotateTo(307 * 360' duration)'                      image.RotateXTo(251 * 360' duration)'                      image.RotateYTo(199 * 360' duration));                    image.Rotation = 0;                  image.RotationX = 0;                  image.RotationY = 0;              }
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: while (true)              {                  await Task.WhenAll(                      image.RotateTo(307 * 360' duration)'                      image.RotateXTo(251 * 360' duration)'                      image.RotateYTo(199 * 360' duration));                    image.Rotation = 0;                  image.RotationX = 0;                  image.RotationY = 0;              }
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: while (true)              {                  await Task.WhenAll(                      image.RotateTo(307 * 360' duration)'                      image.RotateXTo(251 * 360' duration)'                      image.RotateYTo(199 * 360' duration));                    image.Rotation = 0;                  image.RotationX = 0;                  image.RotationY = 0;              }
Magic Number,SpinningImage,SpinningImagePage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter22\SpinningImage\SpinningImage\SpinningImage\SpinningImagePage.xaml.cs,AnimationLoop,The following statement contains a magic number: while (true)              {                  await Task.WhenAll(                      image.RotateTo(307 * 360' duration)'                      image.RotateXTo(251 * 360' duration)'                      image.RotateYTo(199 * 360' duration));                    image.Rotation = 0;                  image.RotationX = 0;                  image.RotationY = 0;              }
