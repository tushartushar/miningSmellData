Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ChessboardFixed,ChessboardFixedPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter14\ChessboardFixed\ChessboardFixed\ChessboardFixed\ChessboardFixedPage.cs,ChessboardFixedPage,The following statement contains a magic number: const double squareSize = 35;
Magic Number,ChessboardFixed,ChessboardFixedPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter14\ChessboardFixed\ChessboardFixed\ChessboardFixed\ChessboardFixedPage.cs,ChessboardFixedPage,The following statement contains a magic number: AbsoluteLayout absoluteLayout = new AbsoluteLayout              {                  BackgroundColor = Color.FromRgb(240' 220' 130)'                  HorizontalOptions = LayoutOptions.Center'                  VerticalOptions = LayoutOptions.Center              };
Magic Number,ChessboardFixed,ChessboardFixedPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter14\ChessboardFixed\ChessboardFixed\ChessboardFixed\ChessboardFixedPage.cs,ChessboardFixedPage,The following statement contains a magic number: AbsoluteLayout absoluteLayout = new AbsoluteLayout              {                  BackgroundColor = Color.FromRgb(240' 220' 130)'                  HorizontalOptions = LayoutOptions.Center'                  VerticalOptions = LayoutOptions.Center              };
Magic Number,ChessboardFixed,ChessboardFixedPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter14\ChessboardFixed\ChessboardFixed\ChessboardFixed\ChessboardFixedPage.cs,ChessboardFixedPage,The following statement contains a magic number: AbsoluteLayout absoluteLayout = new AbsoluteLayout              {                  BackgroundColor = Color.FromRgb(240' 220' 130)'                  HorizontalOptions = LayoutOptions.Center'                  VerticalOptions = LayoutOptions.Center              };
Magic Number,ChessboardFixed,ChessboardFixedPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter14\ChessboardFixed\ChessboardFixed\ChessboardFixed\ChessboardFixedPage.cs,ChessboardFixedPage,The following statement contains a magic number: for (int row = 0; row < 8; row++)              {                  for (int col = 0; col < 8; col++)                  {                      // Skip every other square.                      if (((row ^ col) & 1) == 0)                          continue;                        BoxView boxView = new BoxView                      {                          Color = Color.FromRgb(0' 64' 0)                      };                        Rectangle rect = new Rectangle(col * squareSize'                                                     row * squareSize'                                                     squareSize' squareSize);                        absoluteLayout.Children.Add(boxView' rect);                  }              }
Magic Number,ChessboardFixed,ChessboardFixedPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter14\ChessboardFixed\ChessboardFixed\ChessboardFixed\ChessboardFixedPage.cs,ChessboardFixedPage,The following statement contains a magic number: for (int row = 0; row < 8; row++)              {                  for (int col = 0; col < 8; col++)                  {                      // Skip every other square.                      if (((row ^ col) & 1) == 0)                          continue;                        BoxView boxView = new BoxView                      {                          Color = Color.FromRgb(0' 64' 0)                      };                        Rectangle rect = new Rectangle(col * squareSize'                                                     row * squareSize'                                                     squareSize' squareSize);                        absoluteLayout.Children.Add(boxView' rect);                  }              }
Magic Number,ChessboardFixed,ChessboardFixedPage,C:\repos\xamarin_xamarin-forms-book-preview-2\Chapter14\ChessboardFixed\ChessboardFixed\ChessboardFixed\ChessboardFixedPage.cs,ChessboardFixedPage,The following statement contains a magic number: for (int row = 0; row < 8; row++)              {                  for (int col = 0; col < 8; col++)                  {                      // Skip every other square.                      if (((row ^ col) & 1) == 0)                          continue;                        BoxView boxView = new BoxView                      {                          Color = Color.FromRgb(0' 64' 0)                      };                        Rectangle rect = new Rectangle(col * squareSize'                                                     row * squareSize'                                                     squareSize' squareSize);                        absoluteLayout.Children.Add(boxView' rect);                  }              }
