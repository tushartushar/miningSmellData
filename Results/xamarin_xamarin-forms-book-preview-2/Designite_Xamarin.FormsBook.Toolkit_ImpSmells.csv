Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The method has 6 parameters. Parameters: row' col' r' g' b' a
Long Parameter List,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,TranslateXYTo,The method has 5 parameters. Parameters: view' x' y' length' easing
Long Parameter List,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,BezierPathTo,The method has 7 parameters. Parameters: view' pt1' pt2' pt3' length' bezierTangent' easing
Long Parameter List,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,RgbColorAnimation,The method has 6 parameters. Parameters: view' fromColor' toColor' callback' length' easing
Long Parameter List,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,HslColorAnimation,The method has 6 parameters. Parameters: view' fromColor' toColor' callback' length' easing
Long Parameter List,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,ColorAnimation,The method has 6 parameters. Parameters: view' name' transform' callback' length' easing
Magic Number,Xamarin.FormsBook.Toolkit,AdderViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AdderViewModel.cs,AdderViewModel,The following statement contains a magic number: NumericCommand = new Command<string>(                  execute: (string parameter) =>                  {                      if (isSumDisplayed || CurrentEntry == "0")                          CurrentEntry = parameter;                      else                          CurrentEntry += parameter;                        isSumDisplayed = false;                      RefreshCanExecutes();                  }'                  canExecute: (string parameter) =>                  {                      return isSumDisplayed || CurrentEntry.Length < 16;                  });
Magic Number,Xamarin.FormsBook.Toolkit,AltLabel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AltLabel.cs,SetLabelFontSize,The following statement contains a magic number: FontSize = Device.OnPlatform(160' 160' 240) * pointSize / 72;
Magic Number,Xamarin.FormsBook.Toolkit,AltLabel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AltLabel.cs,SetLabelFontSize,The following statement contains a magic number: FontSize = Device.OnPlatform(160' 160' 240) * pointSize / 72;
Magic Number,Xamarin.FormsBook.Toolkit,AltLabel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AltLabel.cs,SetLabelFontSize,The following statement contains a magic number: FontSize = Device.OnPlatform(160' 160' 240) * pointSize / 72;
Magic Number,Xamarin.FormsBook.Toolkit,AltLabel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AltLabel.cs,SetLabelFontSize,The following statement contains a magic number: FontSize = Device.OnPlatform(160' 160' 240) * pointSize / 72;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: HourAngle = 30 * (dateTime.Hour % 12) + 0.5 * dateTime.Minute;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: HourAngle = 30 * (dateTime.Hour % 12) + 0.5 * dateTime.Minute;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: HourAngle = 30 * (dateTime.Hour % 12) + 0.5 * dateTime.Minute;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: MinuteAngle = 6 * dateTime.Minute + 0.1 * dateTime.Second;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: MinuteAngle = 6 * dateTime.Minute + 0.1 * dateTime.Second;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: SecondAngle = 6 * dateTime.Second + 0.006 * dateTime.Millisecond;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: SecondAngle = 6 * dateTime.Second + 0.006 * dateTime.Millisecond;
Magic Number,Xamarin.FormsBook.Toolkit,AnalogClockViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\AnalogClockViewModel.cs,UpdateLoop,The following statement contains a magic number: await Task.Delay(16);
Magic Number,Xamarin.FormsBook.Toolkit,BaseTwoLogConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BaseTwoLogConverter.cs,Convert,The following statement contains a magic number: return Math.Log((int)value) / Math.Log(2);
Magic Number,Xamarin.FormsBook.Toolkit,BaseTwoLogConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BaseTwoLogConverter.cs,Convert,The following statement contains a magic number: return Math.Log((double)value) / Math.Log(2);
Magic Number,Xamarin.FormsBook.Toolkit,BaseTwoLogConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BaseTwoLogConverter.cs,ConvertBack,The following statement contains a magic number: double returnValue = Math.Pow(2' (double)value);
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: double x = (1 - t) * (1 - t) * (1 - t) * Point0.X +                         3 * t * (1 - t) * (1 - t) * Point1.X +                         3 * t * t * (1 - t) * Point2.X +                         t * t * t * Point3.X;
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: double x = (1 - t) * (1 - t) * (1 - t) * Point0.X +                         3 * t * (1 - t) * (1 - t) * Point1.X +                         3 * t * t * (1 - t) * Point2.X +                         t * t * t * Point3.X;
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: double y = (1 - t) * (1 - t) * (1 - t) * Point0.Y +                         3 * t * (1 - t) * (1 - t) * Point1.Y +                         3 * t * t * (1 - t) * Point2.Y +                         t * t * t * Point3.Y;
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: double y = (1 - t) * (1 - t) * (1 - t) * Point0.Y +                         3 * t * (1 - t) * (1 - t) * Point1.Y +                         3 * t * t * (1 - t) * Point2.Y +                         t * t * t * Point3.Y;
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: x = 3 * (1 - t) * (1 - t) * (Point1.X - Point0.X) +                  6 * t * (1 - t) * (Point2.X - Point1.X) +                  3 * t * t * (Point3.X - Point2.X);
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: x = 3 * (1 - t) * (1 - t) * (Point1.X - Point0.X) +                  6 * t * (1 - t) * (Point2.X - Point1.X) +                  3 * t * t * (Point3.X - Point2.X);
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: x = 3 * (1 - t) * (1 - t) * (Point1.X - Point0.X) +                  6 * t * (1 - t) * (Point2.X - Point1.X) +                  3 * t * t * (Point3.X - Point2.X);
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: y = 3 * (1 - t) * (1 - t) * (Point1.Y - Point0.Y) +                  6 * t * (1 - t) * (Point2.Y - Point1.Y) +                  3 * t * t * (Point3.Y - Point2.Y);
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: y = 3 * (1 - t) * (1 - t) * (Point1.Y - Point0.Y) +                  6 * t * (1 - t) * (Point2.Y - Point1.Y) +                  3 * t * t * (Point3.Y - Point2.Y);
Magic Number,Xamarin.FormsBook.Toolkit,BezierSpline,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BezierSpline.cs,GetPointAtFractionLength,The following statement contains a magic number: y = 3 * (1 - t) * (1 - t) * (Point1.Y - Point0.Y) +                  6 * t * (1 - t) * (Point2.Y - Point1.Y) +                  3 * t * t * (Point3.Y - Point2.Y);
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,BmpMaker,The following statement contains a magic number: int numPixelBytes = 4 * numPixels;
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,BmpMaker,The following statement contains a magic number: writer.Write(40);
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,BmpMaker,The following statement contains a magic number: writer.Write((short)32);
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The following statement contains a magic number: SetPixel(row' col' (int)(255 * color.R)'                                  (int)(255 * color.G)'                                  (int)(255 * color.B)'                                  (int)(255 * color.A));
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The following statement contains a magic number: SetPixel(row' col' (int)(255 * color.R)'                                  (int)(255 * color.G)'                                  (int)(255 * color.B)'                                  (int)(255 * color.A));
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The following statement contains a magic number: SetPixel(row' col' (int)(255 * color.R)'                                  (int)(255 * color.G)'                                  (int)(255 * color.B)'                                  (int)(255 * color.A));
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The following statement contains a magic number: SetPixel(row' col' (int)(255 * color.R)'                                  (int)(255 * color.G)'                                  (int)(255 * color.B)'                                  (int)(255 * color.A));
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The following statement contains a magic number: int index = (row * Width + col) * 4 + headerSize;
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The following statement contains a magic number: buffer[index + 2] = (byte)r;
Magic Number,Xamarin.FormsBook.Toolkit,BmpMaker,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\BmpMaker.cs,SetPixel,The following statement contains a magic number: buffer[index + 3] = (byte)a;
Magic Number,Xamarin.FormsBook.Toolkit,ColorToContrastColorConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ColorToContrastColorConverter.cs,ColorToContrastColor,The following statement contains a magic number: double luminance = 0.30 * color.R +                                 0.59 * color.G +                                 0.11 * color.B;
Magic Number,Xamarin.FormsBook.Toolkit,ColorToContrastColorConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ColorToContrastColorConverter.cs,ColorToContrastColor,The following statement contains a magic number: double luminance = 0.30 * color.R +                                 0.59 * color.G +                                 0.11 * color.B;
Magic Number,Xamarin.FormsBook.Toolkit,ColorToContrastColorConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ColorToContrastColorConverter.cs,ColorToContrastColor,The following statement contains a magic number: double luminance = 0.30 * color.R +                                 0.59 * color.G +                                 0.11 * color.B;
Magic Number,Xamarin.FormsBook.Toolkit,ColorToContrastColorConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ColorToContrastColorConverter.cs,ColorToContrastColor,The following statement contains a magic number: return luminance > 0.5 ? Color.Black : Color.White;
Magic Number,Xamarin.FormsBook.Toolkit,ColorViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ColorViewModel.cs,Round,The following statement contains a magic number: return Device.OnPlatform(value' Math.Round(value' 3)' value);
Magic Number,Xamarin.FormsBook.Toolkit,DateTimeViewModel,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\DateTimeViewModel.cs,DateTimeViewModel,The following statement contains a magic number: Device.StartTimer(TimeSpan.FromMilliseconds(15)' OnTimerTick);
Magic Number,Xamarin.FormsBook.Toolkit,EasingConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\EasingConverter.cs,ConvertFrom,The following statement contains a magic number: name = name.Substring(7);
Magic Number,Xamarin.FormsBook.Toolkit,FadeEnableAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\FadeEnableAction.cs,FadeEnableAction,The following statement contains a magic number: Length = 500;
Magic Number,Xamarin.FormsBook.Toolkit,FadeEnableAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\FadeEnableAction.cs,Invoke,The following statement contains a magic number: await view.FadeTo(0.5' (uint)Length / 2);
Magic Number,Xamarin.FormsBook.Toolkit,FadeEnableAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\FadeEnableAction.cs,Invoke,The following statement contains a magic number: await view.FadeTo(0.5' (uint)Length / 2);
Magic Number,Xamarin.FormsBook.Toolkit,FadeEnableAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\FadeEnableAction.cs,Invoke,The following statement contains a magic number: await view.FadeTo(1' (uint)Length / 2);
Magic Number,Xamarin.FormsBook.Toolkit,JiggleButton,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\JiggleButton.cs,JiggleButton,The following statement contains a magic number: Clicked += async (sender' args) =>                  {                      if (isJiggling)                          return;                        isJiggling = true;                        await this.RotateTo(15' 1000' new Easing(t =>                                                      Math.Sin(Math.PI * t) *                                                      Math.Sin(Math.PI * 20 * t)));                      isJiggling = false;                  };
Magic Number,Xamarin.FormsBook.Toolkit,JiggleButton,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\JiggleButton.cs,JiggleButton,The following statement contains a magic number: Clicked += async (sender' args) =>                  {                      if (isJiggling)                          return;                        isJiggling = true;                        await this.RotateTo(15' 1000' new Easing(t =>                                                      Math.Sin(Math.PI * t) *                                                      Math.Sin(Math.PI * 20 * t)));                      isJiggling = false;                  };
Magic Number,Xamarin.FormsBook.Toolkit,JiggleButton,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\JiggleButton.cs,JiggleButton,The following statement contains a magic number: Clicked += async (sender' args) =>                  {                      if (isJiggling)                          return;                        isJiggling = true;                        await this.RotateTo(15' 1000' new Easing(t =>                                                      Math.Sin(Math.PI * t) *                                                      Math.Sin(Math.PI * 20 * t)));                      isJiggling = false;                  };
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,TranslateXTo,The following statement contains a magic number: animation.Commit(                  view'               // owner                  "TranslateXTo"'     // name                  16'                 // rate                  length'             // length                  null'               // easing                   (finalValue' cancelled) => taskCompletionSource.SetResult(cancelled));
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,TranslateYTo,The following statement contains a magic number: animation.Commit(view' "TranslateYTo"' 16' length' null'                               (v' c) => taskCompletionSource.SetResult(c));
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,TranslateXYTo,The following statement contains a magic number: animation.Commit(view' "TranslateXYTo"' 16' length' null'                               (v' c) => taskCompletionSource.SetResult(c));
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,BezierPathTo,The following statement contains a magic number: Action<double> callback = t =>                  {                      VisualElement viewRef;                      if (weakViewRef.TryGetTarget(out viewRef))                      {                          Point tangent;                          Point point = bezierSpline.GetPointAtFractionLength(t' out tangent);                          double x = point.X - bounds.Width / 2;                          double y = point.Y - bounds.Height / 2;                          viewRef.Layout(new Rectangle(new Point(x' y)' bounds.Size));                            if (bezierTangent != BezierTangent.None)                          {                              viewRef.Rotation = 180 * Math.Atan2(tangent.Y' tangent.X) / Math.PI;                                if (bezierTangent == BezierTangent.Reversed)                              {                                  viewRef.Rotation += 180;                              }                          }                      }                  };
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,BezierPathTo,The following statement contains a magic number: Action<double> callback = t =>                  {                      VisualElement viewRef;                      if (weakViewRef.TryGetTarget(out viewRef))                      {                          Point tangent;                          Point point = bezierSpline.GetPointAtFractionLength(t' out tangent);                          double x = point.X - bounds.Width / 2;                          double y = point.Y - bounds.Height / 2;                          viewRef.Layout(new Rectangle(new Point(x' y)' bounds.Size));                            if (bezierTangent != BezierTangent.None)                          {                              viewRef.Rotation = 180 * Math.Atan2(tangent.Y' tangent.X) / Math.PI;                                if (bezierTangent == BezierTangent.Reversed)                              {                                  viewRef.Rotation += 180;                              }                          }                      }                  };
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,BezierPathTo,The following statement contains a magic number: Action<double> callback = t =>                  {                      VisualElement viewRef;                      if (weakViewRef.TryGetTarget(out viewRef))                      {                          Point tangent;                          Point point = bezierSpline.GetPointAtFractionLength(t' out tangent);                          double x = point.X - bounds.Width / 2;                          double y = point.Y - bounds.Height / 2;                          viewRef.Layout(new Rectangle(new Point(x' y)' bounds.Size));                            if (bezierTangent != BezierTangent.None)                          {                              viewRef.Rotation = 180 * Math.Atan2(tangent.Y' tangent.X) / Math.PI;                                if (bezierTangent == BezierTangent.Reversed)                              {                                  viewRef.Rotation += 180;                              }                          }                      }                  };
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,BezierPathTo,The following statement contains a magic number: Action<double> callback = t =>                  {                      VisualElement viewRef;                      if (weakViewRef.TryGetTarget(out viewRef))                      {                          Point tangent;                          Point point = bezierSpline.GetPointAtFractionLength(t' out tangent);                          double x = point.X - bounds.Width / 2;                          double y = point.Y - bounds.Height / 2;                          viewRef.Layout(new Rectangle(new Point(x' y)' bounds.Size));                            if (bezierTangent != BezierTangent.None)                          {                              viewRef.Rotation = 180 * Math.Atan2(tangent.Y' tangent.X) / Math.PI;                                if (bezierTangent == BezierTangent.Reversed)                              {                                  viewRef.Rotation += 180;                              }                          }                      }                  };
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,BezierPathTo,The following statement contains a magic number: animation.Commit(view' "BezierPathTo"' 16' length'                   finished: (value' cancelled) => taskCompletionSource.SetResult(cancelled));
Magic Number,Xamarin.FormsBook.Toolkit,MoreViewExtensions,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MoreViewExtensions.cs,ColorAnimation,The following statement contains a magic number: view.Animate<Color>(name' transform' callback' 16' length' easing' (value' canceled) =>                  {                      taskCompletionSource.SetResult(canceled);                  });
Magic Number,Xamarin.FormsBook.Toolkit,MultiPageRestorableApp,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MultiPageRestorableApp.cs,RestorePageStack,The following statement contains a magic number: bool isModal = Boolean.Parse(split[2]);
Magic Number,Xamarin.FormsBook.Toolkit,MultiPageRestorableApp,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\MultiPageRestorableApp.cs,RestorePageStack,The following statement contains a magic number: await Task.Delay(250);
Magic Number,Xamarin.FormsBook.Toolkit,NamedColor,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColor.cs,NamedColor,The following statement contains a magic number: NamedColor namedColor = new NamedColor                      {                          Name = name'                          FriendlyName = stringBuilder.ToString()'                          Color = color'                          RgbDisplay = String.Format("{0:X2}-{1:X2}-{2:X2}"'                                                     (int)(255 * color.R)'                                                     (int)(255 * color.G)'                                                     (int)(255 * color.B))                      };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColor,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColor.cs,NamedColor,The following statement contains a magic number: NamedColor namedColor = new NamedColor                      {                          Name = name'                          FriendlyName = stringBuilder.ToString()'                          Color = color'                          RgbDisplay = String.Format("{0:X2}-{1:X2}-{2:X2}"'                                                     (int)(255 * color.R)'                                                     (int)(255 * color.G)'                                                     (int)(255 * color.B))                      };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColor,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColor.cs,NamedColor,The following statement contains a magic number: NamedColor namedColor = new NamedColor                      {                          Name = name'                          FriendlyName = stringBuilder.ToString()'                          Color = color'                          RgbDisplay = String.Format("{0:X2}-{1:X2}-{2:X2}"'                                                     (int)(255 * color.R)'                                                     (int)(255 * color.G)'                                                     (int)(255 * color.B))                      };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: List<NamedColorGroup> groups = new List<NamedColorGroup>              {                  new NamedColorGroup("Grays"' "Gry"' new Color(0.75' 0.75' 0.75))'                  new NamedColorGroup("Reds"' "Red"' new Color(1' 0.75' 0.75))'                  new NamedColorGroup("Yellows"' "Yel"' new Color(1' 1' 0.75))'                  new NamedColorGroup("Greens"' "Grn"' new Color(0.75' 1' 0.75))'                  new NamedColorGroup("Cyans"' "Cyn"' new Color(0.75' 1' 1))'                  new NamedColorGroup("Blues"' "Blu"' new Color(0.75' 0.75' 1))'                  new NamedColorGroup("Magentas"' "Mag"' new Color(1' 0.75' 1))              };
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: index = 1 + (int)((12 * color.Hue + 1) / 2) % 6;
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: index = 1 + (int)((12 * color.Hue + 1) / 2) % 6;
Magic Number,Xamarin.FormsBook.Toolkit,NamedColorGroup,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\NamedColorGroup.cs,NamedColorGroup,The following statement contains a magic number: index = 1 + (int)((12 * color.Hue + 1) / 2) % 6;
Magic Number,Xamarin.FormsBook.Toolkit,RotateAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\RotateAction.cs,RotateAction,The following statement contains a magic number: Anchor = new Point (0.5' 0.5);
Magic Number,Xamarin.FormsBook.Toolkit,RotateAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\RotateAction.cs,RotateAction,The following statement contains a magic number: Anchor = new Point (0.5' 0.5);
Magic Number,Xamarin.FormsBook.Toolkit,RotateAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\RotateAction.cs,RotateAction,The following statement contains a magic number: Length = 250;
Magic Number,Xamarin.FormsBook.Toolkit,ScaleAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleAction.cs,ScaleAction,The following statement contains a magic number: Anchor = new Point (0.5' 0.5);
Magic Number,Xamarin.FormsBook.Toolkit,ScaleAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleAction.cs,ScaleAction,The following statement contains a magic number: Anchor = new Point (0.5' 0.5);
Magic Number,Xamarin.FormsBook.Toolkit,ScaleAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleAction.cs,ScaleAction,The following statement contains a magic number: Length = 250;
Magic Number,Xamarin.FormsBook.Toolkit,ScaleUpAndDownAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleUpAndDownAction.cs,ScaleUpAndDownAction,The following statement contains a magic number: Anchor = new Point(0.5' 0.5);
Magic Number,Xamarin.FormsBook.Toolkit,ScaleUpAndDownAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleUpAndDownAction.cs,ScaleUpAndDownAction,The following statement contains a magic number: Anchor = new Point(0.5' 0.5);
Magic Number,Xamarin.FormsBook.Toolkit,ScaleUpAndDownAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleUpAndDownAction.cs,ScaleUpAndDownAction,The following statement contains a magic number: Scale = 2;
Magic Number,Xamarin.FormsBook.Toolkit,ScaleUpAndDownAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleUpAndDownAction.cs,ScaleUpAndDownAction,The following statement contains a magic number: Length = 500;
Magic Number,Xamarin.FormsBook.Toolkit,ScaleUpAndDownAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleUpAndDownAction.cs,Invoke,The following statement contains a magic number: await visual.ScaleTo(Scale' (uint)Length / 2' Easing.SinOut);
Magic Number,Xamarin.FormsBook.Toolkit,ScaleUpAndDownAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ScaleUpAndDownAction.cs,Invoke,The following statement contains a magic number: await visual.ScaleTo(1' (uint)Length / 2' Easing.SinIn);
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: int seconds = (int)((double)value / 6);
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: double t = (double)value / 6 % 1;
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: t *= 2;
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: v = 0.5 * t * t * ((1.7 + 1) * t - 1.7);
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: v = 0.5 * t * t * ((1.7 + 1) * t - 1.7);
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: v = 0.5 * t * t * ((1.7 + 1) * t - 1.7);
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: t < 0.5
Magic Number,Xamarin.FormsBook.Toolkit,SecondBackEaseConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondBackEaseConverter.cs,Convert,The following statement contains a magic number: return 6 * (seconds + v);
Magic Number,Xamarin.FormsBook.Toolkit,SecondTickConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondTickConverter.cs,Convert,The following statement contains a magic number: return 6.0 * (int)((double)value / 6);
Magic Number,Xamarin.FormsBook.Toolkit,SecondTickConverter,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\SecondTickConverter.cs,Convert,The following statement contains a magic number: return 6.0 * (int)((double)value / 6);
Magic Number,Xamarin.FormsBook.Toolkit,ShiverAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ShiverAction.cs,ShiverAction,The following statement contains a magic number: Length = 1000;
Magic Number,Xamarin.FormsBook.Toolkit,ShiverAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ShiverAction.cs,ShiverAction,The following statement contains a magic number: Angle = 15;
Magic Number,Xamarin.FormsBook.Toolkit,ShiverAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ShiverAction.cs,ShiverAction,The following statement contains a magic number: Vibrations = 10;
Magic Number,Xamarin.FormsBook.Toolkit,ShiverAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ShiverAction.cs,Invoke,The following statement contains a magic number: visual.AnchorX = 0.5;
Magic Number,Xamarin.FormsBook.Toolkit,ShiverAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ShiverAction.cs,Invoke,The following statement contains a magic number: visual.AnchorY = 0.5;
Magic Number,Xamarin.FormsBook.Toolkit,ShiverAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ShiverAction.cs,Invoke,The following statement contains a magic number: visual.RotateTo(Angle' (uint)Length'                  new Easing(t => Math.Sin(Math.PI * t) *                                  Math.Sin(Math.PI * 2 * Vibrations * t)));
Magic Number,Xamarin.FormsBook.Toolkit,TapBehavior,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\TapBehavior.cs,OnTapped,The following statement contains a magic number: await Task.Delay(100);
Magic Number,Xamarin.FormsBook.Toolkit,TranslateAction,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\TranslateAction.cs,TranslateAction,The following statement contains a magic number: Length = 250;
Magic Number,Xamarin.FormsBook.Toolkit,ValidEmailBehavior,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ValidEmailBehavior.cs,IsValidEmail,The following statement contains a magic number: return Regex.IsMatch(strIn'                        @"^(?("")("".+?(?<!\\)""@)|(([0-9a-z]((\.(?!\.))|" +                         @"[-!#\$%&'\*\+/=\?\^`\{\}\|~\w])*)" +                         @"(?<=[0-9a-z])@))(?(\[)(\[(\d{1'3}\.){3}\d{1'3}\])|" +                         @"(([0-9a-z][-\w]*[0-9a-z]*\.)+[a-z0-9][\-a-z0-9]{0'22}[a-z0-9]))$"'                        RegexOptions.IgnoreCase' TimeSpan.FromMilliseconds(250));
Missing Default,Xamarin.FormsBook.Toolkit,ThresholdToObjectConverter<T>,D:\research\architectureSmells\repos\xamarin_xamarin-forms-book-preview-2\Libraries\Xamarin.FormsBook.Toolkit\Xamarin.FormsBook.Toolkit\ThresholdToObjectConverter.cs,Convert,The following switch statement is missing a default case: switch (op)              {                  case '<': return number < criterion ? TrueObject : FalseObject;                  case '>': return number > criterion ? TrueObject : FalseObject;                  case '=': return number == criterion ? TrueObject : FalseObject;              }
