Implementation smell,Namespace,Class,File,Method,Description
Long Method,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The method has 94 lines of code.
Long Method,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The method has 137 lines of code.
Long Method,cn.jpush.api.example,ScheduleApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\ScheduleApiExample.cs,Main,The method has 91 lines of code.
Complex Method,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,Cyclomatic complexity of the method is 15
Complex Method,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,Cyclomatic complexity of the method is 17
Complex Method,cn.jpush.api.example,ScheduleApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\ScheduleApiExample.cs,Main,Cyclomatic complexity of the method is 13
Long Identifier,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The length of the parameter payload_apns_production_options is 31.
Long Statement,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,PushObjectWithExtrasAndMessage,The length of the statement  "		IosNotification = new IosNotification ().setAlert ("sound default").setBadge (5).setSound ("default").AddExtra ("from"' "JPush") " is 128.
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.getDeviceTagAlias (REGISTRATION_ID);  	// 由于统计数据并非即时的'所以等待一小段时间再执行下面的获取结果方法  	System.Threading.Thread.Sleep (10000);  	Console.WriteLine (result);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.updateDevice (REGISTRATION_ID' ALIAS' MOBILE' TAG_HASHSET' TAG_HASHSET_REMOVE);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.getTagList ();  	// 由于统计数据并非即时的'所以等待一小段时间再执行下面的获取结果方法  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.getDeviceTagAlias (REGISTRATION_ID);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.updateDeviceTagAlias (REGISTRATION_ID' true' true);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.getDeviceTagAlias (REGISTRATION_ID);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.getDeviceStatus (REGISTRATION_IDS);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,DeviceApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\DeviceApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (payload);  	DateTime dt2 = DateTime.Now;  	TimeSpan ts = dt2.Subtract (dt1);  	Console.WriteLine ("example1 time {0}"' ts.TotalMilliseconds);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  	// 如需查询上次推送结果执行下面的代码。  	var apiResult = client.getReceivedApi (result.msg_id.ToString ());  	var apiResultv3 = client.getReceivedApi_v3 (result.msg_id.ToString ());  	// 如需查询某个 messageId 的推送结果执行下面的代码。  	var queryResultWithV2 = client.getReceivedApi ("1739302794");  	var querResultWithV3 = client.getReceivedApi_v3 ("1739302794");  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (pushsms);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  	// 如需查询上次推送结果执行下面的代码。  	var apiResult = client.getReceivedApi (result.msg_id.ToString ());  	var apiResultv3 = client.getReceivedApi_v3 (result.msg_id.ToString ());  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (payload_alias);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  	// 如需查询上次推送结果执行下面的代码。  	var apiResult = client.getReceivedApi (result.msg_id.ToString ());  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it.");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (payload_options);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  	// 如需查询上次推送结果执行下面的代码。  	var apiResult = client.getReceivedApi (result.msg_id.ToString ());  	var apiResultv3 = client.getReceivedApi_v3 (result.msg_id.ToString ());  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (payload_alias);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  	// 如需查询上次推送结果执行下面的代码。  	var apiResult = client.getReceivedApi (result.msg_id.ToString ());  	var apiResultv3 = client.getReceivedApi_v3 (result.msg_id.ToString ());  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (payload_apns_production_options);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法。  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (payload_ios_alert_json);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: try {  	var result = client.SendPush (PushObject);  	// 由于统计数据并非即时的，所以等待一小段时间再执行下面的获取结果方法  	System.Threading.Thread.Sleep (10000);  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it. ");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorMessage);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,PushObject_android_with_options,The following statement contains a magic number: androidnotification.setBuilderID (3);  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,PushObjectWithExtrasAndMessage,The following statement contains a magic number: pushPayload.notification = new Notification () {  	IosNotification = new IosNotification ().setAlert ("sound default").setBadge (5).setSound ("default").AddExtra ("from"' "JPush")  };  
Magic Number,cn.jpush.api.example,JPushApiExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\JPushApiExample.cs,PushObject_ios_alert_json,The following statement contains a magic number: pushPayload.notification = new Notification () {  	IosNotification = new IosNotification ().setAlert (alert).setBadge (5).setSound ("happy").AddExtra ("from"' "JPush")  };  
Magic Number,cn.jpush.api.example,ReportsExample,D:\newReposJune17\jpush_jpush-api-csharp-client\cn.jpush.api.example\ReportsExample.cs,testGetUsers,The following statement contains a magic number: try {  	var result = jpushClient.getReportUsers (TimeUnit.DAY' "2016-06-10"' 3);  	Console.WriteLine ("Got result - " + result.ToString ());  } catch (APIRequestException e) {  	Console.WriteLine ("Error response from JPush server. Should review and fix it.");  	Console.WriteLine ("HTTP Status: " + e.Status);  	Console.WriteLine ("Error Code: " + e.ErrorCode);  	Console.WriteLine ("Error Message: " + e.ErrorCode);  } catch (APIConnectionException e) {  	Console.WriteLine (e.Message);  }  
