Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,Cyclomatic complexity of the method is 20
Magic Number,AzureVeneziano.WebJob,MachineStatus,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\MachineStatus.cs,SendMail,The following statement contains a magic number: smtpClient.Port = 25;  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: using (var connection = new SqlConnection (connectionString)) {  	//create the Command object  	var command = new SqlCommand ("SELECT * FROM highfieldtales.tsensors WHERE __deleted = 0"' connection);  	//open the connection in a try/catch block.    	//create and execute the DataReader' writing the result   	//set to the console window.   	try {  		connection.Open ();  		//run as long as we didn't get a shutdown notification  		int jobTimer = 0;  		while (isRunning) {  			if (++jobTimer > 10) {  				jobTimer = 0;  				//extract all the variables from the DB table  				using (SqlDataReader reader = command.ExecuteReader ()) {  					while (reader.Read ()) {  						var lvar = new LogicVar ();  						for (int i = 0; i < reader.FieldCount; i++) {  							switch (reader.GetName (i)) {  							case "name":  								lvar.Name = reader.GetString (i);  								break;  							case "__updatedAt":  								lvar.LastUpdate = reader.GetDateTimeOffset (i);  								break;  							case "value":  								lvar.Value = reader [i];  								break;  							}  						}  						//detect value update  						lvar.IsChanged = lvar.LastUpdate > machine.LastUpdate;  						//update the variables bag  						MachineStatus.Instance.Variables [lvar.Name] = lvar;  						//Console.WriteLine(lvar);  					}  				}  				//detect the most recent update timestamp as the new reference  				foreach (LogicVar lvar in MachineStatus.Instance.Variables.Values) {  					if (lvar.LastUpdate > machine.LastUpdate) {  						machine.LastUpdate = lvar.LastUpdate;  					}  				}  				//invoke the custom logic  				logic.Run ();  			}  			Thread.Sleep (1000);  		}  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  	}  }  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: using (var connection = new SqlConnection (connectionString)) {  	//create the Command object  	var command = new SqlCommand ("SELECT * FROM highfieldtales.tsensors WHERE __deleted = 0"' connection);  	//open the connection in a try/catch block.    	//create and execute the DataReader' writing the result   	//set to the console window.   	try {  		connection.Open ();  		//run as long as we didn't get a shutdown notification  		int jobTimer = 0;  		while (isRunning) {  			if (++jobTimer > 10) {  				jobTimer = 0;  				//extract all the variables from the DB table  				using (SqlDataReader reader = command.ExecuteReader ()) {  					while (reader.Read ()) {  						var lvar = new LogicVar ();  						for (int i = 0; i < reader.FieldCount; i++) {  							switch (reader.GetName (i)) {  							case "name":  								lvar.Name = reader.GetString (i);  								break;  							case "__updatedAt":  								lvar.LastUpdate = reader.GetDateTimeOffset (i);  								break;  							case "value":  								lvar.Value = reader [i];  								break;  							}  						}  						//detect value update  						lvar.IsChanged = lvar.LastUpdate > machine.LastUpdate;  						//update the variables bag  						MachineStatus.Instance.Variables [lvar.Name] = lvar;  						//Console.WriteLine(lvar);  					}  				}  				//detect the most recent update timestamp as the new reference  				foreach (LogicVar lvar in MachineStatus.Instance.Variables.Values) {  					if (lvar.LastUpdate > machine.LastUpdate) {  						machine.LastUpdate = lvar.LastUpdate;  					}  				}  				//invoke the custom logic  				logic.Run ();  			}  			Thread.Sleep (1000);  		}  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  	}  }  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: try {  	connection.Open ();  	//run as long as we didn't get a shutdown notification  	int jobTimer = 0;  	while (isRunning) {  		if (++jobTimer > 10) {  			jobTimer = 0;  			//extract all the variables from the DB table  			using (SqlDataReader reader = command.ExecuteReader ()) {  				while (reader.Read ()) {  					var lvar = new LogicVar ();  					for (int i = 0; i < reader.FieldCount; i++) {  						switch (reader.GetName (i)) {  						case "name":  							lvar.Name = reader.GetString (i);  							break;  						case "__updatedAt":  							lvar.LastUpdate = reader.GetDateTimeOffset (i);  							break;  						case "value":  							lvar.Value = reader [i];  							break;  						}  					}  					//detect value update  					lvar.IsChanged = lvar.LastUpdate > machine.LastUpdate;  					//update the variables bag  					MachineStatus.Instance.Variables [lvar.Name] = lvar;  					//Console.WriteLine(lvar);  				}  			}  			//detect the most recent update timestamp as the new reference  			foreach (LogicVar lvar in MachineStatus.Instance.Variables.Values) {  				if (lvar.LastUpdate > machine.LastUpdate) {  					machine.LastUpdate = lvar.LastUpdate;  				}  			}  			//invoke the custom logic  			logic.Run ();  		}  		Thread.Sleep (1000);  	}  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: try {  	connection.Open ();  	//run as long as we didn't get a shutdown notification  	int jobTimer = 0;  	while (isRunning) {  		if (++jobTimer > 10) {  			jobTimer = 0;  			//extract all the variables from the DB table  			using (SqlDataReader reader = command.ExecuteReader ()) {  				while (reader.Read ()) {  					var lvar = new LogicVar ();  					for (int i = 0; i < reader.FieldCount; i++) {  						switch (reader.GetName (i)) {  						case "name":  							lvar.Name = reader.GetString (i);  							break;  						case "__updatedAt":  							lvar.LastUpdate = reader.GetDateTimeOffset (i);  							break;  						case "value":  							lvar.Value = reader [i];  							break;  						}  					}  					//detect value update  					lvar.IsChanged = lvar.LastUpdate > machine.LastUpdate;  					//update the variables bag  					MachineStatus.Instance.Variables [lvar.Name] = lvar;  					//Console.WriteLine(lvar);  				}  			}  			//detect the most recent update timestamp as the new reference  			foreach (LogicVar lvar in MachineStatus.Instance.Variables.Values) {  				if (lvar.LastUpdate > machine.LastUpdate) {  					machine.LastUpdate = lvar.LastUpdate;  				}  			}  			//invoke the custom logic  			logic.Run ();  		}  		Thread.Sleep (1000);  	}  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: while (isRunning) {  	if (++jobTimer > 10) {  		jobTimer = 0;  		//extract all the variables from the DB table  		using (SqlDataReader reader = command.ExecuteReader ()) {  			while (reader.Read ()) {  				var lvar = new LogicVar ();  				for (int i = 0; i < reader.FieldCount; i++) {  					switch (reader.GetName (i)) {  					case "name":  						lvar.Name = reader.GetString (i);  						break;  					case "__updatedAt":  						lvar.LastUpdate = reader.GetDateTimeOffset (i);  						break;  					case "value":  						lvar.Value = reader [i];  						break;  					}  				}  				//detect value update  				lvar.IsChanged = lvar.LastUpdate > machine.LastUpdate;  				//update the variables bag  				MachineStatus.Instance.Variables [lvar.Name] = lvar;  				//Console.WriteLine(lvar);  			}  		}  		//detect the most recent update timestamp as the new reference  		foreach (LogicVar lvar in MachineStatus.Instance.Variables.Values) {  			if (lvar.LastUpdate > machine.LastUpdate) {  				machine.LastUpdate = lvar.LastUpdate;  			}  		}  		//invoke the custom logic  		logic.Run ();  	}  	Thread.Sleep (1000);  }  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: while (isRunning) {  	if (++jobTimer > 10) {  		jobTimer = 0;  		//extract all the variables from the DB table  		using (SqlDataReader reader = command.ExecuteReader ()) {  			while (reader.Read ()) {  				var lvar = new LogicVar ();  				for (int i = 0; i < reader.FieldCount; i++) {  					switch (reader.GetName (i)) {  					case "name":  						lvar.Name = reader.GetString (i);  						break;  					case "__updatedAt":  						lvar.LastUpdate = reader.GetDateTimeOffset (i);  						break;  					case "value":  						lvar.Value = reader [i];  						break;  					}  				}  				//detect value update  				lvar.IsChanged = lvar.LastUpdate > machine.LastUpdate;  				//update the variables bag  				MachineStatus.Instance.Variables [lvar.Name] = lvar;  				//Console.WriteLine(lvar);  			}  		}  		//detect the most recent update timestamp as the new reference  		foreach (LogicVar lvar in MachineStatus.Instance.Variables.Values) {  			if (lvar.LastUpdate > machine.LastUpdate) {  				machine.LastUpdate = lvar.LastUpdate;  			}  		}  		//invoke the custom logic  		logic.Run ();  	}  	Thread.Sleep (1000);  }  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: if (++jobTimer > 10) {  	jobTimer = 0;  	//extract all the variables from the DB table  	using (SqlDataReader reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			var lvar = new LogicVar ();  			for (int i = 0; i < reader.FieldCount; i++) {  				switch (reader.GetName (i)) {  				case "name":  					lvar.Name = reader.GetString (i);  					break;  				case "__updatedAt":  					lvar.LastUpdate = reader.GetDateTimeOffset (i);  					break;  				case "value":  					lvar.Value = reader [i];  					break;  				}  			}  			//detect value update  			lvar.IsChanged = lvar.LastUpdate > machine.LastUpdate;  			//update the variables bag  			MachineStatus.Instance.Variables [lvar.Name] = lvar;  			//Console.WriteLine(lvar);  		}  	}  	//detect the most recent update timestamp as the new reference  	foreach (LogicVar lvar in MachineStatus.Instance.Variables.Values) {  		if (lvar.LastUpdate > machine.LastUpdate) {  			machine.LastUpdate = lvar.LastUpdate;  		}  	}  	//invoke the custom logic  	logic.Run ();  }  
Magic Number,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000);  
Missing Default,AzureVeneziano.WebJob,Program,C:\repos\highfield_azure-veneziano\part02\AzureVeneziano.WebJob\AzureVeneziano.WebJob\Program.cs,Main,The following switch statement is missing a default case: switch (reader.GetName (i)) {  case "name":  	lvar.Name = reader.GetString (i);  	break;  case "__updatedAt":  	lvar.LastUpdate = reader.GetDateTimeOffset (i);  	break;  case "value":  	lvar.Value = reader [i];  	break;  }  
