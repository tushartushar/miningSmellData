Implementation smell,Namespace,Class,File,Method,Description
Long Method,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,GenerateThis,The method has 100 lines of code.
Long Method,CloudinaryDotNet.Actions,UploadPresetParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UploadPreset.cs,UploadPresetParams,The method has 109 lines of code.
Complex Method,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,PrepareRequestContent,Cyclomatic complexity of the method is 10
Complex Method,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,GenerateThis,Cyclomatic complexity of the method is 26
Complex Method,CloudinaryDotNet,TextLayer,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\TextLayer.cs,TextStyleIdentifier,Cyclomatic complexity of the method is 10
Complex Method,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,BuildImageTag,Cyclomatic complexity of the method is 8
Complex Method,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,BuildVideoTag,Cyclomatic complexity of the method is 13
Complex Method,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,BuildUrl,Cyclomatic complexity of the method is 12
Complex Method,CloudinaryDotNet.Actions,ArchiveParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\ArchiveParams.cs,ToParamsDictionary,Cyclomatic complexity of the method is 18
Complex Method,CloudinaryDotNet.Actions,UpdateParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UpdateParams.cs,ToParamsDictionary,Cyclomatic complexity of the method is 8
Complex Method,CloudinaryDotNet.Actions,UploadPresetParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UploadPreset.cs,UploadPresetParams,Cyclomatic complexity of the method is 15
Long Parameter List,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,Api,The method has 5 parameters. Parameters: account' usePrivateCdn' privateCdn' shortenUrl' cSubDomain
Long Parameter List,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,Call,The method has 5 parameters. Parameters: method' url' parameters' file' extraHeaders
Long Parameter List,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,PrepareRequestBody,The method has 5 parameters. Parameters: request' method' parameters' file' extraHeaders
Long Parameter List,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,BuildUnsignedUploadForm,The method has 5 parameters. Parameters: field' preset' resourceType' parameters' htmlOptions
Long Parameter List,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,ReadBytes,The method has 5 parameters. Parameters: writer' stream' length' fileName' bytesSent
Long Parameter List,CloudinaryDotNet,Api,C:\repos\cloudinary_CloudinaryDotNet\Core\Api.cs,CallAndParse,The method has 5 parameters. Parameters: method' url' parameters' file' extraHeaders
Long Parameter List,CloudinaryDotNet,ApiShared,C:\repos\cloudinary_CloudinaryDotNet\Shared\ApiShared.cs,InternalCall,The method has 5 parameters. Parameters: method' url' parameters' file' extraHeaders
Long Parameter List,CloudinaryDotNet,ApiShared,C:\repos\cloudinary_CloudinaryDotNet\Shared\ApiShared.cs,CallAndParse,The method has 5 parameters. Parameters: method' url' parameters' file' extraHeaders
Long Parameter List,CloudinaryDotNet,ApiShared,C:\repos\cloudinary_CloudinaryDotNet\Shared\ApiShared.cs,ApiShared,The method has 5 parameters. Parameters: account' usePrivateCdn' privateCdn' shortenUrl' cSubDomain
Long Parameter List,CloudinaryDotNet,ApiShared,C:\repos\cloudinary_CloudinaryDotNet\Shared\ApiShared.cs,WriteFile,The method has 5 parameters. Parameters: writer' stream' length' fileName' bytesSent
Long Parameter List,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,ListResourcesByPrefix,The method has 6 parameters. Parameters: prefix' tags' context' moderations' type' nextCursor
Long Parameter List,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,ListResourcesByModerationStatus,The method has 6 parameters. Parameters: kind' status' tags' context' moderations' nextCursor
Long Parameter List,CloudinaryDotNet,UrlBuilder,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,UrlBuilder,The method has 5 parameters. Parameters: scheme' host' port' path' extraValue
Long Identifier,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,UpdateResourceAccessMode,The length of the parameter updateResourceAccessModeParams is 30.
Long Identifier,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,UpdateResourceAccessModeByTag,The length of the parameter updateResourceAccessModeParams is 30.
Long Identifier,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,UpdateResourceAccessModeByPrefix,The length of the parameter updateResourceAccessModeParams is 30.
Long Identifier,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,UpdateResourceAccessModeByIds,The length of the parameter updateResourceAccessModeParams is 30.
Long Identifier,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,,The length of the parameter DEFAULT_RESPONSIVE_WIDTH_TRANSFORM is 34.
Long Statement,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,PublishResource,The length of the statement  "            return m_api.CallAndParse<PublishResourceResult>(HttpMethod.POST' url.BuildUrl()' publishResourceParams.ToParamsDictionary()' null); " is 132.
Long Statement,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,UpdateResourceAccessMode,The length of the statement  "            return m_api.CallAndParse<UpdateResourceAccessModeResult>(HttpMethod.POST' url.BuildUrl()' updateResourceAccessModeParams.ToParamsDictionary()' null); " is 150.
Long Statement,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,Upload,The length of the statement  "            return m_api.CallAndParse<RawUploadResult>(HttpMethod.POST' uri' (SortedDictionary<string' object>)parameters' fileDescription); " is 128.
Long Statement,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,SubFolders,The length of the statement  "            return m_api.CallAndParse<GetFoldersResult>(HttpMethod.GET' m_api.ApiUrlV.Add("folders").Add(folder).BuildUrl()' null' null); " is 125.
Long Statement,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,UploadLargeRaw,The length of the statement  "                throw new ArgumentException("The UploadLargeRaw method is intended to be used for large local file uploading and can't be used for remote file uploading!"); " is 156.
Long Statement,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,UploadLarge,The length of the statement  "                string range = string.Format("bytes {0}-{1}/{2}"' parameters.File.BytesSent' parameters.File.BytesSent + currentBufferSize - 1' fileLength); " is 140.
Long Statement,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,ListResourceTypes,The length of the statement  "            return m_api.CallAndParse<ListResourceTypesResult>(HttpMethod.GET' m_api.ApiUrlV.Add("resources").BuildUrl()' null' null); " is 122.
Long Statement,CloudinaryDotNet,Search,C:\repos\cloudinary_CloudinaryDotNet\Shared\Search.cs,Execute,The length of the statement  "            return m_api.CallAndParse<SearchResult>(HttpMethod.POST' url.BuildUrl()' PrepareSearchParams()' null' PrepareHeaders()); " is 120.
Long Statement,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,EndIf,The length of the statement  "                        m_nestedTransforms.Insert(i' new Transformation(string.Format("if={0}"' value.ToString()))); // [...' "if_w_gt_1000"' {c: fill' w: 500}' ...] " is 141.
Long Statement,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,GenerateThis,The length of the statement  "            if (width != null && (width.IndexOf("auto") != -1 || Single.Parse(width' CultureInfo.InvariantCulture) < 1 || no_html_sizes || isResponsive)) " is 141.
Long Statement,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,VideoCodec,The length of the statement  "            throw new ArgumentException("codecParams: please provide either single parameter or a bunch of key-value pairs (key1' value1' key2' value2' ...)."); " is 148.
Long Statement,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,BuildUrl,The length of the statement  "            if (src.SourceToSign.Contains("/") && !Regex.IsMatch(src.SourceToSign' "^v[0-9]+/") && !Regex.IsMatch(src.SourceToSign' "https?:/.*") && String.IsNullOrEmpty(m_version)) " is 169.
Long Statement,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,BuildUrl,The length of the statement  "                    throw new NullReferenceException("Reference to ISignProvider-compatible object must be provided in order to sign URI!"); " is 120.
Long Statement,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,BuildUrl,The length of the statement  "                AuthToken token = m_AuthToken != null ? m_AuthToken : (CloudinaryConfiguration.AuthToken != null ? CloudinaryConfiguration.AuthToken : null); " is 141.
Long Statement,CloudinaryDotNet.Actions,ArchiveParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\ArchiveParams.cs,Check,The length of the statement  "                throw new ArgumentException("At least one of the following \"filtering\" parameters needs to be specified: PublicIds' Tags or Prefixes."); " is 138.
Long Statement,CloudinaryDotNet.Actions,BaseParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\BaseParams.cs,AddCoordinates,The length of the statement  "                dict.Add(key' string.Join("|"' list.Select(r => string.Format("{0}'{1}'{2}'{3}"' r.X' r.Y' r.Width' r.Height)).ToArray())); " is 123.
Long Statement,CloudinaryDotNet.Actions,UploadMappingParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UploadMappingParams.cs,Check,The length of the statement  "                throw new ArgumentException(string.Format("The maximal count of folders to return is 500' but {0} given!"' MaxResults)); " is 120.
Long Statement,CloudinaryDotNet.Actions,UploadPresetParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UploadPreset.cs,GetTransformation,The length of the statement  "                throw new NotSupportedException(String.Format("Instance of type {0} is not supported as Transformation!"' o.GetType())); " is 120.
Complex Conditional,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,GenerateThis,The conditional expression  "width != null && (width.IndexOf("auto") != -1 || Single.Parse(width' CultureInfo.InvariantCulture) < 1 || no_html_sizes || isResponsive)"  is complex.
Complex Conditional,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,GenerateThis,The conditional expression  "height != null && (Single.Parse(height' CultureInfo.InvariantCulture) < 1 || no_html_sizes || isResponsive)"  is complex.
Complex Conditional,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,BuildUrl,The conditional expression  "src.SourceToSign.Contains("/") && !Regex.IsMatch(src.SourceToSign' "^v[0-9]+/") && !Regex.IsMatch(src.SourceToSign' "https?:/.*") && String.IsNullOrEmpty(m_version)"  is complex.
Complex Conditional,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,UpdateAction,The conditional expression  "m_resourceType == "image" && m_action == "upload"                      || m_resourceType == "images" && String.IsNullOrEmpty(m_action)"  is complex.
Complex Conditional,CloudinaryDotNet.Actions,ArchiveParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\ArchiveParams.cs,Check,The conditional expression  "(m_publicIds == null || m_publicIds.Count == 0) &&                  (m_prefixes == null || m_prefixes.Count == 0) &&                  (m_tags == null || m_tags.Count == 0)"  is complex.
Complex Conditional,CloudinaryDotNet.Actions,DelDerivedResParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\DelDerivedResParams.cs,Check,The conditional expression  "DerivedResources != null && DerivedResources.Count == 0 || m_tranformations != null && m_tranformations.Count == 0"  is complex.
Complex Conditional,CloudinaryDotNet.Actions,DelResParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\DelResParams.cs,Check,The conditional expression  "(PublicIds == null || PublicIds.Count == 0) &&                  String.IsNullOrEmpty(Prefix) &&                  String.IsNullOrEmpty(Tag) &&                  !All"  is complex.
Virtual Method Call from Constructor,CloudinaryDotNet,FileDescriptionBase,C:\repos\cloudinary_CloudinaryDotNet\Shared\FileDescriptionBase.cs,FileDescriptionBase,The constructor "FileDescriptionBase" calls a virtual method "GetStream".
Empty Catch Block,CloudinaryDotNet,ApiShared,C:\repos\cloudinary_CloudinaryDotNet\Shared\ApiShared.cs,PrepareUploadParams,The method has an empty catch block.
Magic Number,CloudinaryDotNet,ApiShared,C:\repos\cloudinary_CloudinaryDotNet\Shared\ApiShared.cs,SignUriPart,The following statement contains a magic number: return "s--" + sign.Substring(0' 8).Replace("+"' "-").Replace("/"' "_") + "--/";
Magic Number,CloudinaryDotNet,ApiShared,C:\repos\cloudinary_CloudinaryDotNet\Shared\ApiShared.cs,GetTime,The following statement contains a magic number: return Convert.ToInt64(((DateTime.UtcNow - new DateTime(1970' 1' 1)).TotalSeconds)).ToString();
Magic Number,CloudinaryDotNet,AuthToken,C:\repos\cloudinary_CloudinaryDotNet\Shared\AuthToken.cs,HexStringToByteArray,The following statement contains a magic number: byte[] data = new byte[len / 2];
Magic Number,CloudinaryDotNet,AuthToken,C:\repos\cloudinary_CloudinaryDotNet\Shared\AuthToken.cs,HexStringToByteArray,The following statement contains a magic number: for (int i = 0; i < len; i += 2)              {                  data[i / 2] = Convert.ToByte(s.Substring(i' 2)' 16);              }
Magic Number,CloudinaryDotNet,AuthToken,C:\repos\cloudinary_CloudinaryDotNet\Shared\AuthToken.cs,HexStringToByteArray,The following statement contains a magic number: for (int i = 0; i < len; i += 2)              {                  data[i / 2] = Convert.ToByte(s.Substring(i' 2)' 16);              }
Magic Number,CloudinaryDotNet,AuthToken,C:\repos\cloudinary_CloudinaryDotNet\Shared\AuthToken.cs,HexStringToByteArray,The following statement contains a magic number: for (int i = 0; i < len; i += 2)              {                  data[i / 2] = Convert.ToByte(s.Substring(i' 2)' 16);              }
Magic Number,CloudinaryDotNet,AuthToken,C:\repos\cloudinary_CloudinaryDotNet\Shared\AuthToken.cs,HexStringToByteArray,The following statement contains a magic number: for (int i = 0; i < len; i += 2)              {                  data[i / 2] = Convert.ToByte(s.Substring(i' 2)' 16);              }
Magic Number,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,RandomPublicId,The following statement contains a magic number: byte[] buffer = new byte[8];
Magic Number,CloudinaryDotNet,Cloudinary,C:\repos\cloudinary_CloudinaryDotNet\Shared\Cloudinary.cs,GetCloudinaryJsConfig,The following statement contains a magic number: StringBuilder sb = new StringBuilder(1000);
Magic Number,CloudinaryDotNet,Crc32,C:\repos\cloudinary_CloudinaryDotNet\Shared\Crc32.cs,ComputeChecksum,The following statement contains a magic number: for (int i = 0; i < bytes.Length; ++i)              {                  byte index = (byte)(((crc) & 0xff) ^ bytes[i]);                  crc = (uint)((crc >> 8) ^ table[index]);              }
Magic Number,CloudinaryDotNet,Crc32,C:\repos\cloudinary_CloudinaryDotNet\Shared\Crc32.cs,Crc32,The following statement contains a magic number: table = new uint[256];
Magic Number,CloudinaryDotNet,Crc32,C:\repos\cloudinary_CloudinaryDotNet\Shared\Crc32.cs,Crc32,The following statement contains a magic number: for (uint i = 0; i < table.Length; ++i)              {                  temp = i;                  for (int j = 8; j > 0; --j)                  {                      if ((temp & 1) == 1)                      {                          temp = (uint)((temp >> 1) ^ poly);                      }                      else                      {                          temp >>= 1;                      }                  }                  table[i] = temp;              }
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,Transformation,The following statement contains a magic number: foreach (var pair in transformParams) {                  string[] splittedPair = pair.Split('=');                  if (splittedPair.Length != 2)                      throw new ArgumentException(String.Format("Couldn't parse '{0}'!"' pair));                    Add(splittedPair[0]' splittedPair[1]);              }
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,GenerateThis,The following statement contains a magic number: if (m_transformParams.TryGetValue("offset"' out obj)) {                  var offset = SplitRange(m_transformParams["offset"]);                  if (offset != null && offset.Length == 2) {                      startOffset = NormRangeValue(offset[0]);                      endOffset = NormRangeValue(offset[1]);                  }              }
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,GenerateThis,The following statement contains a magic number: for (int i = 0; i < SimpleParams.Length; i += 2) {                  if (m_transformParams.TryGetValue(SimpleParams[i + 1]' out obj))                      parameters.Add(SimpleParams[i]' ToString(obj));              }
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: if (codecParams.Length == 1)              {                  return Add("video_codec"' codecParams[0]);              }              else if (codecParams.Length > 1 && (codecParams.Length % 2) == 0)              {                  var dict = new Dictionary<string' string>();                  for (int i = 0; i < codecParams.Length; i += 2)                  {                      if (!dict.ContainsKey(codecParams[i]))                          dict.Add(codecParams[i]' codecParams[i + 1]);                  }                  return VideoCodec(dict);              }
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: if (codecParams.Length == 1)              {                  return Add("video_codec"' codecParams[0]);              }              else if (codecParams.Length > 1 && (codecParams.Length % 2) == 0)              {                  var dict = new Dictionary<string' string>();                  for (int i = 0; i < codecParams.Length; i += 2)                  {                      if (!dict.ContainsKey(codecParams[i]))                          dict.Add(codecParams[i]' codecParams[i + 1]);                  }                  return VideoCodec(dict);              }
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2) throw new ArgumentException("Offset range must include at least 2 items.");
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2) throw new ArgumentException("Offset range must include at least 2 items.");
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2) throw new ArgumentException("Offset range must include at least 2 items.");
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2) throw new ArgumentException("Offset range must include at least 2 items.");
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,NormRangeValue,The following statement contains a magic number: if (match.Groups.Count == 3 && !String.IsNullOrEmpty(match.Groups[2].Value))              {                  modifier = "p";              }
Magic Number,CloudinaryDotNet,Transformation,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\ImageTransform.cs,NormRangeValue,The following statement contains a magic number: if (match.Groups.Count == 3 && !String.IsNullOrEmpty(match.Groups[2].Value))              {                  modifier = "p";              }
Magic Number,CloudinaryDotNet,TextLayer,C:\repos\cloudinary_CloudinaryDotNet\Shared\Transforms\TextLayer.cs,TextLayer,The following statement contains a magic number: FontSize(12);
Magic Number,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,Shard,The following statement contains a magic number: return ((hash % 5 + 5) % 5 + 1).ToString();
Magic Number,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,Shard,The following statement contains a magic number: return ((hash % 5 + 5) % 5 + 1).ToString();
Magic Number,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,Shard,The following statement contains a magic number: return ((hash % 5 + 5) % 5 + 1).ToString();
Magic Number,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,Decode,The following statement contains a magic number: while (pos < input.Length)              {                  int ppos = input.IndexOf('%'' pos);                  if (ppos == -1)                  {                      resultStr.Append(input.Substring(pos));                      pos = input.Length;                  }                  else                  {                      resultStr.Append(input.Substring(pos' ppos - pos));                      char ch = (char)Int16.Parse(input.Substring(ppos + 1' 2)' NumberStyles.HexNumber);                      resultStr.Append(ch);                      pos = ppos + 3;                  }              }
Magic Number,CloudinaryDotNet,Url,C:\repos\cloudinary_CloudinaryDotNet\Shared\Url.cs,Decode,The following statement contains a magic number: while (pos < input.Length)              {                  int ppos = input.IndexOf('%'' pos);                  if (ppos == -1)                  {                      resultStr.Append(input.Substring(pos));                      pos = input.Length;                  }                  else                  {                      resultStr.Append(input.Substring(pos' ppos - pos));                      char ch = (char)Int16.Parse(input.Substring(ppos + 1' 2)' NumberStyles.HexNumber);                      resultStr.Append(ch);                      pos = ppos + 3;                  }              }
Magic Number,CloudinaryDotNet.Actions,TextParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\TextParams.cs,TextParams,The following statement contains a magic number: FontSize = 12;
Magic Number,CloudinaryDotNet.Actions,UploadMappingParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UploadMappingParams.cs,Check,The following statement contains a magic number: if(MaxResults > 500)                  throw new ArgumentException(string.Format("The maximal count of folders to return is 500' but {0} given!"' MaxResults));
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates != null)              {                  if (preset.Settings.FaceCoordinates.Type == JTokenType.String)                  {                      FaceCoordinates = preset.Settings.FaceCoordinates.ToString();                  }                  else if (preset.Settings.FaceCoordinates.Type == JTokenType.Array)                  {                      var fc = new List<Rectangle>();                      foreach (JToken token in preset.Settings.FaceCoordinates)                      {                          fc.Add(new Rectangle(token[0].Value<int>()' token[1].Value<int>()' token[2].Value<int>()' token[3].Value<int>()));                      }                  }              }
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,C:\repos\cloudinary_CloudinaryDotNet\Shared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates != null)              {                  if (preset.Settings.FaceCoordinates.Type == JTokenType.String)                  {                      FaceCoordinates = preset.Settings.FaceCoordinates.ToString();                  }                  else if (preset.Settings.FaceCoordinates.Type == JTokenType.Array)                  {                      var fc = new List<Rectangle>();                      foreach (JToken token in preset.Settings.FaceCoordinates)                      {                          fc.Add(new Rectangle(token[0].Value<int>()' token[1].Value<int>()' token[2].Value<int>()' token[3].Value<int>()));                      }                  }              }
