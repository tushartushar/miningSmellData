Implementation smell,Namespace,Class,File,Method,Description
Magic Number,basic_mvc4,HomeController,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,Index,The following statement contains a magic number: bgUploader.Progress < 100
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/pizza.jpg"))'                  Tags = "basic_mvc4"'                    Caption = "Local file' Fill 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fill")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/pizza.jpg"))'                  Tags = "basic_mvc4"'                    Caption = "Local file' Fill 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fill")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/pizza.jpg"))'                  PublicId = "custom_name"'                  Tags = "basic_mvc4"'                    Caption = "Local file' custom public ID' Fit into 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fit")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/pizza.jpg"))'                  PublicId = "custom_name"'                  Tags = "basic_mvc4"'                    Caption = "Local file' custom public ID' Fit into 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fit")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/lake.jpg"))'                  PublicId = "eager_custom_name"'                  Tags = "basic_mvc4"'                  EagerTransforms = new List<Transformation>(){                      new EagerTransformation().Width(200).Height(150).Crop("scale")}'                    Caption = "Local file' Eager transformation of scaling to 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("scale")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/lake.jpg"))'                  PublicId = "eager_custom_name"'                  Tags = "basic_mvc4"'                  EagerTransforms = new List<Transformation>(){                      new EagerTransformation().Width(200).Height(150).Crop("scale")}'                    Caption = "Local file' Eager transformation of scaling to 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("scale")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/lake.jpg"))'                  PublicId = "eager_custom_name"'                  Tags = "basic_mvc4"'                  EagerTransforms = new List<Transformation>(){                      new EagerTransformation().Width(200).Height(150).Crop("scale")}'                    Caption = "Local file' Eager transformation of scaling to 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("scale")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription(HttpContext.Current.Server.MapPath("/Images/lake.jpg"))'                  PublicId = "eager_custom_name"'                  Tags = "basic_mvc4"'                  EagerTransforms = new List<Transformation>(){                      new EagerTransformation().Width(200).Height(150).Crop("scale")}'                    Caption = "Local file' Eager transformation of scaling to 200x150"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("scale")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription("http://res.cloudinary.com/demo/image/upload/couple.jpg")'                  Tags = "basic_mvc4"'                    Caption = "Uploaded remote image' Face detection based 200x150 thumbnail"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("thumb").Gravity("faces")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription("http://res.cloudinary.com/demo/image/upload/couple.jpg")'                  Tags = "basic_mvc4"'                    Caption = "Uploaded remote image' Face detection based 200x150 thumbnail"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("thumb").Gravity("faces")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription("http://res.cloudinary.com/demo/image/upload/couple.jpg")'                  Tags = "basic_mvc4"'                  Transformation = new Transformation().Width(500).Height(500).Crop("fit").Effect("saturation:-70")'                    Caption = "Uploaded remote image' Fill 200x150' round corners' apply the sepia effect"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fill").Gravity("face").Radius(10).Effect("sepia")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription("http://res.cloudinary.com/demo/image/upload/couple.jpg")'                  Tags = "basic_mvc4"'                  Transformation = new Transformation().Width(500).Height(500).Crop("fit").Effect("saturation:-70")'                    Caption = "Uploaded remote image' Fill 200x150' round corners' apply the sepia effect"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fill").Gravity("face").Radius(10).Effect("sepia")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription("http://res.cloudinary.com/demo/image/upload/couple.jpg")'                  Tags = "basic_mvc4"'                  Transformation = new Transformation().Width(500).Height(500).Crop("fit").Effect("saturation:-70")'                    Caption = "Uploaded remote image' Fill 200x150' round corners' apply the sepia effect"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fill").Gravity("face").Radius(10).Effect("sepia")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription("http://res.cloudinary.com/demo/image/upload/couple.jpg")'                  Tags = "basic_mvc4"'                  Transformation = new Transformation().Width(500).Height(500).Crop("fit").Effect("saturation:-70")'                    Caption = "Uploaded remote image' Fill 200x150' round corners' apply the sepia effect"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fill").Gravity("face").Radius(10).Effect("sepia")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,BackgroundUploader,The following statement contains a magic number: m_uploadParams.Add(new ImageUploadParamsExt()              {                  File = new FileDescription("http://res.cloudinary.com/demo/image/upload/couple.jpg")'                  Tags = "basic_mvc4"'                  Transformation = new Transformation().Width(500).Height(500).Crop("fit").Effect("saturation:-70")'                    Caption = "Uploaded remote image' Fill 200x150' round corners' apply the sepia effect"'                  ShowTransform = new Transformation().Width(200).Height(150).Crop("fill").Gravity("face").Radius(10).Effect("sepia")              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,Upload,The following statement contains a magic number: m_task = Task.Factory.StartNew(() =>              {                  try                  {                      for (int i = 0; i < m_uploadParams.Count; i++)                      {                          // Using Cloudinary API to upload images                          ImageUploadResult result = m_cloudinary.Upload(m_uploadParams[i]);                            m_images.Add(new Image()                          {                              // Copy predefined caption and transformation                              Caption = m_uploadParams[i].Caption'                              ShowTransform = m_uploadParams[i].ShowTransform'                                // Load data from Cloudinary response                              PublicId = result.PublicId'                              Url = result.Uri.ToString()'                              Format = result.Format                          });                            lock (m_sync)                          {                              m_progress = (i + 1) * 100 / m_uploadParams.Count;                          }                      }                        return true;                  }                  catch                  {                      lock (m_sync) { m_progress = 100; }                        return false;                  }              });
Magic Number,basic_mvc4,BackgroundUploader,D:\research\architectureSmells\repos\cloudinary_CloudinaryDotNet\samples\basic_mvc4\Controllers\HomeController.cs,Upload,The following statement contains a magic number: m_task = Task.Factory.StartNew(() =>              {                  try                  {                      for (int i = 0; i < m_uploadParams.Count; i++)                      {                          // Using Cloudinary API to upload images                          ImageUploadResult result = m_cloudinary.Upload(m_uploadParams[i]);                            m_images.Add(new Image()                          {                              // Copy predefined caption and transformation                              Caption = m_uploadParams[i].Caption'                              ShowTransform = m_uploadParams[i].ShowTransform'                                // Load data from Cloudinary response                              PublicId = result.PublicId'                              Url = result.Uri.ToString()'                              Format = result.Format                          });                            lock (m_sync)                          {                              m_progress = (i + 1) * 100 / m_uploadParams.Count;                          }                      }                        return true;                  }                  catch                  {                      lock (m_sync) { m_progress = 100; }                        return false;                  }              });
