Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CloudinaryDotNet.Actions,BaseResult,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Actions\BaseResult.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,Cyclomatic complexity of the method is 24
Complex Method,CloudinaryDotNet.Actions,ArchiveParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\ArchiveParams.cs,ToParamsDictionary,Cyclomatic complexity of the method is 17
Complex Method,CloudinaryDotNet,Api,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Api.cs,Call,Cyclomatic complexity of the method is 17
Complex Method,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,Cyclomatic complexity of the method is 26
Complex Method,CloudinaryDotNet,TextLayer,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Transforms\TextLayer.cs,TextStyleIdentifier,Cyclomatic complexity of the method is 10
Complex Method,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,BuildImageTag,Cyclomatic complexity of the method is 8
Complex Method,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,BuildVideoTag,Cyclomatic complexity of the method is 15
Complex Method,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,BuildUrl,Cyclomatic complexity of the method is 11
Long Parameter List,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListResourcesByPrefix,The method has 6 parameters.
Long Parameter List,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListResourcesByModerationStatus,The method has 6 parameters.
Long Parameter List,CloudinaryDotNet,Api,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Api.cs,Api,The method has 5 parameters.
Long Parameter List,CloudinaryDotNet,Api,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Api.cs,Call,The method has 5 parameters.
Long Parameter List,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,ApiShared,The method has 5 parameters.
Long Parameter List,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,WriteFile,The method has 5 parameters.
Long Parameter List,CloudinaryShared.Core,UrlBuilder,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,UrlBuilder,The method has 5 parameters.
Long Statement,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,GetTransformation,The length of the statement  "		throw new NotSupportedException (String.Format ("Instance of type {0} is not supported as Transformation!"' o.GetType ())); " is 123.
Long Statement,CloudinaryDotNet.Actions,ArchiveParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\ArchiveParams.cs,Check,The length of the statement  "	if ((m_publicIds == null || m_publicIds.Count == 0) && (m_prefixes == null || m_prefixes.Count == 0) && (m_tags == null || m_tags.Count == 0)) " is 142.
Long Statement,CloudinaryDotNet.Actions,ArchiveParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\ArchiveParams.cs,Check,The length of the statement  "		throw new ArgumentException ("At least one of the following \"filtering\" parameters needs to be specified: PublicIds' Tags or Prefixes."); " is 139.
Long Statement,CloudinaryDotNet.Actions,UploadMappingParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadMappingParams.cs,Check,The length of the statement  "		throw new ArgumentException (string.Format ("The maximal count of folders to return is 500' but {0} given!"' MaxResults)); " is 122.
Long Statement,CloudinaryDotNet.Actions,DelResParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\DelResParams.cs,Check,The length of the statement  "	if ((PublicIds == null || PublicIds.Count == 0) && String.IsNullOrEmpty (Prefix) && String.IsNullOrEmpty (Tag) && !All) { " is 121.
Long Statement,CloudinaryDotNet.Actions,BaseParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\BaseParams.cs,AddCoordinates,The length of the statement  "		dict.Add (key' string.Join ("|"' list.Select (r => string.Format ("{0}'{1}'{2}'{3}"' r.X' r.Y' r.Width' r.Height)).ToArray ())); " is 128.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListUploadPresets,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.Add ("upload_presets").BuildUrl ()' parameters.ToParamsDictionary ()); " is 124.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,Upload,The length of the statement  "	using (HttpWebResponse response = m_api.Call (HttpMethod.POST' uri' parameters.ToParamsDictionary ()' parameters.File)) { " is 121.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,Upload,The length of the statement  "	using (HttpWebResponse response = m_api.Call (HttpMethod.POST' uri' parameters.ToParamsDictionary ()' parameters.File)) { " is 121.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,Upload,The length of the statement  "	using (HttpWebResponse response = m_api.Call (HttpMethod.POST' uri' (SortedDictionary<string' object>)parameters' fileDescription)) { " is 133.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,SubFolders,The length of the statement  "	using (HttpWebResponse response = m_api.Call (HttpMethod.GET' m_api.ApiUrlV.Add ("folders").Add (folder).BuildUrl ()' null' null)) { " is 132.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,Upload,The length of the statement  "	using (HttpWebResponse response = m_api.Call (HttpMethod.POST' uri' parameters.ToParamsDictionary ()' parameters.File)) { " is 121.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,UploadLargeRaw,The length of the statement  "		throw new ArgumentException ("The UploadLargeRaw method is intended to be used for large local file uploading and can't be used for remote file uploading!"); " is 157.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,UploadLarge,The length of the statement  "		string range = string.Format ("bytes {0}-{1}/{2}"' parameters.File.BytesSent' parameters.File.BytesSent + currentBufferSize - 1' fileLength); " is 141.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,UploadLarge,The length of the statement  "				throw new WebException (String.Format ("An error has occured while uploading file (status code: {0}). {1}"' result.StatusCode' result.Error != null ? result.Error.Message : "Unknown error")); " is 191.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,Destroy,The length of the statement  "	string uri = m_api.ApiUrlImgUpV.ResourceType (Api.GetCloudinaryParam<ResourceType> (parameters.ResourceType)).Action ("destroy").BuildUrl (); " is 141.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListResourceTypes,The length of the statement  "	using (HttpWebResponse response = m_api.Call (HttpMethod.GET' m_api.ApiUrlV.Add ("resources").BuildUrl ()' null' null)) { " is 121.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListResources,The length of the statement  "	var url = m_api.ApiUrlV.ResourceType ("resources").Add (Api.GetCloudinaryParam<ResourceType> (parameters.ResourceType)); " is 120.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListResources,The length of the statement  "			url.Add ("moderations").Add (modParams.ModerationKind).Add (Api.GetCloudinaryParam<ModerationStatus> (modParams.ModerationStatus)); " is 131.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListTags,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.ResourceType ("tags").Add (Api.GetCloudinaryParam (parameters.ResourceType)).BuildUrl ()' parameters.ToParamsDictionary ()); " is 178.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,ListTransformations,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.ResourceType ("transformations").BuildUrl ()' parameters.ToParamsDictionary ()); " is 134.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,GetTransform,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.ResourceType ("transformations").Add (parameters.Transformation).BuildUrl ()' parameters.ToParamsDictionary ()); " is 166.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,UpdateResource,The length of the statement  "	var url = m_api.ApiUrlV.ResourceType ("resources").Add (Api.GetCloudinaryParam<ResourceType> (parameters.ResourceType)).Add (parameters.Type).Add (parameters.PublicId).BuildUrl (); " is 180.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,GetResource,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.ResourceType ("resources").Add (Api.GetCloudinaryParam (parameters.ResourceType)).Add (parameters.Type).Add (parameters.PublicId).BuildUrl ()' parameters.ToParamsDictionary ()); " is 231.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,DeleteDerivedResources,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.Add ("derived_resources").BuildUrl ()' parameters.ToParamsDictionary ()); " is 127.
Long Statement,CloudinaryDotNet,Cloudinary,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Cloudinary.cs,Restore,The length of the statement  "	var url = m_api.ApiUrlV.ResourceType ("resources").Add (Api.GetCloudinaryParam (parameters.ResourceType)).Add ("upload").Add ("restore").BuildUrl (); " is 149.
Long Statement,CloudinaryDotNet,Api,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Api.cs,Call,The length of the statement  "	request.UserAgent = string.IsNullOrEmpty (UserPlatform) ? USER_AGENT : string.Format ("{0} {1}"' UserPlatform' USER_AGENT); " is 123.
Long Statement,CloudinaryDotNet,Api,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Api.cs,BuildCallbackUrl,The length of the statement  "			throw new HttpException ("Http context is not set. Either use this method in the right context or provide an absolute path to file!"); " is 134.
Long Statement,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,VideoCodec,The length of the statement  "	throw new ArgumentException ("codecParams: please provide either single parameter or a bunch of key-value pairs (key1' value1' key2' value2' ...)."); " is 149.
Long Statement,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The length of the statement  "	bool hasLayer = !string.IsNullOrEmpty (GetString (m_transformParams' "overlay")) || !string.IsNullOrEmpty (GetString (m_transformParams' "underlay")); " is 150.
Long Statement,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The length of the statement  "	if (width != null && (width == "auto" || Single.Parse (width' CultureInfo.InvariantCulture) < 1 || no_html_sizes || isResponsive)) " is 130.
Long Statement,CloudinaryDotNet,TextLayer,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Transforms\TextLayer.cs,OverlayTextEncode,The length of the statement  "	return HttpUtility.UrlEncodeUnicode (text).Replace ("%2f"' "/").Replace ("%3a"' ":").Replace ("+"' "%20").Replace ("%2c"' "%e2%80%9a").Replace ("/"' "%e2%81%84"); " is 162.
Long Statement,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,SignParameters,The length of the statement  "	StringBuilder signBase = new StringBuilder (String.Join ("&"' parameters.Where (pair => pair.Value != null).Select (pair => String.Format ("{0}={1}"' pair.Key' pair.Value is IEnumerable<string> ? String.Join ("'"' ((IEnumerable<string>)pair.Value).ToArray ()) : pair.Value.ToString ())).ToArray ())); " is 300.
Long Statement,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,BuildUploadFormShared,The length of the statement  "	builder.Append ("<input type='file' name='file' data-url='").Append (GetUploadUrl (resourceType)).Append ("' data-form-data='").Append (PrepareUploadParams (parameters)).Append ("' data-cloudinary-field='").Append (field).Append ("' class='cloudinary-fileupload"); " is 264.
Long Statement,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,WriteFile,The length of the statement  "	while ((toSend = length - bytesSent) > 0 && (cnt = stream.Read (buf' 0' (toSend > buf.Length ? buf.Length : toSend))) > 0) { " is 124.
Long Statement,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,BuildUrl,The length of the statement  "	if (src.SourceToSign.Contains ("/") && !Regex.IsMatch (src.SourceToSign' "^v[0-9]+/") && !Regex.IsMatch (src.SourceToSign' "https?:/.*") && String.IsNullOrEmpty (m_version)) { " is 175.
Long Statement,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,BuildUrl,The length of the statement  "			throw new NullReferenceException ("Reference to ISignProvider-compatible object must be provided in order to sign URI!"); " is 121.
Long Statement,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,UpdateAction,The length of the statement  "		if (m_resourceType == "image" && m_action == "upload" || m_resourceType == "images" && String.IsNullOrEmpty (m_action)) { " is 121.
Long Statement,CloudinaryShared.Core,CloudinaryShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\CloudinaryShared.cs,DownloadPrivate,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.ResourceType (RESOURCE_TYPE_IMAGE).Action ("download").BuildUrl ()); " is 122.
Long Statement,CloudinaryShared.Core,CloudinaryShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\CloudinaryShared.cs,DownloadZip,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.ResourceType (RESOURCE_TYPE_IMAGE).Action ("download_tag.zip").BuildUrl ()); " is 130.
Long Statement,CloudinaryShared.Core,CloudinaryShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\CloudinaryShared.cs,DownloadArchiveUrl,The length of the statement  "	UrlBuilder urlBuilder = new UrlBuilder (m_api.ApiUrlV.ResourceType (RESOURCE_TYPE_IMAGE).Action (ACTION_GENERATE_ARCHIVE).BuildUrl ()); " is 135.
Complex Conditional,CloudinaryDotNet.Actions,ArchiveParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\ArchiveParams.cs,Check,The conditional expression  "(m_publicIds == null || m_publicIds.Count == 0) && (m_prefixes == null || m_prefixes.Count == 0) && (m_tags == null || m_tags.Count == 0)"  is complex.
Complex Conditional,CloudinaryDotNet.Actions,DelResParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\DelResParams.cs,Check,The conditional expression  "(PublicIds == null || PublicIds.Count == 0) && String.IsNullOrEmpty (Prefix) && String.IsNullOrEmpty (Tag) && !All"  is complex.
Complex Conditional,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The conditional expression  "width != null && (width == "auto" || Single.Parse (width' CultureInfo.InvariantCulture) < 1 || no_html_sizes || isResponsive)"  is complex.
Complex Conditional,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The conditional expression  "height != null && (Single.Parse (height' CultureInfo.InvariantCulture) < 1 || no_html_sizes || isResponsive)"  is complex.
Complex Conditional,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,BuildUrl,The conditional expression  "src.SourceToSign.Contains ("/") && !Regex.IsMatch (src.SourceToSign' "^v[0-9]+/") && !Regex.IsMatch (src.SourceToSign' "https?:/.*") && String.IsNullOrEmpty (m_version)"  is complex.
Complex Conditional,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,UpdateAction,The conditional expression  "m_resourceType == "image" && m_action == "upload" || m_resourceType == "images" && String.IsNullOrEmpty (m_action)"  is complex.
Empty Catch Block,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,PrepareUploadParams,The method has an empty catch block.
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates != null) {  	if (preset.Settings.FaceCoordinates.Type == JTokenType.String) {  		FaceCoordinates = preset.Settings.FaceCoordinates.ToString ();  	} else if (preset.Settings.FaceCoordinates.Type == JTokenType.Array) {  		var fc = new List<Rectangle> ();  		foreach (JToken token in preset.Settings.FaceCoordinates) {  			fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  		}  	}  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates != null) {  	if (preset.Settings.FaceCoordinates.Type == JTokenType.String) {  		FaceCoordinates = preset.Settings.FaceCoordinates.ToString ();  	} else if (preset.Settings.FaceCoordinates.Type == JTokenType.Array) {  		var fc = new List<Rectangle> ();  		foreach (JToken token in preset.Settings.FaceCoordinates) {  			fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  		}  	}  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates.Type == JTokenType.String) {  	FaceCoordinates = preset.Settings.FaceCoordinates.ToString ();  } else if (preset.Settings.FaceCoordinates.Type == JTokenType.Array) {  	var fc = new List<Rectangle> ();  	foreach (JToken token in preset.Settings.FaceCoordinates) {  		fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  	}  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates.Type == JTokenType.String) {  	FaceCoordinates = preset.Settings.FaceCoordinates.ToString ();  } else if (preset.Settings.FaceCoordinates.Type == JTokenType.Array) {  	var fc = new List<Rectangle> ();  	foreach (JToken token in preset.Settings.FaceCoordinates) {  		fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  	}  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates.Type == JTokenType.Array) {  	var fc = new List<Rectangle> ();  	foreach (JToken token in preset.Settings.FaceCoordinates) {  		fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  	}  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: if (preset.Settings.FaceCoordinates.Type == JTokenType.Array) {  	var fc = new List<Rectangle> ();  	foreach (JToken token in preset.Settings.FaceCoordinates) {  		fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  	}  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: foreach (JToken token in preset.Settings.FaceCoordinates) {  	fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: foreach (JToken token in preset.Settings.FaceCoordinates) {  	fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  }  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  
Magic Number,CloudinaryDotNet.Actions,UploadPresetParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadPreset.cs,UploadPresetParams,The following statement contains a magic number: fc.Add (new Rectangle (token [0].Value<int> ()' token [1].Value<int> ()' token [2].Value<int> ()' token [3].Value<int> ()));  
Magic Number,CloudinaryDotNet.Actions,UploadMappingParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\UploadMappingParams.cs,Check,The following statement contains a magic number: if (MaxResults > 500)  	throw new ArgumentException (string.Format ("The maximal count of folders to return is 500' but {0} given!"' MaxResults));  
Magic Number,CloudinaryDotNet.Actions,TextParams,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Actions\TextParams.cs,TextParams,The following statement contains a magic number: FontSize = 12;  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: if (codecParams.Length == 1) {  	return Add ("video_codec"' codecParams [0]);  } else if (codecParams.Length > 1 && (codecParams.Length % 2) == 0) {  	var dict = new Dictionary<string' string> ();  	for (int i = 0; i < codecParams.Length; i += 2) {  		if (!dict.ContainsKey (codecParams [i]))  			dict.Add (codecParams [i]' codecParams [i + 1]);  	}  	return VideoCodec (dict);  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: if (codecParams.Length == 1) {  	return Add ("video_codec"' codecParams [0]);  } else if (codecParams.Length > 1 && (codecParams.Length % 2) == 0) {  	var dict = new Dictionary<string' string> ();  	for (int i = 0; i < codecParams.Length; i += 2) {  		if (!dict.ContainsKey (codecParams [i]))  			dict.Add (codecParams [i]' codecParams [i + 1]);  	}  	return VideoCodec (dict);  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: if (codecParams.Length > 1 && (codecParams.Length % 2) == 0) {  	var dict = new Dictionary<string' string> ();  	for (int i = 0; i < codecParams.Length; i += 2) {  		if (!dict.ContainsKey (codecParams [i]))  			dict.Add (codecParams [i]' codecParams [i + 1]);  	}  	return VideoCodec (dict);  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: if (codecParams.Length > 1 && (codecParams.Length % 2) == 0) {  	var dict = new Dictionary<string' string> ();  	for (int i = 0; i < codecParams.Length; i += 2) {  		if (!dict.ContainsKey (codecParams [i]))  			dict.Add (codecParams [i]' codecParams [i + 1]);  	}  	return VideoCodec (dict);  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: for (int i = 0; i < codecParams.Length; i += 2) {  	if (!dict.ContainsKey (codecParams [i]))  		dict.Add (codecParams [i]' codecParams [i + 1]);  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,VideoCodec,The following statement contains a magic number: i += 2
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2)  	throw new ArgumentException ("Offset range must include at least 2 items.");  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2)  	throw new ArgumentException ("Offset range must include at least 2 items.");  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2)  	throw new ArgumentException ("Offset range must include at least 2 items.");  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,Offset,The following statement contains a magic number: if (value.Length < 2)  	throw new ArgumentException ("Offset range must include at least 2 items.");  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,NormRangeValue,The following statement contains a magic number: if (match.Groups.Count == 3 && !String.IsNullOrEmpty (match.Groups [2].Value)) {  	modifier = "p";  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,NormRangeValue,The following statement contains a magic number: if (match.Groups.Count == 3 && !String.IsNullOrEmpty (match.Groups [2].Value)) {  	modifier = "p";  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,Transformation,The following statement contains a magic number: foreach (var pair in transformParams) {  	string[] splittedPair = pair.Split ('=');  	if (splittedPair.Length != 2)  		throw new ArgumentException (String.Format ("Couldn't parse '{0}'!"' pair));  	Add (splittedPair [0]' splittedPair [1]);  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,Transformation,The following statement contains a magic number: if (splittedPair.Length != 2)  	throw new ArgumentException (String.Format ("Couldn't parse '{0}'!"' pair));  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The following statement contains a magic number: if (m_transformParams.TryGetValue ("offset"' out obj)) {  	var offset = SplitRange (m_transformParams ["offset"]);  	if (offset != null && offset.Length == 2) {  		startOffset = NormRangeValue (offset [0]);  		endOffset = NormRangeValue (offset [1]);  	}  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The following statement contains a magic number: if (offset != null && offset.Length == 2) {  	startOffset = NormRangeValue (offset [0]);  	endOffset = NormRangeValue (offset [1]);  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The following statement contains a magic number: for (int i = 0; i < SimpleParams.Length; i += 2) {  	if (m_transformParams.TryGetValue (SimpleParams [i + 1]' out obj))  		parameters.Add (SimpleParams [i]' ToString (obj));  }  
Magic Number,CloudinaryDotNet,Transformation,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Transforms\ImageTransform.cs,GenerateThis,The following statement contains a magic number: i += 2
Magic Number,CloudinaryDotNet,TextLayer,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Transforms\TextLayer.cs,TextLayer,The following statement contains a magic number: FontSize (12);  
Magic Number,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,SignUriPart,The following statement contains a magic number: return "s--" + sign.Substring (0' 8).Replace ("+"' "-").Replace ("/"' "_") + "--/";  
Magic Number,CloudinaryShared.Core,ApiShared,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\ApiShared.cs,GetTime,The following statement contains a magic number: return Convert.ToInt64 (((DateTime.UtcNow - new DateTime (1970' 1' 1)).TotalSeconds)).ToString ();  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Shard,The following statement contains a magic number: return ((hash % 5 + 5) % 5 + 1).ToString ();  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Shard,The following statement contains a magic number: return ((hash % 5 + 5) % 5 + 1).ToString ();  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Shard,The following statement contains a magic number: return ((hash % 5 + 5) % 5 + 1).ToString ();  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Decode,The following statement contains a magic number: while (pos < input.Length) {  	int ppos = input.IndexOf ('%'' pos);  	if (ppos == -1) {  		resultStr.Append (input.Substring (pos));  		pos = input.Length;  	} else {  		resultStr.Append (input.Substring (pos' ppos - pos));  		char ch = (char)Int16.Parse (input.Substring (ppos + 1' 2)' NumberStyles.HexNumber);  		resultStr.Append (ch);  		pos = ppos + 3;  	}  }  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Decode,The following statement contains a magic number: while (pos < input.Length) {  	int ppos = input.IndexOf ('%'' pos);  	if (ppos == -1) {  		resultStr.Append (input.Substring (pos));  		pos = input.Length;  	} else {  		resultStr.Append (input.Substring (pos' ppos - pos));  		char ch = (char)Int16.Parse (input.Substring (ppos + 1' 2)' NumberStyles.HexNumber);  		resultStr.Append (ch);  		pos = ppos + 3;  	}  }  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Decode,The following statement contains a magic number: if (ppos == -1) {  	resultStr.Append (input.Substring (pos));  	pos = input.Length;  } else {  	resultStr.Append (input.Substring (pos' ppos - pos));  	char ch = (char)Int16.Parse (input.Substring (ppos + 1' 2)' NumberStyles.HexNumber);  	resultStr.Append (ch);  	pos = ppos + 3;  }  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Decode,The following statement contains a magic number: if (ppos == -1) {  	resultStr.Append (input.Substring (pos));  	pos = input.Length;  } else {  	resultStr.Append (input.Substring (pos' ppos - pos));  	char ch = (char)Int16.Parse (input.Substring (ppos + 1' 2)' NumberStyles.HexNumber);  	resultStr.Append (ch);  	pos = ppos + 3;  }  
Magic Number,CloudinaryShared.Core,Url,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Url.cs,Decode,The following statement contains a magic number: pos = ppos + 3;  
Magic Number,CloudinaryDotNet.Shared.Coudinary.NetCoreShared,Crc32,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Crc32.cs,ComputeChecksum,The following statement contains a magic number: for (int i = 0; i < bytes.Length; ++i) {  	byte index = (byte)(((crc) & 0xff) ^ bytes [i]);  	crc = (uint)((crc >> 8) ^ table [index]);  }  
Magic Number,CloudinaryDotNet.Shared.Coudinary.NetCoreShared,Crc32,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Crc32.cs,ComputeChecksum,The following statement contains a magic number: crc = (uint)((crc >> 8) ^ table [index]);  
Magic Number,CloudinaryDotNet.Shared.Coudinary.NetCoreShared,Crc32,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Crc32.cs,Crc32,The following statement contains a magic number: table = new uint[256];  
Magic Number,CloudinaryDotNet.Shared.Coudinary.NetCoreShared,Crc32,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Crc32.cs,Crc32,The following statement contains a magic number: for (uint i = 0; i < table.Length; ++i) {  	temp = i;  	for (int j = 8; j > 0; --j) {  		if ((temp & 1) == 1) {  			temp = (uint)((temp >> 1) ^ poly);  		} else {  			temp >>= 1;  		}  	}  	table [i] = temp;  }  
Magic Number,CloudinaryDotNet.Shared.Coudinary.NetCoreShared,Crc32,F:\newReposMay17\cloudinary_CloudinaryDotNet\Cloudinary\Shared\Coudinary.NetCoreShared\Crc32.cs,Crc32,The following statement contains a magic number: for (int j = 8; j > 0; --j) {  	if ((temp & 1) == 1) {  		temp = (uint)((temp >> 1) ^ poly);  	} else {  		temp >>= 1;  	}  }  
