Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimplePlugin.Handlers,AlgoTester,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\AlgoTester.cs,HandleChatMessage,Cyclomatic complexity of the method is 9
Long Statement,SimplePlugin.Handlers,AlgoTester,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\AlgoTester.cs,HandleChatMessage,The length of the statement  "                                                                neighbour.Transition is MovementTransition ? (neighbour.Transition as MovementTransition).MapNeighbour : MapNeighbour.None)); " is 125.
Long Statement,SimplePlugin.Handlers,GameCommands,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\GameCommands.cs,HandleChatMessage,The length of the statement  "                bot.Character.SendMessage(String.Format("The tchat command <b>{0}</b> doesn't exist."' commandName)' System.Drawing.Color.Red); " is 127.
Long Statement,SimplePlugin.Handlers,GatherTest,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\GatherTest.cs,CheckRessources,The length of the statement  "            var ressource = Bot.Character.Map.Interactives.Where(x => x.Type != null && x.Type.id == WHEATH_INTERACTIVE && x.Cell != null && " is 128.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,HandleMapMessage,The length of the statement  "                        bot.Character.SendMessage(String.Format("Le monstre <b>'{0}'</b> a été trouvé sur cette carte."' monster)' System.Drawing.Color.Green); " is 135.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,HandleMapMessage,The length of the statement  "                    bot.Character.SendMessage(String.Format("L'archimonstre <b>'{0}'</b> a été trouvé sur cette carte."' archi)' System.Drawing.Color.Red); " is 135.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,SeekedInGroup,The length of the statement  "            string[] monsters = group.Monsters.Where(entry => IsSeeking(entry.Name.ToLowerInvariant())).Select(entry => entry.Name).ToArray(); " is 130.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,HandleSeekCommand,The length of the statement  "                bot.Character.SendMessage(String.Format("Le monstre '{0}' est désormais recherché."' parameters[0])' System.Drawing.Color.Green); " is 129.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,HandleSeekCommand,The length of the statement  "                bot.Character.SendMessage(String.Format("Le monstre '{0}' est déjà recherché."' parameters[0])' System.Drawing.Color.DarkSlateGray); " is 132.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,HandleStopCommand,The length of the statement  "                bot.Character.SendMessage(String.Format("Le monstre '{0}' n'est désormais plus recherché."' parameters[0])' System.Drawing.Color.Green); " is 136.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,HandleStopCommand,The length of the statement  "                bot.Character.SendMessage(String.Format("Le monstre '{0}' n'était pas recherché."' parameters[0])' System.Drawing.Color.DarkSlateGray); " is 135.
Long Statement,SimplePlugin.Handlers,MonsterSeeker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\MonsterSeeker.cs,HandleListCommand,The length of the statement  "                bot.Character.SendMessage(String.Format("Les monstres suivants sont recherchés :\n{0}"' MonsterSeeker.SeekedMonsters.Aggregate((a' b) => a + "' " + b))' System.Drawing.Color.DarkSlateGray); " is 189.
Long Statement,SimplePlugin.Handlers,NeighboursChecker,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\NeighboursChecker.cs,HandleChangeMapMessage,The length of the statement  "                    bot.Character.SendWarning("The actual map ({0}) is not the {1} neighbour of the previous map {2} (NOT FOUND)"' message.mapId' direction' m_lastMapPos.MapId); " is 157.
Long Statement,SimplePlugin.Handlers,PacketsLogger,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\PacketsLogger.cs,OnMessageDispatched,The length of the statement  "            var file = string.Format("{0}/log {1} {2}.log"' Plugin.CurrentPlugin.GetPluginDirectory()' bot' Process.GetCurrentProcess().StartTime.ToString("dd MMM HH-mm-ss")); " is 163.
Long Statement,SimplePlugin.Handlers,PathfindersComparer,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\PathfindersComparer.cs,HandleGameMapMovementRequestMessage,The length of the statement  "            //botPath2 = new Path(bot.Character.Map' FFpathfinder.GetLastPathUnpacked(0).Select(id => bot.Character.Map.Cells[id])); " is 120.
Magic Number,SimplePlugin.Handlers,AlgoTester,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\AlgoTester.cs,HandleChatMessage,The following statement contains a magic number: if (message.content.StartsWith(".algo submap"))              {                  bot.Character.ResetCellsHighlight();                    var sw = Stopwatch.StartNew();                  var submaps = SubMapsManager.Instance.GetMapSubMapsBinder(bot.Character.Map.Id);                  sw.Stop();                  bot.Character.SendMessage(string.Format("{0}ms"' sw.ElapsedMilliseconds));                    foreach (var subMap in submaps)                  {                      var random = new Random();                      int hue = random.Next(0' 361);                      bot.Character.SendMessage(string.Format("[{0} mapid:{1} submap:{2}]"' subMap.GlobalId' subMap.MapId' subMap.SubMapId));                        double step = 1d / subMap.Neighbours.Count;                      for (int i = 0; i < subMap.Neighbours.Count; i++)                      {                          var neighbour = subMap.Neighbours[i];                          var color = HSVColorConverter.ColorFromHSV(hue' step * (i + 1)' 1);                            bot.Character.SendMessage(string.Format("[{0}] to [{1}] ({2})"'                                                                  subMap.GlobalId' neighbour.GlobalId'                                                                  neighbour.Transition is MovementTransition ? (neighbour.Transition as MovementTransition).MapNeighbour : MapNeighbour.None));                          if (neighbour.Transition is MovementTransition)                              bot.Character.HighlightCells((neighbour.Transition as MovementTransition).Cells' color);                      }                  }                    message.BlockNetworkSend();              }
Magic Number,SimplePlugin.Handlers,ChangeMapTester,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\ChangeMapTester.cs,HandleChatMessage,The following statement contains a magic number: if (message.content.StartsWith(".move"))              {                  message.BlockNetworkSend();// do not send this message to the server                    var splits = message.content.Split(' ');                  if (splits.Length != 2)                  {                      bot.Character.SendMessage("syntax : .move [Right/Left/Top/Bottom/Any]");                      return;                  }                    MapNeighbour neighbour;                  try                  {                      neighbour = (MapNeighbour)Enum.Parse(typeof(MapNeighbour)' splits[1]);                  }                  catch (Exception)                  {                      bot.Character.SendMessage("syntax : .move [Right/Left/Top/Bottom/Any]");                      return;                  }                      if (bot.Character.ChangeMap(neighbour) == MapNeighbour.None)                  {                      bot.Character.SendMessage(string.Format("Cannot move to {0} !"' neighbour));                  }              }
Magic Number,SimplePlugin.Handlers,GatherTest,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\GatherTest.cs,CheckRessources,The following statement contains a magic number: if (!item.IsEquipped)              {                  if (!Bot.Character.Inventory.Equip(item))                  {                      Bot.Character.SendMessage("Cannot equip the farmer tool");                      // todo : determin why ?                      Bot.CallDelayed(GatherTickTime' CheckRessources);                  }              }              else // try to gather the ressource the next tick else the tool wouldn't be equipped              {                  var skill = ressource.EnabledSkills.FirstOrDefault();                    if (skill == null)                      return;                    if (!Bot.Character.UseInteractiveObject(skill))                      Bot.CallDelayed(GatherTickTime' CheckRessources);                  else                      m_timeoutGatherTimer = Bot.CallDelayed(4000' InteractiveUseTimeout);              }
Magic Number,SimplePlugin.Handlers,PathfindersComparer,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\PathfindersComparer.cs,HandleGameMapMovementRequestMessage,The following statement contains a magic number: for(int i=0; i<100; i++)                  botPath1 = pathfinder.FindPath(bot.Character.Cell' clientPath.End' true);
Magic Number,SimplePlugin.Handlers,PathfindersComparer,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\PathfindersComparer.cs,HandleGameMapMovementRequestMessage,The following statement contains a magic number: for (int i = 0; i < 100; i++)                  botPath2 = ((ISimplePathFinder)FFpathfinder).FindPath(bot.Character.Cell' clientPath.End' true);
Magic Number,SimplePlugin.Handlers,PathfindersComparer,C:\repos\Emudofus_BehaviorIsManaged\Plugins\SimplePlugin\Handlers\PathfindersComparer.cs,OnStartMoving,The following statement contains a magic number: Task.Factory.StartNew(                  () =>                   {                      var element = movement.TimedPath.GetCurrentElement();                        bot.Character.HighlightCell(element.CurrentCell' Color.Green);                        while(!movement.IsEnded())                      {                          var newElement = movement.TimedPath.GetCurrentElement();                            if (element != newElement)                          {                              element = newElement;                                bot.Character.ResetCellsHighlight();                              bot.Character.HighlightCell(element.CurrentCell' Color.Green);                          }                            Thread.Sleep(30);                      }                  });
