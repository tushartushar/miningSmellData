Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BiM.MITM,MITM,C:\repos\Emudofus_BehaviorIsManaged\MITM\MITM.cs,OnServerConnectionTimedOut,The length of the statement  "                logger.Error("Cannot etablish a connection to the server ({0}). Time out {1}ms"' connection.Server.IP' ServerConnectionTimeout * 1000); " is 135.
Long Statement,BiM.MITM,MITM,C:\repos\Emudofus_BehaviorIsManaged\MITM\MITM.cs,HandleSelectedServerDataMessage,The length of the statement  "            m_tickets.Add(message.ticket' Tuple.Create((BotMITM)bot' new SelectedServerDataMessage(message.serverId' message.address' message.port' message.canCreateNewCharacter' message.ticket))); " is 185.
Long Statement,BiM.MITM.Network,NetworkMessageDispatcher,C:\repos\Emudofus_BehaviorIsManaged\MITM\Network\NetworkMessageDispatcher.cs,InternalDispatch,The length of the statement  "            var handlers = GetHandlers(message.GetType()' token).ToArray(); // have to transform it into a collection if we want to add/remove handler " is 138.
Magic Number,BiM.MITM,MITM,C:\repos\Emudofus_BehaviorIsManaged\MITM\MITM.cs,OnWorldClientConnected,The following statement contains a magic number: client.Send(new ProtocolRequired(1467' 1467));
Magic Number,BiM.MITM,MITM,C:\repos\Emudofus_BehaviorIsManaged\MITM\MITM.cs,OnWorldClientConnected,The following statement contains a magic number: client.Send(new ProtocolRequired(1467' 1467));
Magic Number,BiM.MITM,MITM,C:\repos\Emudofus_BehaviorIsManaged\MITM\MITM.cs,HandleAuthenticationTicketMessage,The following statement contains a magic number: client.TimeOutTimer = client.Bot.CallDelayed(ServerConnectionTimeout * 1000' () => OnServerConnectionTimedOut(client));
Magic Number,BiM.MITM,MITM,C:\repos\Emudofus_BehaviorIsManaged\MITM\MITM.cs,OnServerConnectionTimedOut,The following statement contains a magic number: if (!connection.Server.IsConnected)                  logger.Error("Cannot etablish a connection to the server ({0}). Time out {1}ms"' connection.Server.IP' ServerConnectionTimeout * 1000);              else              {                  logger.Warn("Send a BasicPingMessage to unblock the server connection");                    // unblock the connection (fix #14)                  connection.SendToServer(new BasicPingMessage());              }
