Implementation smell,Namespace,Class,File,Method,Description
Long Method,DofusProtocolBuilder.Profiles,DatacenterProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\DatacenterProfile.cs,DatacenterProfile,The method has 103 lines of code.
Long Method,DofusProtocolBuilder.Profiles,XmlMessagesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\XmlMessagesProfile.cs,XmlMessagesProfile,The method has 117 lines of code.
Long Method,DofusProtocolBuilder.Profiles,XmlTypesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\XmlTypesProfile.cs,XmlTypesProfile,The method has 109 lines of code.
Long Method,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The method has 142 lines of code.
Long Method,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The method has 142 lines of code.
Complex Method,DofusProtocolBuilder,Program,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Program.cs,Main,Cyclomatic complexity of the method is 22
Complex Method,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,BuildMethodInfoFromMatch,Cyclomatic complexity of the method is 9
Complex Method,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseMethodExecutions,Cyclomatic complexity of the method is 11
Complex Method,DofusProtocolBuilder.Parsing.Elements,InvokeExpression,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Elements\InvokeExpression.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,Cyclomatic complexity of the method is 24
Complex Method,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,Cyclomatic complexity of the method is 24
Long Statement,DofusProtocolBuilder,Program,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Program.cs,Main,The length of the statement  "		IEnumerable<string> files = Directory.EnumerateFiles (Path.Combine (Configuration.SourcePath' parsingProfile.SourcePath)' "*.as"' SearchOption.AllDirectories); " is 159.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseFile,The length of the statement  "	m_fileLines = File.ReadAllLines (Filename).Where (entry => !IsLineIgnored (entry)).Select (entry => ApplyRules (BeforeParsingRules' entry.Trim ())).ToArray (); " is 159.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseConstructor,The length of the statement  "	Match matchConstructor = Regex.Match (m_fileText' string.Format (ConstructorPattern' Class.Name)' RegexOptions.Multiline); " is 122.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseFields,The length of the statement  "			Type = matchConst.Groups ["generictype"].Value == string.Empty ? matchConst.Groups ["type"].Value : "List<" + matchConst.Groups ["generictype"].Value + ">"' " is 156.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseMethodExecutions,The length of the statement  "			if (!string.IsNullOrEmpty ((statement as InvokeExpression).ReturnVariableAssignation) && string.IsNullOrEmpty ((statement as InvokeExpression).Preffix) && Fields.Count (entry => entry.Name == ((InvokeExpression)statement).ReturnVariableAssignation) > 0) { " is 255.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseMethodExecutions,The length of the statement  "				(statement as InvokeExpression).Preffix = "(" + Fields.Where (entry => entry.Name == ((InvokeExpression)statement).ReturnVariableAssignation).First ().Type + ")"; " is 162.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseMethodExecutions,The length of the statement  "			if (!string.IsNullOrEmpty ((statement as InvokeExpression).Target) && (statement as InvokeExpression).Name == "Add" && Fields.Count (entry => entry.Name == ((InvokeExpression)statement).Target.Split ('.').Last ()) > 0) { " is 220.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,ParseMethodExecutions,The length of the statement  "				string generictype = Fields.Where (entry => entry.Name == ((InvokeExpression)statement).Target.Split ('.').Last ()).First ().Type.Split ('<').Last ().Split ('>').First (); " is 171.
Long Statement,DofusProtocolBuilder.Parsing,Parser,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Parser.cs,GetMatch,The length of the statement  "	var matchedLine = m_fileLines.Where (entry => Regex.IsMatch (entry' pattern' RegexOptions.Multiline)).FirstOrDefault (); " is 120.
Long Statement,DofusProtocolBuilder.Parsing.Elements,ControlStatement,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Elements\ControlStatement.cs,Parse,The length of the statement  "			result.ControlType = (ControlType)Enum.Parse (typeof(ControlType)' match.Groups ["type"].Value.Replace (" "' "")' true); " is 120.
Long Statement,DofusProtocolBuilder.Parsing.Elements,ControlStatement,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Elements\ControlStatement.cs,Parse,The length of the statement  "				result.Condition = match.Groups ["condition"].Value.Remove (match.Groups ["condition"].Value.Length - 1' 1).Remove (0' 1).Trim (); " is 130.
Long Statement,DofusProtocolBuilder.Parsing.Elements,InvokeExpression,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Elements\InvokeExpression.cs,Parse,The length of the statement  "			result.ReturnVariableAssignationTarget = result.ReturnVariableAssignationTarget.Remove (result.ReturnVariableAssignationTarget.Length - 1' 1); " is 142.
Long Statement,DofusProtocolBuilder.Parsing.Elements,InvokeExpression,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Elements\InvokeExpression.cs,Parse,The length of the statement  "			result.ReturnVariableAssignation = match.Groups ["assignation"].Value.Trim ().Replace ("="' "").Replace (":"' "").Replace ("*"' "").Trim (); " is 140.
Long Statement,DofusProtocolBuilder.Parsing.Elements,AssignationStatement,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Parsing\Elements\AssignationStatement.cs,Parse,The length of the statement  "			Match variableMatch = Regex.Match (match.Groups ["variable"].Value' @"^(?<target>[^\.]+\.)*(?<name>.+)"' RegexOptions.Multiline); " is 129.
Long Statement,DofusProtocolBuilder.Profiles,DatacenterProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\DatacenterProfile.cs,ExecuteProfile,The length of the statement  "	string file = Path.Combine (Program.Configuration.Output' OutPutPath' GetRelativePath (parser.Filename)' Path.GetFileNameWithoutExtension (parser.Filename)); " is 157.
Long Statement,DofusProtocolBuilder.Profiles,DatacenterProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\DatacenterProfile.cs,ExecuteProfile,The length of the statement  "	string moduleFile = parser.Fields.Where (entry => entry.Name == "MODULE").Select (entry => entry.Value).SingleOrDefault (); " is 123.
Long Statement,DofusProtocolBuilder.Profiles,EnumsProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\EnumsProfile.cs,ExecuteProfile,The length of the statement  "	string file = Path.Combine (Program.Configuration.Output' OutPutPath' GetRelativePath (parser.Filename)' Path.GetFileNameWithoutExtension (parser.Filename)); " is 157.
Long Statement,DofusProtocolBuilder.Profiles,MessagesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\MessagesProfile.cs,ExecuteProfile,The length of the statement  "	string file = Path.Combine (Program.Configuration.Output' OutPutPath' GetRelativePath (parser.Filename)' Path.GetFileNameWithoutExtension (parser.Filename)); " is 157.
Long Statement,DofusProtocolBuilder.Profiles,MessagesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\MessagesProfile.cs,ExecuteProfile,The length of the statement  "	var xmlMessage = Program.Configuration.XmlMessagesProfile.SearchXmlPattern (Path.GetFileNameWithoutExtension (parser.Filename)); " is 128.
Long Statement,DofusProtocolBuilder.Profiles,TypesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\TypesProfile.cs,ExecuteProfile,The length of the statement  "	string file = Path.Combine (Program.Configuration.Output' OutPutPath' relativePath' Path.GetFileNameWithoutExtension (parser.Filename)); " is 136.
Long Statement,DofusProtocolBuilder.Profiles,TypesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\TypesProfile.cs,ExecuteProfile,The length of the statement  "	var xmlType = Program.Configuration.XmlTypesProfile.SearchXmlPattern (Path.GetFileNameWithoutExtension (parser.Filename)); " is 122.
Long Statement,DofusProtocolBuilder.Profiles,XmlMessagesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\XmlMessagesProfile.cs,SearchXmlPattern,The length of the statement  "	string[] results = Directory.GetFiles (Path.Combine (Program.Configuration.Output' OutPutPath)' classname + ".xml"' SearchOption.AllDirectories); " is 145.
Long Statement,DofusProtocolBuilder.Profiles,XmlMessagesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\XmlMessagesProfile.cs,ExecuteProfile,The length of the statement  "	string xmlfile = Path.Combine (Program.Configuration.Output' OutPutPath' relativePath' Path.GetFileNameWithoutExtension (parser.Filename)) + ".xml"; " is 148.
Long Statement,DofusProtocolBuilder.Profiles,XmlTypesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\XmlTypesProfile.cs,SearchXmlPattern,The length of the statement  "	string[] results = Directory.GetFiles (Path.Combine (Program.Configuration.Output' OutPutPath)' classname + ".xml"' SearchOption.AllDirectories); " is 145.
Long Statement,DofusProtocolBuilder.Profiles,XmlTypesProfile,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Profiles\XmlTypesProfile.cs,ExecuteProfile,The length of the statement  "	string xmlfile = Path.Combine (Program.Configuration.Output' OutPutPath' relativePath' Path.GetFileNameWithoutExtension (parser.Filename)) + ".xml"; " is 148.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is AssignationStatement && ((AssignationStatement)deserializeAsMethod.Statements [i]).Value.Contains ("Read")) { " is 151.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "				if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is InvokeExpression && ((InvokeExpression)deserializeAsMethod.Statements [i]).Name == "deserialize") { " is 141.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "				if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "					if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is AssignationStatement && ((AssignationStatement)deserializeAsMethod.Statements [i]).Value.Contains ("getFlag")) { " is 154.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is AssignationStatement && ((AssignationStatement)deserializeAsMethod.Statements [i]).Value.Contains ("getInstance")) { " is 158.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is InvokeExpression && ((InvokeExpression)deserializeAsMethod.Statements [i]).Name == "Add" && type != null) { " is 149.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlMessageBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlMessageBuilder.cs,WriteToXml,The length of the statement  "			if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is AssignationStatement && ((AssignationStatement)deserializeAsMethod.Statements [i]).Value.Contains ("Read")) { " is 151.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "				if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is InvokeExpression && ((InvokeExpression)deserializeAsMethod.Statements [i]).Name == "deserialize") { " is 141.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "				if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "					if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is AssignationStatement && ((AssignationStatement)deserializeAsMethod.Statements [i]).Value.Contains ("getFlag")) { " is 154.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is AssignationStatement && ((AssignationStatement)deserializeAsMethod.Statements [i]).Value.Contains ("getInstance")) { " is 158.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "		if (deserializeAsMethod.Statements [i] is InvokeExpression && ((InvokeExpression)deserializeAsMethod.Statements [i]).Name == "Add" && type != null) { " is 149.
Long Statement,DofusProtocolBuilder.XmlPatterns,XmlTypesBuilder,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\XmlPatterns\XmlTypesBuilder.cs,WriteToXml,The length of the statement  "			if (i + 1 < deserializeAsMethod.Statements.Count && deserializeAsMethod.Statements [i + 1] is ControlStatement && ((ControlStatement)deserializeAsMethod.Statements [i + 1]).ControlType == ControlType.If) " is 203.
Magic Number,DofusProtocolBuilder,Program,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	switch (args [i].ToLower ()) {  	case "-config":  		if (args.Length < i + 2)  			Shutdown ("Value of -config is not defined like : -config {configPath}");  		configPath = args [i + 1];  		break;  	case "-createconfig":  		var writer = XmlWriter.Create (configPath' new XmlWriterSettings () {  			Indent = true  		});  		serializer.Serialize (writer' Configuration);  		writer.Close ();  		Shutdown ("Config created. Please restart");  		break;  	}  }  
Magic Number,DofusProtocolBuilder,Program,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Program.cs,Main,The following statement contains a magic number: switch (args [i].ToLower ()) {  case "-config":  	if (args.Length < i + 2)  		Shutdown ("Value of -config is not defined like : -config {configPath}");  	configPath = args [i + 1];  	break;  case "-createconfig":  	var writer = XmlWriter.Create (configPath' new XmlWriterSettings () {  		Indent = true  	});  	serializer.Serialize (writer' Configuration);  	writer.Close ();  	Shutdown ("Config created. Please restart");  	break;  }  
Magic Number,DofusProtocolBuilder,Program,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Program.cs,Main,The following statement contains a magic number: if (args.Length < i + 2)  	Shutdown ("Value of -config is not defined like : -config {configPath}");  
Missing Default,DofusProtocolBuilder,Program,F:\newReposMay17\Emudofus_BehaviorIsManaged\DofusProtocolBuilder\Program.cs,Main,The following switch statement is missing a default case: switch (args [i].ToLower ()) {  case "-config":  	if (args.Length < i + 2)  		Shutdown ("Value of -config is not defined like : -config {configPath}");  	configPath = args [i + 1];  	break;  case "-createconfig":  	var writer = XmlWriter.Create (configPath' new XmlWriterSettings () {  		Indent = true  	});  	serializer.Serialize (writer' Configuration);  	writer.Close ();  	Shutdown ("Config created. Please restart");  	break;  }  
