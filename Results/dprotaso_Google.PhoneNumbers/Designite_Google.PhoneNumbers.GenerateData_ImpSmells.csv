Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadTerritoryTagMetadata,Cyclomatic complexity of the method is 12
Complex Method,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadAvailableFormats,Cyclomatic complexity of the method is 10
Complex Method,Google.PhoneNumbers.GenerateData,BuildMetadataProtoFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataProtoFromXml.cs,Main,Cyclomatic complexity of the method is 17
Long Parameter List,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadAvailableFormats,The method has 5 parameters.
Long Parameter List,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadCountryMetadata,The method has 5 parameters.
Long Identifier,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadAvailableFormats,The length of the parameter nationalPrefixOptionalWhenFormatting is 36.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,buildPhoneMetadataCollection,The length of the statement  "		PhoneMetadata metadata = loadCountryMetadata (regionCode' territoryXmlElement' liteBuild' isShortNumberMetadata' isAlternateFormatsMetadata); " is 141.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadAvailableFormats,The length of the statement  "				format.setNationalPrefixFormattingRule (getNationalPrefixFormattingRuleFromXmlElement (numberFormatXmlElement' nationalPrefix)); " is 128.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadAvailableFormats,The length of the statement  "					format.setNationalPrefixOptionalWhenFormatting (Boolean.Parse (numberFormatXmlElement.GetAttribute (NATIONAL_PREFIX_OPTIONAL_WHEN_FORMATTING))); " is 144.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadAvailableFormats,The length of the statement  "				format.setDomesticCarrierCodeFormattingRule (validateRE (getDomesticCarrierCodeFormattingRuleFromXmlElement (numberFormatXmlElement' nationalPrefix))); " is 151.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,setRelevantDescPatterns,The length of the statement  "		metadata.setNoInternationalDialling (processPhoneNumberDescElement (generalDesc' element' NO_INTERNATIONAL_DIALLING' liteBuild)); " is 129.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,setRelevantDescPatterns,The length of the statement  "		metadata.setSameMobileAndFixedLinePattern (metadata.getMobile ().getNationalNumberPattern ().Equals (metadata.getFixedLine ().getNationalNumberPattern ())); " is 156.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataFromXml.cs,loadCountryMetadata,The length of the statement  "	loadAvailableFormats (metadata' element' nationalPrefix.ToString ()' nationalPrefixFormattingRule.ToString ()' element.HasAttribute (NATIONAL_PREFIX_OPTIONAL_WHEN_FORMATTING)); " is 176.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataProtoFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataProtoFromXml.cs,Main,The length of the statement  "		else if (LITE_BUILD.Equals (key) && ("true".Equals (value' StringComparison.OrdinalIgnoreCase) || "false".Equals (value' StringComparison.OrdinalIgnoreCase))) { " is 160.
Long Statement,Google.PhoneNumbers.GenerateData,BuildMetadataProtoFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataProtoFromXml.cs,Main,The length of the statement  "		Dictionary<int' List<String>> countryCodeToRegionCodeMap = BuildMetadataFromXml.buildCountryCodeToRegionCodeMap (metadataCollection); " is 133.
Complex Conditional,Google.PhoneNumbers.GenerateData,BuildMetadataProtoFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataProtoFromXml.cs,Main,The conditional expression  "inputFile == null || outputDir == null || dataPrefix == null || mappingClass == null || copyright == null"  is complex.
Magic Number,Google.PhoneNumbers.GenerateData,BuildMetadataProtoFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataProtoFromXml.cs,Main,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	String key = null;  	String value = null;  	var matcher = pattern.Match (args [i]);  	if (matcher.Success) {  		key = matcher.Groups [1].Value;  		value = matcher.Groups [2].Value;  	}  	if (INPUT_FILE.Equals (key)) {  		inputFile = value;  	}  	else if (OUTPUT_DIR.Equals (key)) {  		outputDir = value;  	}  	else if (DATA_PREFIX.Equals (key)) {  		dataPrefix = value;  	}  	else if (MAPPING_CLASS.Equals (key)) {  		mappingClass = value;  	}  	else if (COPYRIGHT.Equals (key)) {  		copyright = value;  	}  	else if (LITE_BUILD.Equals (key) && ("true".Equals (value' StringComparison.OrdinalIgnoreCase) || "false".Equals (value' StringComparison.OrdinalIgnoreCase))) {  		liteBuild = "true".Equals (value' StringComparison.OrdinalIgnoreCase);  	}  	else {  		Console.WriteLine (HELP_MESSAGE);  		Console.WriteLine ("Illegal command line parameter: " + args [i]);  		return;  	}  }  
Magic Number,Google.PhoneNumbers.GenerateData,BuildMetadataProtoFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataProtoFromXml.cs,Main,The following statement contains a magic number: if (matcher.Success) {  	key = matcher.Groups [1].Value;  	value = matcher.Groups [2].Value;  }  
Magic Number,Google.PhoneNumbers.GenerateData,BuildMetadataProtoFromXml,C:\repos\dprotaso_Google.PhoneNumbers\Google.PhoneNumbers.GenerateData\BuildMetadataProtoFromXml.cs,Main,The following statement contains a magic number: value = matcher.Groups [2].Value;  
