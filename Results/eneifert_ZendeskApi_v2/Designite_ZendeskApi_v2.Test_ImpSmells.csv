Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateOptionsAndDeleteTaggerTicketField,The method has 9 parameters. Parameters: replaceNameSpaceWithUnderscore' name1' name1_Update' name2' name3' expectedName1' expectedName1_Update' expectedName2' expectedName3
Long Identifier,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetIncrementalOrganizationExport,The length of the parameter incrementalOrganizationExportNextPage is 37.
Long Identifier,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetIncrementalOrganizationExportAsync,The length of the parameter incrementalOrganizationExportNextPage is 37.
Long Identifier,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateAndDeleteTaggerTicketField,The length of the parameter replaceNameSpaceWithUnderscore is 30.
Long Identifier,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateOptionsAndDeleteTaggerTicketField,The length of the parameter replaceNameSpaceWithUnderscore is 30.
Long Statement,Tests,AutomationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\AutomationTests.cs,Init,The length of the statement  "                foreach (var automation in automations.Automations.Where(o => o.Title.Contains("Test Automation") || o.Title.Contains("Test Automation Updated") || o.Title.Contains("Test Automation1") || o.Title.Contains("Test Automation2"))) " is 226.
Long Statement,Tests,AutomationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\AutomationTests.cs,CanCreateUpdateAndDeleteAutomations,The length of the statement  "            automation.Conditions.All.Add(new All() { Field = "description_includes_word"' Operator = "is"' Value = "match_no_tickets" }); " is 126.
Long Statement,Tests,CoreTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\CoreTests.cs,CreatesUrisCorrectly,The length of the statement  "            var res = new ZendeskApi_v2.ZendeskApi("https://csharpapi.zendesk.com/api/v2"' Settings.AdminEmail' Settings.AdminPassword); " is 124.
Long Statement,Tests,CoreTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\CoreTests.cs,CreatesUrisCorrectly,The length of the statement  "            var api4 = new ZendeskApi_v2.ZendeskApi("http://csharpapi.zendesk.com/api/v2"' Settings.AdminEmail' Settings.AdminPassword); " is 124.
Long Statement,Tests,CoreTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\CoreTests.cs,CanUseTokenAccess,The length of the statement  "            var api = new ZendeskApi_v2.ZendeskApi("https://csharpapi.zendesk.com/api/v2"' Settings.AdminEmail' ""' Settings.ApiToken' "en-us"' null); " is 138.
Long Statement,Tests,CoreTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\CoreTests.cs,GivesCorrectException,The length of the statement  "                Assert.IsTrue(e.Message.Contains("Email: cannot be blank") && e.Data["jsonException"] != null && e.Data["jsonException"].ToString().Contains("Email: cannot be blank")); " is 168.
Long Statement,Tests,GroupTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\GroupTests.cs,CanGetIndividualGroupMemberships,The length of the statement  "            var res2 = api.Groups.GetGroupMembershipsByUserAndMembershipId(res1.GroupMembership.UserId' res.GroupMemberships[0].Id.Value); " is 126.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,OneTimeSetUp,The length of the statement  "            DeleteAllArticlesFromTestSection(); //Get rid of all articles in the test-section (there should be none but there could be if previous tests have failed) " is 153.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,OneTimeSetUp,The length of the statement  "            DeleteAllPostsFromTestTopic(); //Get rid of all posts in the test-topic (there should be none but there could be if previous tests have failed) " is 143.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticle,The length of the statement  "            var individualCommentsResponse1 = api.HelpCenter.Comments.CreateCommentForArticle(articleId' new Comment {Body = "Comment 1"' Locale = "en-us"}); " is 145.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticle,The length of the statement  "            var individualCommentsResponse2 = api.HelpCenter.Comments.CreateCommentForArticle(articleId' new Comment {Body = "Comment 2"' Locale = "en-us" }); " is 146.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticle,The length of the statement  "            var individualCommentsResponse3 = api.HelpCenter.Comments.CreateCommentForArticle(articleId' new Comment {Body = "Comment 3"' Locale = "en-us" }); " is 146.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticle,The length of the statement  "            var updateCommentForArticle = api.HelpCenter.Comments.UpdateCommentForArticle(articleId' individualCommentsResponse2.Comment); " is 126.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPost,The length of the statement  "            var individualCommentsResponse1 = api.HelpCenter.Comments.CreateCommentForPost(postId' new Comment { Body = "Comment 1" }); " is 123.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPost,The length of the statement  "            var individualCommentsResponse2 = api.HelpCenter.Comments.CreateCommentForPost(postId' new Comment { Body = "Comment 2" }); " is 123.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPost,The length of the statement  "            var individualCommentsResponse3 = api.HelpCenter.Comments.CreateCommentForPost(postId' new Comment { Body = "Comment 3" }); " is 123.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The length of the statement  "            var individualCommentsResponse1 = await api.HelpCenter.Comments.CreateCommentForArticleAsync(articleId' new Comment {Body = "Comment 1"' Locale = "en-us"}); " is 156.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The length of the statement  "            var individualCommentsResponse2 = await api.HelpCenter.Comments.CreateCommentForArticleAsync(articleId' new Comment {Body = "Comment 2"' Locale = "en-us" }); " is 157.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The length of the statement  "            var individualCommentsResponse3 = await api.HelpCenter.Comments.CreateCommentForArticleAsync(articleId' new Comment {Body = "Comment 3"' Locale = "en-us" }); " is 157.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The length of the statement  "            Assert.AreEqual(3' (await api.HelpCenter.Comments.GetCommentsForArticleAsync(articleId)).Count); //That article have 3 comments " is 127.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The length of the statement  "            var updateCommentForArticle = await api.HelpCenter.Comments.UpdateCommentForArticleAsync(articleId' individualCommentsResponse2.Comment); " is 137.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The length of the statement  "            Assert.AreEqual(2' (await api.HelpCenter.Comments.GetCommentsForArticleAsync(articleId)).Count); //One less comments now " is 120.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPostAsync,The length of the statement  "            var individualCommentsResponse1 = await api.HelpCenter.Comments.CreateCommentForPostAsync(postId' new Comment { Body = "Comment 1" }); " is 134.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPostAsync,The length of the statement  "            var individualCommentsResponse2 = await api.HelpCenter.Comments.CreateCommentForPostAsync(postId' new Comment { Body = "Comment 2" }); " is 134.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPostAsync,The length of the statement  "            var individualCommentsResponse3 = await api.HelpCenter.Comments.CreateCommentForPostAsync(postId' new Comment { Body = "Comment 3" }); " is 134.
Long Statement,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPostAsync,The length of the statement  "            var updateCommentForPost = await api.HelpCenter.Comments.UpdateCommentForPostAsync(postId' individualCommentsResponse2.Comment); " is 128.
Long Statement,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetMultipleOrganizationsByExternalId,The length of the statement  "            var orgs = api.Organizations.GetMultipleOrganizationsByExternalIds(new[] { org.Organization.ExternalId.ToString()' org2.Organization.ExternalId.ToString() }); " is 158.
Long Statement,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetIncrementalOrganizationExport,The length of the statement  "            var incrementalOrganizationExportNextPage = api.Organizations.GetIncrementalOrganizationExportNextPage(incrementalOrganizationExport.NextPage); " is 143.
Long Statement,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetIncrementalOrganizationExportAsync,The length of the statement  "            var incrementalOrganizationExport = await api.Organizations.GetIncrementalOrganizationExportAsync(DateTimeOffset.MinValue); " is 123.
Long Statement,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetIncrementalOrganizationExportAsync,The length of the statement  "            var incrementalOrganizationExportNextPage = await api.Organizations.GetIncrementalOrganizationExportNextPageAsync(incrementalOrganizationExport.NextPage); " is 154.
Long Statement,Tests,TargetTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TargetTests.cs,Init,The length of the statement  "                foreach (var target in targets.Targets.Where(o => o.Title.Contains("Test Email Target") || o.Title.Contains("Test Jira Target"))) " is 129.
Long Statement,Tests,TicketTestsPart2,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTestPart2.cs,CustomDropDownFieldSaveAsync,The length of the statement  "            Assert.That(ticket.CustomFields[0].Value' Is.EqualTo(newTicket.CustomFields.FirstOrDefault(x => x.Id == Settings.CustomDropDownId).Value)); " is 139.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPagedAsyncWithSideLoad,The length of the statement  "            var ticketsRes = api.Tickets.GetAssignedTicketsByUserIDAsync(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions); " is 124.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,BooleanCustomFieldValuesArePreservedOnUpdate,The length of the statement  "            Assert.AreEqual(ticket.CustomFields[1].Value' res.CustomFields.Where(f => f.Id == Settings.CustomBoolFieldId).FirstOrDefault().Value); " is 134.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,BooleanCustomFieldValuesArePreservedOnUpdate,The length of the statement  "            var updateResponse = api.Tickets.UpdateTicket(res' new Comment() { Body = "Just trying to update it!"' Public = true }); " is 120.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateAndDeleteTicket,The length of the statement  "            var updateResponse = api.Tickets.UpdateTicket(res' new Comment() { Body = body' Public = true' Uploads = new List<string>() }); " is 127.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateAndDeleteHTMLTicket,The length of the statement  "            var updateResponse = api.Tickets.UpdateTicket(res' new Comment() { HtmlBody = htmlBody' Public = true' Uploads = new List<string>() }); " is 135.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateOptionsAndDeleteTaggerTicketField,The length of the statement  "            // https://support.zendesk.com/hc/en-us/articles/204579973--BREAKING-Update-ticket-field-dropdown-fields-by-value-instead-of-id- " is 128.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The length of the statement  "                Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }' " is 358.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The length of the statement  "                Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }' " is 358.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The length of the statement  "                    Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' CreatedAt = DateTime.UtcNow.AddDays(-2)' Public = false }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' CreatedAt = DateTime.UtcNow.AddDays(-3)' Public = false } }' " is 358.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetBrandId,The length of the statement  "            var ticket = new Ticket { Comment = new Comment { Body = "This is a Brand id Test"' Public = false }' BrandId = brand.Id }; " is 123.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTickets,The length of the statement  "                new Ticket{ Subject = "ticket Test number 1"' Comment = new Comment() { Body = comment  }' Priority = TicketPriorities.Normal}' " is 127.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTickets,The length of the statement  "                new Ticket{ Subject ="ticket Test number 2"' Comment = new Comment{ Body = comment  }' Priority = TicketPriorities.Normal } " is 123.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTicketsAsync,The length of the statement  "                new Ticket{ Subject = "ticket Test number 1"' Comment = new Comment() { Body = comment  }' Priority = TicketPriorities.Normal}' " is 127.
Long Statement,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTicketsAsync,The length of the statement  "                new Ticket{ Subject ="ticket Test number 2"' Comment = new Comment{ Body = comment  }' Priority = TicketPriorities.Normal } " is 123.
Long Statement,Tests,TriggerTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TriggerTests.cs,Init,The length of the statement  "                foreach (var trigger in triggers.Triggers.Where(o => o.Title.Contains("Test Trigger") || o.Title.Contains("Test Trigger Updated") || o.Title.Contains("Test Trigger1") || o.Title.Contains("Test Trigger2"))) " is 205.
Long Statement,Tests,TriggerTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TriggerTests.cs,CanReorderTriggers,The length of the statement  "                Conditions = new Conditions() { All = new List<All>() { new All() { Field = "status"' Operator = "is"' Value = "open" } }' Any = new List<All>() }' " is 147.
Long Statement,Tests,TriggerTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TriggerTests.cs,CanReorderTriggers,The length of the statement  "                Conditions = new Conditions() { All = new List<All>() { new All() { Field = "status"' Operator = "is"' Value = "open" } }' Any = new List<All>() }' " is 147.
Long Statement,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetMultipleUsers,The length of the statement  "            var result = api.Users.GetMultipleUsers(userList' UserSideLoadOptions.Organizations | UserSideLoadOptions.Identities | UserSideLoadOptions.Roles); " is 146.
Long Statement,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetMultipleUsers,The length of the statement  "            Assert.IsTrue((result.Organizations != null && result.Organizations.Any()) || (result.Identities != null && result.Identities.Any())); " is 134.
Long Statement,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetMultipleUsersAsync,The length of the statement  "            Assert.IsTrue((result.Organizations != null && result.Organizations.Any()) || (result.Identities != null && result.Identities.Any())); " is 134.
Long Statement,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetIncrementalUserExportAsync,The length of the statement  "            var incrementalUserExportNextPage = await api.Users.GetIncrementalUserExportNextPageAsync(incrementalUserExport.NextPage); " is 122.
Long Statement,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetIncrementalUserExportAsyncWithSideLoadOptions,The length of the statement  "            var incrementalUserExport = await api.Users.GetIncrementalUserExportAsync(DateTimeOffset.MinValue' UserSideLoadOptions.Organizations | UserSideLoadOptions.Groups | UserSideLoadOptions.Identities); " is 196.
Long Statement,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetIncrementalUserExportAsyncWithSideLoadOptions,The length of the statement  "            var incrementalUserExportNextPage = await api.Users.GetIncrementalUserExportNextPageAsync(incrementalUserExport.NextPage); " is 122.
Long Statement,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBulkUpdateUsers,The length of the statement  "            var updateResp = await api.Users.BulkUpdateAsync(usersToUpdate.Select(u => u.Id.Value)' new User { Details = testDetails }); " is 124.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticleSideloadedWith,The length of the statement  "            var res = api.HelpCenter.Articles.GetArticles(ArticleSideLoadOptionsEnum.Sections | ArticleSideLoadOptionsEnum.Categories | ArticleSideLoadOptionsEnum.Users); " is 158.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticleSideloadedWithTranslations,The length of the statement  "            var res = api.HelpCenter.Articles.GetArticles(ArticleSideLoadOptionsEnum.Categories | ArticleSideLoadOptionsEnum.Sections | ArticleSideLoadOptionsEnum.Users | ArticleSideLoadOptionsEnum.Translations); " is 200.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticlesSorted,The length of the statement  "            var articlesAscending = api.HelpCenter.Articles.GetArticles(ArticleSideLoadOptionsEnum.None' new ArticleSortingOptions() { SortBy = ArticleSortEnum.Title }); " is 157.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticlesSorted,The length of the statement  "            var articlesDescending = api.HelpCenter.Articles.GetArticles(ArticleSideLoadOptionsEnum.None' new ArticleSortingOptions() { SortBy = ArticleSortEnum.Title' SortOrder = ArticleSortOrderEnum.Desc }); " is 197.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticlesSortedInASection,The length of the statement  "            var articlesAscending = api.HelpCenter.Articles.GetArticlesBySectionId(section.Id.Value' ArticleSideLoadOptionsEnum.None' " is 121.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticlesSortedInASection,The length of the statement  "            var articlesDescending = api.HelpCenter.Articles.GetArticlesBySectionId(section.Id.Value' ArticleSideLoadOptionsEnum.None' " is 122.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticlesSortedInACategory,The length of the statement  "            var articlesAscending = api.HelpCenter.Articles.GetArticlesByCategoryId(category.Id.Value' ArticleSideLoadOptionsEnum.None' new ArticleSortingOptions() { SortBy = ArticleSortEnum.Title }); " is 188.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticlesSortedInACategory,The length of the statement  "            var articlesDescending = api.HelpCenter.Articles.GetArticlesByCategoryId(category.Id.Value' ArticleSideLoadOptionsEnum.None' new ArticleSortingOptions() { SortBy = ArticleSortEnum.Title' SortOrder = ArticleSortOrderEnum.Desc }); " is 228.
Long Statement,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetSingleArticleWithTranslationsAsync,The length of the statement  "            var res = api.HelpCenter.Articles.GetArticleAsync(_articleIdWithComments' ArticleSideLoadOptionsEnum.Translations).Result; " is 122.
Long Statement,Tests.HelpCenter,CategoryTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CategoryTests.cs,Setup,The length of the statement  "                    categotriesResponse = await api.HelpCenter.Articles.GetByPageUrlAsync<GroupCategoryResponse>(categotriesResponse.NextPage' 100); " is 128.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The length of the statement  "            var usersSubscriptions = await api.Users.GetSubscriptionsAsync(Settings.UserId' SubscriptionSideLoadOptions.None' 100' 1); " is 122.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The length of the statement  "            var sectionResp = await api.HelpCenter.Sections.CreateSectionAsync(new Section { Name = SECTION_NAME' Locale = LOCALE' CategoryId = Settings.Category_ID }); " is 156.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The length of the statement  "            var articleResp = await api.HelpCenter.Articles.CreateArticleAsync(section.Id.Value' new Article { Title = ARTICLE_TITLE }); " is 124.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanGetArticleSubscriptionAsync,The length of the statement  "            var listResp = await api.HelpCenter.Articles.GetSubscriptionAsync(article.Id.Value' resp.Subscription.Id.Value' SubscriptionSideLoadOptions.Articles | SubscriptionSideLoadOptions.Sections); " is 189.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanGetArticlesSubscriptionAsync,The length of the statement  "            var listResp = await api.HelpCenter.Articles.GetSubscriptionsAsync(article.Id.Value' SubscriptionSideLoadOptions.Articles | SubscriptionSideLoadOptions.Sections); " is 162.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanDeleteArticleSubscriptionAsync,The length of the statement  "            Assert.That(await api.HelpCenter.Articles.DeleteSubscriptionAsync(article.Id.Value' resp.Subscription.Id.Value)' Is.True); " is 122.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanGetSectionSubscriptionAsync,The length of the statement  "            var listResp = await api.HelpCenter.Sections.GetSubscriptionAsync(section.Id.Value' resp.Subscription.Id.Value' SubscriptionSideLoadOptions.Sections); " is 150.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanDeleteSectionsSubscriptionAsync,The length of the statement  "            Assert.That(await api.HelpCenter.Sections.DeleteSubscriptionAsync(section.Id.Value' resp.Subscription.Id.Value)' Is.True); " is 122.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanListUserSubscriptionsAsync,The length of the statement  "            await api.HelpCenter.Articles.CreateSubscriptionAsync(article.Id.Value' new ArticleSubscription(LOCALE) { UserId = Settings.UserId }); " is 134.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanGetPostSubscriptionAsync,The length of the statement  "            var listResp = await api.HelpCenter.Posts.GetSubscriptionAsync(post.Id.Value' resp.Subscription.Id.Value' SubscriptionSideLoadOptions.Users); " is 141.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanCreateTopicSubscriptionAsync,The length of the statement  "            var resp = await api.HelpCenter.Topics.CreateSubscriptionAsync(topic.Id.Value' new Subscription { Locale = LOCALE' IncludeComments = true }); " is 141.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanGetTopicSubscriptionAsync,The length of the statement  "            var listResp = await api.HelpCenter.Topics.GetSubscriptionAsync(topic.Id.Value' resp.Subscription.Id.Value' SubscriptionSideLoadOptions.Users); " is 143.
Long Statement,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,CanUpdateTopicSubscriptionAsync,The length of the statement  "            var resp = await api.HelpCenter.Topics.CreateSubscriptionAsync(topic.Id.Value' new Subscription { Locale = LOCALE' IncludeComments = true }); " is 141.
Long Statement,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListAllEnabledLocales,The length of the statement  "            // note: FR was already enabled in the Zendesk settings' however it had to be enabled again in the help center preferences. " is 123.
Long Statement,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListAllEnabledLocalesAsync,The length of the statement  "            //note: FR was already enabled in the Zendesk settings' however it had to be enabled again in the help center preferences. " is 122.
Magic Number,Tests,AutomationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\AutomationTests.cs,CanCreateUpdateAndDeleteAutomations,The following statement contains a magic number: var automation = new Automation()              {                  Title = "Test Automation"'                  Active = true'                  Conditions = new Conditions() { All = new List<All>()' Any = new List<All>() }'                  Actions = new List<Action>()'                  Position = 9999              };
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticle,The following statement contains a magic number: Assert.AreEqual(3' api.HelpCenter.Comments.GetCommentsForArticle(articleId).Count);
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticle,The following statement contains a magic number: Assert.AreEqual(2' api.HelpCenter.Comments.GetCommentsForArticle(articleId).Count);
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPost,The following statement contains a magic number: Assert.AreEqual(3' api.HelpCenter.Comments.GetCommentsForPost(postId).Count);
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPost,The following statement contains a magic number: Assert.AreEqual(2' api.HelpCenter.Comments.GetCommentsForPost(postId).Count);
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The following statement contains a magic number: Assert.AreEqual(3' (await api.HelpCenter.Comments.GetCommentsForArticleAsync(articleId)).Count);
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForArticleAsync,The following statement contains a magic number: Assert.AreEqual(2' (await api.HelpCenter.Comments.GetCommentsForArticleAsync(articleId)).Count);
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPostAsync,The following statement contains a magic number: Assert.AreEqual(3' (await api.HelpCenter.Comments.GetCommentsForPostAsync(postId)).Count);
Magic Number,Tests,CommentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CommentTests.cs,CanCreateUpdateAndDeleteCommentsForPostAsync,The following statement contains a magic number: Assert.AreEqual(2' (await api.HelpCenter.Comments.GetCommentsForPostAsync(postId)).Count);
Magic Number,Tests,MacroTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\MacroTests.cs,CanGetMacroByID,The following statement contains a magic number: var macro = api.Macros.GetMacroById(45319945);
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanSearchForOrganizations,The following statement contains a magic number: var res = api.Organizations.GetOrganizationsStartingWith(Settings.DefaultOrg.Substring(0' 3));
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetMultipleOrganizations,The following statement contains a magic number: Assert.AreEqual(orgs.Organizations.Count' 2);
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanGetMultipleOrganizationsByExternalId,The following statement contains a magic number: Assert.AreEqual(orgs.Organizations.Count' 2);
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanCreateManyAndDeleteOrganizationMemberships,The following statement contains a magic number: var sleep = 2000;
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanCreateManyAndDeleteOrganizationMemberships,The following statement contains a magic number: sleep = (sleep < 64000 ? sleep *= 2 : 64000);
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanCreateManyAndDeleteOrganizationMemberships,The following statement contains a magic number: sleep = (sleep < 64000 ? sleep *= 2 : 64000);
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanCreateManyAndDeleteOrganizationMemberships,The following statement contains a magic number: sleep = (sleep < 64000 ? sleep *= 2 : 64000);
Magic Number,Tests,OrganizationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\OrganizationTests.cs,CanCreateManyAndDeleteOrganizationMemberships,The following statement contains a magic number: !job.Status.Equals("completed") && retries < 7
Magic Number,Tests,SatisfactionRatingTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SatisfactionRatingTests.cs,CanGetBadSatisfactionRatings,The following statement contains a magic number: var receivedSatisfactionRating = api.SatisfactionRatings.GetSatisfactionRatingById(360342335066);
Magic Number,Tests,SatisfactionRatingTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SatisfactionRatingTests.cs,CanGetGoodSatisfactionRatings,The following statement contains a magic number: var receivedSatisfactionRating = api.SatisfactionRatings.GetSatisfactionRatingById(360342335186);
Magic Number,Tests,ScheduleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ScheduleTests.cs,CanUpdateIntervals,The following statement contains a magic number: work.Intervals[0].StartTime = 1860;
Magic Number,Tests,ScheduleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ScheduleTests.cs,CanUpdateIntervals,The following statement contains a magic number: work.Intervals[0].EndTime = 2460;
Magic Number,Tests,ScheduleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ScheduleTests.cs,CanCreateUpdateAndDeleteHoliday,The following statement contains a magic number: var res2 = api.Schedules.CreateHoliday(res.Schedule.Id.Value' new Holiday()              {                  Name = "Test Holiday"'                  StartDate = DateTimeOffset.UtcNow.AddDays(1).Date'                  EndDate = DateTimeOffset.UtcNow.AddDays(2).Date              });
Magic Number,Tests,ScheduleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ScheduleTests.cs,CanCreateUpdateAndDeleteHoliday,The following statement contains a magic number: res2.Holiday.EndDate = DateTimeOffset.UtcNow.AddDays(3).Date;
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,TotalNumberOftickesShouldbeSameWhenReterivingNextPage,The following statement contains a magic number: res = api.Search.SearchFor("Effective"' page: 2);
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,TicketSearchByTicketAnonymousType,The following statement contains a magic number: Assert.Greater(res.Results.Count' 10);
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,TicketSearchByTicketAnonymousType,The following statement contains a magic number: res = api.Search.SearchFor<Ticket>("my printer is on fire"' perPage: 10);
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,TicketSearchByTicketAnonymousType,The following statement contains a magic number: Assert.AreEqual(res.Results.Count' 10);
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,TicketSearchByTicketAnonymousTypeAsync,The following statement contains a magic number: Assert.Greater(res.Results.Count' 10);
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,TicketSearchByTicketAnonymousTypeAsync,The following statement contains a magic number: res = await api.Search.SearchForAsync<Ticket>("my printer is on fire"' perPage: 10);
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,TicketSearchByTicketAnonymousTypeAsync,The following statement contains a magic number: Assert.AreEqual(res.Results.Count' 10);
Magic Number,Tests,SearchTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\SearchTests.cs,SearchSortIsWorking,The following statement contains a magic number: Assert.IsTrue(res.Count > 2);
Magic Number,Tests,TagTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TagTests.cs,CanAutocompleteTags,The following statement contains a magic number: var auto = api.Tags.AutocompleteTags(res.Tags[0].Name.Substring(0' 3));
Magic Number,Tests,TicketTestsPart2,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTestPart2.cs,CanBatchUpdateTickets,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Tests,TicketTestsPart2,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTestPart2.cs,CanBatchUpdateTickets,The following statement contains a magic number: job.JobStatus.Status.ToLower() != "completed" && count < 10
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTickets,The following statement contains a magic number: var count = 50;
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsPaged,The following statement contains a magic number: const int count = 50;
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsPaged,The following statement contains a magic number: const int page = 3;
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByOrganizationIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByOrganizationID(id' 2' 3);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByOrganizationIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByOrganizationID(id' 2' 3);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByOrganizationIdPaged,The following statement contains a magic number: Assert.AreEqual(3' ticketsRes.PageSize);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByOrganizationIdPaged,The following statement contains a magic number: Assert.AreEqual(3' ticketsRes.Tickets.Count);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByViewIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByViewID(Settings.ViewId' 10' 2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByViewIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByViewID(Settings.ViewId' 10' 2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByViewIdPaged,The following statement contains a magic number: Assert.AreEqual(10' ticketsRes.PageSize);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByViewIdPaged,The following statement contains a magic number: Assert.AreEqual(10' ticketsRes.Tickets.Count);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByViewIdPagedWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByViewID(Settings.ViewId' 10' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketsByViewIdPagedWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByViewID(Settings.ViewId' 10' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByUserID(Settings.UserId' 5' 2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByUserID(Settings.UserId' 5' 2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPaged,The following statement contains a magic number: Assert.AreEqual(5' ticketsRes.PageSize);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPaged,The following statement contains a magic number: Assert.AreEqual(5' ticketsRes.Tickets.Count);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPagedWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByUserID(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPagedWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByUserID(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPagedAsyncWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByUserIDAsync(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanTicketsByUserIdPagedAsyncWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetTicketsByUserIDAsync(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetAssignedTicketsByUserID(Settings.UserId' 5' 2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPaged,The following statement contains a magic number: var ticketsRes = api.Tickets.GetAssignedTicketsByUserID(Settings.UserId' 5' 2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPaged,The following statement contains a magic number: Assert.AreEqual(5' ticketsRes.PageSize);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPaged,The following statement contains a magic number: Assert.AreEqual(5' ticketsRes.Tickets.Count);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPagedWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetAssignedTicketsByUserID(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPagedWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetAssignedTicketsByUserID(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPagedAsyncWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetAssignedTicketsByUserIDAsync(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanAssignedTicketsByUserIdPagedAsyncWithSideLoad,The following statement contains a magic number: var ticketsRes = api.Tickets.GetAssignedTicketsByUserIDAsync(Settings.UserId' 5' 2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketComments,The following statement contains a magic number: var comments = api.Tickets.GetTicketComments(2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketHTMLComments,The following statement contains a magic number: var comments = api.Tickets.GetTicketComments(2);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketCommentsWithSideLoading,The following statement contains a magic number: var comments = api.Tickets.GetTicketComments(2' sideLoadOptions: ticketSideLoadOptions);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketCommentsPaged,The following statement contains a magic number: const int perPage = 5;
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketCommentsPaged,The following statement contains a magic number: const int page = 2;
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetTicketCommentsPaged,The following statement contains a magic number: var commentsRes = api.Tickets.GetTicketComments(2' perPage' page);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateOptionsAndDeleteTaggerTicketField,The following statement contains a magic number: Assert.That(res.TicketField.CustomFieldOptions.Count' Is.EqualTo(2));
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateOptionsAndDeleteTaggerTicketField,The following statement contains a magic number: Assert.That(resU.TicketField.CustomFieldOptions.Count' Is.EqualTo(2));
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateAndDeleteTicketForms,The following statement contains a magic number: var res = api.Tickets.CreateTicketForm(new TicketForm()              {                  Name = "Snowboard Problem"'                  EndUserVisible = true'                  DisplayName = "Snowboard Damage"'                  Position = 2'                  Active = true'                  Default = false              });
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetAllTicketMetrics,The following statement contains a magic number: var count = 50;
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The following statement contains a magic number: Assert.Less(res.CreatedAt.Value.LocalDateTime' DateTime.Now.AddDays(-4));
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicket,The following statement contains a magic number: Assert.AreEqual(resComments.Count' 3);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The following statement contains a magic number: var ticket = new TicketImport()              {                  Subject = "my printer is on fire"'                  Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-2) }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' Public = false' CreatedAt = DateTime.UtcNow.AddDays(-3) } }'                  Priority = TicketPriorities.Urgent'                  CreatedAt = DateTime.Now.AddDays(-5)'                  UpdatedAt = DateTime.Now.AddDays(-4)'                  SolvedAt = DateTime.Now.AddDays(-3)'                  Status = TicketStatus.Solved'                  AssigneeId = Settings.UserId'                  Description = "test description"              };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The following statement contains a magic number: Assert.Less(res.Result.Ticket.CreatedAt.Value.LocalDateTime' DateTime.Now.AddDays(-4));
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanImportTicketAsync,The following statement contains a magic number: Assert.AreEqual(resComments.Count' 3);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: var ticket = new TicketImport()                  {                      Subject = "my printer is on fire"'                      Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' CreatedAt = DateTime.UtcNow.AddDays(-2)' Public = false }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' CreatedAt = DateTime.UtcNow.AddDays(-3)' Public = false } }'                      Priority = TicketPriorities.Urgent'                      CreatedAt = DateTime.Now.AddDays(-5)'                      UpdatedAt = DateTime.Now.AddDays(-4)'                      SolvedAt = DateTime.Now.AddDays(-3)'                      Status = TicketStatus.Solved'                      AssigneeId = Settings.UserId'                      Description = "test description"                  };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: var ticket = new TicketImport()                  {                      Subject = "my printer is on fire"'                      Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' CreatedAt = DateTime.UtcNow.AddDays(-2)' Public = false }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' CreatedAt = DateTime.UtcNow.AddDays(-3)' Public = false } }'                      Priority = TicketPriorities.Urgent'                      CreatedAt = DateTime.Now.AddDays(-5)'                      UpdatedAt = DateTime.Now.AddDays(-4)'                      SolvedAt = DateTime.Now.AddDays(-3)'                      Status = TicketStatus.Solved'                      AssigneeId = Settings.UserId'                      Description = "test description"                  };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: var ticket = new TicketImport()                  {                      Subject = "my printer is on fire"'                      Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' CreatedAt = DateTime.UtcNow.AddDays(-2)' Public = false }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' CreatedAt = DateTime.UtcNow.AddDays(-3)' Public = false } }'                      Priority = TicketPriorities.Urgent'                      CreatedAt = DateTime.Now.AddDays(-5)'                      UpdatedAt = DateTime.Now.AddDays(-4)'                      SolvedAt = DateTime.Now.AddDays(-3)'                      Status = TicketStatus.Solved'                      AssigneeId = Settings.UserId'                      Description = "test description"                  };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: var ticket = new TicketImport()                  {                      Subject = "my printer is on fire"'                      Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' CreatedAt = DateTime.UtcNow.AddDays(-2)' Public = false }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' CreatedAt = DateTime.UtcNow.AddDays(-3)' Public = false } }'                      Priority = TicketPriorities.Urgent'                      CreatedAt = DateTime.Now.AddDays(-5)'                      UpdatedAt = DateTime.Now.AddDays(-4)'                      SolvedAt = DateTime.Now.AddDays(-3)'                      Status = TicketStatus.Solved'                      AssigneeId = Settings.UserId'                      Description = "test description"                  };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: var ticket = new TicketImport()                  {                      Subject = "my printer is on fire"'                      Comments = new List<TicketImportComment> { new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 1"' CreatedAt = DateTime.UtcNow.AddDays(-2)' Public = false }' new TicketImportComment { AuthorId = Settings.UserId' Value = "HELP comment created in Import 2"' CreatedAt = DateTime.UtcNow.AddDays(-3)' Public = false } }'                      Priority = TicketPriorities.Urgent'                      CreatedAt = DateTime.Now.AddDays(-5)'                      UpdatedAt = DateTime.Now.AddDays(-4)'                      SolvedAt = DateTime.Now.AddDays(-3)'                      Status = TicketStatus.Solved'                      AssigneeId = Settings.UserId'                      Description = "test description"                  };
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: x < 2
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: job.JobStatus.Status.ToLower() != "completed" && count < 10
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanBulkImportTicket,The following statement contains a magic number: Assert.AreEqual(resComments.Count' 3);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,TicketField,The following statement contains a magic number: Assert.That(res.TicketField.CustomFieldOptions.Count' Is.EqualTo(2));
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateOptionsAndDeleteTaggerTicketFieldAsync,The following statement contains a magic number: Assert.That(res.TicketField.CustomFieldOptions.Count' Is.EqualTo(2));
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateUpdateOptionsAndDeleteTaggerTicketFieldAsync,The following statement contains a magic number: Assert.That(resU.TicketField.CustomFieldOptions.Count' Is.EqualTo(2));
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanGetSystemFieldOptions,The following statement contains a magic number: var resp = await api.Tickets.GetTicketFieldByIdAsync(21830872);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTickets,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTickets,The following statement contains a magic number: job.JobStatus.Status.ToLower() != "completed" && count < 10
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTicketsAsync,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Tests,TicketTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TicketTests.cs,CanCreateManyTicketsAsync,The following statement contains a magic number: job.JobStatus.Status.ToLower() != "completed" && count < 10
Magic Number,Tests,TriggerTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TriggerTests.cs,CanCreateUpdateAndDeleteTriggers,The following statement contains a magic number: var trigger = new Trigger()              {                  Title = "Test Trigger"'                  Active = true'                  Conditions = new Conditions() { All = new List<All>()' Any = new List<All>() }'                  Actions = new List<Action>()'                  Position = 9999              };
Magic Number,Tests,TriggerTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TriggerTests.cs,CanReorderTriggers,The following statement contains a magic number: var trigger = new Trigger()              {                  Title = "Test Trigger1"'                  Active = true'                  Conditions = new Conditions() { All = new List<All>() { new All() { Field = "status"' Operator = "is"' Value = "open" } }' Any = new List<All>() }'                  Actions = new List<Action>() { new Action() { Field = "group_id"' Value = "20402842" } }'                  Position = 5000              };
Magic Number,Tests,TriggerTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\TriggerTests.cs,CanReorderTriggers,The following statement contains a magic number: var trigger2 = new Trigger()              {                  Title = "Test Trigger2"'                  Active = true'                  Conditions = new Conditions() { All = new List<All>() { new All() { Field = "status"' Operator = "is"' Value = "open" } }' Any = new List<All>() }'                  Actions = new List<Action>() { new Action() { Field = "group_id"' Value = "20402842" } }'                  Position = 6000              };
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetUserByCustomField,The following statement contains a magic number: Assert.AreEqual(1158278453' user.Id);
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetUsersInOrgPaginated,The following statement contains a magic number: i < 5
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetUsersInOrgPaginated,The following statement contains a magic number: var res = api.Users.GetUsersInOrganization(Settings.OrganizationId' 3' 0);
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetUsersInOrgPaginated,The following statement contains a magic number: Assert.That(res.Users.Count' Is.EqualTo(3));
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanMergeUsersAsync,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetMultipleUsers,The following statement contains a magic number: var userList = api.Users.GetAllUsers(10' 1).Users.Select(u => u.Id.Value).ToList();
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetMultipleUsersAsync,The following statement contains a magic number: var userList = api.Users.GetAllUsersAsync(10' 1).Result.Users.Select(u => u.Id.Value).ToList();
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBulkDeleteUsersAsync,The following statement contains a magic number: i < 2
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBulkDeleteUsersAsync,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBulkDeleteUsers,The following statement contains a magic number: i < 2
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBulkDeleteUsers,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanGetRolesAndAbilities,The following statement contains a magic number: var userList = api.Users.GetAllUsers(10' 1).Users.Select(u => u.Id.Value).ToList();
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBatchUpdateUsers,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBatchUpdateUsers,The following statement contains a magic number: job.JobStatus.Status.ToLower() != "completed" && count < 10
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBulkUpdateUsers,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Tests,UserTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\UserTests.cs,CanBulkUpdateUsers,The following statement contains a magic number: job.JobStatus.Status.ToLower() != "completed" && count < 10
Magic Number,Tests,ViewTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ViewTests.cs,CanExecuteViews,The following statement contains a magic number: var res = api.Views.ExecuteView(31559032);
Magic Number,Tests,ViewTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ViewTests.cs,CanExecutePagedView,The following statement contains a magic number: var res = api.Views.ExecuteView(Settings.ViewId' ""' true' 25' 2);
Magic Number,Tests,ViewTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ViewTests.cs,CanExecutePagedView,The following statement contains a magic number: var res = api.Views.ExecuteView(Settings.ViewId' ""' true' 25' 2);
Magic Number,Tests,ViewTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\ViewTests.cs,CanExecutePagedView,The following statement contains a magic number: Assert.AreEqual(25' res.Rows.Count);
Magic Number,Tests,VoiceTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\VoiceTests.cs,GetAllAgentAvailability,The following statement contains a magic number: Assert.AreEqual(2110053086' agent.AgentId);
Magic Number,Tests,VoiceTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\VoiceTests.cs,GetAllAgentAvailabilityAsync,The following statement contains a magic number: Assert.AreEqual(2110053086' agent.AgentId);
Magic Number,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticleByCategoryWithSideloadedSections,The following statement contains a magic number: var firstCategory = api.HelpCenter.Categories.GetCategoryById(200382245).Category;
Magic Number,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetArticlesSortedInACategory,The following statement contains a magic number: var category = api.HelpCenter.Categories.GetCategoryById(200382245).Category;
Magic Number,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanCreateUpdateAndDeleteArticles,The following statement contains a magic number: var res = api.HelpCenter.Articles.CreateArticle(resSections.Sections[0].Id.Value' new Article()              {                  Title = "My Test article"'                  Body = "The body of my article"'                  Locale = "en-us"'                  PermissionGroupId = 221866'              });
Magic Number,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanCreateUpdateAndDeleteArticlesAsync,The following statement contains a magic number: var res = await api.HelpCenter.Articles.CreateArticleAsync(resSections.Sections[0].Id.Value' new Article              {                  Title = "My Test article"'                  Body = "The body of my article"'                  Locale = "en-us"'                  PermissionGroupId = 221866              });
Magic Number,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetSecondPageUisngGetByPageUrl,The following statement contains a magic number: var pageSize = 3;
Magic Number,Tests.HelpCenter,ArticleTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\ArticleTests.cs,CanGetSecondPageUisngGetByPageUrl,The following statement contains a magic number: Assert.That(resp.Page' Is.EqualTo(2));
Magic Number,Tests.HelpCenter,CategoryTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CategoryTests.cs,Setup,The following statement contains a magic number: categotriesResponse = await api.HelpCenter.Articles.GetByPageUrlAsync<GroupCategoryResponse>(categotriesResponse.NextPage' 100);
Magic Number,Tests.HelpCenter,CategoryTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\CategoryTests.cs,CanCreateUpdateAndDeleteCategories,The following statement contains a magic number: res.Category.Position = 2;
Magic Number,Tests.HelpCenter,PostTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\PostTests.cs,setup,The following statement contains a magic number: var res = api.HelpCenter.Posts.GetPostsByTopicId(Settings.Topic_ID' 100);
Magic Number,Tests.HelpCenter,SectionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SectionTests.cs,CanCreateUpdateAndDeleteSections,The following statement contains a magic number: long category_id = 200382245;
Magic Number,Tests.HelpCenter,SectionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SectionTests.cs,CanCreateUpdateAndDeleteSections,The following statement contains a magic number: var res = api.HelpCenter.Sections.CreateSection(new Section              {                  Name = "My Test section"'                  Position = 12'                  CategoryId = category_id              });
Magic Number,Tests.HelpCenter,SectionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SectionTests.cs,CanCreateUpdateAndDeleteSections,The following statement contains a magic number: res.Section.Position = 42;
Magic Number,Tests.HelpCenter,SectionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SectionTests.cs,CanCreateUpdateAndDeleteSectionsAsync,The following statement contains a magic number: long category_id = 200382245;
Magic Number,Tests.HelpCenter,SectionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SectionTests.cs,CanCreateUpdateAndDeleteSectionsAsync,The following statement contains a magic number: var res = await api.HelpCenter.Sections.CreateSectionAsync(new Section              {                  Name = "My Test section"'                  Position = 12'                  CategoryId = category_id              });
Magic Number,Tests.HelpCenter,SectionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SectionTests.cs,CanCreateUpdateAndDeleteSectionsAsync,The following statement contains a magic number: res.Section.Position = 42;
Magic Number,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The following statement contains a magic number: articlesResp = await api.HelpCenter.Articles.GetByPageUrlAsync<ArticleSearchResults>(articlesResp.NextPage' 100);
Magic Number,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The following statement contains a magic number: sectionsResp = await api.HelpCenter.Articles.GetByPageUrlAsync<GroupSectionResponse>(sectionsResp.NextPage' 100);
Magic Number,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The following statement contains a magic number: var usersSubscriptions = await api.Users.GetSubscriptionsAsync(Settings.UserId' SubscriptionSideLoadOptions.None' 100' 1);
Magic Number,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The following statement contains a magic number: usersSubscriptions = await api.Users.GetByPageUrlAsync<GroupSubscriptionsResponse>(usersSubscriptions.NextPage' 100);
Magic Number,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The following statement contains a magic number: await Task.Delay(10);
Magic Number,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListTranslations,The following statement contains a magic number: Assert.AreEqual(2' res.Count);
Magic Number,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListTranslations,The following statement contains a magic number: Assert.AreEqual(2' res.Count);
Magic Number,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListTranslations,The following statement contains a magic number: Assert.AreEqual(2' res.Count);
Magic Number,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListTranslationsAsync,The following statement contains a magic number: Assert.That(res.Count' Is.EqualTo(2));
Magic Number,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListTranslationsAsync,The following statement contains a magic number: Assert.That(res.Count' Is.EqualTo(2));
Magic Number,Tests.HelpCenter,TranslationTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\TranslationTests.cs,CanListTranslationsAsync,The following statement contains a magic number: Assert.That(res.Count' Is.EqualTo(2));
Magic Number,Tests.HelpCenter,UserSegmentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\UserSegmentTests.cs,CanGetSecondPageUisngGetByPageUrl,The following statement contains a magic number: var pageSize = 3;
Magic Number,Tests.HelpCenter,UserSegmentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\UserSegmentTests.cs,CanGetSecondPageUisngGetByPageUrl,The following statement contains a magic number: Assert.That(resp.Page' Is.EqualTo(2));
Magic Number,Tests.HelpCenter,UserSegmentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\UserSegmentTests.cs,CanGetSecondPageUisngGetByPageUrlAsync,The following statement contains a magic number: var pageSize = 3;
Magic Number,Tests.HelpCenter,UserSegmentTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\UserSegmentTests.cs,CanGetSecondPageUisngGetByPageUrlAsync,The following statement contains a magic number: Assert.That(resp.Page' Is.EqualTo(2));
Magic Number,Tests.Models.Voice,FromTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\Models\Voice\FromTests.cs,DeserializeAllFieldsTest,The following statement contains a magic number: Assert.That(from.CurrentQueueActivity.AgentsOnline' Is.EqualTo(3));
Magic Number,Tests.Models.Voice,FromTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\Models\Voice\FromTests.cs,DeserializeAllFieldsTest,The following statement contains a magic number: Assert.That(from.CurrentQueueActivity.CallsWaiting' Is.EqualTo(13));
Magic Number,Tests.Models.Voice,FromTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\Models\Voice\FromTests.cs,DeserializeAllFieldsTest,The following statement contains a magic number: Assert.That(from.CurrentQueueActivity.CallbacksWaiting' Is.EqualTo(7));
Magic Number,Tests.Models.Voice,FromTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\Models\Voice\FromTests.cs,DeserializeAllFieldsTest,The following statement contains a magic number: Assert.That(from.CurrentQueueActivity.AverageWaitTime' Is.EqualTo(142));
Magic Number,Tests.Models.Voice,FromTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\Models\Voice\FromTests.cs,DeserializeAllFieldsTest,The following statement contains a magic number: Assert.That(from.CurrentQueueActivity.LongestWaitTime' Is.EqualTo(387));
Missing Default,Tests.HelpCenter,SubscriptionTests,D:\research\architectureSmells\repos\eneifert_ZendeskApi_v2\test\ZendeskApi_v2.Test\HelpCenter\SubscriptionTests.cs,SetupAsync,The following switch statement is missing a default case: switch (subscription.ContentType)                      {                          case "Article":                              await api.HelpCenter.Articles.DeleteSubscriptionAsync(subscription.ContentId' subscription.Id.Value);                              break;                          case "Section":                              await api.HelpCenter.Sections.DeleteSubscriptionAsync(subscription.ContentId' subscription.Id.Value);                              break;                          case "Post":                              await api.HelpCenter.Posts.DeleteSubscriptionAsync(subscription.ContentId' subscription.Id.Value);                              break;                          case "Topic":                              await api.HelpCenter.Topics.DeleteSubscriptionAsync(subscription.ContentId' subscription.Id.Value);                              break;                      }
