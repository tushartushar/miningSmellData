Implementation smell,Namespace,Class,File,Method,Description
Long Method,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,initEntities,The method has 257 lines of code.
Long Method,WebSocketSharp.Net,WebHeaderCollection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\WebHeaderCollection.cs,WebHeaderCollection,The method has 441 lines of code.
Complex Method,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,SplitHeaderValue,Cyclomatic complexity of the method is 9
Complex Method,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,TryCreateWebSocketUri,Cyclomatic complexity of the method is 8
Complex Method,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,Cyclomatic complexity of the method is 46
Complex Method,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,concatenateFragmentsInto,Cyclomatic complexity of the method is 8
Complex Method,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,createHandshakeRequest,Cyclomatic complexity of the method is 9
Complex Method,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,Cyclomatic complexity of the method is 9
Complex Method,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,Cyclomatic complexity of the method is 11
Complex Method,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,setChunkSize,Cyclomatic complexity of the method is 12
Complex Method,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,write,Cyclomatic complexity of the method is 10
Complex Method,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,toResponseStringVersion1,Cyclomatic complexity of the method is 10
Complex Method,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,ToRequestString,Cyclomatic complexity of the method is 8
Complex Method,WebSocketSharp.Net,CookieCollection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\CookieCollection.cs,parseRequest,Cyclomatic complexity of the method is 15
Complex Method,WebSocketSharp.Net,CookieCollection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\CookieCollection.cs,parseResponse,Cyclomatic complexity of the method is 31
Complex Method,WebSocketSharp.Net,EndPointListener,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointListener.cs,searchListener,Cyclomatic complexity of the method is 12
Complex Method,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,onRead,Cyclomatic complexity of the method is 10
Complex Method,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,AddHeader,Cyclomatic complexity of the method is 11
Complex Method,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,FinishInitialization,Cyclomatic complexity of the method is 9
Complex Method,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,Cyclomatic complexity of the method is 19
Complex Method,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,CreateRequestUrl,Cyclomatic complexity of the method is 9
Complex Method,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecodeInternally,Cyclomatic complexity of the method is 10
Complex Method,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,HtmlDecode,Cyclomatic complexity of the method is 20
Complex Method,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,HtmlEncode,Cyclomatic complexity of the method is 11
Complex Method,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecode,Cyclomatic complexity of the method is 9
Complex Method,WebSocketSharp.Net,ListenerPrefix,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerPrefix.cs,CheckUriPrefix,Cyclomatic complexity of the method is 10
Complex Method,WebSocketSharp.Net,RequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\RequestStream.cs,fillFromBuffer,Cyclomatic complexity of the method is 12
Complex Method,WebSocketSharp.Net,ChunkedRequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkedRequestStream.cs,BeginRead,Cyclomatic complexity of the method is 8
Long Parameter List,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,readBytes,The method has 5 parameters. Parameters: stream' buffer' offset' length' dest
Long Parameter List,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetWebSocketContext,The method has 5 parameters. Parameters: client' protocol' secure' cert' logger
Long Parameter List,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,WebSocketFrame,The method has 5 parameters. Parameters: fin' opcode' mask' payload' compressed
Long Parameter List,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,CreateFrame,The method has 5 parameters. Parameters: fin' opcode' mask' data' compressed
Long Parameter List,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The method has 5 parameters. Parameters: i' j' k' l' m
Long Parameter List,WebSocketSharp.Net,EndPointListener,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointListener.cs,EndPointListener,The method has 5 parameters. Parameters: address' port' secure' certFolderPath' defaultCert
Long Parameter List,WebSocketSharp.Net,RequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\RequestStream.cs,RequestStream,The method has 5 parameters. Parameters: stream' buffer' offset' length' contentlength
Long Parameter List,WebSocketSharp.Net,RequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\RequestStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,WebSocketSharp.Net,RequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\RequestStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,WebSocketSharp.Net,ResponseStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ResponseStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,WebSocketSharp.Net,ResponseStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ResponseStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,WebSocketSharp.Net,WebHeaderCollection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\WebHeaderCollection.cs,doWithCheckingState,The method has 5 parameters. Parameters: action' name' value' response' setState
Long Parameter List,WebSocketSharp.Net,ChunkedRequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkedRequestStream.cs,ChunkedRequestStream,The method has 5 parameters. Parameters: context' stream' buffer' offset' length
Long Parameter List,WebSocketSharp.Net,ChunkedRequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkedRequestStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,WebSocketSharp.Net,AuthenticationResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationResponse.cs,createA1,The method has 5 parameters. Parameters: username' password' realm' nonce' cnonce
Long Parameter List,WebSocketSharp.Net.WebSockets,TcpListenerWebSocketContext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\WebSockets\TcpListenerWebSocketContext.cs,TcpListenerWebSocketContext,The method has 5 parameters. Parameters: client' protocol' secure' cert' logger
Long Identifier,WebSocketSharp.Net.Security,SslStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Security\SslStream.cs,SslStream,The length of the parameter userCertificateValidationCallback is 33.
Long Identifier,WebSocketSharp.Net.Security,SslStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Security\SslStream.cs,SslStream,The length of the parameter userCertificateValidationCallback is 33.
Long Identifier,WebSocketSharp.Net.Security,SslStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Security\SslStream.cs,SslStream,The length of the parameter userCertificateSelectionCallback is 32.
Complex Conditional,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,TryCreateWebSocketUri,The conditional expression  "(scheme == "ws" && port == 443) || (scheme == "wss" && port == 80)"  is complex.
Complex Conditional,WebSocketSharp,WebSocketStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketStream.cs,readHandshakeHeaders,The conditional expression  "stream.ReadByte ().EqualsWith ('\r'' add) &&              stream.ReadByte ().EqualsWith ('\n'' add) &&              stream.ReadByte ().EqualsWith ('\r'' add) &&              stream.ReadByte ().EqualsWith ('\n'' add)"  is complex.
Complex Conditional,WebSocketSharp.Net,CookieCollection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\CookieCollection.cs,searchCookie,The conditional expression  "c.Name.Equals (name' StringComparison.InvariantCultureIgnoreCase) &&              c.Path.Equals (path' StringComparison.InvariantCulture) &&              c.Domain.Equals (domain' StringComparison.InvariantCultureIgnoreCase) &&              c.Version == version"  is complex.
Complex Conditional,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,Close,The conditional expression  "req.KeepAlive &&                !res.CloseConnection &&                req.FlushInput () &&                (!_chunked || (_chunked && !res.ForceCloseChunked))"  is complex.
Complex Conditional,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The conditional expression  "parts [2].Length != 8 ||            !parts [2].StartsWith ("HTTP/") ||            !tryCreateVersion (parts [2].Substring (5)' out _version) ||            _version.Major < 1"  is complex.
Complex Conditional,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlEncodeChar,The conditional expression  "(c < '0') ||            (c < 'A' && c > '9') ||            (c > 'Z' && c < 'a') ||            (c > 'z')"  is complex.
Complex Conditional,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,CreateRequestUrl,The conditional expression  "requestUri == null || requestUri.Length == 0 || host == null || host.Length == 0"  is complex.
Complex Conditional,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,ParseQueryStringInternally,The conditional expression  "query == null || (len = query.Length) == 0 || (len == 1 && query [0] == '?')"  is complex.
Complex Conditional,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,HtmlEncode,The conditional expression  "c == '&' || c == '"' || c == '<' || c == '>' || c > 159"  is complex.
Complex Conditional,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlEncode,The conditional expression  "(c < '0') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a') || (c > 'z')"  is complex.
Empty Catch Block,WebSocketSharp.Net,EndPointListener,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointListener.cs,getCertificate,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,closeSocket,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,disposeTimer,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,SendError,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,HttpListenerContext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerContext.cs,SetUser,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,ListenerAsyncResult,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerAsyncResult.cs,invokeCallback,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,ResponseStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ResponseStream.cs,WriteInternally,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,ResponseStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ResponseStream.cs,EndWrite,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net,AuthenticationResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationResponse.cs,Parse,The method has an empty catch block.
Empty Catch Block,WebSocketSharp.Net.WebSockets,TcpListenerWebSocketContext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\WebSockets\TcpListenerWebSocketContext.cs,SetUser,The method has an empty catch block.
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,Append,The following statement contains a magic number: buffer.Write (tmp' 0' 2);
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,CheckIfValidControlData,The following statement contains a magic number: return data.Length > 125               ? String.Format ("'{0}' length must be less."' paramName)               : null;
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,CopyTo,The following statement contains a magic number: var bufferLen = 256;
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,EqualsWith,The following statement contains a magic number: value < 0 || value > 255
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,IsPortNumber,The following statement contains a magic number: return value > 0 && value < 65536;
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,SplitHeaderValue,The following statement contains a magic number: var buffer = new StringBuilder (32);
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,TryCreateWebSocketUri,The following statement contains a magic number: port > 65535
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,TryCreateWebSocketUri,The following statement contains a magic number: (scheme == "ws" && port == 443) || (scheme == "wss" && port == 80)
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,TryCreateWebSocketUri,The following statement contains a magic number: (scheme == "ws" && port == 443) || (scheme == "wss" && port == 80)
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,IsCloseStatusCode,The following statement contains a magic number: return value > 999 && value < 5000;
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,IsCloseStatusCode,The following statement contains a magic number: return value > 999 && value < 5000;
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,IsPredefinedScheme,The following statement contains a magic number: value == null || value.Length < 2
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,MaybeUri,The following statement contains a magic number: i >= 10
Magic Number,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,ToString,The following statement contains a magic number: var buffer = new StringBuilder (64);
Magic Number,WebSocketSharp,CloseEventArgs,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\CloseEventArgs.cs,CloseEventArgs,The following statement contains a magic number: _code = len > 1                ? data.SubArray (0' 2).ToUInt16 (ByteOrder.Big)                : (ushort) CloseStatusCode.NoStatusCode;
Magic Number,WebSocketSharp,CloseEventArgs,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\CloseEventArgs.cs,CloseEventArgs,The following statement contains a magic number: _reason = len > 2                  ? Encoding.UTF8.GetString (data.SubArray (2' len - 2))                  : String.Empty;
Magic Number,WebSocketSharp,CloseEventArgs,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\CloseEventArgs.cs,CloseEventArgs,The following statement contains a magic number: _reason = len > 2                  ? Encoding.UTF8.GetString (data.SubArray (2' len - 2))                  : String.Empty;
Magic Number,WebSocketSharp,CloseEventArgs,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\CloseEventArgs.cs,CloseEventArgs,The following statement contains a magic number: _reason = len > 2                  ? Encoding.UTF8.GetString (data.SubArray (2' len - 2))                  : String.Empty;
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,acceptSecWebSocketExtensionsHeader,The following statement contains a magic number: var extensions = new StringBuilder (32);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,acceptSecWebSocketExtensionsHeader,The following statement contains a magic number: extensions.Length = len - 2;
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,close,The following statement contains a magic number: e.WasClean =          _client          ? closeHandshake (              send ? WebSocketFrame.CreateCloseFrame (Mask.Mask' payload).ToByteArray () : null'              wait ? 5000 : 0'              closeClientResources)          : closeHandshake (              send ? WebSocketFrame.CreateCloseFrame (Mask.Unmask' payload).ToByteArray () : null'              wait ? 1000 : 0'              closeServerResources);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,close,The following statement contains a magic number: e.WasClean =          _client          ? closeHandshake (              send ? WebSocketFrame.CreateCloseFrame (Mask.Mask' payload).ToByteArray () : null'              wait ? 5000 : 0'              closeClientResources)          : closeHandshake (              send ? WebSocketFrame.CreateCloseFrame (Mask.Unmask' payload).ToByteArray () : null'              wait ? 1000 : 0'              closeServerResources);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,createExtensionsRequest,The following statement contains a magic number: var extensions = new StringBuilder (32);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,createHandshakeRequest,The following statement contains a magic number: var host = _uri.Port == 80 ? _uri.DnsSafeHost : _uri.Authority;
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,sendFragmented,The following statement contains a magic number: var times = rem == 0 ? quo - 2 : quo - 1;
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,CreateBase64Key,The following statement contains a magic number: var src = new byte [16];
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,CreateResponseKey,The following statement contains a magic number: var buffer = new StringBuilder (base64Key' 64);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,Ping,The following statement contains a magic number: return _client               ? Ping (WebSocketFrame.CreatePingFrame (Mask.Mask).ToByteArray ()' 5000)               : Ping (WebSocketFrame.EmptyUnmaskPingData' 1000);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,Ping,The following statement contains a magic number: return _client               ? Ping (WebSocketFrame.CreatePingFrame (Mask.Mask).ToByteArray ()' 5000)               : Ping (WebSocketFrame.EmptyUnmaskPingData' 1000);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,Ping,The following statement contains a magic number: return _client               ? Ping (WebSocketFrame.CreatePingFrame (Mask.Mask' data).ToByteArray ()' 5000)               : Ping (WebSocketFrame.CreatePingFrame (Mask.Unmask' data).ToByteArray ()' 1000);
Magic Number,WebSocketSharp,WebSocket,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocket.cs,Ping,The following statement contains a magic number: return _client               ? Ping (WebSocketFrame.CreatePingFrame (Mask.Mask' data).ToByteArray ()' 5000)               : Ping (WebSocketFrame.CreatePingFrame (Mask.Unmask' data).ToByteArray ()' 1000);
Magic Number,WebSocketSharp,PayloadData,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\PayloadData.cs,mask,The following statement contains a magic number: src [i] = (byte) (src [i] ^ key [i % 4]);
Magic Number,WebSocketSharp,LogData,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\LogData.cs,ToString,The following statement contains a magic number: var log = new StringBuilder (          String.Format ("{0}{1}\n"' headerAndCaller' messages [0])' 64);
Magic Number,WebSocketSharp,Logger,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Logger.cs,output,The following statement contains a magic number: data = new LogData (level' new StackFrame (2' true)' message);
Magic Number,WebSocketSharp,HandshakeBase,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeBase.cs,getEncoding,The following statement contains a magic number: var charset = contentType.Substring (i + 8);
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,Parse,The following statement contains a magic number: var requestLine = headerParts[0].Split (new[] { ' ' }' 3);
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,Parse,The following statement contains a magic number: requestLine.Length != 3
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,Parse,The following statement contains a magic number: var req = new HandshakeRequest (new Version (requestLine[2].Substring (5))' headers);
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,Parse,The following statement contains a magic number: var req = new HandshakeRequest (new Version (requestLine[2].Substring (5))' headers);
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,SetCookies,The following statement contains a magic number: var buff = new StringBuilder (64);
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,SetCookies,The following statement contains a magic number: buff.Length = len - 2;
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,SetCookies,The following statement contains a magic number: len > 2
Magic Number,WebSocketSharp,HandshakeRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeRequest.cs,ToString,The following statement contains a magic number: var output = new StringBuilder (64);
Magic Number,WebSocketSharp,HandshakeResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeResponse.cs,Parse,The following statement contains a magic number: var statusLine = headerParts[0].Split (new[] { ' ' }' 3);
Magic Number,WebSocketSharp,HandshakeResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeResponse.cs,Parse,The following statement contains a magic number: statusLine.Length != 3
Magic Number,WebSocketSharp,HandshakeResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeResponse.cs,Parse,The following statement contains a magic number: var res = new HandshakeResponse (new Version (statusLine[0].Substring (5))' headers);
Magic Number,WebSocketSharp,HandshakeResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeResponse.cs,Parse,The following statement contains a magic number: res._reason = statusLine[2];
Magic Number,WebSocketSharp,HandshakeResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\HandshakeResponse.cs,ToString,The following statement contains a magic number: var output = new StringBuilder (64);
Magic Number,WebSocketSharp,WebSocketStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketStream.cs,readHandshakeEntityBody,The following statement contains a magic number: return len > 1024               ? stream.ReadBytes (len' 1024)               : len > 0                 ? stream.ReadBytes ((int) len)                 : null;
Magic Number,WebSocketSharp,WebSocketStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketStream.cs,readHandshakeEntityBody,The following statement contains a magic number: return len > 1024               ? stream.ReadBytes (len' 1024)               : len > 0                 ? stream.ReadBytes ((int) len)                 : null;
Magic Number,WebSocketSharp,WebSocketStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketStream.cs,ReadHandshakeRequest,The following statement contains a magic number: return ReadHandshake<HandshakeRequest> (HandshakeRequest.Parse' 90000);
Magic Number,WebSocketSharp,WebSocketStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketStream.cs,ReadHandshakeResponse,The following statement contains a magic number: return ReadHandshake<HandshakeResponse> (HandshakeResponse.Parse' 90000);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,WebSocketFrame,The following statement contains a magic number: len < 126
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,createMaskingKey,The following statement contains a magic number: var key = new byte [4];
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: var cnt = (long) (len / 4);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: var rem = (int) (len % 4);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: cntDigit = 4;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: cnt < 10000
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: var output = new StringBuilder (64);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: var j = i * 4;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,dump,The following statement contains a magic number: printLine (              Convert.ToString (frameAsBytes [j]'     2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 1]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 2]' 2).PadLeft (8' '0')'              Convert.ToString (frameAsBytes [j + 3]' 2).PadLeft (8' '0'));
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: isControl (opcode) && payloadLen > 125
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: var size = payloadLen < 126                   ? 0                   : payloadLen == 126                     ? 2                     : 8;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: var size = payloadLen < 126                   ? 0                   : payloadLen == 126                     ? 2                     : 8;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: var size = payloadLen < 126                   ? 0                   : payloadLen == 126                     ? 2                     : 8;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: var size = payloadLen < 126                   ? 0                   : payloadLen == 126                     ? 2                     : 8;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: var maskingKey = masked ? stream.ReadBytes (4) : new byte [0];
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: masked && maskingKey.Length != 4
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: ulong len = payloadLen < 126                    ? payloadLen                    : payloadLen == 126                      ? extPayloadLen.ToUInt16 (ByteOrder.Big)                      : extPayloadLen.ToUInt64 (ByteOrder.Big);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: ulong len = payloadLen < 126                    ? payloadLen                    : payloadLen == 126                      ? extPayloadLen.ToUInt16 (ByteOrder.Big)                      : extPayloadLen.ToUInt64 (ByteOrder.Big);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: payloadLen > 126 && len > PayloadData.MaxLength
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: data = payloadLen > 126                 ? stream.ReadBytes ((long) len' 1024)                 : stream.ReadBytes ((int) len);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,parse,The following statement contains a magic number: data = payloadLen > 126                 ? stream.ReadBytes ((long) len' 1024)                 : stream.ReadBytes ((int) len);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,print,The following statement contains a magic number: var extPayloadLen = size == 2                            ? ext.ToUInt16 (ByteOrder.Big).ToString ()                            : size == 8                              ? ext.ToUInt64 (ByteOrder.Big).ToString ()                              : String.Empty;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,print,The following statement contains a magic number: var extPayloadLen = size == 2                            ? ext.ToUInt16 (ByteOrder.Big).ToString ()                            : size == 8                              ? ext.ToUInt64 (ByteOrder.Big).ToString ()                              : String.Empty;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,Parse,The following statement contains a magic number: var header = stream.ReadBytes (2);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,Parse,The following statement contains a magic number: header.Length != 2
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,ParseAsync,The following statement contains a magic number: stream.ReadBytesAsync (          2'          header => {            if (header.Length != 2)              throw new WebSocketException (                "The header part of a frame cannot be read from the data source.");              var frame = parse (header' stream' unmask);            if (completed != null)              completed (frame);          }'          error);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,ParseAsync,The following statement contains a magic number: stream.ReadBytesAsync (          2'          header => {            if (header.Length != 2)              throw new WebSocketException (                "The header part of a frame cannot be read from the data source.");              var frame = parse (header' stream' unmask);            if (completed != null)              completed (frame);          }'          error);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,ToByteArray,The following statement contains a magic number: header = (header << 4) + (int) _opcode;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,ToByteArray,The following statement contains a magic number: header = (header << 7) + (int) _payloadLength;
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,ToByteArray,The following statement contains a magic number: buff.Write (((ushort) header).ToByteArrayInternally (ByteOrder.Big)' 0' 2);
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,ToByteArray,The following statement contains a magic number: _payloadLength > 125
Magic Number,WebSocketSharp,WebSocketFrame,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\WebSocketFrame.cs,ToByteArray,The following statement contains a magic number: _payloadLength < 127
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,The following statement contains a magic number: _trailerState == 2 && (char) buffer [offset] == '\r' && _saved.Length == 0
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,The following statement contains a magic number: (st == 0 || st == 2) && c == '\r'
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,The following statement contains a magic number: (st == 1 || st == 3) && c == '\n'
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,The following statement contains a magic number: _saved.Append (stString.Substring (0' _saved.Length == 0 ? st - 2 : st));
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,The following statement contains a magic number: _saved.Length > 4196
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,The following statement contains a magic number: offset < size && st < 4
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,readTrailer,The following statement contains a magic number: st < 4
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,setChunkSize,The following statement contains a magic number: _saved.Length > 20
Magic Number,WebSocketSharp.Net,ChunkStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkStream.cs,setChunkSize,The following statement contains a magic number: _trailerState = 2;
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,hash,The following statement contains a magic number: return i ^               (j << 13 | j >> 19) ^               (k << 26 | k >>  6) ^               (l <<  7 | l >> 25) ^               (m << 20 | m >> 12);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,toResponseStringVersion0,The following statement contains a magic number: var result = new StringBuilder (64);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,toResponseStringVersion1,The following statement contains a magic number: var result = new StringBuilder (64);
Magic Number,WebSocketSharp.Net,Cookie,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\Cookie.cs,ToRequestString,The following statement contains a magic number: var result = new StringBuilder (64);
Magic Number,WebSocketSharp.Net,EndPointListener,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointListener.cs,EndPointListener,The following statement contains a magic number: _socket.Listen (500);
Magic Number,WebSocketSharp.Net,EndPointListener,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointListener.cs,addSpecial,The following statement contains a magic number: throw new HttpListenerException (400' "Prefix already in use.");
Magic Number,WebSocketSharp.Net,EndPointListener,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointListener.cs,AddPrefix,The following statement contains a magic number: throw new HttpListenerException (400' "There's another listener for " + prefix);
Magic Number,WebSocketSharp.Net,EndPointManager,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointManager.cs,addPrefix,The following statement contains a magic number: throw new HttpListenerException (400' "Invalid path.");
Magic Number,WebSocketSharp.Net,EndPointManager,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\EndPointManager.cs,addPrefix,The following statement contains a magic number: throw new HttpListenerException (400' "Invalid path.");
Magic Number,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,HttpConnection,The following statement contains a magic number: _timeout = 90000;
Magic Number,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,onRead,The following statement contains a magic number: conn.SendError ("Bad request"' 400);
Magic Number,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,onRead,The following statement contains a magic number: conn._requestBuffer.Length > 32768
Magic Number,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,onRead,The following statement contains a magic number: conn.SendError ("Invalid host"' 400);
Magic Number,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,readLine,The following statement contains a magic number: b == 13
Magic Number,WebSocketSharp.Net,HttpConnection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpConnection.cs,BeginReadRequest,The following statement contains a magic number: _timeout = 15000;
Magic Number,WebSocketSharp.Net,HttpListenerContext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerContext.cs,HttpListenerContext,The following statement contains a magic number: _errorStatus = 400;
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,FinishInitialization,The following statement contains a magic number: _context.ErrorStatus = 501;
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,FinishInitialization,The following statement contains a magic number: _context.ErrorStatus = 411;
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,FlushInput,The following statement contains a magic number: var length = 2048;
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,FlushInput,The following statement contains a magic number: !ares.IsCompleted && !ares.AsyncWaitHandle.WaitOne (100)
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: var parts = requestLine.Split (new [] { ' ' }' 3);
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: parts.Length != 3
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: parts [2].Length != 8 ||            !parts [2].StartsWith ("HTTP/") ||            !tryCreateVersion (parts [2].Substring (5)' out _version) ||            _version.Major < 1
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: parts [2].Length != 8 ||            !parts [2].StartsWith ("HTTP/") ||            !tryCreateVersion (parts [2].Substring (5)' out _version) ||            _version.Major < 1
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: parts [2].Length != 8 ||            !parts [2].StartsWith ("HTTP/") ||            !tryCreateVersion (parts [2].Substring (5)' out _version) ||            _version.Major < 1
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: parts [2].Length != 8 ||            !parts [2].StartsWith ("HTTP/") ||            !tryCreateVersion (parts [2].Substring (5)' out _version) ||            _version.Major < 1
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: parts [2].Length != 8 ||            !parts [2].StartsWith ("HTTP/") ||            !tryCreateVersion (parts [2].Substring (5)' out _version) ||            _version.Major < 1
Magic Number,WebSocketSharp.Net,HttpListenerRequest,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerRequest.cs,ToString,The following statement contains a magic number: var buff = new StringBuilder (64);
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,HttpListenerResponse,The following statement contains a magic number: _statusCode = 200;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var connClose = _statusCode == 400 ||                        _statusCode == 408 ||                        _statusCode == 411 ||                        _statusCode == 413 ||                        _statusCode == 414 ||                        _statusCode == 500 ||                        _statusCode == 503;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var connClose = _statusCode == 400 ||                        _statusCode == 408 ||                        _statusCode == 411 ||                        _statusCode == 413 ||                        _statusCode == 414 ||                        _statusCode == 500 ||                        _statusCode == 503;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var connClose = _statusCode == 400 ||                        _statusCode == 408 ||                        _statusCode == 411 ||                        _statusCode == 413 ||                        _statusCode == 414 ||                        _statusCode == 500 ||                        _statusCode == 503;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var connClose = _statusCode == 400 ||                        _statusCode == 408 ||                        _statusCode == 411 ||                        _statusCode == 413 ||                        _statusCode == 414 ||                        _statusCode == 500 ||                        _statusCode == 503;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var connClose = _statusCode == 400 ||                        _statusCode == 408 ||                        _statusCode == 411 ||                        _statusCode == 413 ||                        _statusCode == 414 ||                        _statusCode == 500 ||                        _statusCode == 503;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var connClose = _statusCode == 400 ||                        _statusCode == 408 ||                        _statusCode == 411 ||                        _statusCode == 413 ||                        _statusCode == 414 ||                        _statusCode == 500 ||                        _statusCode == 503;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var connClose = _statusCode == 400 ||                        _statusCode == 408 ||                        _statusCode == 411 ||                        _statusCode == 413 ||                        _statusCode == 414 ||                        _statusCode == 500 ||                        _statusCode == 503;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: reuses >= 100
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: _headers.SetInternally (            "Keep-Alive"' String.Format ("timeout=15'max={0}"' 100 - reuses)' true);
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var writer = new StreamWriter (stream' encoding' 256);
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var preamble = encoding.CodePage == 65001 ? 3 : encoding.GetPreamble ().Length;
Magic Number,WebSocketSharp.Net,HttpListenerResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: var preamble = encoding.CodePage == 65001 ? 3 : encoding.GetPreamble ().Length;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,getChar,The following statement contains a magic number: value = (value << 4) + current;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,getChar,The following statement contains a magic number: c > 127
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,getChar,The following statement contains a magic number: value = (value << 4) + current;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,getInt,The following statement contains a magic number: return c >= '0' && c <= '9'               ? c - '0'               : c >= 'a' && c <= 'f'                 ? c - 'a' + 10                 : c >= 'A' && c <= 'F'                   ? c - 'A' + 10                   : -1;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,getInt,The following statement contains a magic number: return c >= '0' && c <= '9'               ? c - '0'               : c >= 'a' && c <= 'f'                 ? c - 'a' + 10                 : c >= 'A' && c <= 'F'                   ? c - 'A' + 10                   : -1;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlEncodeChar,The following statement contains a magic number: var idx = i >> 12;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlEncodeChar,The following statement contains a magic number: idx = (i >> 8) & 0x0F;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlEncodeChar,The following statement contains a magic number: idx = (i >> 4) & 0x0F;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlEncodeChar,The following statement contains a magic number: c > 255
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlEncodeChar,The following statement contains a magic number: isUnicode && c > 127
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlEncodeChar,The following statement contains a magic number: var idx = ((int) c) >> 4;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlPathEncodeChar,The following statement contains a magic number: var i = ((int) b) >> 4;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlPathEncodeChar,The following statement contains a magic number: c < 33 || c > 126
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,urlPathEncodeChar,The following statement contains a magic number: c < 33 || c > 126
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,writeCharBytes,The following statement contains a magic number: c > 255
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,CreateRequestUrl,The following statement contains a magic number: host = String.Format ("{0}:{1}"' host' scheme == "http" || scheme == "ws" ? 80 : 443);
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,CreateRequestUrl,The following statement contains a magic number: host = String.Format ("{0}:{1}"' host' scheme == "http" || scheme == "ws" ? 80 : 443);
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecodeInternally,The following statement contains a magic number: xchar = getChar (bytes' i + 2' 4);
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecodeInternally,The following statement contains a magic number: xchar = getChar (bytes' i + 2' 4);
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecodeInternally,The following statement contains a magic number: i += 5;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecodeInternally,The following statement contains a magic number: bytes [i + 1] == (byte) 'u' && i + 5 < end
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecodeInternally,The following statement contains a magic number: bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%'
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,HtmlEncode,The following statement contains a magic number: c == '&' || c == '"' || c == '<' || c == '>' || c > 159
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecode,The following statement contains a magic number: xchar = getChar (s' i + 2' 4);
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecode,The following statement contains a magic number: xchar = getChar (s' i + 2' 4);
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecode,The following statement contains a magic number: i += 5;
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecode,The following statement contains a magic number: s [i + 1] == 'u' && i + 5 < len
Magic Number,WebSocketSharp.Net,HttpUtility,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\HttpUtility.cs,UrlDecode,The following statement contains a magic number: c == '%' && i + 2 < len && s [i + 1] != '%'
Magic Number,WebSocketSharp.Net,ListenerAsyncResult,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerAsyncResult.cs,Complete,The following statement contains a magic number: _exception = InGet && (exception is ObjectDisposedException)                     ? new HttpListenerException (500' "Listener closed.")                     : exception;
Magic Number,WebSocketSharp.Net,ListenerPrefix,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerPrefix.cs,parse,The following statement contains a magic number: var defaultPort = uriPrefix.StartsWith ("https://") ? 443 : 80;
Magic Number,WebSocketSharp.Net,ListenerPrefix,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerPrefix.cs,parse,The following statement contains a magic number: var defaultPort = uriPrefix.StartsWith ("https://") ? 443 : 80;
Magic Number,WebSocketSharp.Net,ListenerPrefix,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerPrefix.cs,parse,The following statement contains a magic number: defaultPort == 443
Magic Number,WebSocketSharp.Net,ListenerPrefix,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerPrefix.cs,parse,The following statement contains a magic number: var startHost = uriPrefix.IndexOf (':') + 3;
Magic Number,WebSocketSharp.Net,ListenerPrefix,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerPrefix.cs,CheckUriPrefix,The following statement contains a magic number: var startHost = uriPrefix.IndexOf (':') + 3;
Magic Number,WebSocketSharp.Net,ListenerPrefix,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ListenerPrefix.cs,CheckUriPrefix,The following statement contains a magic number: !Int32.TryParse (uriPrefix.Substring (colon + 1' root - colon - 1)' out port) ||              (port <= 0 || port >= 65536)
Magic Number,WebSocketSharp.Net,ResponseStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ResponseStream.cs,EndWrite,The following statement contains a magic number: Action<IAsyncResult> endWrite = ares => {          _stream.EndWrite (ares);          if (_response.SendChunked)            _stream.Write (_crlf' 0' 2);        };
Magic Number,WebSocketSharp.Net,ResponseStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ResponseStream.cs,Write,The following statement contains a magic number: var newCount = Math.Min (count' 16384 - (int) headers.Position + (int) start);
Magic Number,WebSocketSharp.Net,ResponseStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ResponseStream.cs,Write,The following statement contains a magic number: WriteInternally (_crlf' 0' 2);
Magic Number,WebSocketSharp.Net,WebHeaderCollection,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\WebHeaderCollection.cs,checkValue,The following statement contains a magic number: value.Length > 65535
Magic Number,WebSocketSharp.Net,ChunkedRequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkedRequestStream.cs,onRead,The following statement contains a magic number: ares.Count = Math.Min (_bufferSize' _decoder.ChunkLeft + 6);
Magic Number,WebSocketSharp.Net,ChunkedRequestStream,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\ChunkedRequestStream.cs,EndRead,The following statement contains a magic number: throw new HttpListenerException (400' "I/O operation aborted.");
Magic Number,WebSocketSharp.Net,AuthenticationChallenge,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationChallenge.cs,Parse,The following statement contains a magic number: var chal = value.Split (new[] { ' ' }' 2);
Magic Number,WebSocketSharp.Net,AuthenticationChallenge,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationChallenge.cs,Parse,The following statement contains a magic number: chal.Length != 2
Magic Number,WebSocketSharp.Net,AuthenticationChallenge,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationChallenge.cs,ToDigestString,The following statement contains a magic number: var output = new StringBuilder (128);
Magic Number,WebSocketSharp.Net,AuthenticationResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationResponse.cs,hash,The following statement contains a magic number: var res = new StringBuilder (64);
Magic Number,WebSocketSharp.Net,AuthenticationResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationResponse.cs,Parse,The following statement contains a magic number: var cred = value.Split (new[] { ' ' }' 2);
Magic Number,WebSocketSharp.Net,AuthenticationResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationResponse.cs,Parse,The following statement contains a magic number: cred.Length != 2
Magic Number,WebSocketSharp.Net,AuthenticationResponse,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationResponse.cs,ToDigestString,The following statement contains a magic number: var output = new StringBuilder (256);
Magic Number,WebSocketSharp.Net,AuthenticationBase,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationBase.cs,CreateNonceValue,The following statement contains a magic number: var src = new byte[16];
Magic Number,WebSocketSharp.Net,AuthenticationBase,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\AuthenticationBase.cs,CreateNonceValue,The following statement contains a magic number: var res = new StringBuilder (32);
Magic Number,WebSocketSharp.Net.WebSockets,TcpListenerWebSocketContext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\WebSockets\TcpListenerWebSocketContext.cs,TcpListenerWebSocketContext,The following statement contains a magic number: _request = _stream.ReadHandshake<HandshakeRequest> (HandshakeRequest.Parse' 90000);
Magic Number,WebSocketSharp.Net.WebSockets,TcpListenerWebSocketContext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Net\WebSockets\TcpListenerWebSocketContext.cs,SendAuthChallenge,The following statement contains a magic number: _request = _stream.ReadHandshake<HandshakeRequest> (HandshakeRequest.Parse' 15000);
Missing Default,WebSocketSharp,Ext,D:\research\architectureSmells\repos\fpanettieri_unity-socket.io\SocketIO\WebsocketSharp\Ext.cs,GetStatusDescription,The following switch statement is missing a default case: switch (code) {          case 100: return "Continue";          case 101: return "Switching Protocols";          case 102: return "Processing";          case 200: return "OK";          case 201: return "Created";          case 202: return "Accepted";          case 203: return "Non-Authoritative Information";          case 204: return "No Content";          case 205: return "Reset Content";          case 206: return "Partial Content";          case 207: return "Multi-Status";          case 300: return "Multiple Choices";          case 301: return "Moved Permanently";          case 302: return "Found";          case 303: return "See Other";          case 304: return "Not Modified";          case 305: return "Use Proxy";          case 307: return "Temporary Redirect";          case 400: return "Bad Request";          case 401: return "Unauthorized";          case 402: return "Payment Required";          case 403: return "Forbidden";          case 404: return "Not Found";          case 405: return "Method Not Allowed";          case 406: return "Not Acceptable";          case 407: return "Proxy Authentication Required";          case 408: return "Request Timeout";          case 409: return "Conflict";          case 410: return "Gone";          case 411: return "Length Required";          case 412: return "Precondition Failed";          case 413: return "Request Entity Too Large";          case 414: return "Request-Uri Too Long";          case 415: return "Unsupported Media Type";          case 416: return "Requested Range Not Satisfiable";          case 417: return "Expectation Failed";          case 422: return "Unprocessable Entity";          case 423: return "Locked";          case 424: return "Failed Dependency";          case 500: return "Internal Server Error";          case 501: return "Not Implemented";          case 502: return "Bad Gateway";          case 503: return "Service Unavailable";          case 504: return "Gateway Timeout";          case 505: return "Http Version Not Supported";          case 507: return "Insufficient Storage";        }
