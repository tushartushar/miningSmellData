Implementation smell,Namespace,Class,File,Method,Description
Long Method,Moonlight,MainPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage.xaml.cs,EnumerateEligibleMachines,The method has 109 lines of code.
Long Method,Moonlight,KeyboardHelper,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\KeyboardHelper.cs,TranslateVirtualKey,The method has 148 lines of code.
Long Method,Moonlight.Controllers,XInput,C:\repos\limelight-stream_limelight-wp\Moonlight\Controllers\XInput.cs,PollControllerWorker,The method has 101 lines of code.
Complex Method,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,Cyclomatic complexity of the method is 8
Complex Method,Moonlight.Controllers,XInput,C:\repos\limelight-stream_limelight-wp\Moonlight\Controllers\XInput.cs,PollControllerWorker,Cyclomatic complexity of the method is 20
Long Statement,Moonlight,MainPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage.xaml.cs,EnumerateEligibleMachines,The length of the statement  "            // The UI thread will populate the listbox with computerList whenever it pleases' so we don't want it to take the one we're modifying " is 133.
Long Statement,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The length of the statement  "                "&devicename=roth&updateState=1&phrase=getservercert&salt=" + BytesToHex(salt) + "&clientcert=" + BytesToHex(await provider.GetPemCertBytes())); " is 144.
Long Statement,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The length of the statement  "            byte[] challengeRespHash = ToSHA1Bytes(concatBytes(concatBytes(serverChallenge' (await provider.GetClientCertificate()).GetSignature())' clientSecret)); " is 152.
Long Statement,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The length of the statement  "                    "/pair?uniqueid=" + uniqueId + "&devicename=roth&updateState=1&serverchallengeresp=" + BytesToHex(challengeRespEncrypted)); " is 123.
Long Statement,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The length of the statement  "            byte[] serverChallengeRespHash = ToSHA1Bytes(concatBytes(concatBytes(randomChallenge' serverCert.GetSignature())' serverSecret)); " is 129.
Long Statement,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The length of the statement  "                    "/pair?uniqueid=" + uniqueId + "&devicename=roth&updateState=1&clientpairingsecret=" + BytesToHex(clientPairingSecret)); " is 120.
Long Statement,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The length of the statement  "            XmlQuery pairChallenge = new XmlQuery(nv.BaseUrl + "/pair?uniqueid=" + uniqueId + "&devicename=roth&updateState=1&phrase=pairchallenge"); " is 137.
Long Statement,Moonlight,PairingManager,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingManager.cs,Pair,The length of the statement  "            bool challenge = await PairingCryptoHelpers.PerformPairingHandshake(uiDispatcher' new WindowsCryptoProvider()' nv' nv.GetUniqueId()); " is 133.
Long Statement,Moonlight,WindowsCryptoProvider,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\WindowsCryptoProvider.cs,AddToWinCertStore,The length of the statement  "            await CertificateEnrollmentManager.ImportPfxDataAsync(pfx' password' ExportOption.NotExportable' KeyProtectionLevel.NoConsent' InstallOptions.None' friendlyName); " is 162.
Long Statement,Moonlight,WindowsCryptoProvider,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\WindowsCryptoProvider.cs,SaveCertKeyPair,The length of the statement  "            IEnumerable<Certificate> certificates = await CertificateStores.FindAllAsync(new CertificateQuery { FriendlyName = "Limelight-Client" }); " is 137.
Long Statement,Moonlight,WindowsCryptoProvider,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\WindowsCryptoProvider.cs,LoadCertKeyPair,The length of the statement  "            IEnumerable<Certificate> certificates = await CertificateStores.FindAllAsync(new CertificateQuery { FriendlyName = "Limelight-Client" }); " is 137.
Long Statement,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,StartConnection,The length of the statement  "            MoonlightConnectionListener clCallbacks = new MoonlightConnectionListener(ClStageStarting' ClStageComplete' ClStageFailed' " is 122.
Long Statement,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,StartConnection,The length of the statement  "            MoonlightCommonRuntimeComponent.StartConnection(serverIp' streamConfig' clCallbacks' drCallbacks' arCallbacks' serverMajorVersion); " is 131.
Long Statement,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,WindowKeyDownHandler,The length of the statement  "            if ((KeyboardHelper.GetModifierFlags() & (byte)(Modifier.ModifierShift | Modifier.ModifierAlt | Modifier.ModifierCtrl)) == " is 122.
Long Statement,Moonlight,XmlQuery,C:\repos\limelight-stream_limelight-wp\Moonlight\Streaming\XmlQuery.cs,GetXml,The length of the statement  "            IEnumerable<Certificate> certificates = await CertificateStores.FindAllAsync(new CertificateQuery { FriendlyName = "Limelight-Client" }); " is 137.
Magic Number,Moonlight,MainPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage.xaml.cs,StreamButton_Click_Common,The following statement contains a magic number: if (selected == null || String.IsNullOrWhiteSpace(selected.IpAddress))              {                  DialogUtils.DisplayDialog(this.Dispatcher' "No machine selected"' "Streaming Failed");              }              else              {                  // Stop enumerating machines while we're trying to check pair state                  mDnsTimer.Stop();                    byte[] aesKey = PairingCryptoHelpers.GenerateRandomBytes(16);                    // GameStream only uses 4 bytes of a 16 byte IV. Go figure.                  byte[] aesRiIndex = PairingCryptoHelpers.GenerateRandomBytes(4);                  byte[] aesIv = new byte[16];                  Array.ConstrainedCopy(aesRiIndex' 0' aesIv' 0' aesRiIndex.Length);                  SettingsPage s = new SettingsPage();                  MoonlightStreamConfiguration config = new MoonlightStreamConfiguration(                      s.GetStreamWidth()'                      s.GetStreamHeight()'                      s.GetStreamFps()'                      10000' // FIXME: Scale by resolution                      1024'                      aesKey' aesIv);                    StreamContext context = await ConnectionManager.StartStreaming(this.Dispatcher' selected' config);                  if (context != null)                  {                      this.Frame.Navigate(typeof(StreamFrame)' context);                  }              }
Magic Number,Moonlight,MainPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage.xaml.cs,StreamButton_Click_Common,The following statement contains a magic number: if (selected == null || String.IsNullOrWhiteSpace(selected.IpAddress))              {                  DialogUtils.DisplayDialog(this.Dispatcher' "No machine selected"' "Streaming Failed");              }              else              {                  // Stop enumerating machines while we're trying to check pair state                  mDnsTimer.Stop();                    byte[] aesKey = PairingCryptoHelpers.GenerateRandomBytes(16);                    // GameStream only uses 4 bytes of a 16 byte IV. Go figure.                  byte[] aesRiIndex = PairingCryptoHelpers.GenerateRandomBytes(4);                  byte[] aesIv = new byte[16];                  Array.ConstrainedCopy(aesRiIndex' 0' aesIv' 0' aesRiIndex.Length);                  SettingsPage s = new SettingsPage();                  MoonlightStreamConfiguration config = new MoonlightStreamConfiguration(                      s.GetStreamWidth()'                      s.GetStreamHeight()'                      s.GetStreamFps()'                      10000' // FIXME: Scale by resolution                      1024'                      aesKey' aesIv);                    StreamContext context = await ConnectionManager.StartStreaming(this.Dispatcher' selected' config);                  if (context != null)                  {                      this.Frame.Navigate(typeof(StreamFrame)' context);                  }              }
Magic Number,Moonlight,MainPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage.xaml.cs,StreamButton_Click_Common,The following statement contains a magic number: if (selected == null || String.IsNullOrWhiteSpace(selected.IpAddress))              {                  DialogUtils.DisplayDialog(this.Dispatcher' "No machine selected"' "Streaming Failed");              }              else              {                  // Stop enumerating machines while we're trying to check pair state                  mDnsTimer.Stop();                    byte[] aesKey = PairingCryptoHelpers.GenerateRandomBytes(16);                    // GameStream only uses 4 bytes of a 16 byte IV. Go figure.                  byte[] aesRiIndex = PairingCryptoHelpers.GenerateRandomBytes(4);                  byte[] aesIv = new byte[16];                  Array.ConstrainedCopy(aesRiIndex' 0' aesIv' 0' aesRiIndex.Length);                  SettingsPage s = new SettingsPage();                  MoonlightStreamConfiguration config = new MoonlightStreamConfiguration(                      s.GetStreamWidth()'                      s.GetStreamHeight()'                      s.GetStreamFps()'                      10000' // FIXME: Scale by resolution                      1024'                      aesKey' aesIv);                    StreamContext context = await ConnectionManager.StartStreaming(this.Dispatcher' selected' config);                  if (context != null)                  {                      this.Frame.Navigate(typeof(StreamFrame)' context);                  }              }
Magic Number,Moonlight,MainPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage.xaml.cs,StreamButton_Click_Common,The following statement contains a magic number: if (selected == null || String.IsNullOrWhiteSpace(selected.IpAddress))              {                  DialogUtils.DisplayDialog(this.Dispatcher' "No machine selected"' "Streaming Failed");              }              else              {                  // Stop enumerating machines while we're trying to check pair state                  mDnsTimer.Stop();                    byte[] aesKey = PairingCryptoHelpers.GenerateRandomBytes(16);                    // GameStream only uses 4 bytes of a 16 byte IV. Go figure.                  byte[] aesRiIndex = PairingCryptoHelpers.GenerateRandomBytes(4);                  byte[] aesIv = new byte[16];                  Array.ConstrainedCopy(aesRiIndex' 0' aesIv' 0' aesRiIndex.Length);                  SettingsPage s = new SettingsPage();                  MoonlightStreamConfiguration config = new MoonlightStreamConfiguration(                      s.GetStreamWidth()'                      s.GetStreamHeight()'                      s.GetStreamFps()'                      10000' // FIXME: Scale by resolution                      1024'                      aesKey' aesIv);                    StreamContext context = await ConnectionManager.StartStreaming(this.Dispatcher' selected' config);                  if (context != null)                  {                      this.Frame.Navigate(typeof(StreamFrame)' context);                  }              }
Magic Number,Moonlight,MainPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage.xaml.cs,StreamButton_Click_Common,The following statement contains a magic number: if (selected == null || String.IsNullOrWhiteSpace(selected.IpAddress))              {                  DialogUtils.DisplayDialog(this.Dispatcher' "No machine selected"' "Streaming Failed");              }              else              {                  // Stop enumerating machines while we're trying to check pair state                  mDnsTimer.Stop();                    byte[] aesKey = PairingCryptoHelpers.GenerateRandomBytes(16);                    // GameStream only uses 4 bytes of a 16 byte IV. Go figure.                  byte[] aesRiIndex = PairingCryptoHelpers.GenerateRandomBytes(4);                  byte[] aesIv = new byte[16];                  Array.ConstrainedCopy(aesRiIndex' 0' aesIv' 0' aesRiIndex.Length);                  SettingsPage s = new SettingsPage();                  MoonlightStreamConfiguration config = new MoonlightStreamConfiguration(                      s.GetStreamWidth()'                      s.GetStreamHeight()'                      s.GetStreamFps()'                      10000' // FIXME: Scale by resolution                      1024'                      aesKey' aesIv);                    StreamContext context = await ConnectionManager.StartStreaming(this.Dispatcher' selected' config);                  if (context != null)                  {                      this.Frame.Navigate(typeof(StreamFrame)' context);                  }              }
Magic Number,Moonlight,SettingsPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage\SettingsManager.cs,GetStreamWidth,The following statement contains a magic number: if (Resolution_FPS_Box.SelectedIndex == 0 || Resolution_FPS_Box.SelectedIndex == 1)              {                  return 1280;              }              else              {                  return 1920;              }
Magic Number,Moonlight,SettingsPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage\SettingsManager.cs,GetStreamWidth,The following statement contains a magic number: if (Resolution_FPS_Box.SelectedIndex == 0 || Resolution_FPS_Box.SelectedIndex == 1)              {                  return 1280;              }              else              {                  return 1920;              }
Magic Number,Moonlight,SettingsPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage\SettingsManager.cs,GetStreamHeight,The following statement contains a magic number: if (Resolution_FPS_Box.SelectedIndex == 0 || Resolution_FPS_Box.SelectedIndex == 1)              {                  return 720;              }              else              {                  return 1080;              }
Magic Number,Moonlight,SettingsPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage\SettingsManager.cs,GetStreamHeight,The following statement contains a magic number: if (Resolution_FPS_Box.SelectedIndex == 0 || Resolution_FPS_Box.SelectedIndex == 1)              {                  return 720;              }              else              {                  return 1080;              }
Magic Number,Moonlight,SettingsPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage\SettingsManager.cs,GetStreamFps,The following statement contains a magic number: if (Resolution_FPS_Box.SelectedIndex == 1 || Resolution_FPS_Box.SelectedIndex == 3)              {                  return 60;              }              else              {                  return 30;              }
Magic Number,Moonlight,SettingsPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage\SettingsManager.cs,GetStreamFps,The following statement contains a magic number: if (Resolution_FPS_Box.SelectedIndex == 1 || Resolution_FPS_Box.SelectedIndex == 3)              {                  return 60;              }              else              {                  return 30;              }
Magic Number,Moonlight,SettingsPage,C:\repos\limelight-stream_limelight-wp\Moonlight\MainPage\SettingsManager.cs,GetStreamFps,The following statement contains a magic number: if (Resolution_FPS_Box.SelectedIndex == 1 || Resolution_FPS_Box.SelectedIndex == 3)              {                  return 60;              }              else              {                  return 30;              }
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,EncryptAes,The following statement contains a magic number: int blockRoundedSize = ((message.Length + 15) / 16) * 16;
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,EncryptAes,The following statement contains a magic number: int blockRoundedSize = ((message.Length + 15) / 16) * 16;
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,EncryptAes,The following statement contains a magic number: int blockRoundedSize = ((message.Length + 15) / 16) * 16;
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,DecryptAes,The following statement contains a magic number: int blockRoundedSize = ((encrypted.Length + 15) / 16) * 16;
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,DecryptAes,The following statement contains a magic number: int blockRoundedSize = ((encrypted.Length + 15) / 16) * 16;
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,DecryptAes,The following statement contains a magic number: int blockRoundedSize = ((encrypted.Length + 15) / 16) * 16;
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: byte[] salt = GenerateRandomBytes(16);
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: string pin = new Random().Next(9999).ToString("D4");
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: byte[] randomChallenge = GenerateRandomBytes(16);
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: byte[] serverResponse = new byte[20]' serverChallenge = new byte[16];
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: byte[] serverResponse = new byte[20]' serverChallenge = new byte[16];
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: Array.Copy(decServerChallengeResponse' 20' serverChallenge' 0' serverChallenge.Length);
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: byte[] clientSecret = GenerateRandomBytes(16);
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: byte[] serverSecret = new byte[16];
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: byte[] serverSignature = new byte[256];
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: Array.Copy(serverSecretResp' 0' serverSecret' 0' 16);
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: Array.Copy(serverSecretResp' 16' serverSignature' 0' 256);
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,PerformPairingHandshake,The following statement contains a magic number: Array.Copy(serverSecretResp' 16' serverSignature' 0' 256);
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,BytesToHex,The following statement contains a magic number: char[] hexChars = new char[bytes.Length * 2];
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,BytesToHex,The following statement contains a magic number: for (int j = 0; j < bytes.Length; j++)              {                  int v = bytes[j] & 0xFF;                  hexChars[j * 2] = hexArray[v >> 4];                  hexChars[j * 2 + 1] = hexArray[v & 0x0F];              }
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,BytesToHex,The following statement contains a magic number: for (int j = 0; j < bytes.Length; j++)              {                  int v = bytes[j] & 0xFF;                  hexChars[j * 2] = hexArray[v >> 4];                  hexChars[j * 2 + 1] = hexArray[v & 0x0F];              }
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,BytesToHex,The following statement contains a magic number: for (int j = 0; j < bytes.Length; j++)              {                  int v = bytes[j] & 0xFF;                  hexChars[j * 2] = hexArray[v >> 4];                  hexChars[j * 2 + 1] = hexArray[v & 0x0F];              }
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,HexToBytes,The following statement contains a magic number: return Enumerable.Range(0' hex.Length)                               .Where(x => x % 2 == 0)                               .Select(x => Convert.ToByte(hex.Substring(x' 2)' 16))                               .ToArray();
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,HexToBytes,The following statement contains a magic number: return Enumerable.Range(0' hex.Length)                               .Where(x => x % 2 == 0)                               .Select(x => Convert.ToByte(hex.Substring(x' 2)' 16))                               .ToArray();
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,HexToBytes,The following statement contains a magic number: return Enumerable.Range(0' hex.Length)                               .Where(x => x % 2 == 0)                               .Select(x => Convert.ToByte(hex.Substring(x' 2)' 16))                               .ToArray();
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,GenerateAesKey,The following statement contains a magic number: byte[] truncatedSHA = new byte[16];
Magic Number,Moonlight,PairingCryptoHelpers,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingCrypto.cs,GenerateAesKey,The following statement contains a magic number: Array.Copy(ToSHA1Bytes(data)' truncatedSHA' 16);
Magic Number,Moonlight,PairingManager,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\PairingManager.cs,QueryPairState,The following statement contains a magic number: if (Convert.ToInt32(statusCode) == 401)              {                  return false;              }
Magic Number,Moonlight,WindowsCryptoProvider,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\WindowsCryptoProvider.cs,GenerateCertKeyPair,The following statement contains a magic number: r.Init(new KeyGenerationParameters(new SecureRandom()' 2048));
Magic Number,Moonlight,WindowsCryptoProvider,C:\repos\limelight-stream_limelight-wp\Moonlight\Pairing\WindowsCryptoProvider.cs,GenerateCertKeyPair,The following statement contains a magic number: certGen.SetNotAfter(DateTime.Now.AddYears(20));
Magic Number,Moonlight,AvStreamSource,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\AvStreamSource.cs,CreateVideoSample,The following statement contains a magic number: if ((buf[4] & 0x1F) == 0x5)              {                  sample.KeyFrame = true;              }
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,StartOrResumeApp,The following statement contains a magic number: int riKeyId =                  (int)(((aesIv[0] << 24) & 0xFF000000U) |                  ((aesIv[1] << 16) & 0xFF0000U) |                  ((aesIv[2] << 8) & 0xFF00U) |                  (aesIv[3] & 0xFFU));
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,StartOrResumeApp,The following statement contains a magic number: int riKeyId =                  (int)(((aesIv[0] << 24) & 0xFF000000U) |                  ((aesIv[1] << 16) & 0xFF0000U) |                  ((aesIv[2] << 8) & 0xFF00U) |                  (aesIv[3] & 0xFFU));
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,StartOrResumeApp,The following statement contains a magic number: int riKeyId =                  (int)(((aesIv[0] << 24) & 0xFF000000U) |                  ((aesIv[1] << 16) & 0xFF0000U) |                  ((aesIv[2] << 8) & 0xFF00U) |                  (aesIv[3] & 0xFFU));
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,StartOrResumeApp,The following statement contains a magic number: int riKeyId =                  (int)(((aesIv[0] << 24) & 0xFF000000U) |                  ((aesIv[1] << 16) & 0xFF0000U) |                  ((aesIv[2] << 8) & 0xFF00U) |                  (aesIv[3] & 0xFFU));
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,StartOrResumeApp,The following statement contains a magic number: int riKeyId =                  (int)(((aesIv[0] << 24) & 0xFF000000U) |                  ((aesIv[1] << 16) & 0xFF0000U) |                  ((aesIv[2] << 8) & 0xFF00U) |                  (aesIv[3] & 0xFFU));
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,InitializeMediaPlayer,The following statement contains a magic number: MasteringVoice masteringVoice = new MasteringVoice(xaudio' 2' 48000);
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,InitializeMediaPlayer,The following statement contains a magic number: MasteringVoice masteringVoice = new MasteringVoice(xaudio' 2' 48000);
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,InitializeMediaPlayer,The following statement contains a magic number: WaveFormat format = new WaveFormat(48000' 16' 2);
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,InitializeMediaPlayer,The following statement contains a magic number: WaveFormat format = new WaveFormat(48000' 16' 2);
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,InitializeMediaPlayer,The following statement contains a magic number: WaveFormat format = new WaveFormat(48000' 16' 2);
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,MouseWheel,The following statement contains a magic number: if (!props.IsHorizontalMouseWheel)              {                  MoonlightCommonRuntimeComponent.SendScrollEvent((short) (props.MouseWheelDelta / 120));              }
Magic Number,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,MouseUp,The following statement contains a magic number: if (e.Pointer.PointerDeviceType != PointerDeviceType.Mouse)              {                  if (!hasMoved)                  {                      // We haven't moved so send a click                      MoonlightCommonRuntimeComponent.SendMouseButtonEvent((byte)MouseButtonAction.Press' (int)MouseButton.Left);                        // Sleep here because some games do input detection by polling                      using (EventWaitHandle tmpEvent = new ManualResetEvent(false))                      {                          tmpEvent.WaitOne(TimeSpan.FromMilliseconds(100));                      }                        // Raise the mouse button                      MoonlightCommonRuntimeComponent.SendMouseButtonEvent((byte)MouseButtonAction.Release' (int)MouseButton.Left);                  }              }              else              {                  // Send changes and update the current state                  int deltaButtons = mouseButtonFlag ^ GetButtonFlags(ptrPt);                  if ((deltaButtons & MOUSE_BUTTON_LEFT) != 0)                  {                      MoonlightCommonRuntimeComponent.SendMouseButtonEvent((byte)MouseButtonAction.Release'                          (int)MouseButton.Left);                  }                  if ((deltaButtons & MOUSE_BUTTON_MIDDLE) != 0)                  {                      MoonlightCommonRuntimeComponent.SendMouseButtonEvent((byte)MouseButtonAction.Release'                          (int)MouseButton.Middle);                  }                  if ((deltaButtons & MOUSE_BUTTON_RIGHT) != 0)                  {                      MoonlightCommonRuntimeComponent.SendMouseButtonEvent((byte)MouseButtonAction.Release'                          (int)MouseButton.Right);                  }                  mouseButtonFlag = GetButtonFlags(ptrPt);              }
Magic Number,Moonlight,KeyboardHelper,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\KeyboardHelper.cs,TranslateVirtualKey,The following statement contains a magic number: return (short)((KEY_PREFIX << 8) | translated);
Magic Number,Moonlight,NvHttp,C:\repos\limelight-stream_limelight-wp\Moonlight\Streaming\NvHttp.cs,GetUniqueId,The following statement contains a magic number: if (settings.Values.ContainsKey("uniqueid"))              {                  bytes = (byte[])settings.Values["uniqueid"];              }              else              {                  bytes = PairingCryptoHelpers.GenerateRandomBytes(8);                  settings.Values["uniqueid"] = bytes;              }
Magic Number,Moonlight.Controllers,XInput,C:\repos\limelight-stream_limelight-wp\Moonlight\Controllers\XInput.cs,PollControllerWorker,The following statement contains a magic number: int[] lastPacketNumber = new int[4];
Magic Number,Moonlight.Controllers,XInput,C:\repos\limelight-stream_limelight-wp\Moonlight\Controllers\XInput.cs,PollControllerWorker,The following statement contains a magic number: while (!stopPolling)              {                  // Wait before collecting new data                  await Task.Delay(10);                    // Read input from all controllers                  foreach (Controller controller in controllers)                  {                      short controllerIndex = (short)controller.UserIndex;                        // Don't do anything if no controller is connected                      if (controller.IsConnected == false)                      {                          if (lastPacketNumber[controllerIndex] != 0)                          {                              // Set all inputs back to zero                              MoonlightCommonRuntimeComponent.SendControllerInput(controllerIndex' 0' 0' 0' 0' 0' 0);                              lastPacketNumber[controllerIndex] = 0;                          }                            // Not connected                          continue;                      }                        // Snapshot the state                      State state = controller.GetState();                      if (state.PacketNumber != lastPacketNumber[controllerIndex])                      {                          int buttonFlags = 0;                            // Remember the packet number so we don't have to do extra work                          // if the controller state doesn't change                          lastPacketNumber[controllerIndex] = state.PacketNumber;                            // Convert XInput constants to our button flags                          if ((state.Gamepad.Buttons & GamepadButtonFlags.DPadUp) != 0)                          {                              buttonFlags |= (short)ButtonFlags.Up;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.DPadDown) != 0)                          {                              buttonFlags |= (short)ButtonFlags.Down;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) != 0)                          {                              buttonFlags |= (short)ButtonFlags.Left;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.DPadRight) != 0)                          {                              buttonFlags |= (short)ButtonFlags.Right;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.A) != 0)                          {                              buttonFlags |= (short)ButtonFlags.A;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.B) != 0)                          {                              buttonFlags |= (short)ButtonFlags.B;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.X) != 0)                          {                              buttonFlags |= (short)ButtonFlags.X;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.Y) != 0)                          {                              buttonFlags |= (int)ButtonFlags.Y;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.LeftShoulder) != 0)                          {                              buttonFlags |= (short)ButtonFlags.LB;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.RightShoulder) != 0)                          {                              buttonFlags |= (short)ButtonFlags.RB;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.Back) != 0)                          {                              buttonFlags |= (short)ButtonFlags.Back;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.Start) != 0)                          {                              buttonFlags |= (short)ButtonFlags.Play;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.LeftThumb) != 0)                          {                              buttonFlags |= (short)ButtonFlags.LS;                          }                          if ((state.Gamepad.Buttons & GamepadButtonFlags.RightThumb) != 0)                          {                              buttonFlags |= (short)ButtonFlags.RS;                          }                            // Send the controller input packet                          MoonlightCommonRuntimeComponent.SendMultiControllerInput(                              controllerIndex'                              (short)buttonFlags'                              state.Gamepad.LeftTrigger'                              state.Gamepad.RightTrigger'                              state.Gamepad.LeftThumbX'                              state.Gamepad.LeftThumbY'                              state.Gamepad.RightThumbX'                              state.Gamepad.RightThumbY);                      }                  }              }
Missing Default,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,ClStageStarting,The following switch statement is missing a default case: switch (stage)              {                  case STAGE_PLATFORM_INIT:                      stateText = "Initializing platform...";                      break;                  case STAGE_HANDSHAKE:                      stateText = "Starting handshake...";                      break;                  case STAGE_CONTROL_STREAM_INIT:                      stateText = "Initializing control stream...";                      break;                  case STAGE_VIDEO_STREAM_INIT:                      stateText = "Initializing video stream...";                      break;                  case STAGE_AUDIO_STREAM_INIT:                      stateText = "Initializing audio stream...";                      break;                  case STAGE_INPUT_STREAM_INIT:                      stateText = "Initializing input stream...";                      break;                  case STAGE_CONTROL_STREAM_START:                      stateText = "Starting control stream...";                      break;                  case STAGE_VIDEO_STREAM_START:                      stateText = "Starting video stream...";                      break;                  case STAGE_AUDIO_STREAM_START:                      stateText = "Starting audio stream...";                      break;                  case STAGE_INPUT_STREAM_START:                      stateText = "Starting input stream...";                      break;              }
Missing Default,Moonlight,StreamFrame,C:\repos\limelight-stream_limelight-wp\Moonlight\StreamFrame\Connection.cs,ClStageFailed,The following switch statement is missing a default case: switch (stage)              {                  case STAGE_PLATFORM_INIT:                      stageFailureText = "Initializing platform failed. Error: " + errorCode.ToString();                      break;                  case STAGE_HANDSHAKE:                      stageFailureText = "Starting handshake failed. Error: " + errorCode.ToString();                      break;                  case STAGE_CONTROL_STREAM_INIT:                      stageFailureText = "Initializing control stream failed. Error: " + errorCode.ToString();                      break;                  case STAGE_VIDEO_STREAM_INIT:                      stageFailureText = "Initializing video stream failed. Error: " + errorCode.ToString();                      break;                  case STAGE_AUDIO_STREAM_INIT:                      stageFailureText = "Initializing audio stream failed. Error: " + errorCode.ToString();                      break;                  case STAGE_INPUT_STREAM_INIT:                      stageFailureText = "Initializing input stream failed. Error: " + errorCode.ToString();                      break;                  case STAGE_CONTROL_STREAM_START:                      stageFailureText = "Starting control stream failed. Error: " + errorCode.ToString();                      break;                  case STAGE_VIDEO_STREAM_START:                      stageFailureText = "Starting video stream failed. Error: " + errorCode.ToString();                      break;                  case STAGE_AUDIO_STREAM_START:                      stageFailureText = "Starting audio stream failed. Error: " + errorCode.ToString();                      break;                  case STAGE_INPUT_STREAM_START:                      stageFailureText = "Starting input stream failed. Error: " + errorCode.ToString();                      break;              }
