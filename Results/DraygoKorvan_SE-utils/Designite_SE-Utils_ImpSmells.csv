Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,Cyclomatic complexity of the method is 10
Complex Method,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,Cyclomatic complexity of the method is 17
Long Statement,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,floatingObjectCleanup,The length of the statement  "		if (Math.Abs (obj.Position.X) > maxsize || Math.Abs (obj.Position.Y) > maxsize || Math.Abs (obj.Position.Z) > maxsize || force) " is 127.
Long Statement,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,shipCleanup,The length of the statement  "		if (Math.Abs (grid.Position.X) > maxsize || Math.Abs (grid.Position.Y) > maxsize || Math.Abs (grid.Position.Z) > maxsize) { " is 123.
Long Statement,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The length of the statement  "					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ()); " is 127.
Long Statement,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The length of the statement  "					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. "); " is 120.
Complex Conditional,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,floatingObjectCleanup,The conditional expression  "Math.Abs (obj.Position.X) > maxsize || Math.Abs (obj.Position.Y) > maxsize || Math.Abs (obj.Position.Z) > maxsize || force"  is complex.
Empty Catch Block,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,saveXML,The method has an empty catch block.
Empty Catch Block,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,loadXML,The method has an empty catch block.
Empty Catch Block,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,loadDefaults,The method has an empty catch block.
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,Init,The following statement contains a magic number: resolution = 1000;  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: while (m_running) {  	foreach (SEUtilsScript _script in script) {  		if (DateTime.UtcNow > _script.nextrun) {  			if (_script.interval <= 0)  				continue;  			_script.lastrun = _script.nextrun;  			_script.nextrun = _script.nextrun + TimeSpan.FromSeconds (_script.interval);  			if (_script.enabled) {  				foreach (SEUtilsChatCommands _command in _script.commands) {  					Thread.Sleep (_command.delay * 1000);  					ChatManager.Instance.SendPublicChatMessage (_command.ToString ());  				}  			}  		}  	}  	Thread.Sleep (1000);  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: while (m_running) {  	foreach (SEUtilsScript _script in script) {  		if (DateTime.UtcNow > _script.nextrun) {  			if (_script.interval <= 0)  				continue;  			_script.lastrun = _script.nextrun;  			_script.nextrun = _script.nextrun + TimeSpan.FromSeconds (_script.interval);  			if (_script.enabled) {  				foreach (SEUtilsChatCommands _command in _script.commands) {  					Thread.Sleep (_command.delay * 1000);  					ChatManager.Instance.SendPublicChatMessage (_command.ToString ());  				}  			}  		}  	}  	Thread.Sleep (1000);  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: foreach (SEUtilsScript _script in script) {  	if (DateTime.UtcNow > _script.nextrun) {  		if (_script.interval <= 0)  			continue;  		_script.lastrun = _script.nextrun;  		_script.nextrun = _script.nextrun + TimeSpan.FromSeconds (_script.interval);  		if (_script.enabled) {  			foreach (SEUtilsChatCommands _command in _script.commands) {  				Thread.Sleep (_command.delay * 1000);  				ChatManager.Instance.SendPublicChatMessage (_command.ToString ());  			}  		}  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: if (DateTime.UtcNow > _script.nextrun) {  	if (_script.interval <= 0)  		continue;  	_script.lastrun = _script.nextrun;  	_script.nextrun = _script.nextrun + TimeSpan.FromSeconds (_script.interval);  	if (_script.enabled) {  		foreach (SEUtilsChatCommands _command in _script.commands) {  			Thread.Sleep (_command.delay * 1000);  			ChatManager.Instance.SendPublicChatMessage (_command.ToString ());  		}  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: if (_script.enabled) {  	foreach (SEUtilsChatCommands _command in _script.commands) {  		Thread.Sleep (_command.delay * 1000);  		ChatManager.Instance.SendPublicChatMessage (_command.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: foreach (SEUtilsChatCommands _command in _script.commands) {  	Thread.Sleep (_command.delay * 1000);  	ChatManager.Instance.SendPublicChatMessage (_command.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: Thread.Sleep (_command.delay * 1000);  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,scriptloop,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,shipCleanup,The following statement contains a magic number: if (maxsize < minCleanupDistance * 1000)  	throw new Exception ("Distance is less than " + minCleanupDistance.ToString () + "KM' aborting cleanup.");  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,shipCleanup,The following statement contains a magic number: foreach (CubeGridEntity grid in shipList) {  	if (Math.Abs (grid.Position.X) > maxsize || Math.Abs (grid.Position.Y) > maxsize || Math.Abs (grid.Position.Z) > maxsize) {  		if (!force) {  			//kill ship movement  			grid.LinearVelocity = new Vector3Wrapper (0' 0' 0);  			grid.AngularVelocity = new Vector3Wrapper (0' 0' 0);  			grid.Position = Vector3.Add (myPos' new Vector3Wrapper (movedist' 0' 0));  			movedist = movedist + 50;  			continue;  		}  		else  			grid.Dispose ();  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,shipCleanup,The following statement contains a magic number: if (Math.Abs (grid.Position.X) > maxsize || Math.Abs (grid.Position.Y) > maxsize || Math.Abs (grid.Position.Z) > maxsize) {  	if (!force) {  		//kill ship movement  		grid.LinearVelocity = new Vector3Wrapper (0' 0' 0);  		grid.AngularVelocity = new Vector3Wrapper (0' 0' 0);  		grid.Position = Vector3.Add (myPos' new Vector3Wrapper (movedist' 0' 0));  		movedist = movedist + 50;  		continue;  	}  	else  		grid.Dispose ();  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,shipCleanup,The following statement contains a magic number: if (!force) {  	//kill ship movement  	grid.LinearVelocity = new Vector3Wrapper (0' 0' 0);  	grid.AngularVelocity = new Vector3Wrapper (0' 0' 0);  	grid.Position = Vector3.Add (myPos' new Vector3Wrapper (movedist' 0' 0));  	movedist = movedist + 50;  	continue;  }  else  	grid.Dispose ();  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,shipCleanup,The following statement contains a magic number: movedist = movedist + 50;  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	string[] words = _event.message.Split (' ');  	if (words.Count () >= 2) {  		if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				floatingObjectCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  			bool force = false;  			if (words.Count () >= 3)  				if (words [2].ToLower () == "force") {  					force = true;  				}  			try {  				factionCleanup (force);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  			}  		}  		if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  			bool force = false;  			int dist = 0;  			if (words.Count () >= 4) {  				if (words [2].ToLower () == "force") {  					force = true;  				}  				if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  					try {  						dist = Convert.ToInt32 (words [3]);  						if (dist < 10)  							throw new Exception ("distance must be greater than 10km");  						shipCleanup (force' _event.sourceUserId' dist);  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  					}  					catch (Exception ex) {  						ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  					}  				}  			}  			else  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  		}  	}  }  catch (Exception ex) {  	LogManager.APILog.WriteLine ("UtilsCleanup: " + ex.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 2) {  	if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			floatingObjectCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  		bool force = false;  		if (words.Count () >= 3)  			if (words [2].ToLower () == "force") {  				force = true;  			}  		try {  			factionCleanup (force);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  		}  	}  	if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  		bool force = false;  		int dist = 0;  		if (words.Count () >= 4) {  			if (words [2].ToLower () == "force") {  				force = true;  			}  			if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  				try {  					dist = Convert.ToInt32 (words [3]);  					if (dist < 10)  						throw new Exception ("distance must be greater than 10km");  					shipCleanup (force' _event.sourceUserId' dist);  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  				}  				catch (Exception ex) {  					ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  				}  			}  		}  		else  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  	bool force = false;  	if (words.Count () >= 3)  		if (words [2].ToLower () == "force") {  			force = true;  		}  	try {  		floatingObjectCleanup (force);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "fo" || words [1].ToLower () == "floating-object") {  	bool force = false;  	if (words.Count () >= 3)  		if (words [2].ToLower () == "force") {  			force = true;  		}  	try {  		floatingObjectCleanup (force);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Floating object cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 3)  	if (words [2].ToLower () == "force") {  		force = true;  	}  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 3)  	if (words [2].ToLower () == "force") {  		force = true;  	}  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [2].ToLower () == "force") {  	force = true;  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  	bool force = false;  	if (words.Count () >= 3)  		if (words [2].ToLower () == "force") {  			force = true;  		}  	try {  		factionCleanup (force);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "fa" || words [1].ToLower () == "faction") {  	bool force = false;  	if (words.Count () >= 3)  		if (words [2].ToLower () == "force") {  			force = true;  		}  	try {  		factionCleanup (force);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Faction cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 3)  	if (words [2].ToLower () == "force") {  		force = true;  	}  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 3)  	if (words [2].ToLower () == "force") {  		force = true;  	}  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [2].ToLower () == "force") {  	force = true;  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  	bool force = false;  	int dist = 0;  	if (words.Count () >= 4) {  		if (words [2].ToLower () == "force") {  			force = true;  		}  		if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  			try {  				dist = Convert.ToInt32 (words [3]);  				if (dist < 10)  					throw new Exception ("distance must be greater than 10km");  				shipCleanup (force' _event.sourceUserId' dist);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  			}  		}  	}  	else  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  	bool force = false;  	int dist = 0;  	if (words.Count () >= 4) {  		if (words [2].ToLower () == "force") {  			force = true;  		}  		if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  			try {  				dist = Convert.ToInt32 (words [3]);  				if (dist < 10)  					throw new Exception ("distance must be greater than 10km");  				shipCleanup (force' _event.sourceUserId' dist);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  			}  		}  	}  	else  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  	bool force = false;  	int dist = 0;  	if (words.Count () >= 4) {  		if (words [2].ToLower () == "force") {  			force = true;  		}  		if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  			try {  				dist = Convert.ToInt32 (words [3]);  				if (dist < 10)  					throw new Exception ("distance must be greater than 10km");  				shipCleanup (force' _event.sourceUserId' dist);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  			}  		}  	}  	else  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  	bool force = false;  	int dist = 0;  	if (words.Count () >= 4) {  		if (words [2].ToLower () == "force") {  			force = true;  		}  		if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  			try {  				dist = Convert.ToInt32 (words [3]);  				if (dist < 10)  					throw new Exception ("distance must be greater than 10km");  				shipCleanup (force' _event.sourceUserId' dist);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  			}  		}  	}  	else  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  	bool force = false;  	int dist = 0;  	if (words.Count () >= 4) {  		if (words [2].ToLower () == "force") {  			force = true;  		}  		if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  			try {  				dist = Convert.ToInt32 (words [3]);  				if (dist < 10)  					throw new Exception ("distance must be greater than 10km");  				shipCleanup (force' _event.sourceUserId' dist);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  			}  		}  	}  	else  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [1].ToLower () == "ship" || words [1].ToLower () == "ships") {  	bool force = false;  	int dist = 0;  	if (words.Count () >= 4) {  		if (words [2].ToLower () == "force") {  			force = true;  		}  		if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  			try {  				dist = Convert.ToInt32 (words [3]);  				if (dist < 10)  					throw new Exception ("distance must be greater than 10km");  				shipCleanup (force' _event.sourceUserId' dist);  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  			}  			catch (Exception ex) {  				ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  			}  		}  	}  	else  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 4) {  	if (words [2].ToLower () == "force") {  		force = true;  	}  	if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  		try {  			dist = Convert.ToInt32 (words [3]);  			if (dist < 10)  				throw new Exception ("distance must be greater than 10km");  			shipCleanup (force' _event.sourceUserId' dist);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  		}  	}  }  else  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 4) {  	if (words [2].ToLower () == "force") {  		force = true;  	}  	if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  		try {  			dist = Convert.ToInt32 (words [3]);  			if (dist < 10)  				throw new Exception ("distance must be greater than 10km");  			shipCleanup (force' _event.sourceUserId' dist);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  		}  	}  }  else  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 4) {  	if (words [2].ToLower () == "force") {  		force = true;  	}  	if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  		try {  			dist = Convert.ToInt32 (words [3]);  			if (dist < 10)  				throw new Exception ("distance must be greater than 10km");  			shipCleanup (force' _event.sourceUserId' dist);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  		}  	}  }  else  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 4) {  	if (words [2].ToLower () == "force") {  		force = true;  	}  	if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  		try {  			dist = Convert.ToInt32 (words [3]);  			if (dist < 10)  				throw new Exception ("distance must be greater than 10km");  			shipCleanup (force' _event.sourceUserId' dist);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  		}  	}  }  else  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 4) {  	if (words [2].ToLower () == "force") {  		force = true;  	}  	if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  		try {  			dist = Convert.ToInt32 (words [3]);  			if (dist < 10)  				throw new Exception ("distance must be greater than 10km");  			shipCleanup (force' _event.sourceUserId' dist);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  		}  	}  }  else  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words.Count () >= 4) {  	if (words [2].ToLower () == "force") {  		force = true;  	}  	if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  		try {  			dist = Convert.ToInt32 (words [3]);  			if (dist < 10)  				throw new Exception ("distance must be greater than 10km");  			shipCleanup (force' _event.sourceUserId' dist);  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  		}  		catch (Exception ex) {  			ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  		}  	}  }  else  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Must specify 'force' or 'rescue'' and a distance. ");  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [2].ToLower () == "force") {  	force = true;  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  	try {  		dist = Convert.ToInt32 (words [3]);  		if (dist < 10)  			throw new Exception ("distance must be greater than 10km");  		shipCleanup (force' _event.sourceUserId' dist);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  	try {  		dist = Convert.ToInt32 (words [3]);  		if (dist < 10)  			throw new Exception ("distance must be greater than 10km");  		shipCleanup (force' _event.sourceUserId' dist);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  	try {  		dist = Convert.ToInt32 (words [3]);  		if (dist < 10)  			throw new Exception ("distance must be greater than 10km");  		shipCleanup (force' _event.sourceUserId' dist);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (words [2].ToLower () == "force" || words [2].ToLower () == "rescue") {  	try {  		dist = Convert.ToInt32 (words [3]);  		if (dist < 10)  			throw new Exception ("distance must be greater than 10km");  		shipCleanup (force' _event.sourceUserId' dist);  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  	}  	catch (Exception ex) {  		ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  	}  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	dist = Convert.ToInt32 (words [3]);  	if (dist < 10)  		throw new Exception ("distance must be greater than 10km");  	shipCleanup (force' _event.sourceUserId' dist);  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  }  catch (Exception ex) {  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: try {  	dist = Convert.ToInt32 (words [3]);  	if (dist < 10)  		throw new Exception ("distance must be greater than 10km");  	shipCleanup (force' _event.sourceUserId' dist);  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup suceeded.");  }  catch (Exception ex) {  	ChatManager.Instance.SendPrivateChatMessage (_event.sourceUserId' "Ship cleanup failed: " + ex.Message.ToString ());  }  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: dist = Convert.ToInt32 (words [3]);  
Magic Number,SEUtils,SEUtils,C:\repos\DraygoKorvan_SE-utils\SE-Utils\Core.cs,UtilsCleanup,The following statement contains a magic number: if (dist < 10)  	throw new Exception ("distance must be greater than 10km");  
