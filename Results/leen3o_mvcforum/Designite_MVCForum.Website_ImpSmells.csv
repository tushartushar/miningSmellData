Implementation smell,Namespace,Class,File,Method,Description
Long Method,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,Create,The method has 110 lines of code.
Long Method,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,MemberRegisterLogic,The method has 118 lines of code.
Long Method,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,LogOn,The method has 114 lines of code.
Long Method,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The method has 149 lines of code.
Long Method,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,MovePost,The method has 126 lines of code.
Long Method,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,EditPostTopic,The method has 252 lines of code.
Long Method,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,Create,The method has 291 lines of code.
Long Method,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,Show,The method has 117 lines of code.
Long Method,MVCForum.Website.Controllers.OAuthControllers,FacebookOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\FacebookOAuthController.cs,FacebookLogin,The method has 145 lines of code.
Long Method,MVCForum.Website.Controllers.OAuthControllers,GoogleOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\GoogleOAuthController.cs,GoogleLogin,The method has 124 lines of code.
Long Method,MVCForum.Website.Controllers.OAuthControllers,MicrosoftOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\MicrosoftOAuthController.cs,MicrosoftLogin,The method has 159 lines of code.
Complex Method,MVCForum.Website.Application,AppHelpers,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\AppHelpers.cs,UploadFile,Cyclomatic complexity of the method is 8
Complex Method,MVCForum.Website.Application,DatesUI,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\DatesUI.cs,GetPrettyDate,Cyclomatic complexity of the method is 12
Complex Method,MVCForum.Website.Application,Extensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\Extensions.cs,Pager,Cyclomatic complexity of the method is 8
Long Parameter List,MVCForum.Website.Application,Extensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\Extensions.cs,Pager,The method has 7 parameters. Parameters: helper' currentPage' pageSize' totalItemCount' routeValues' actionOveride' controllerOveride
Long Parameter List,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,BeginLabel,The method has 5 parameters. Parameters: html' expression' labelText' htmlAttributes' metadataProvider
Long Parameter List,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,BeginLabel,The method has 5 parameters. Parameters: html' expression' labelText' htmlAttributes' metadataProvider
Long Parameter List,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,BeginLabelFor,The method has 5 parameters. Parameters: html' expression' labelText' htmlAttributes' metadataProvider
Long Parameter List,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,BeginLabelFor,The method has 5 parameters. Parameters: html' expression' labelText' htmlAttributes' metadataProvider
Long Parameter List,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,LabelHelper,The method has 5 parameters. Parameters: html' metadata' htmlFieldName' labelText' htmlAttributes
Long Parameter List,MVCForum.Website.Application.ScheduledJobs,MarkAsSolutionReminderJob,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\MarkAsSolutionReminderJob.cs,MarkAsSolutionReminderJob,The method has 6 parameters. Parameters: loggingService' emailService' unitOfWorkManager' topicService' settingsService' localizationService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AccountController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AccountController.cs,AccountController,The method has 14 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' postService' topicService' membershipUserPointsService' activityService' pollService' pollVoteService' pollAnswerService' uploadedFileService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AdminController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminController.cs,AdminController,The method has 5 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AdminLanguageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminLanguageController.cs,AdminLanguageController,The method has 5 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AdminBadgeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminBadgeController.cs,AdminBadgeController,The method has 6 parameters. Parameters: badgeService' loggingService' unitOfWorkManager' membershipService' localizationService' settingsService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AdminSocialController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminSocialController.cs,AdminSocialController,The method has 6 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AdminSpamController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminSpamController.cs,AdminSpamController,The method has 6 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,BannedEmailController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\BannedEmailController.cs,BannedEmailController,The method has 6 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService' bannedEmailService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,BatchController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\BatchController.cs,BatchController,The method has 8 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService' categoryService' topicService' privateMessageService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,BannedWordController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\BannedWordController.cs,BannedWordController,The method has 6 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService' bannedWordService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,DashboardController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\DashboardController.cs,DashboardController,The method has 11 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService' postService' topicService' topicTagService' membershipUserPointsService' categoryService' privateMessageService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,BaseAdminController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\BaseAdminController.cs,BaseAdminController,The method has 5 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AdminCategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminCategoryController.cs,AdminCategoryController,The method has 6 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' categoryService' settingsService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,ImportExportController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\ImportExportController.cs,ImportExportController,The method has 5 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,LogController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\LogController.cs,LogController,The method has 5 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,PermissionsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\PermissionsController.cs,PermissionsController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' roleService' localizationService' permissionService' categoryService' categoryPermissionForRoleService' membershipService' settingsService' globalPermissionForRoleService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,SettingsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\SettingsController.cs,SettingsController,The method has 8 parameters. Parameters: loggingService' unitOfWorkManager' localizationService' membershipService' roleService' settingsService' emailService' cacheService
Long Parameter List,MVCForum.Website.Areas.Admin.Controllers,AdminTagController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminTagController.cs,AdminTagController,The method has 6 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' settingsService' topicTagService
Long Parameter List,MVCForum.Website.Controllers,ModerateController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\ModerateController.cs,ModerateController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' postService' topicService' categoryService' cacheService
Long Parameter List,MVCForum.Website.Controllers,BadgeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BadgeController.cs,BadgeController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' badgeService' postService' membershipService' localizationService' roleService' settingsService' favouriteService' cacheService
Long Parameter List,MVCForum.Website.Controllers,BlockController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BlockController.cs,BlockController,The method has 8 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' blockService' cacheService
Long Parameter List,MVCForum.Website.Controllers,ClosedController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\ClosedController.cs,ClosedController,The method has 7 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Controllers,EmailController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\EmailController.cs,EmailController,The method has 13 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' topicNotificationService' categoryNotificationService' categoryService' topicService' topicTagService' tagNotificationService' cacheService
Long Parameter List,MVCForum.Website.Controllers,FavouriteController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\FavouriteController.cs,FavouriteController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' roleService' topicService' postService' localizationService' settingsService' favouriteService' cacheService
Long Parameter List,MVCForum.Website.Controllers,FileController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\FileController.cs,FileController,The method has 9 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' uploadedFileService' categoryService' cacheService
Long Parameter List,MVCForum.Website.Controllers,PollController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PollController.cs,PollController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' pollService' pollVoteService' pollAnswerService' cacheService
Long Parameter List,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,PrivateMessageController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' privateMessageService' emailService' configService' cacheService
Long Parameter List,MVCForum.Website.Controllers,SearchController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\SearchController.cs,SearchController,The method has 11 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' postService' voteService' favouriteService' categoryService' cacheService
Long Parameter List,MVCForum.Website.Controllers,SnippetsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\SnippetsController.cs,SnippetsController,The method has 8 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' membershipUserPointsService' cacheService
Long Parameter List,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,BaseController,The method has 7 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Controllers,CategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\CategoryController.cs,CategoryController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' categoryService' settingsService' topicService' categoryNotificationService' cacheService
Long Parameter List,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,HomeController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' activityService' membershipService' topicService' localizationService' roleService' settingsService' categoryService' cacheService
Long Parameter List,MVCForum.Website.Controllers,LanguageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\LanguageController.cs,LanguageController,The method has 7 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,MembersController,The method has 15 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' postService' reportService' emailService' privateMessageService' bannedEmailService' bannedWordService' categoryService' topicService' cacheService
Long Parameter List,MVCForum.Website.Controllers,PointController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PointController.cs,PointController,The method has 8 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' membershipUserPointsService' cacheService
Long Parameter List,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,PostController,The method has 16 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' topicService' postService' settingsService' categoryService' topicNotificationService' emailService' reportService' bannedWordService' voteService' postEditService' cacheService
Long Parameter List,MVCForum.Website.Controllers,StatsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\StatsController.cs,StatsController,The method has 10 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' topicService' postService' categoryService' cacheService
Long Parameter List,MVCForum.Website.Controllers,TagController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TagController.cs,TagController,The method has 9 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' topicTagService' categoryService' cacheService
Long Parameter List,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,TopicController,The method has 23 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' roleService' topicService' postService' categoryService' localizationService' settingsService' topicTagService' membershipUserPointsService' categoryNotificationService' emailService' topicNotificationService' pollService' pollAnswerService' bannedWordService' voteService' favouriteService' uploadedFileService' cacheService' tagNotificationService' postEditService
Long Parameter List,MVCForum.Website.Controllers,UploadController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\UploadController.cs,UploadController,The method has 9 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' postService' uploadedFileService' cacheService
Long Parameter List,MVCForum.Website.Controllers,VoteController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\VoteController.cs,VoteController,The method has 11 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' postService' voteService' settingsService' topicService' membershipUserPointsService' cacheService
Long Parameter List,MVCForum.Website.Controllers.OAuthControllers,FacebookOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\FacebookOAuthController.cs,FacebookOAuthController,The method has 7 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Controllers.OAuthControllers,GoogleOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\GoogleOAuthController.cs,GoogleOAuthController,The method has 7 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Controllers.OAuthControllers,MicrosoftOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\MicrosoftOAuthController.cs,MicrosoftOAuthController,The method has 7 parameters. Parameters: loggingService' unitOfWorkManager' membershipService' localizationService' roleService' settingsService' cacheService
Long Parameter List,MVCForum.Website.Membership,MvcForumMembershipProvider,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Providers\MembershipProvider.cs,CreateUser,The method has 8 parameters. Parameters: username' password' email' passwordQuestion' passwordAnswer' isApproved' providerUserKey' status
Long Parameter List,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreateTopicViewModels,The method has 6 parameters. Parameters: topics' roleService' usersRole' loggedOnUser' allowedCategories' settings
Long Parameter List,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreateTopicViewModel,The method has 10 parameters. Parameters: topic' permission' posts' starterPost' pageIndex' totalCount' totalPages' loggedOnUser' settings' getExtendedData
Long Parameter List,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreatePostViewModel,The method has 7 parameters. Parameters: post' votes' permission' topic' loggedOnUser' settings' favourites
Long Parameter List,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreatePostViewModels,The method has 7 parameters. Parameters: posts' votes' permission' topic' loggedOnUser' settings' favourites
Long Parameter List,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreatePostViewModels,The method has 6 parameters. Parameters: posts' votes' permissions' loggedOnUser' settings' favourites
Long Identifier,MVCForum.Website.Areas.Admin.Controllers,PermissionsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\PermissionsController.cs,PermissionsController,The length of the parameter categoryPermissionForRoleService is 32.
Long Identifier,MVCForum.Website.Areas.Admin.Controllers,PermissionsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\PermissionsController.cs,PermissionsController,The length of the parameter globalPermissionForRoleService is 30.
Long Identifier,MVCForum.Website.Areas.Admin.Controllers,PermissionsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\PermissionsController.cs,,The length of the parameter _categoryPermissionForRoleService is 33.
Long Identifier,MVCForum.Website.Areas.Admin.Controllers,PermissionsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\PermissionsController.cs,,The length of the parameter _globalPermissionForRoleService is 31.
Long Identifier,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,MemberRegisterLogic,The length of the parameter memberEmailAuthorisationNeeded is 30.
Long Identifier,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,SetRegisterViewBagMessage,The length of the parameter memberEmailAuthorisationNeeded is 30.
Long Identifier,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,SendEmailConfirmationEmail,The length of the parameter memberEmailAuthorisationNeeded is 30.
Long Identifier,MVCForum.Website.Membership,MvcForumMembershipProvider,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Providers\MembershipProvider.cs,,The length of the parameter _minRequiredNonAlphanumericCharacters is 37.
Long Statement,MVCForum.Website.Akismet.NET,Validator,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\Validator.cs,PreparePars,The length of the statement  "            result["permalink"] = String.IsNullOrEmpty(comment.permalink) ? String.Empty : HttpUtility.UrlEncode(comment.permalink); " is 120.
Long Statement,MVCForum.Website.Akismet.NET,Validator,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\Validator.cs,PreparePars,The length of the statement  "            result["comment_type"] = String.IsNullOrEmpty(comment.comment_type) ? String.Empty : HttpUtility.UrlEncode(comment.comment_type); " is 129.
Long Statement,MVCForum.Website.Akismet.NET,Validator,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\Validator.cs,PreparePars,The length of the statement  "            result["comment_author"] = String.IsNullOrEmpty(comment.comment_author) ? String.Empty : HttpUtility.UrlEncode(comment.comment_author); " is 135.
Long Statement,MVCForum.Website.Akismet.NET,Validator,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\Validator.cs,PreparePars,The length of the statement  "            result["comment_author_email"] = String.IsNullOrEmpty(comment.comment_author_email) ? String.Empty : HttpUtility.UrlEncode(comment.comment_author_email); " is 153.
Long Statement,MVCForum.Website.Akismet.NET,Validator,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\Validator.cs,PreparePars,The length of the statement  "            result["comment_author_url"] = String.IsNullOrEmpty(comment.comment_author_url) ? String.Empty : HttpUtility.UrlEncode(comment.comment_author_url); " is 147.
Long Statement,MVCForum.Website.Akismet.NET,Validator,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\Validator.cs,PreparePars,The length of the statement  "            result["comment_content"] = String.IsNullOrEmpty(comment.comment_content) ? String.Empty : HttpUtility.UrlEncode(comment.comment_content); " is 138.
Long Statement,MVCForum.Website.Application,MobileExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\MobileExtensions.cs,UserAgentContains,The length of the statement  "            return (c.Request.UserAgent != null && c.Request.UserAgent.IndexOf(agentToFind' StringComparison.OrdinalIgnoreCase) >= 0); " is 122.
Long Statement,MVCForum.Website.Application,MobileExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\MobileExtensions.cs,IsMobileDevice,The length of the statement  "                var b = new Regex(@"(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino"' RegexOptions.IgnoreCase | RegexOptions.Multiline); " is 384.
Long Statement,MVCForum.Website.Application,MobileExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\MobileExtensions.cs,IsMobileDevice,The length of the statement  "                var v = new Regex(@"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-"' RegexOptions.IgnoreCase | RegexOptions.Multiline); " is 1679.
Long Statement,MVCForum.Website.Application,Extensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\Extensions.cs,Pager,The length of the statement  "            var actionName = !string.IsNullOrEmpty(actionOveride) ? actionOveride : helper.ViewContext.RouteData.GetRequiredString("action"); " is 129.
Long Statement,MVCForum.Website.Application,Extensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\Extensions.cs,Pager,The length of the statement  "            var controllerName = !string.IsNullOrEmpty(controllerOveride) ? controllerOveride : helper.ViewContext.RouteData.GetRequiredString("controller"); " is 145.
Long Statement,MVCForum.Website.Application,AkismetHelper,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\AkismetHelper.cs,IsSpam,The length of the statement  "            if (_settingsService.GetSettings().EnableAkisment == null || _settingsService.GetSettings().EnableAkisment == false) return false; " is 130.
Long Statement,MVCForum.Website.Application,AkismetHelper,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Akismet\AkismetHelper.cs,IsSpam,The length of the statement  "            if (_settingsService.GetSettings().EnableAkisment == null || _settingsService.GetSettings().EnableAkisment == false) return false; " is 130.
Long Statement,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,BeginLabelForModel,The length of the statement  "            return LabelHelper(html' html.ViewData.ModelMetadata' String.Empty' labelText: null' htmlAttributes: HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes)); " is 161.
Long Statement,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,BeginLabelForModel,The length of the statement  "            return LabelHelper(html' html.ViewData.ModelMetadata' String.Empty' labelText' HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes)); " is 139.
Long Statement,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,LabelHelper,The length of the statement  "            string resolvedLabelText = labelText ?? metadata.DisplayName ?? metadata.PropertyName ?? htmlFieldName.Split('.').Last(); " is 121.
Long Statement,MVCForum.Website.Application.ExtensionMethods,HtmlLabelExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\HtmlLabelExtensions.cs,LabelHelper,The length of the statement  "            tag.Attributes.Add("for"' TagBuilder.CreateSanitizedId(html.ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldName(htmlFieldName))); " is 132.
Long Statement,MVCForum.Website.Application.ScheduledJobs,MarkAsSolutionReminderJob,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\MarkAsSolutionReminderJob.cs,Execute,The length of the statement  "                                var topicLink = $"<a href=\"{settings.ForumUrl.TrimEnd('/')}{markAsSolutionReminder.Topic.NiceUrl}\">{markAsSolutionReminder.Topic.Name}</a>"; " is 142.
Long Statement,MVCForum.Website.Application.ScheduledJobs,MarkAsSolutionReminderJob,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\MarkAsSolutionReminderJob.cs,Execute,The length of the statement  "                                sb.AppendFormat("<p>{0}</p>"' string.Format(_localizationService.GetResourceString("Tasks.MarkAsSolutionReminderJob.EmailBody")' " is 128.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AccountController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AccountController.cs,ListUsers,The length of the statement  "                var allUsers = string.IsNullOrEmpty(search) ? MembershipService.GetAll(pageIndex' SiteConstants.Instance.AdminListPageSize) : " is 125.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AdminLanguageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminLanguageController.cs,ListResourceKeys,The length of the statement  "                var allResources = string.IsNullOrEmpty(search) ? LocalizationService.GetAllResourceKeys(pageIndex' SiteConstants.Instance.AdminListPageSize) : " is 143.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AdminLanguageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminLanguageController.cs,CreateLanguage,The length of the statement  "                    var errors = (from key in ModelState.Keys select ModelState[key] into state where state.Errors.Any() select state.Errors.First().ErrorMessage).ToList(); " is 152.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AdminLanguageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminLanguageController.cs,ManageResourceKeys,The length of the statement  "                        var errors = (from key in ModelState.Keys select ModelState[key] into state where state.Errors.Any() select state.Errors.First().ErrorMessage).ToList(); " is 152.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AdminBadgeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminBadgeController.cs,Index,The length of the statement  "                var allBadges = string.IsNullOrEmpty(search) ? _badgeService.GetPagedGroupedBadges(pageIndex' SiteConstants.Instance.AdminListPageSize) : " is 137.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,BannedEmailController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\BannedEmailController.cs,Index,The length of the statement  "                var allEmails = string.IsNullOrEmpty(search) ? _bannedEmailService.GetAllPaged(pageIndex' SiteConstants.Instance.AdminListPageSize) : " is 133.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,BannedWordController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\BannedWordController.cs,Index,The length of the statement  "                var allEmails = string.IsNullOrEmpty(search) ? _bannedWordService.GetAllPaged(pageIndex' SiteConstants.Instance.AdminListPageSize) : " is 132.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,DashboardController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\DashboardController.cs,LowestPointUsers,The length of the statement  "                    return PartialView(new LowestPointUsersViewModels { Users = _membershipUserPointsService.GetAllTimePointsNegative(AmountToShow) }); " is 131.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,DashboardController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\DashboardController.cs,MvcForumLatestNews,The length of the statement  "                    var viewModel = new LatestNewsViewModel { RssFeed = reader.GetRssFeed("http://www.mvcforum.com/rss").Take(AmountToShow).ToList() }; " is 131.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AdminCategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminCategoryController.cs,CreateCategory,The length of the statement  "                var categoryViewModel = new CategoryViewModel { AllCategories = _categoryService.GetBaseSelectListCategories(_categoryService.GetAll()) }; " is 138.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AdminCategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminCategoryController.cs,EditCategory,The length of the statement  "                            var uploadFolderPath = HostingEnvironment.MapPath(string.Concat(SiteConstants.Instance.UploadFolderPath' categoryViewModel.Id)); " is 128.
Long Statement,MVCForum.Website.Areas.Admin.Controllers,AdminTagController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminTagController.cs,Index,The length of the statement  "                var allTags = string.IsNullOrEmpty(search) ? _topicTagService.GetPagedGroupedTags(pageIndex' SiteConstants.Instance.AdminListPageSize) : " is 136.
Long Statement,MVCForum.Website.Controllers,BadgeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BadgeController.cs,MarkAsSolution,The length of the statement  "                    var databaseUpdateNeeded = _badgeService.ProcessBadge(BadgeType.MarkAsSolution' post.User) | _badgeService.ProcessBadge(BadgeType.MarkAsSolution' post.Topic.User); " is 163.
Long Statement,MVCForum.Website.Controllers,BadgeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BadgeController.cs,Favourite,The length of the statement  "                    var databaseUpdateNeeded = _badgeService.ProcessBadge(BadgeType.Favourite' favourite.Member) | _badgeService.ProcessBadge(BadgeType.Favourite' favourite.Post.User); " is 164.
Long Statement,MVCForum.Website.Controllers,FavouriteController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\FavouriteController.cs,Index,The length of the statement  "                    var postViewModel = ViewModelMapping.CreatePostViewModel(post' post.Votes.ToList()' permissions' post.Topic' LoggedOnReadOnlyUser' SettingsService.GetSettings()' post.Favourites.ToList()); " is 188.
Long Statement,MVCForum.Website.Controllers,PollController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PollController.cs,UpdatePoll,The length of the statement  "                    var viewModel = new PollViewModel { Poll = poll' TotalVotesInPoll = votes.Count()' UserHasAlreadyVoted = alreadyVoted }; " is 120.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,Index,The length of the statement  "                var pagedMessages = _privateMessageService.GetUsersPrivateMessages(pageIndex' SiteConstants.Instance.PrivateMessageListSize' LoggedOnReadOnlyUser); " is 147.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,Create,The length of the statement  "                    if (senderCount > (settings.MaxPrivateMessagesPerMember - SiteConstants.Instance.PrivateMessageWarningAmountLessThanAllowedSize)) " is 129.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,Create,The length of the statement  "                    ViewBag.ImageUploadType = permissions[SiteConstants.Instance.PermissionInsertEditorImages].IsTicked ? "forumimageinsert" : "image"; " is 131.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,Create,The length of the statement  "                                return  Content(string.Format(LocalizationService.GetResourceString("PM.ReceivedItemsOverCapcity")' memberTo.UserName)); " is 120.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,Create,The length of the statement  "                            if (receiverCount > (settings.MaxPrivateMessagesPerMember - SiteConstants.Instance.PrivateMessageWarningAmountLessThanAllowedSize)) " is 131.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,Create,The length of the statement  "                                    sb.Append($"<p>{string.Format(LocalizationService.GetResourceString("PM.NewPrivateMessageBody")' LoggedOnReadOnlyUser.UserName)}</p>"); " is 135.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,View,The length of the statement  "                        var sentMessage = _privateMessageService.GetMatchingSentPrivateMessage(message.DateSent' message.UserFrom.Id' message.UserTo.Id); " is 129.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,View,The length of the statement  "                    //var allMessages = loggedOnUser.PrivateMessagesReceived.Where(x => x.UserFrom.Id == from && x.IsSentMessage == false).ToList(); " is 128.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,View,The length of the statement  "                    //allMessages.AddRange(loggedOnUser.PrivateMessagesSent.Where(x => x.UserTo.Id == from && x.IsSentMessage == true).ToList()); " is 125.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,View,The length of the statement  "                    var allMessages = _privateMessageService.GetUsersPrivateMessages(1' SiteConstants.Instance.PagingGroupSize' loggedOnUser' userFrom); " is 132.
Long Statement,MVCForum.Website.Controllers,PrivateMessageController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PrivateMessageController.cs,AjaxMore,The length of the statement  "                    var allMessages = _privateMessageService.GetUsersPrivateMessages(viewModel.PageIndex' SiteConstants.Instance.PagingGroupSize' loggedOnUser' userFrom); " is 150.
Long Statement,MVCForum.Website.Controllers,SearchController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\SearchController.cs,Index,The length of the statement  "                    var viewModels = ViewModelMapping.CreatePostViewModels(posts.ToList()' votes' topicPermissions' LoggedOnReadOnlyUser' settings' favs); " is 134.
Long Statement,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,OnActionExecuting,The length of the statement  "                if (controller.ToString().ToLower() != "closed" && controller.ToString().ToLower() != "members" && !area.ToString().ToLower().Contains("admin")) " is 144.
Long Statement,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,OnActionExecuting,The length of the statement  "                    filterContext.Result = new RedirectToRouteResult(new RouteValueDictionary { { "controller"' "Closed" }' { "action"' "Index" } }); " is 129.
Long Statement,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,OnActionExecuting,The length of the statement  "            if (SettingsService.GetSettings().AgreeToTermsAndConditions == true && !filterContext.IsChildAction && LoggedOnReadOnlyUser != null && LoggedOnReadOnlyUser.HasAgreedToTermsAndConditions != true) " is 194.
Long Statement,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,OnActionExecuting,The length of the statement  "                    filterContext.Result = new RedirectToRouteResult(new RouteValueDictionary { { "controller"' "Home" }' { "action"' "TermsAndConditions" } }); " is 140.
Long Statement,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,OnActionExecuting,The length of the statement  "                filterContext.Result = new RedirectToRouteResult(new RouteValueDictionary { { "controller"' "Home" }' { "action"' "Index" } }); " is 127.
Long Statement,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,OnActionExecuting,The length of the statement  "                filterContext.Result = new RedirectToRouteResult(new RouteValueDictionary { { "controller"' "Home" }' { "action"' "Index" } }); " is 127.
Long Statement,MVCForum.Website.Controllers,CategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\CategoryController.cs,ListMainCategories,The length of the statement  "                    AllPermissionSets = ViewModelMapping.GetPermissionsForCategories(_categoryService.GetAllMainCategories()' _roleService' UsersRole) " is 130.
Long Statement,MVCForum.Website.Controllers,CategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\CategoryController.cs,Show,The length of the statement  "                    var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics.ToList()' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' SettingsService.GetSettings()); " is 174.
Long Statement,MVCForum.Website.Controllers,CategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\CategoryController.cs,Show,The length of the statement  "                            IsSubscribed = UserIsAuthenticated && (_categoryNotificationService.GetByUserAndCategory(LoggedOnReadOnlyUser' category.Category).Any()) " is 136.
Long Statement,MVCForum.Website.Controllers,CategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\CategoryController.cs,CategoryRss,The length of the statement  "                    return new RssResult(rssTopics' string.Format(LocalizationService.GetResourceString("Rss.Category.Title")' category.Name)' " is 122.
Long Statement,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,Activity,The length of the statement  "                var activities = _activityService.GetPagedGroupedActivities(pageIndex' SettingsService.GetSettings().ActivitiesPerPage); " is 120.
Long Statement,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,LatestRss,The length of the statement  "                                rssTopics.Add(new RssItem { Description = firstOrDefault.PostContent' Link = topic.NiceUrl' Title = topic.Name' PublishedDate = topic.CreateDate }); " is 148.
Long Statement,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,LatestRss,The length of the statement  "                return new RssResult(rssTopics' LocalizationService.GetResourceString("Rss.LatestActivity.Title")' LocalizationService.GetResourceString("Rss.LatestActivity.Description")); " is 172.
Long Statement,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,ActivityRss,The length of the statement  "                            Title = string.Concat(badgeActivity.User.UserName' " "' LocalizationService.GetResourceString("Activity.UserAwardedBadge")' " "' badgeActivity.Badge.DisplayName' " "' LocalizationService.GetResourceString("Activity.Badge"))' " is 224.
Long Statement,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,ActivityRss,The length of the statement  "                return new RssResult(rssActivities' LocalizationService.GetResourceString("Rss.LatestActivity.Title")' LocalizationService.GetResourceString("Rss.LatestActivity.Description")); " is 176.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Register,The length of the statement  "            if (SettingsService.GetSettings().SuspendRegistration != true && SettingsService.GetSettings().DisableStandardRegistration != true) " is 131.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,MemberRegisterLogic,The length of the statement  "                        var uploadFolderPath = HostingEnvironment.MapPath(string.Concat(SiteConstants.Instance.UploadFolderPath' userToSave.Id)); " is 121.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,MemberRegisterLogic,The length of the statement  "                    // and set memberEmailAuthorisationNeeded to false because the email addresses are validated by the social media providers " is 122.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,SendEmailConfirmationEmail,The length of the statement  "                    var confirmationLink = string.Concat(StringUtils.ReturnCurrentDomain()' Url.Action("EmailConfirmation"' new { id = userToSave.Id })); " is 133.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,SendEmailConfirmationEmail,The length of the statement  "                    sb.AppendFormat("<p>{0}</p>"' string.Format(LocalizationService.GetResourceString("Members.MemberEmailAuthorisation.EmailBody")' " is 128.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,LogOn,The length of the statement  "                                        ModelState.AddModelError(string.Empty' LocalizationService.GetResourceString("Members.Errors.PasswordAttemptsExceeded")); " is 121.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,GetMemberDiscussions,The length of the statement  "                    var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' SettingsService.GetSettings()); " is 165.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The length of the statement  "                if (UserIsAdmin || loggedOnUserId == userModel.Id || permissions[SiteConstants.Instance.PermissionEditMembers].IsTicked) " is 120.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The length of the statement  "                        if ((userModel.Facebook != null && userModel.Facebook.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) || " is 128.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The length of the statement  "                            (userModel.Location != null && userModel.Location.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) || " is 124.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The length of the statement  "                            (userModel.Signature != null && userModel.Signature.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) || " is 126.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The length of the statement  "                            (userModel.Twitter != null && userModel.Twitter.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) || " is 122.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The length of the statement  "                            (userModel.Website != null && userModel.Website.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0)) " is 120.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The length of the statement  "                        var uploadFolderPath = HostingEnvironment.MapPath(string.Concat(SiteConstants.Instance.UploadFolderPath' LoggedOnReadOnlyUser.Id)); " is 131.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,SideAdminPanel,The length of the statement  "            var canViewPms = settings.EnablePrivateMessages && LoggedOnReadOnlyUser != null && LoggedOnReadOnlyUser.DisablePrivateMessages != true; " is 135.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Search,The length of the statement  "                var allUsers = string.IsNullOrEmpty(search) ? MembershipService.GetAll(pageIndex' SiteConstants.Instance.AdminListPageSize) : " is 125.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,ForgotPassword,The length of the statement  "                var url = new Uri(string.Concat(settings.ForumUrl.TrimEnd('/')' Url.Action("ResetPassword"' "Members"' new { user.Id' token = user.PasswordResetToken }))); " is 155.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,ForgotPassword,The length of the statement  "                sb.AppendFormat("<p>{0}</p>"' string.Format(LocalizationService.GetResourceString("Members.ResetPassword.EmailText")' settings.ForumName)); " is 139.
Long Statement,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,ResetPassword,The length of the statement  "                    if (user == null || user.PasswordResetToken == null || !MembershipService.IsPasswordResetTokenValid(user' postedModel.Token)) " is 125.
Long Statement,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,CreatePost,The length of the statement  "                var viewModel = ViewModelMapping.CreatePostViewModel(newPost' new List<Vote>()' permissions' topic' LoggedOnReadOnlyUser' SettingsService.GetSettings()' new List<Favourite>()); " is 176.
Long Statement,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,NotifyNewTopics,The length of the statement  "                        sb.AppendFormat("<p>{0}</p>"' string.Format(LocalizationService.GetResourceString("Post.Notification.NewPosts")' topic.Name)); " is 126.
Long Statement,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,NotifyNewTopics,The length of the statement  "                        var emails = usersToNotify.Where(x => x.DisableEmailNotifications != true && !x.IsLockedOut && x.IsBanned != true).Select(user => new Email " is 139.
Long Statement,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,NotifyNewTopics,The length of the statement  "                            Subject = string.Concat(LocalizationService.GetResourceString("Post.Notification.Subject")' SettingsService.GetSettings().ForumName) " is 132.
Long Statement,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,GetAllPostLikes,The length of the statement  "                var viewModel = ViewModelMapping.CreatePostViewModel(post' votes' permissions' post.Topic' LoggedOnReadOnlyUser' SettingsService.GetSettings()' new List<Favourite>()); " is 167.
Long Statement,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,MovePost,The length of the statement  "            var postViewModel = ViewModelMapping.CreatePostViewModel(post' post.Votes.ToList()' permissions' post.Topic' LoggedOnReadOnlyUser' SettingsService.GetSettings()' post.Favourites.ToList()); " is 188.
Long Statement,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,MovePost,The length of the statement  "                viewModel.Post = ViewModelMapping.CreatePostViewModel(post' post.Votes.ToList()' permissions' post.Topic' LoggedOnReadOnlyUser' SettingsService.GetSettings()' post.Favourites.ToList()); " is 185.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,TopicsMemberHasPostedIn,The length of the statement  "                var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' settings); " is 144.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,GetSubscribedTopics,The length of the statement  "                    viewModel = ViewModelMapping.CreateTopicViewModels(topics' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' SettingsService.GetSettings()); " is 155.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,EditPostTopic,The length of the statement  "                    var allowedCreateTopicCategories = _categoryService.GetAllowedCategories(UsersRole' SiteConstants.Instance.PermissionCreateTopics); " is 131.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,EditPostTopic,The length of the statement  "                var allowedCreateTopicCategories = _categoryService.GetAllowedCategories(UsersRole' SiteConstants.Instance.PermissionCreateTopics); " is 131.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,EditPostTopic,The length of the statement  "                        if (LoggedOnReadOnlyUser.IsLockedOut || LoggedOnReadOnlyUser.DisablePosting == true || !LoggedOnReadOnlyUser.IsApproved) " is 120.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,EditPostTopic,The length of the statement  "                                if (editPostViewModel.PollAnswers != null && editPostViewModel.PollAnswers.Count(x => !string.IsNullOrEmpty(x?.Answer)) > 1 && permissions[SiteConstants.Instance.PermissionCreatePolls].IsTicked) " is 194.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,EditPostTopic,The length of the statement  "                                    var existingAnswers = editPostViewModel.PollAnswers.Where(x => !string.IsNullOrEmpty(x.Answer) && topicPollAnswerIds.Contains(x.Id)).ToList(); " is 142.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,EditPostTopic,The length of the statement  "                                    var newPollAnswers = editPostViewModel.PollAnswers.Where(x => !string.IsNullOrEmpty(x.Answer) && !topicPollAnswerIds.Contains(x.Id)).ToList(); " is 142.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,AllowedCreateCategories,The length of the statement  "            var allowedCreateTopicCategories = _categoryService.GetAllowedCategories(UsersRole' SiteConstants.Instance.PermissionCreateTopics); " is 131.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,Create,The length of the statement  "                if (LoggedOnReadOnlyUser.IsLockedOut || LoggedOnReadOnlyUser.DisablePosting == true || !LoggedOnReadOnlyUser.IsApproved) " is 120.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,Create,The length of the statement  "                    if (permissions[SiteConstants.Instance.PermissionDenyAccess].IsTicked || permissions[SiteConstants.Instance.PermissionReadOnly].IsTicked || !permissions[SiteConstants.Instance.PermissionCreateTopics].IsTicked) " is 209.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,Show,The length of the statement  "                    ViewBag.ImageUploadType = permissions[SiteConstants.Instance.PermissionInsertEditorImages].IsTicked ? "forumimageinsert" : "image"; " is 131.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,Show,The length of the statement  "                    var viewModel = ViewModelMapping.CreateTopicViewModel(topic' permissions' posts.ToList()' starterPost' posts.PageIndex' posts.TotalCount' posts.TotalPages' LoggedOnReadOnlyUser' settings' true); " is 194.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,AjaxMorePosts,The length of the statement  "                var posts = _postService.GetPagedPostsByTopic(getMorePostsViewModel.PageIndex' settings.PostsPerPage' int.MaxValue' topic.Id' orderBy); " is 135.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,TopicsByTag,The length of the statement  "                var isSubscribed = UserIsAuthenticated && (_tagNotificationService.GetByUserAndTag(LoggedOnReadOnlyUser' tagModel).Any()); " is 122.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,TopicsByTag,The length of the statement  "                var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' settings); " is 144.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,GetSimilarTopics,The length of the statement  "                    var searchResults = _topicService.SearchTopics(SiteConstants.Instance.SimilarTopicsListSize' formattedSearchTerm' allowedCategories); " is 133.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,LatestTopics,The length of the statement  "                var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' settings); " is 144.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,HotTopics,The length of the statement  "                    var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics.ToList()' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' SettingsService.GetSettings()); " is 174.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,NotifyNewTopics,The length of the statement  "                    sb.AppendFormat("<p>{0}</p>"' string.Format(LocalizationService.GetResourceString("Topic.Notification.NewTopics")' cat.Name)); " is 126.
Long Statement,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,NotifyNewTopics,The length of the statement  "                    var emails = usersToNotify.Where(x => x.DisableEmailNotifications != true && !x.IsLockedOut && x.IsBanned != true).Select(user => new Email " is 139.
Long Statement,MVCForum.Website.Controllers,UploadController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\UploadController.cs,UploadPostFiles,The length of the statement  "                            if (permissions[SiteConstants.Instance.PermissionAttachFiles].IsTicked == false || LoggedOnReadOnlyUser.DisableFileUploads == true) " is 131.
Long Statement,MVCForum.Website.Controllers,UploadController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\UploadController.cs,UploadPostFiles,The length of the statement  "                            var uploadFolderPath = HostingEnvironment.MapPath(string.Concat(SiteConstants.Instance.UploadFolderPath' LoggedOnReadOnlyUser.Id)); " is 131.
Long Statement,MVCForum.Website.Controllers,UploadController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\UploadController.cs,UploadPostFiles,The length of the statement  "                        return topic != null ? Redirect(topic.NiceUrl) : ErrorToHomePage(LocalizationService.GetResourceString("Errors.GenericMessage")); " is 129.
Long Statement,MVCForum.Website.Controllers,UploadController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\UploadController.cs,UploadPostFiles,The length of the statement  "                    return topic != null ? Redirect(topic.NiceUrl) : ErrorToHomePage(LocalizationService.GetResourceString("Errors.GenericMessage")); " is 129.
Long Statement,MVCForum.Website.Controllers,UploadController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\UploadController.cs,DeleteUploadedFile,The length of the statement  "                        return topic != null ? Redirect(topic.NiceUrl) : ErrorToHomePage(LocalizationService.GetResourceString("Errors.GenericMessage")); " is 129.
Long Statement,MVCForum.Website.Controllers,VoteController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\VoteController.cs,MarkPostUpOrDown,The length of the statement  "                    var usersPoints = (postType == PostType.Negative) ? (-settings.PointsDeductedNagativeVote) : (settings.PointsAddedPostiveVote); " is 127.
Long Statement,MVCForum.Website.Controllers.ApiControllers,TinyMcePluginsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\ApiControllers\TinyMcePluginsController.cs,UploadImage,The length of the statement  "                            if (permissions[SiteConstants.Instance.PermissionInsertEditorImages].IsTicked && loggedOnReadOnlyUser.DisableFileUploads != true) " is 129.
Long Statement,MVCForum.Website.Controllers.ApiControllers,TinyMcePluginsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\ApiControllers\TinyMcePluginsController.cs,UploadImage,The length of the statement  "                                var uploadFolderPath = HostingEnvironment.MapPath(string.Concat(SiteConstants.Instance.UploadFolderPath' loggedOnReadOnlyUser.Id)); " is 131.
Long Statement,MVCForum.Website.Membership,MvcForumMembershipProvider,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Providers\MembershipProvider.cs,Initialize,The length of the statement  "            _applicationName = GetConfigValue(config["applicationName"]' System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath); " is 123.
Long Statement,MVCForum.Website.Membership,MvcForumMembershipProvider,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\Providers\MembershipProvider.cs,Initialize,The length of the statement  "            _minRequiredNonAlphanumericCharacters = Convert.ToInt32(GetConfigValue(config["minRequiredNonAlphanumericCharacters"]' "1")); " is 125.
Long Statement,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,SettingsToSettingsViewModel,The length of the statement  "                NewMemberEmailConfirmation = currentSettings.NewMemberEmailConfirmation != null && (bool)currentSettings.NewMemberEmailConfirmation' " is 132.
Long Statement,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreateTopicViewModel,The length of the statement  "                LastPostPermaLink = string.Concat(topic.NiceUrl' "?"' AppConstants.PostOrderBy' "="' AppConstants.AllPosts' "#comment-"' topic.LastPost.Id)' " is 140.
Long Statement,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreateTopicViewModel,The length of the statement  "            viewModel.StarterPost = CreatePostViewModel(starterPost' startPostVotes' permission' topic' loggedOnUser' settings' startPostFavs); " is 131.
Long Statement,MVCForum.Website.ViewModels.Mapping,ViewModelMapping,C:\repos\leen3o_mvcforum\MVCForum.Website\ViewModels\Mapping\ViewModelMapping.cs,CreatePostViewModel,The length of the statement  "                PermaLink = string.Concat(topic.NiceUrl' "?"' AppConstants.PostOrderBy' "="' AppConstants.AllPosts' "#comment-"' post.Id)' " is 122.
Complex Conditional,MVCForum.Website.Controllers,BaseController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\BaseController.cs,OnActionExecuting,The conditional expression  "SettingsService.GetSettings().AgreeToTermsAndConditions == true && !filterContext.IsChildAction && LoggedOnReadOnlyUser != null && LoggedOnReadOnlyUser.HasAgreedToTermsAndConditions != true"  is complex.
Complex Conditional,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,MemberRegisterLogic,The conditional expression  "Url.IsLocalUrl(userModel.ReturnUrl) && userModel.ReturnUrl.Length > 1 && userModel.ReturnUrl.StartsWith("/")                              && !userModel.ReturnUrl.StartsWith("//") && !userModel.ReturnUrl.StartsWith("/\\")"  is complex.
Complex Conditional,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,LogOn,The conditional expression  "Url.IsLocalUrl(model.ReturnUrl) && model.ReturnUrl.Length > 1 && model.ReturnUrl.StartsWith("/")                                          && !model.ReturnUrl.StartsWith("//") && !model.ReturnUrl.StartsWith("/\\")"  is complex.
Complex Conditional,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,Edit,The conditional expression  "(userModel.Facebook != null && userModel.Facebook.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) ||                              (userModel.Location != null && userModel.Location.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) ||                              (userModel.Signature != null && userModel.Signature.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) ||                              (userModel.Twitter != null && userModel.Twitter.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0) ||                              (userModel.Website != null && userModel.Website.IndexOf(stopWord.Word' StringComparison.CurrentCultureIgnoreCase) >= 0)"  is complex.
Empty Catch Block,MVCForum.Website.Areas.Admin.Controllers,AdminController,C:\repos\leen3o_mvcforum\MVCForum.Website\Areas\Admin\Controllers\AdminController.cs,Aptitude,The method has an empty catch block.
Magic Number,MVCForum.Website.Application,AppHelpers,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\AppHelpers.cs,Ping,The following statement contains a magic number: try              {                  var request = (HttpWebRequest)WebRequest.Create(url);                  request.Timeout = 3000;                  request.AllowAutoRedirect = false; // find out if this site is up and don't follow a redirector                  request.Method = "HEAD";                    using (var response = request.GetResponse())                  {                      return true;                  }              }              catch              {                  return false;              }
Magic Number,MVCForum.Website.Application,AppHelpers,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\AppHelpers.cs,UploadFile,The following statement contains a magic number: if (fileName != null)              {                  // Lower case                  fileName = fileName.ToLower();                    // Get the file extension                  var fileExtension = Path.GetExtension(fileName);                    //Before we do anything' check file size                  if (file.ContentLength > Convert.ToInt32(SiteConstants.Instance.FileUploadMaximumFileSizeInBytes))                  {                      //File is too big                      upResult.UploadSuccessful = false;                      upResult.ErrorMessage = localizationService.GetResourceString("Post.UploadFileTooBig");                      return upResult;                  }                    // now check allowed extensions                  var allowedFileExtensions = SiteConstants.Instance.FileUploadAllowedExtensions;                    if (onlyImages)                  {                      allowedFileExtensions = imageExtensions;                  }                    if (!string.IsNullOrEmpty(allowedFileExtensions))                  {                      // Turn into a list and strip unwanted commas as we don't trust users!                      var allowedFileExtensionsList = allowedFileExtensions.ToLower().Trim()                                                       .TrimStart(''').TrimEnd(''').Split(''').ToList();                        // If can't work out extension then just error                      if (string.IsNullOrEmpty(fileExtension))                      {                          upResult.UploadSuccessful = false;                          upResult.ErrorMessage = localizationService.GetResourceString("Errors.GenericMessage");                          return upResult;                      }                        // Remove the dot then check against the extensions in the web.config settings                      fileExtension = fileExtension.TrimStart('.');                      if (!allowedFileExtensionsList.Contains(fileExtension))                      {                          upResult.UploadSuccessful = false;                          upResult.ErrorMessage = localizationService.GetResourceString("Post.UploadBannedFileExtension");                          return upResult;                      }                  }                    // Store these here as we may change the values within the image manipulation                  var newFileName = string.Empty;                  var path = string.Empty;                    if (imageExtensions.Split(''').ToList().Contains(fileExtension))                  {                      // Rotate image if wrong want around                      using (var sourceimage = Image.FromStream(file.InputStream))                      {                          if (sourceimage.PropertyIdList.Contains(0x0112))                          {                              int rotationValue = sourceimage.GetPropertyItem(0x0112).Value[0];                              switch (rotationValue)                              {                                  case 1: // landscape' do nothing                                      break;                                    case 8: // rotated 90 right                                      // de-rotate:                                      sourceimage.RotateFlip(RotateFlipType.Rotate270FlipNone);                                      break;                                    case 3: // bottoms up                                      sourceimage.RotateFlip(RotateFlipType.Rotate180FlipNone);                                      break;                                    case 6: // rotated 90 left                                      sourceimage.RotateFlip(RotateFlipType.Rotate90FlipNone);                                      break;                              }                          }                            using (var stream = new MemoryStream())                          {                              // Save the image as a Jpeg only                              sourceimage.Save(stream' ImageFormat.Jpeg);                              stream.Position = 0;                                // Change the extension to jpg as that's what we are saving it as                              fileName = fileName.Replace(fileExtension' "");                              fileName = string.Concat(fileName' "jpg");                              file = new MemoryFile(stream' "image/jpeg"' fileName);                                // Sort the file name                              newFileName = CreateNewFileName(fileName);                                // Get the storage provider and save file                              upResult.UploadedFileUrl = storageProvider.SaveAs(uploadFolderPath' newFileName' file);                          }                      }                  }                  else                  {                      // Sort the file name                      newFileName = CreateNewFileName(fileName);                      upResult.UploadedFileUrl = storageProvider.SaveAs(uploadFolderPath' newFileName' file);                  }                    upResult.UploadedFileName = newFileName;              }
Magic Number,MVCForum.Website.Application,AppHelpers,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\AppHelpers.cs,UploadFile,The following statement contains a magic number: if (fileName != null)              {                  // Lower case                  fileName = fileName.ToLower();                    // Get the file extension                  var fileExtension = Path.GetExtension(fileName);                    //Before we do anything' check file size                  if (file.ContentLength > Convert.ToInt32(SiteConstants.Instance.FileUploadMaximumFileSizeInBytes))                  {                      //File is too big                      upResult.UploadSuccessful = false;                      upResult.ErrorMessage = localizationService.GetResourceString("Post.UploadFileTooBig");                      return upResult;                  }                    // now check allowed extensions                  var allowedFileExtensions = SiteConstants.Instance.FileUploadAllowedExtensions;                    if (onlyImages)                  {                      allowedFileExtensions = imageExtensions;                  }                    if (!string.IsNullOrEmpty(allowedFileExtensions))                  {                      // Turn into a list and strip unwanted commas as we don't trust users!                      var allowedFileExtensionsList = allowedFileExtensions.ToLower().Trim()                                                       .TrimStart(''').TrimEnd(''').Split(''').ToList();                        // If can't work out extension then just error                      if (string.IsNullOrEmpty(fileExtension))                      {                          upResult.UploadSuccessful = false;                          upResult.ErrorMessage = localizationService.GetResourceString("Errors.GenericMessage");                          return upResult;                      }                        // Remove the dot then check against the extensions in the web.config settings                      fileExtension = fileExtension.TrimStart('.');                      if (!allowedFileExtensionsList.Contains(fileExtension))                      {                          upResult.UploadSuccessful = false;                          upResult.ErrorMessage = localizationService.GetResourceString("Post.UploadBannedFileExtension");                          return upResult;                      }                  }                    // Store these here as we may change the values within the image manipulation                  var newFileName = string.Empty;                  var path = string.Empty;                    if (imageExtensions.Split(''').ToList().Contains(fileExtension))                  {                      // Rotate image if wrong want around                      using (var sourceimage = Image.FromStream(file.InputStream))                      {                          if (sourceimage.PropertyIdList.Contains(0x0112))                          {                              int rotationValue = sourceimage.GetPropertyItem(0x0112).Value[0];                              switch (rotationValue)                              {                                  case 1: // landscape' do nothing                                      break;                                    case 8: // rotated 90 right                                      // de-rotate:                                      sourceimage.RotateFlip(RotateFlipType.Rotate270FlipNone);                                      break;                                    case 3: // bottoms up                                      sourceimage.RotateFlip(RotateFlipType.Rotate180FlipNone);                                      break;                                    case 6: // rotated 90 left                                      sourceimage.RotateFlip(RotateFlipType.Rotate90FlipNone);                                      break;                              }                          }                            using (var stream = new MemoryStream())                          {                              // Save the image as a Jpeg only                              sourceimage.Save(stream' ImageFormat.Jpeg);                              stream.Position = 0;                                // Change the extension to jpg as that's what we are saving it as                              fileName = fileName.Replace(fileExtension' "");                              fileName = string.Concat(fileName' "jpg");                              file = new MemoryFile(stream' "image/jpeg"' fileName);                                // Sort the file name                              newFileName = CreateNewFileName(fileName);                                // Get the storage provider and save file                              upResult.UploadedFileUrl = storageProvider.SaveAs(uploadFolderPath' newFileName' file);                          }                      }                  }                  else                  {                      // Sort the file name                      newFileName = CreateNewFileName(fileName);                      upResult.UploadedFileUrl = storageProvider.SaveAs(uploadFolderPath' newFileName' file);                  }                    upResult.UploadedFileName = newFileName;              }
Magic Number,MVCForum.Website.Application,AppHelpers,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\AppHelpers.cs,UploadFile,The following statement contains a magic number: if (fileName != null)              {                  // Lower case                  fileName = fileName.ToLower();                    // Get the file extension                  var fileExtension = Path.GetExtension(fileName);                    //Before we do anything' check file size                  if (file.ContentLength > Convert.ToInt32(SiteConstants.Instance.FileUploadMaximumFileSizeInBytes))                  {                      //File is too big                      upResult.UploadSuccessful = false;                      upResult.ErrorMessage = localizationService.GetResourceString("Post.UploadFileTooBig");                      return upResult;                  }                    // now check allowed extensions                  var allowedFileExtensions = SiteConstants.Instance.FileUploadAllowedExtensions;                    if (onlyImages)                  {                      allowedFileExtensions = imageExtensions;                  }                    if (!string.IsNullOrEmpty(allowedFileExtensions))                  {                      // Turn into a list and strip unwanted commas as we don't trust users!                      var allowedFileExtensionsList = allowedFileExtensions.ToLower().Trim()                                                       .TrimStart(''').TrimEnd(''').Split(''').ToList();                        // If can't work out extension then just error                      if (string.IsNullOrEmpty(fileExtension))                      {                          upResult.UploadSuccessful = false;                          upResult.ErrorMessage = localizationService.GetResourceString("Errors.GenericMessage");                          return upResult;                      }                        // Remove the dot then check against the extensions in the web.config settings                      fileExtension = fileExtension.TrimStart('.');                      if (!allowedFileExtensionsList.Contains(fileExtension))                      {                          upResult.UploadSuccessful = false;                          upResult.ErrorMessage = localizationService.GetResourceString("Post.UploadBannedFileExtension");                          return upResult;                      }                  }                    // Store these here as we may change the values within the image manipulation                  var newFileName = string.Empty;                  var path = string.Empty;                    if (imageExtensions.Split(''').ToList().Contains(fileExtension))                  {                      // Rotate image if wrong want around                      using (var sourceimage = Image.FromStream(file.InputStream))                      {                          if (sourceimage.PropertyIdList.Contains(0x0112))                          {                              int rotationValue = sourceimage.GetPropertyItem(0x0112).Value[0];                              switch (rotationValue)                              {                                  case 1: // landscape' do nothing                                      break;                                    case 8: // rotated 90 right                                      // de-rotate:                                      sourceimage.RotateFlip(RotateFlipType.Rotate270FlipNone);                                      break;                                    case 3: // bottoms up                                      sourceimage.RotateFlip(RotateFlipType.Rotate180FlipNone);                                      break;                                    case 6: // rotated 90 left                                      sourceimage.RotateFlip(RotateFlipType.Rotate90FlipNone);                                      break;                              }                          }                            using (var stream = new MemoryStream())                          {                              // Save the image as a Jpeg only                              sourceimage.Save(stream' ImageFormat.Jpeg);                              stream.Position = 0;                                // Change the extension to jpg as that's what we are saving it as                              fileName = fileName.Replace(fileExtension' "");                              fileName = string.Concat(fileName' "jpg");                              file = new MemoryFile(stream' "image/jpeg"' fileName);                                // Sort the file name                              newFileName = CreateNewFileName(fileName);                                // Get the storage provider and save file                              upResult.UploadedFileUrl = storageProvider.SaveAs(uploadFolderPath' newFileName' file);                          }                      }                  }                  else                  {                      // Sort the file name                      newFileName = CreateNewFileName(fileName);                      upResult.UploadedFileUrl = storageProvider.SaveAs(uploadFolderPath' newFileName' file);                  }                    upResult.UploadedFileName = newFileName;              }
Magic Number,MVCForum.Website.Application,DatesUI,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\DatesUI.cs,GetPrettyDate,The following statement contains a magic number: if (DateTime.TryParse(date' out time))              {                  var span = DateTime.UtcNow.Subtract(time);                  var totalDays = (int)span.TotalDays;                  var totalSeconds = (int)span.TotalSeconds;                  if ((totalDays < 0) || (totalDays >= 0x1f))                  {                      return DateUtils.FormatDateTime(date' "dd MMMM yyyy");                  }                  if (totalDays == 0)                  {                      if (totalSeconds < 60)                      {                          return GetLocalisedText("Date.JustNow");                      }                      if (totalSeconds < 120)                      {                          return GetLocalisedText("Date.OneMinuteAgo");                      }                      if (totalSeconds < 0xe10)                      {                          return string.Format(GetLocalisedText("Date.MinutesAgo")' Math.Floor((double)(((double)totalSeconds) / 60.0)));                      }                      if (totalSeconds < 0x1c20)                      {                          return GetLocalisedText("Date.OneHourAgo");                      }                      if (totalSeconds < 0x15180)                      {                          return string.Format(GetLocalisedText("Date.HoursAgo")' Math.Floor((double)(((double)totalSeconds) / 3600.0)));                      }                  }                  if (totalDays == 1)                  {                      return GetLocalisedText("Date.Yesterday");                  }                  if (totalDays < 7)                  {                      return string.Format(GetLocalisedText("Date.DaysAgo")' totalDays);                  }                  if (totalDays < 0x1f)                  {                      return string.Format(GetLocalisedText("Date.WeeksAgo")' Math.Ceiling((double)(((double)totalDays) / 7.0)));                  }              }
Magic Number,MVCForum.Website.Application,DatesUI,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\DatesUI.cs,GetPrettyDate,The following statement contains a magic number: if (DateTime.TryParse(date' out time))              {                  var span = DateTime.UtcNow.Subtract(time);                  var totalDays = (int)span.TotalDays;                  var totalSeconds = (int)span.TotalSeconds;                  if ((totalDays < 0) || (totalDays >= 0x1f))                  {                      return DateUtils.FormatDateTime(date' "dd MMMM yyyy");                  }                  if (totalDays == 0)                  {                      if (totalSeconds < 60)                      {                          return GetLocalisedText("Date.JustNow");                      }                      if (totalSeconds < 120)                      {                          return GetLocalisedText("Date.OneMinuteAgo");                      }                      if (totalSeconds < 0xe10)                      {                          return string.Format(GetLocalisedText("Date.MinutesAgo")' Math.Floor((double)(((double)totalSeconds) / 60.0)));                      }                      if (totalSeconds < 0x1c20)                      {                          return GetLocalisedText("Date.OneHourAgo");                      }                      if (totalSeconds < 0x15180)                      {                          return string.Format(GetLocalisedText("Date.HoursAgo")' Math.Floor((double)(((double)totalSeconds) / 3600.0)));                      }                  }                  if (totalDays == 1)                  {                      return GetLocalisedText("Date.Yesterday");                  }                  if (totalDays < 7)                  {                      return string.Format(GetLocalisedText("Date.DaysAgo")' totalDays);                  }                  if (totalDays < 0x1f)                  {                      return string.Format(GetLocalisedText("Date.WeeksAgo")' Math.Ceiling((double)(((double)totalDays) / 7.0)));                  }              }
Magic Number,MVCForum.Website.Application,DatesUI,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\DatesUI.cs,GetPrettyDate,The following statement contains a magic number: if (DateTime.TryParse(date' out time))              {                  var span = DateTime.UtcNow.Subtract(time);                  var totalDays = (int)span.TotalDays;                  var totalSeconds = (int)span.TotalSeconds;                  if ((totalDays < 0) || (totalDays >= 0x1f))                  {                      return DateUtils.FormatDateTime(date' "dd MMMM yyyy");                  }                  if (totalDays == 0)                  {                      if (totalSeconds < 60)                      {                          return GetLocalisedText("Date.JustNow");                      }                      if (totalSeconds < 120)                      {                          return GetLocalisedText("Date.OneMinuteAgo");                      }                      if (totalSeconds < 0xe10)                      {                          return string.Format(GetLocalisedText("Date.MinutesAgo")' Math.Floor((double)(((double)totalSeconds) / 60.0)));                      }                      if (totalSeconds < 0x1c20)                      {                          return GetLocalisedText("Date.OneHourAgo");                      }                      if (totalSeconds < 0x15180)                      {                          return string.Format(GetLocalisedText("Date.HoursAgo")' Math.Floor((double)(((double)totalSeconds) / 3600.0)));                      }                  }                  if (totalDays == 1)                  {                      return GetLocalisedText("Date.Yesterday");                  }                  if (totalDays < 7)                  {                      return string.Format(GetLocalisedText("Date.DaysAgo")' totalDays);                  }                  if (totalDays < 0x1f)                  {                      return string.Format(GetLocalisedText("Date.WeeksAgo")' Math.Ceiling((double)(((double)totalDays) / 7.0)));                  }              }
Magic Number,MVCForum.Website.Application,DatesUI,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\DatesUI.cs,GetPrettyDate,The following statement contains a magic number: if (DateTime.TryParse(date' out time))              {                  var span = DateTime.UtcNow.Subtract(time);                  var totalDays = (int)span.TotalDays;                  var totalSeconds = (int)span.TotalSeconds;                  if ((totalDays < 0) || (totalDays >= 0x1f))                  {                      return DateUtils.FormatDateTime(date' "dd MMMM yyyy");                  }                  if (totalDays == 0)                  {                      if (totalSeconds < 60)                      {                          return GetLocalisedText("Date.JustNow");                      }                      if (totalSeconds < 120)                      {                          return GetLocalisedText("Date.OneMinuteAgo");                      }                      if (totalSeconds < 0xe10)                      {                          return string.Format(GetLocalisedText("Date.MinutesAgo")' Math.Floor((double)(((double)totalSeconds) / 60.0)));                      }                      if (totalSeconds < 0x1c20)                      {                          return GetLocalisedText("Date.OneHourAgo");                      }                      if (totalSeconds < 0x15180)                      {                          return string.Format(GetLocalisedText("Date.HoursAgo")' Math.Floor((double)(((double)totalSeconds) / 3600.0)));                      }                  }                  if (totalDays == 1)                  {                      return GetLocalisedText("Date.Yesterday");                  }                  if (totalDays < 7)                  {                      return string.Format(GetLocalisedText("Date.DaysAgo")' totalDays);                  }                  if (totalDays < 0x1f)                  {                      return string.Format(GetLocalisedText("Date.WeeksAgo")' Math.Ceiling((double)(((double)totalDays) / 7.0)));                  }              }
Magic Number,MVCForum.Website.Application,DatesUI,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\DatesUI.cs,GetPrettyDate,The following statement contains a magic number: if (DateTime.TryParse(date' out time))              {                  var span = DateTime.UtcNow.Subtract(time);                  var totalDays = (int)span.TotalDays;                  var totalSeconds = (int)span.TotalSeconds;                  if ((totalDays < 0) || (totalDays >= 0x1f))                  {                      return DateUtils.FormatDateTime(date' "dd MMMM yyyy");                  }                  if (totalDays == 0)                  {                      if (totalSeconds < 60)                      {                          return GetLocalisedText("Date.JustNow");                      }                      if (totalSeconds < 120)                      {                          return GetLocalisedText("Date.OneMinuteAgo");                      }                      if (totalSeconds < 0xe10)                      {                          return string.Format(GetLocalisedText("Date.MinutesAgo")' Math.Floor((double)(((double)totalSeconds) / 60.0)));                      }                      if (totalSeconds < 0x1c20)                      {                          return GetLocalisedText("Date.OneHourAgo");                      }                      if (totalSeconds < 0x15180)                      {                          return string.Format(GetLocalisedText("Date.HoursAgo")' Math.Floor((double)(((double)totalSeconds) / 3600.0)));                      }                  }                  if (totalDays == 1)                  {                      return GetLocalisedText("Date.Yesterday");                  }                  if (totalDays < 7)                  {                      return string.Format(GetLocalisedText("Date.DaysAgo")' totalDays);                  }                  if (totalDays < 0x1f)                  {                      return string.Format(GetLocalisedText("Date.WeeksAgo")' Math.Ceiling((double)(((double)totalDays) / 7.0)));                  }              }
Magic Number,MVCForum.Website.Application,DatesUI,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\DatesUI.cs,GetPrettyDate,The following statement contains a magic number: if (DateTime.TryParse(date' out time))              {                  var span = DateTime.UtcNow.Subtract(time);                  var totalDays = (int)span.TotalDays;                  var totalSeconds = (int)span.TotalSeconds;                  if ((totalDays < 0) || (totalDays >= 0x1f))                  {                      return DateUtils.FormatDateTime(date' "dd MMMM yyyy");                  }                  if (totalDays == 0)                  {                      if (totalSeconds < 60)                      {                          return GetLocalisedText("Date.JustNow");                      }                      if (totalSeconds < 120)                      {                          return GetLocalisedText("Date.OneMinuteAgo");                      }                      if (totalSeconds < 0xe10)                      {                          return string.Format(GetLocalisedText("Date.MinutesAgo")' Math.Floor((double)(((double)totalSeconds) / 60.0)));                      }                      if (totalSeconds < 0x1c20)                      {                          return GetLocalisedText("Date.OneHourAgo");                      }                      if (totalSeconds < 0x15180)                      {                          return string.Format(GetLocalisedText("Date.HoursAgo")' Math.Floor((double)(((double)totalSeconds) / 3600.0)));                      }                  }                  if (totalDays == 1)                  {                      return GetLocalisedText("Date.Yesterday");                  }                  if (totalDays < 7)                  {                      return string.Format(GetLocalisedText("Date.DaysAgo")' totalDays);                  }                  if (totalDays < 0x1f)                  {                      return string.Format(GetLocalisedText("Date.WeeksAgo")' Math.Ceiling((double)(((double)totalDays) / 7.0)));                  }              }
Magic Number,MVCForum.Website.Application,MobileExtensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\MobileExtensions.cs,IsMobileDevice,The following statement contains a magic number: try              {                  var u = c.Request.ServerVariables["HTTP_USER_AGENT"];                  var b = new Regex(@"(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino"' RegexOptions.IgnoreCase | RegexOptions.Multiline);                  var v = new Regex(@"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-"' RegexOptions.IgnoreCase | RegexOptions.Multiline);                  if ((b.IsMatch(u) || v.IsMatch(u.Substring(0' 4))))                  {                      return true;                  }                  return false;              }              catch              {                  return false;              }
Magic Number,MVCForum.Website.Application,Extensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\Extensions.cs,KiloFormat,The following statement contains a magic number: if (num >= 1000000)                  return (num / 1000000D).ToString("0.#") + "M";
Magic Number,MVCForum.Website.Application,Extensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\Extensions.cs,KiloFormat,The following statement contains a magic number: if (num >= 10000)                  return (num / 1000D).ToString("#'0K");
Magic Number,MVCForum.Website.Application,Extensions,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ExtensionMethods\Extensions.cs,KiloFormat,The following statement contains a magic number: if (num >= 1000)                  return (num / 1000D).ToString("0.#") + "K";
Magic Number,MVCForum.Website.Application.ScheduledJobs,ScheduledRunner,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\ScheduledRunner.cs,Run,The following statement contains a magic number: var fiveMinuteTriggerForever = (ISimpleTrigger)TriggerBuilder.Create()                   .WithIdentity("FiveMinuteTriggerForever"' AppConstants.DefaultTaskGroup)                   .StartNow()                   .WithSimpleSchedule(x => x                       .WithIntervalInMinutes(5)                       .RepeatForever())                   .Build();
Magic Number,MVCForum.Website.Application.ScheduledJobs,ScheduledRunner,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\ScheduledRunner.cs,Run,The following statement contains a magic number: var twoMinuteTriggerForever = (ISimpleTrigger)TriggerBuilder.Create()               .WithIdentity("TwoMinuteTriggerForever"' AppConstants.DefaultTaskGroup)               .StartNow()               .WithSimpleSchedule(x => x                   .WithIntervalInMinutes(2)                   .RepeatForever())               .Build();
Magic Number,MVCForum.Website.Application.ScheduledJobs,ScheduledRunner,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\ScheduledRunner.cs,Run,The following statement contains a magic number: var fifteenSecondsTriggerForever = (ISimpleTrigger)TriggerBuilder.Create()                      .WithIdentity("FifteenSecondsTriggerForever"' AppConstants.DefaultTaskGroup)                      .StartNow()                      .WithSimpleSchedule(x => x                          .WithIntervalInSeconds(15)                          .RepeatForever())                      .Build();
Magic Number,MVCForum.Website.Application.ScheduledJobs,ScheduledRunner,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\ScheduledRunner.cs,Run,The following statement contains a magic number: var sixHourTriggerForever = (ISimpleTrigger)TriggerBuilder.Create()                      .WithIdentity("SixHourTriggerForever"' AppConstants.DefaultTaskGroup)                      .StartNow()                      .WithSimpleSchedule(x => x                          .WithIntervalInHours(6)                          .RepeatForever())                      .Build();
Magic Number,MVCForum.Website.Application.ScheduledJobs,EmailJob,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\ScheduledJobs\EmailJob.cs,Execute,The following statement contains a magic number: using (var unitOfWork = _unitOfWorkManager.NewUnitOfWork())              {                  try                  {                      // Process emails to send - Only send the amount per job from the siteconstants                      _emailService.ProcessMail(5);                        // Commit - Which deletes the jobs that have been sent                      unitOfWork.Commit();                  }                  catch (Exception ex)                  {                      unitOfWork.Rollback();                      _loggingService.Error(ex);                  }                             }
Magic Number,MVCForum.Website,MvcApplication,C:\repos\leen3o_mvcforum\MVCForum.Website\Global.asax.cs,Application_Start,The following statement contains a magic number: LoggingService.Initialise(ConfigUtils.GetAppSettingInt32("LogFileMaxSizeBytes"' 10000));
Magic Number,MVCForum.Website.Controllers,SnippetsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\SnippetsController.cs,GetThisWeeksTopEarners,The following statement contains a magic number: if(Request.IsAjaxRequest())              {                  using (UnitOfWorkManager.NewUnitOfWork())                  {                      var highEarners = _membershipUserPointsService.GetCurrentWeeksPoints(20);                      var viewModel = new HighEarnersPointViewModel { HighEarners = highEarners };                      return PartialView(viewModel);                   }              }
Magic Number,MVCForum.Website.Controllers,SnippetsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\SnippetsController.cs,GetThisYearsTopEarners,The following statement contains a magic number: if (Request.IsAjaxRequest())              {                  using (UnitOfWorkManager.NewUnitOfWork())                  {                      var highEarners = _membershipUserPointsService.GetThisYearsPoints(20);                      var viewModel = new HighEarnersPointViewModel { HighEarners = highEarners };                      return PartialView(viewModel);                  }              }
Magic Number,MVCForum.Website.Controllers,CategoryController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\CategoryController.cs,CategoryRss,The following statement contains a magic number: using (UnitOfWorkManager.NewUnitOfWork())              {                      // get an rss lit ready                  var rssTopics = new List<RssItem>();                    // Get the category                  var category = _categoryService.Get(slug);                    // check the user has permission to this category                  var permissions = RoleService.GetPermissions(category' UsersRole);                    if (!permissions[SiteConstants.Instance.PermissionDenyAccess].IsTicked)                  {                      var topics = _topicService.GetRssTopicsByCategory(50' category.Id);                        rssTopics.AddRange(topics.Select(x =>                                                           {                                                               var firstOrDefault =                                                                   x.Posts.FirstOrDefault(s => s.IsTopicStarter);                                                               return firstOrDefault != null                                                                          ? new RssItem                                                                                {                                                                                    Description = firstOrDefault.PostContent'                                                                                    Link = x.NiceUrl'                                                                                    Title = x.Name'                                                                                    PublishedDate = x.CreateDate                                                                                }                                                                          : null;                                                           }                                             ));                        return new RssResult(rssTopics' string.Format(LocalizationService.GetResourceString("Rss.Category.Title")' category.Name)'                                           string.Format(LocalizationService.GetResourceString("Rss.Category.Description")' category.Name));                  }                    return ErrorToHomePage(LocalizationService.GetResourceString("Errors.NothingToDisplay"));              }
Magic Number,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,LatestRss,The following statement contains a magic number: using (UnitOfWorkManager.NewUnitOfWork())              {                  // Allowed Categories for a guest - As that's all we want latest RSS to show                  var guestRole = RoleService.GetRole(AppConstants.GuestRoleName);                  var allowedCategories = _categoryService.GetAllowedCategories(guestRole);                    // get an rss lit ready                  var rssTopics = new List<RssItem>();                    // Get the latest topics                  var topics = _topicService.GetRecentRssTopics(50' allowedCategories);                    // Get all the categories for this topic collection                  var categories = topics.Select(x => x.Category).Distinct();                    // create permissions                  var permissions = new Dictionary<Category' PermissionSet>();                    // loop through the categories and get the permissions                  foreach (var category in categories)                  {                      var permissionSet = RoleService.GetPermissions(category' UsersRole);                      permissions.Add(category' permissionSet);                  }                    // Now loop through the topics and remove any that user does not have permission for                  foreach (var topic in topics)                  {                      // Get the permissions for this topic via its parent category                      var permission = permissions[topic.Category];                        // Add only topics user has permission to                      if (!permission[SiteConstants.Instance.PermissionDenyAccess].IsTicked)                      {                          if (topic.Posts.Any())                          {                              var firstOrDefault = topic.Posts.FirstOrDefault(x => x.IsTopicStarter);                              if (firstOrDefault != null)                                  rssTopics.Add(new RssItem { Description = firstOrDefault.PostContent' Link = topic.NiceUrl' Title = topic.Name' PublishedDate = topic.CreateDate });                          }                      }                  }                    return new RssResult(rssTopics' LocalizationService.GetResourceString("Rss.LatestActivity.Title")' LocalizationService.GetResourceString("Rss.LatestActivity.Description"));              }
Magic Number,MVCForum.Website.Controllers,HomeController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\HomeController.cs,ActivityRss,The following statement contains a magic number: using (UnitOfWorkManager.NewUnitOfWork())              {                  // get an rss lit ready                  var rssActivities = new List<RssItem>();                    var activities = _activityService.GetAll(50).OrderByDescending(x => x.ActivityMapped.Timestamp);                    var activityLink = Url.Action("Activity");                    // Now loop through the topics and remove any that user does not have permission for                  foreach (var activity in activities)                  {                      if (activity is BadgeActivity)                      {                          var badgeActivity = activity as BadgeActivity;                          rssActivities.Add(new RssItem                          {                              Description = badgeActivity.Badge.Description'                              Title = string.Concat(badgeActivity.User.UserName' " "' LocalizationService.GetResourceString("Activity.UserAwardedBadge")' " "' badgeActivity.Badge.DisplayName' " "' LocalizationService.GetResourceString("Activity.Badge"))'                              PublishedDate = badgeActivity.ActivityMapped.Timestamp'                              RssImage = AppHelpers.ReturnBadgeUrl(badgeActivity.Badge.Image)'                              Link = activityLink                          });                      }                      else if (activity is MemberJoinedActivity)                      {                          var memberJoinedActivity = activity as MemberJoinedActivity;                          rssActivities.Add(new RssItem                          {                              Description = string.Empty'                              Title = LocalizationService.GetResourceString("Activity.UserJoined")'                              PublishedDate = memberJoinedActivity.ActivityMapped.Timestamp'                              RssImage = memberJoinedActivity.User.MemberImage(SiteConstants.Instance.GravatarPostSize)'                              Link = activityLink                          });                      }                      else if (activity is ProfileUpdatedActivity)                      {                          var profileUpdatedActivity = activity as ProfileUpdatedActivity;                          rssActivities.Add(new RssItem                          {                              Description = string.Empty'                              Title = LocalizationService.GetResourceString("Activity.ProfileUpdated")'                              PublishedDate = profileUpdatedActivity.ActivityMapped.Timestamp'                              RssImage = profileUpdatedActivity.User.MemberImage(SiteConstants.Instance.GravatarPostSize)'                              Link = activityLink                          });                      }                    }                    return new RssResult(rssActivities' LocalizationService.GetResourceString("Rss.LatestActivity.Title")' LocalizationService.GetResourceString("Rss.LatestActivity.Description"));              }
Magic Number,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,SendEmailConfirmationEmail,The following statement contains a magic number: if (manuallyAuthoriseMembers == false && memberEmailAuthorisationNeeded)              {                  if (!string.IsNullOrEmpty(userToSave.Email))                  {                      // SEND AUTHORISATION EMAIL                      var sb = new StringBuilder();                      var confirmationLink = string.Concat(StringUtils.ReturnCurrentDomain()' Url.Action("EmailConfirmation"' new { id = userToSave.Id }));                      sb.AppendFormat("<p>{0}</p>"' string.Format(LocalizationService.GetResourceString("Members.MemberEmailAuthorisation.EmailBody")'                                                  settings.ForumName'                                                  string.Format("<p><a href=\"{0}\">{0}</a></p>"' confirmationLink)));                      var email = new Email                      {                          EmailTo = userToSave.Email'                          NameTo = userToSave.UserName'                          Subject = LocalizationService.GetResourceString("Members.MemberEmailAuthorisation.Subject")                      };                      email.Body = _emailService.EmailTemplate(email.NameTo' sb.ToString());                      _emailService.SendMail(email);                        // ADD COOKIE                      // We add a cookie for 7 days' which will display the resend email confirmation button                      // This cookie is removed when they click the confirmation link                      var myCookie = new HttpCookie(AppConstants.MemberEmailConfirmationCookieName)                      {                          Value = CreateForgotPasswordCookieHas(userToSave).ToString()'                          Expires = DateTime.UtcNow.AddDays(7)                      };                      // Add the cookie.                      Response.Cookies.Add(myCookie);                  }              }
Magic Number,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,GetMemberDiscussions,The following statement contains a magic number: if (Request.IsAjaxRequest())              {                  using (UnitOfWorkManager.NewUnitOfWork())                  {                      var allowedCategories = _categoryService.GetAllowedCategories(UsersRole).ToList();                        // Get the user discussions' only grab 100 posts                      var posts = _postService.GetByMember(id' 100' allowedCategories);                        // Get the distinct topics                      var topics = posts.Select(x => x.Topic).Distinct().Take(6).OrderByDescending(x => x.LastPost.DateCreated).ToList();                        // Get the Topic View Models                      var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' SettingsService.GetSettings());                        // create the view model                      var viewModel = new ViewMemberDiscussionsViewModel                      {                          Topics = topicViewModels                      };                          return PartialView(viewModel);                  }              }
Magic Number,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,GetMemberDiscussions,The following statement contains a magic number: if (Request.IsAjaxRequest())              {                  using (UnitOfWorkManager.NewUnitOfWork())                  {                      var allowedCategories = _categoryService.GetAllowedCategories(UsersRole).ToList();                        // Get the user discussions' only grab 100 posts                      var posts = _postService.GetByMember(id' 100' allowedCategories);                        // Get the distinct topics                      var topics = posts.Select(x => x.Topic).Distinct().Take(6).OrderByDescending(x => x.LastPost.DateCreated).ToList();                        // Get the Topic View Models                      var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' SettingsService.GetSettings());                        // create the view model                      var viewModel = new ViewMemberDiscussionsViewModel                      {                          Topics = topicViewModels                      };                          return PartialView(viewModel);                  }              }
Magic Number,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,AutoComplete,The following statement contains a magic number: using (UnitOfWorkManager.NewUnitOfWork())              {                  if (!string.IsNullOrEmpty(term))                  {                      var members = MembershipService.SearchMembers(term' 12);                      var sb = new StringBuilder();                      sb.Append("[").Append(Environment.NewLine);                      for (var i = 0; i < members.Count; i++)                      {                          sb.AppendFormat("\"{0}\""' members[i].UserName);                          if (i < members.Count - 1)                          {                              sb.Append("'");                          }                          sb.Append(Environment.NewLine);                      }                      sb.Append("]");                      return sb.ToString();                  }                  return null;              }
Magic Number,MVCForum.Website.Controllers,MembersController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\MembersController.cs,LatestMembersJoined,The following statement contains a magic number: var users = MembershipService.GetLatestUsers(10).ToDictionary(o => o.UserName' o => o.NiceUrl);
Magic Number,MVCForum.Website.Controllers,PointController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PointController.cs,CurrentWeekHighPointUsers,The following statement contains a magic number: using (UnitOfWorkManager.NewUnitOfWork())              {                  var highEarners = _membershipUserPointsService.GetCurrentWeeksPoints(10);                  var viewModel = new HighEarnersPointViewModel { HighEarners = highEarners };                  return PartialView(viewModel);              }
Magic Number,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,MovePost,The following statement contains a magic number: var topics = _topicService.GetAllSelectList(allowedCategories' 30);
Magic Number,MVCForum.Website.Controllers,PostController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\PostController.cs,MovePost,The following statement contains a magic number: using (var unitOfWork = UnitOfWorkManager.NewUnitOfWork())              {                  // Firstly check if this is a post and they are allowed to move it                  var post = _postService.Get(viewModel.PostId);                  if (post == null)                  {                      return ErrorToHomePage(LocalizationService.GetResourceString("Errors.GenericMessage"));                  }                    var permissions = RoleService.GetPermissions(post.Topic.Category' UsersRole);                  var allowedCategories = _categoryService.GetAllowedCategories(UsersRole);                    // Does the user have permission to this posts category                  var cat = allowedCategories.FirstOrDefault(x => x.Id == post.Topic.Category.Id);                  if (cat == null)                  {                      return ErrorToHomePage(LocalizationService.GetResourceString("Errors.NoPermission"));                  }                    // Does this user have permission to move                  if (!permissions[SiteConstants.Instance.PermissionEditPosts].IsTicked)                  {                      return NoPermission(post.Topic);                  }                    var previousTopic = post.Topic;                  var category = post.Topic.Category;                  var postCreator = post.User;                    Topic topic;                  var cancelledByEvent = false;                  // If the dropdown has a value' then we choose that first                  if (viewModel.TopicId != null)                  {                      // Get the selected topic                      topic = _topicService.Get((Guid) viewModel.TopicId);                  }                  else if(!string.IsNullOrEmpty(viewModel.TopicTitle))                  {                      // We get the banned words here and pass them in' so its just one call                      // instead of calling it several times and each call getting all the words back                      var bannedWordsList = _bannedWordService.GetAll();                      List<string> bannedWords = null;                      if (bannedWordsList.Any())                      {                          bannedWords = bannedWordsList.Select(x => x.Word).ToList();                      }                        // Create the topic                      topic = new Topic                      {                          Name = _bannedWordService.SanitiseBannedWords(viewModel.TopicTitle' bannedWords)'                          Category = category'                          User = postCreator                      };                        // Create the topic                      topic = _topicService.Add(topic);                        // Save the changes                      unitOfWork.SaveChanges();                        // Set the post to be a topic starter                      post.IsTopicStarter = true;                        // Check the Events                      var e = new TopicMadeEventArgs { Topic = topic };                      EventManager.Instance.FireBeforeTopicMade(this' e);                      if (e.Cancel)                      {                          cancelledByEvent = true;                          ShowMessage(new GenericMessageViewModel                          {                              MessageType = GenericMessages.warning' Message = LocalizationService.GetResourceString("Errors.GenericMessage")                          });                      }                                      }                  else                  {                      // No selected topic OR topic title' just redirect back to the topic                      return Redirect(post.Topic.NiceUrl);                  }                    // If this create was cancelled by an event then don't continue                  if (!cancelledByEvent)                  {                      // Now update the post to the new topic                      post.Topic = topic;                        // Also move any posts' which were in reply to this post                      if (viewModel.MoveReplyToPosts)                      {                          var relatedPosts = _postService.GetReplyToPosts(viewModel.PostId);                          foreach (var relatedPost in relatedPosts)                          {                              relatedPost.Topic = topic;                          }                      }                        unitOfWork.SaveChanges();                        // Update Last post..  As we have done a save' we should get all posts including the added ones                      var lastPost = topic.Posts.OrderByDescending(x => x.DateCreated).FirstOrDefault();                      topic.LastPost = lastPost;                        // If any of the posts we are moving' were the last post - We need to update the old Topic                      var previousTopicLastPost = previousTopic.Posts.OrderByDescending(x => x.DateCreated).FirstOrDefault();                      previousTopic.LastPost = previousTopicLastPost;                        try                      {                          unitOfWork.Commit();                            EventManager.Instance.FireAfterTopicMade(this' new TopicMadeEventArgs { Topic = topic });                            // On Update redirect to the topic                          return RedirectToAction("Show"' "Topic"' new { slug = topic.Slug });                      }                      catch (Exception ex)                      {                          unitOfWork.Rollback();                          LoggingService.Error(ex);                          ShowMessage(new GenericMessageViewModel                          {                              Message = ex.Message'                              MessageType = GenericMessages.danger                          });                      }                  }                    // Repopulate the topics                  var topics = _topicService.GetAllSelectList(allowedCategories' 30);                  topics.Insert(0' new SelectListItem                  {                      Text = LocalizationService.GetResourceString("Topic.Choose")'                      Value = ""                  });                    viewModel.LatestTopics = topics;                  viewModel.Post = ViewModelMapping.CreatePostViewModel(post' post.Votes.ToList()' permissions' post.Topic' LoggedOnReadOnlyUser' SettingsService.GetSettings()' post.Favourites.ToList());                  viewModel.Post.MinimalPost = true;                  viewModel.PostId = post.Id;                    return View(viewModel);              }
Magic Number,MVCForum.Website.Controllers,StatsController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\StatsController.cs,GetMainStats,The following statement contains a magic number: var viewModel = new MainStatsViewModel                                  {                                      LatestMembers = MembershipService.GetLatestUsers(10)'                                      MemberCount = MembershipService.MemberCount()'                                      TopicCount = _topicService.TopicCount(allCats)'                                      PostCount = _postService.PostCount(allCats)                                  };
Magic Number,MVCForum.Website.Controllers,TopicController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\TopicController.cs,HotTopics,The following statement contains a magic number: using (UnitOfWorkManager.NewUnitOfWork())              {                  if (amountToShow == null)                  {                      amountToShow = 5;                  }                    var fromString = from != null ? Convert.ToDateTime(from).ToShortDateString() : null;                  var toString = to != null ? Convert.ToDateTime(to).ToShortDateString() : null;                    var cacheKey = string.Concat("HotTopics"' UsersRole.Id' fromString' toString' amountToShow);                  var viewModel = CacheService.Get<HotTopicsViewModel>(cacheKey);                  if (viewModel == null)                  {                      // Allowed Categories                      var allowedCategories = _categoryService.GetAllowedCategories(UsersRole);                        // Get the topics                      var topics = _topicService.GetPopularTopics(from' to' allowedCategories' (int)amountToShow);                        // Get the Topic View Models                      var topicViewModels = ViewModelMapping.CreateTopicViewModels(topics.ToList()' RoleService' UsersRole' LoggedOnReadOnlyUser' allowedCategories' SettingsService.GetSettings());                        // create the view model                      viewModel = new HotTopicsViewModel                      {                          Topics = topicViewModels                      };                      CacheService.Set(cacheKey' viewModel' CacheTimes.TwoHours);                  }                    return PartialView(viewModel);              }
Magic Number,MVCForum.Website.Controllers.OAuthControllers,FacebookOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\FacebookOAuthController.cs,FacebookLogin,The following statement contains a magic number: if (AuthState != null)              {                  var stateValue = Session["MVCForum_" + AuthState] as string[];                  if (stateValue != null && stateValue.Length == 3)                  {                      Callback = stateValue[0];                      ContentTypeAlias = stateValue[1];                      PropertyAlias = stateValue[2];                  }              }
Magic Number,MVCForum.Website.Controllers.OAuthControllers,FacebookOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\FacebookOAuthController.cs,FacebookLogin,The following statement contains a magic number: if (AuthState != null)              {                  var stateValue = Session["MVCForum_" + AuthState] as string[];                  if (stateValue != null && stateValue.Length == 3)                  {                      Callback = stateValue[0];                      ContentTypeAlias = stateValue[1];                      PropertyAlias = stateValue[2];                  }              }
Magic Number,MVCForum.Website.Controllers.OAuthControllers,FacebookOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\FacebookOAuthController.cs,FacebookLogin,The following statement contains a magic number: if (string.IsNullOrEmpty(SiteConstants.Instance.FacebookAppId) ||                  string.IsNullOrEmpty(SiteConstants.Instance.FacebookAppSecret))              {                  resultMessage.Message = "You need to add the Facebook app credentials";                  resultMessage.MessageType = GenericMessages.danger;              }              else              {                    // Settings valid move on                  // Configure the OAuth client based on the options of the prevalue options                  var client = new FacebookOAuthClient                  {                      AppId = SiteConstants.Instance.FacebookAppId'                      AppSecret = SiteConstants.Instance.FacebookAppSecret'                      RedirectUri = ReturnUrl                  };                    // Session expired?                  if (AuthState != null && Session["MVCForum_" + AuthState] == null)                  {                      resultMessage.Message = "Session Expired";                      resultMessage.MessageType = GenericMessages.danger;                  }                    // Check whether an error response was received from Facebook                  if (AuthError != null)                  {                      Session.Remove("MVCForum_" + AuthState);                      resultMessage.Message = AuthErrorDescription;                      resultMessage.MessageType = GenericMessages.danger;                  }                    // Redirect the user to the Facebook login dialog                  if (AuthCode == null)                  {                      // Generate a new unique/random state                      var state = Guid.NewGuid().ToString();                        // Save the state in the current user session                      Session["MVCForum_" + state] = new[] { Callback' ContentTypeAlias' PropertyAlias };                        // Construct the authorization URL                      var url = client.GetAuthorizationUrl(state' "public_profile"' "email"); //"user_friends"                        // Redirect the user                      return Redirect(url);                  }                    // Exchange the authorization code for a user access token                  var userAccessToken = string.Empty;                  try                  {                      userAccessToken = client.GetAccessTokenFromAuthCode(AuthCode);                  }                  catch (Exception ex)                  {                      resultMessage.Message = $"Unable to acquire access token<br/>{ex.Message}";                      resultMessage.MessageType = GenericMessages.danger;                  }                    try                  {                      if (string.IsNullOrEmpty(resultMessage.Message))                      {                          // Initialize the Facebook service (no calls are made here)                          var service = FacebookService.CreateFromAccessToken(userAccessToken);                            // Declare the options for the call to the API                          var options = new FacebookGetUserOptions                          {                              Identifier = "me"'                              Fields = new[] { "id"' "name"' "email"' "first_name"' "last_name"' "gender" }                          };                            var user = service.Users.GetUser(options);                            // Try to get the email - Some FB accounts have protected passwords                          var email = user.Body.Email;                          if (string.IsNullOrEmpty(email))                          {                              resultMessage.Message = LocalizationService.GetResourceString("Members.UnableToGetEmailAddress");                              resultMessage.MessageType = GenericMessages.danger;                              ShowMessage(resultMessage);                              return RedirectToAction("LogOn"' "Members");                          }                            // First see if this user has registered already - Use email address                          using (UnitOfWorkManager.NewUnitOfWork())                          {                              var userExists = MembershipService.GetUserByEmail(email);                                if (userExists != null)                              {                                  try                                  {                                      // Users already exists' so log them in                                      FormsAuthentication.SetAuthCookie(userExists.UserName' true);                                      resultMessage.Message = LocalizationService.GetResourceString("Members.NowLoggedIn");                                      resultMessage.MessageType = GenericMessages.success;                                      ShowMessage(resultMessage);                                      return RedirectToAction("Index"' "Home");                                  }                                  catch (Exception ex)                                  {                                      LoggingService.Error(ex);                                  }                              }                              else                              {                                  // Not registered already so register them                                  var viewModel = new MemberAddViewModel                                  {                                      Email = email'                                      LoginType = LoginType.Facebook'                                      Password = StringUtils.RandomString(8)'                                      UserName = user.Body.Name'                                      UserAccessToken = userAccessToken                                  };                                    // Get the image and save it                                  var getImageUrl = $"http://graph.facebook.com/{user.Body.Id}/picture?type=square";                                  viewModel.SocialProfileImageUrl = getImageUrl;                                    //Large size photo https://graph.facebook.com/{facebookId}/picture?type=large                                  //Medium size photo https://graph.facebook.com/{facebookId}/picture?type=normal                                  //Small size photo https://graph.facebook.com/{facebookId}/picture?type=small                                  //Square photo https://graph.facebook.com/{facebookId}/picture?type=square                                    // Store the viewModel in TempData - Which we'll use in the register logic                                  TempData[AppConstants.MemberRegisterViewModel] = viewModel;                                    return RedirectToAction("SocialLoginValidator"' "Members");                              }                          }                      }                  }                  catch (Exception ex)                  {                      resultMessage.Message = $"Unable to get user information<br/>{ex.Message}";                      resultMessage.MessageType = GenericMessages.danger;                      LoggingService.Error(ex);                  }                }
Magic Number,MVCForum.Website.Controllers.OAuthControllers,GoogleOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\GoogleOAuthController.cs,GoogleLogin,The following statement contains a magic number: if (string.IsNullOrEmpty(SiteConstants.Instance.GooglePlusAppId) ||                  string.IsNullOrEmpty(SiteConstants.Instance.GooglePlusAppSecret))              {                  resultMessage.Message = "You need to add the Google app credentials";                  resultMessage.MessageType = GenericMessages.danger;              }              else              {                  // Configure the OAuth client based on the options of the prevalue options                  var client = new GoogleOAuthClient                  {                      ClientId = SiteConstants.Instance.GooglePlusAppId'                      ClientSecret = SiteConstants.Instance.GooglePlusAppSecret'                      RedirectUri = ReturnUrl                  };                    // Session expired?                  if (AuthState != null && Session["MVCForum_" + AuthState] == null)                  {                      resultMessage.Message = "Session Expired";                      resultMessage.MessageType = GenericMessages.danger;                  }                    // Check whether an error response was received from Google                  if (AuthError != null)                  {                      resultMessage.Message = AuthErrorDescription;                      resultMessage.MessageType = GenericMessages.danger;                      if (AuthState != null) Session.Remove("MVCForum_" + AuthState);                  }                    // Redirect the user to the Google login dialog                  if (AuthCode == null)                  {                        // Generate a new unique/random state                      var state = Guid.NewGuid().ToString();                        // Save the state in the current user session                      Session["MVCForum_" + state] = new NameValueCollection {                      { "Callback"' Callback}'                      { "ContentTypeAlias"' ContentTypeAlias}'                      { "PropertyAlias"' PropertyAlias}'                      { "Feature"' Feature}                  };                        // Declare the scope                      var scope = new[] {                      GoogleScopes.OpenId'                      GoogleScopes.Email'                      GoogleScopes.Profile                  };                        // Construct the authorization URL                      var url = client.GetAuthorizationUrl(state' scope' GoogleAccessType.Offline' GoogleApprovalPrompt.Force);                        // Redirect the user                      return Redirect(url);                  }                    var info = new GoogleAccessTokenResponse();                  try                  {                      info = client.GetAccessTokenFromAuthorizationCode(AuthCode);                  }                  catch (Exception ex)                  {                      resultMessage.Message = $"Unable to acquire access token<br/>{ex.Message}";                      resultMessage.MessageType = GenericMessages.danger;                  }                    try                  {                        // Initialize the Google service                      var service = GoogleService.CreateFromRefreshToken(client.ClientIdFull' client.ClientSecret' info.RefreshToken);                        // Get information about the authenticated user                      var user = service.GetUserInfo();                      using (UnitOfWorkManager.NewUnitOfWork())                      {                          var userExists = MembershipService.GetUserByEmail(user.Email);                            if (userExists != null)                          {                              // Users already exists' so log them in                              FormsAuthentication.SetAuthCookie(userExists.UserName' true);                              resultMessage.Message = LocalizationService.GetResourceString("Members.NowLoggedIn");                              resultMessage.MessageType = GenericMessages.success;                              ShowMessage(resultMessage);                              return RedirectToAction("Index"' "Home");                          }                          else                          {                              // Not registered already so register them                              var viewModel = new MemberAddViewModel                              {                                  Email = user.Email'                                  LoginType = LoginType.Google'                                  Password = StringUtils.RandomString(8)'                                  UserName = user.Name'                                  SocialProfileImageUrl = user.Picture'                                  UserAccessToken = info.RefreshToken                              };                                // Store the viewModel in TempData - Which we'll use in the register logic                              TempData[AppConstants.MemberRegisterViewModel] = viewModel;                                return RedirectToAction("SocialLoginValidator"' "Members");                          }                      }                    }                  catch (Exception ex)                  {                      resultMessage.Message = $"Unable to get user information<br/>{ex.Message}";                      resultMessage.MessageType = GenericMessages.danger;                      LoggingService.Error(ex);                  }                }
Magic Number,MVCForum.Website.Controllers.OAuthControllers,MicrosoftOAuthController,C:\repos\leen3o_mvcforum\MVCForum.Website\Controllers\OAuthControllers\MicrosoftOAuthController.cs,MicrosoftLogin,The following statement contains a magic number: if (string.IsNullOrEmpty(SiteConstants.Instance.MicrosoftAppId) ||                  string.IsNullOrEmpty(SiteConstants.Instance.MicrosoftAppSecret))              {                  resultMessage.Message = "You need to add the Microsoft app credentials to the web.config";                  resultMessage.MessageType = GenericMessages.danger;              }              else              {                    var client = new MicrosoftOAuthClient                  {                      ClientId = SiteConstants.Instance.MicrosoftAppId'                      ClientSecret = SiteConstants.Instance.MicrosoftAppSecret'                      RedirectUri = ReturnUrl                  };                    // Session expired?                  if (input.State != null && Session["MVCForum_" + input.State] == null)                  {                      resultMessage.Message = "Session Expired";                      resultMessage.MessageType = GenericMessages.danger;                  }                    // Check whether an error response was received from Microsoft                  if (input.Error.HasError)                  {                      Session.Remove("MVCForum_" + input.State);                      resultMessage.Message = AuthErrorDescription;                      resultMessage.MessageType = GenericMessages.danger;                  }                    // Redirect the user to the Microsoft login dialog                  if (string.IsNullOrWhiteSpace(input.Code))                  {                        // Generate a new unique/random state                      var state = Guid.NewGuid().ToString();                        // Save the state in the current user session                      Session["MVCForum_" + state] = "/";                        // Construct the authorization URL                      var url = client.GetAuthorizationUrl(state' WindowsLiveScopes.Emails + WindowsLiveScopes.Birthday);                        // Redirect the user                      return Redirect(url);                  }                    // Exchange the authorization code for an access token                  MicrosoftTokenResponse accessTokenResponse;                  try                  {                      Session.Remove("MVCForum_" + input.State);                      accessTokenResponse = client.GetAccessTokenFromAuthCode(input.Code);                  }                  catch (Exception ex)                  {                      accessTokenResponse = null;                      resultMessage.Message = $"Unable to acquire access token<br/>{ex.Message}";                      resultMessage.MessageType = GenericMessages.danger;                  }                      try                  {                      if (string.IsNullOrEmpty(resultMessage.Message) || accessTokenResponse != null)                      {                          //MicrosoftScope debug = accessTokenResponse.Body.Scope.Items;                            //accessTokenResponse.Body.AccessToken                          //foreach (MicrosoftScope scope in accessTokenResponse.Body.Scope.Items) {                          //    scope                          //}                          //accessTokenResponse.Response.Body                            // Initialize a new MicrosoftService so we can make calls to the API                          var service = MicrosoftService.CreateFromAccessToken(accessTokenResponse.Body.AccessToken);                            // Make the call to the Windows Live API / endpoint                          var response = service.WindowsLive.GetSelf();                            // Get a reference to the response body                          var user = response.Body;                            var getEmail = !string.IsNullOrWhiteSpace(user.Emails?.Preferred);                          if (!getEmail)                          {                              resultMessage.Message = LocalizationService.GetResourceString("Members.UnableToGetEmailAddress");                              resultMessage.MessageType = GenericMessages.danger;                              ShowMessage(resultMessage);                              return RedirectToAction("LogOn"' "Members");                          }                            using (UnitOfWorkManager.NewUnitOfWork())                          {                              var userExists = MembershipService.GetUserByEmail(user.Emails.Preferred);                                if (userExists != null)                              {                                  try                                  {                                      // Users already exists' so log them in                                      FormsAuthentication.SetAuthCookie(userExists.UserName' true);                                      resultMessage.Message = LocalizationService.GetResourceString("Members.NowLoggedIn");                                      resultMessage.MessageType = GenericMessages.success;                                      ShowMessage(resultMessage);                                      return RedirectToAction("Index"' "Home");                                  }                                  catch (Exception ex)                                  {                                      LoggingService.Error(ex);                                  }                              }                              else                              {                                  // Not registered already so register them                                  var viewModel = new MemberAddViewModel                                  {                                      Email = user.Emails.Preferred'                                      LoginType = LoginType.Microsoft'                                      Password = StringUtils.RandomString(8)'                                      UserName = user.Name'                                      UserAccessToken = accessTokenResponse.Body.AccessToken'                                      SocialProfileImageUrl = $"https://apis.live.net/v5.0/{user.Id}/picture"                                  };                                    //var uri = string.Concat("https://apis.live.net/v5.0/me?access_token="'viewModel.UserAccessToken);                                  //using (var dl = new WebClient())                                  //{                                  //    var profile = JObject.Parse(dl.DownloadString(uri));                                  //    var pictureUrl = ;                                  //    if (!string.IsNullOrEmpty(pictureUrl))                                  //    {                                  //        //viewModel.SocialProfileImageUrl = getImageUrl;                                  //    }                                  //}                                      // Store the viewModel in TempData - Which we'll use in the register logic                                  TempData[AppConstants.MemberRegisterViewModel] = viewModel;                                    return RedirectToAction("SocialLoginValidator"' "Members");                              }                          }                        }                      else                      {                          resultMessage.MessageType = GenericMessages.danger;                          ShowMessage(resultMessage);                          return RedirectToAction("LogOn"' "Members");                      }                    }                  catch (Exception ex)                  {                      resultMessage.Message = $"Unable to get user information<br/>{ex.Message}";                      resultMessage.MessageType = GenericMessages.danger;                      LoggingService.Error(ex);                  }                    }
Missing Default,MVCForum.Website.Application,AppHelpers,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\AppHelpers.cs,IsStaticResource,The following switch statement is missing a default case: switch (extension.ToLower())              {                  case ".axd":                  case ".ashx":                  case ".bmp":                  case ".css":                  case ".gif":                  case ".htm":                  case ".html":                  case ".ico":                  case ".jpeg":                  case ".jpg":                  case ".js":                  case ".png":                  case ".rar":                  case ".zip":                      return true;              }
Missing Default,MVCForum.Website.Application,AppHelpers,C:\repos\leen3o_mvcforum\MVCForum.Website\Application\AppHelpers.cs,UploadFile,The following switch statement is missing a default case: switch (rotationValue)                              {                                  case 1: // landscape' do nothing                                      break;                                    case 8: // rotated 90 right                                      // de-rotate:                                      sourceimage.RotateFlip(RotateFlipType.Rotate270FlipNone);                                      break;                                    case 3: // bottoms up                                      sourceimage.RotateFlip(RotateFlipType.Rotate180FlipNone);                                      break;                                    case 6: // rotated 90 left                                      sourceimage.RotateFlip(RotateFlipType.Rotate90FlipNone);                                      break;                              }
