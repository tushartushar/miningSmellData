Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ENode.EQueue,CommandExecuteContext,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandConsumer.cs,CommandExecuteContext,The method has 6 parameters. Parameters: repository' aggregateRootStorage' queueMessage' messageContext' commandMessage' sendReplyService
Long Parameter List,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessage,The method has 5 parameters. Parameters: producer' message' routingKey' messageId' version
Long Parameter List,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessageAsync,The method has 5 parameters. Parameters: producer' message' routingKey' messageId' version
Long Identifier,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,,The length of the parameter _commandExecutedMessageLocalQueue is 33.
Long Identifier,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,,The length of the parameter _domainEventHandledMessageLocalQueue is 36.
Long Identifier,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,,The length of the parameter _domainEventHandledMessageWorker is 32.
Long Identifier,ENode.EQueue,PublishableExceptionConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\PublishableExceptions\PublishableExceptionConsumer.cs,,The length of the parameter _publishableExceptionProcessor is 30.
Long Identifier,ENode.EQueue,SendReplyService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendReplyService.cs,,The length of the parameter _scanInactiveCommandRemotingClientTaskName is 42.
Long Statement,ENode.EQueue,ApplicationMessageConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\ApplicationMessage\ApplicationMessageConsumer.cs,Handle,The length of the statement  "            var message = _jsonSerializer.Deserialize(Encoding.UTF8.GetString(queueMessage.Body)' applicationMessageType) as IApplicationMessage; " is 133.
Long Statement,ENode.EQueue,ApplicationMessageConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\ApplicationMessage\ApplicationMessageConsumer.cs,Handle,The length of the statement  "            _logger.InfoFormat("ENode application message received' messageId: {0}' routingKey: {1}"' message.Id' message.GetRoutingKey()); " is 127.
Long Statement,ENode.EQueue,ApplicationMessagePublisher,C:\repos\tangxuehua_enode\src\ENode.EQueue\ApplicationMessage\ApplicationMessagePublisher.cs,PublishAsync,The length of the statement  "            return _sendMessageService.SendMessageAsync(_producer' queueMessage' message.GetRoutingKey() ?? message.Id' message.Id' null); " is 126.
Long Statement,ENode.EQueue,CommandConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandConsumer.cs,Handle,The length of the statement  "            var commandExecuteContext = new CommandExecuteContext(_repository' _aggregateStorage' queueMessage' context' commandMessage' _sendReplyService); " is 144.
Long Statement,ENode.EQueue,CommandConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandConsumer.cs,Handle,The length of the statement  "            _logger.InfoFormat("ENode command message received' messageId: {0}' aggregateRootId: {1}"' command.Id' command.AggregateRootId); " is 128.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,Initialize,The length of the statement  "            _domainEventHandledMessageLocalQueue = new BlockingCollection<DomainEventHandledMessage>(new ConcurrentQueue<DomainEventHandledMessage>()); " is 139.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,Initialize,The length of the statement  "            _commandExecutedMessageWorker = new Worker("ProcessExecutedCommandMessage"' () => ProcessExecutedCommandMessage(_commandExecutedMessageLocalQueue.Take())); " is 155.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,Initialize,The length of the statement  "            _domainEventHandledMessageWorker = new Worker("ProcessDomainEventHandledMessage"' () => ProcessDomainEventHandledMessage(_domainEventHandledMessageLocalQueue.Take())); " is 167.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,RegisterProcessingCommand,The length of the statement  "            if (!_commandTaskDict.TryAdd(command.Id' new CommandTaskCompletionSource { CommandReturnType = commandReturnType' TaskCompletionSource = taskCompletionSource })) " is 161.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,RegisterProcessingCommand,The length of the statement  "                throw new Exception(string.Format("Duplicate processing command registration' type:{0}' id:{1}"' command.GetType().Name' command.Id)); " is 134.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,ProcessFailedSendingCommand,The length of the statement  "                var commandResult = new CommandResult(CommandStatus.Failed' command.Id' command.AggregateRootId' "Failed to send the command."' typeof(string).FullName); " is 153.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,ProcessFailedSendingCommand,The length of the statement  "                commandTaskCompletionSource.TaskCompletionSource.TrySetResult(new AsyncTaskResult<CommandResult>(AsyncTaskStatus.Success' commandResult)); " is 138.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,ProcessExecutedCommandMessage,The length of the statement  "                    if (commandTaskCompletionSource.TaskCompletionSource.TrySetResult(new AsyncTaskResult<CommandResult>(AsyncTaskStatus.Success' commandResult))) " is 142.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,ProcessExecutedCommandMessage,The length of the statement  "                        if (commandTaskCompletionSource.TaskCompletionSource.TrySetResult(new AsyncTaskResult<CommandResult>(AsyncTaskStatus.Success' commandResult))) " is 142.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,ProcessDomainEventHandledMessage,The length of the statement  "                var commandResult = new CommandResult(CommandStatus.Success' message.CommandId' message.AggregateRootId' message.CommandResult' message.CommandResult != null ? typeof(string).FullName : null); " is 192.
Long Statement,ENode.EQueue,CommandResultProcessor,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandResultProcessor.cs,ProcessDomainEventHandledMessage,The length of the statement  "                if (commandTaskCompletionSource.TaskCompletionSource.TrySetResult(new AsyncTaskResult<CommandResult>(AsyncTaskStatus.Success' commandResult))) " is 142.
Long Statement,ENode.EQueue,CommandService,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandService.cs,Send,The length of the statement  "            _sendMessageService.SendMessage(_producer' BuildCommandMessage(command' false)' _commandRouteKeyProvider.GetRoutingKey(command)' command.Id' null); " is 147.
Long Statement,ENode.EQueue,CommandService,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandService.cs,SendAsync,The length of the statement  "                return _sendMessageService.SendMessageAsync(_producer' BuildCommandMessage(command' false)' _commandRouteKeyProvider.GetRoutingKey(command)' command.Id' null); " is 159.
Long Statement,ENode.EQueue,CommandService,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandService.cs,Execute,The length of the statement  "                throw new CommandExecuteTimeoutException("Command execute timeout' commandId: {0}' aggregateRootId: {1}"' command.Id' command.AggregateRootId); " is 143.
Long Statement,ENode.EQueue,CommandService,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandService.cs,Execute,The length of the statement  "                throw new CommandExecuteTimeoutException("Command execute timeout' commandId: {0}' aggregateRootId: {1}"' command.Id' command.AggregateRootId); " is 143.
Long Statement,ENode.EQueue,CommandService,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandService.cs,ExecuteAsync,The length of the statement  "                var result = await _sendMessageService.SendMessageAsync(_producer' BuildCommandMessage(command' true)' _commandRouteKeyProvider.GetRoutingKey(command)' command.Id' null).ConfigureAwait(false); " is 192.
Long Statement,ENode.EQueue,CommandService,C:\repos\tangxuehua_enode\src\ENode.EQueue\Command\CommandService.cs,BuildCommandMessage,The length of the statement  "            var replyAddress = needReply && _commandResultProcessor != null ? _commandResultProcessor.BindingAddress.ToString() : null; " is 123.
Long Statement,ENode.EQueue,DomainEventConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\DomainEvent\DomainEventConsumer.cs,Initialize,The length of the statement  "            _messageProcessor = ObjectContainer.Resolve<IMessageProcessor<ProcessingDomainEventStreamMessage' DomainEventStreamMessage>>(); " is 127.
Long Statement,ENode.EQueue,DomainEventConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\DomainEvent\DomainEventConsumer.cs,Handle,The length of the statement  "            _logger.InfoFormat("ENode event message received' messageId: {0}' aggregateRootId: {1}' aggregateRootType: {2}' version: {3}"' domainEventStreamMessage.Id' domainEventStreamMessage.AggregateRootStringId' domainEventStreamMessage.AggregateRootTypeName' domainEventStreamMessage.Version); " is 286.
Long Statement,ENode.EQueue,DomainEventStreamProcessContext,C:\repos\tangxuehua_enode\src\ENode.EQueue\DomainEvent\DomainEventConsumer.cs,NotifyMessageProcessed,The length of the statement  "                if (!_domainEventStreamMessage.Items.TryGetValue("CommandReplyAddress"' out string replyAddress) || string.IsNullOrEmpty(replyAddress)) " is 135.
Long Statement,ENode.EQueue,DomainEventPublisher,C:\repos\tangxuehua_enode\src\ENode.EQueue\DomainEvent\DomainEventPublisher.cs,PublishAsync,The length of the statement  "            return _sendMessageService.SendMessageAsync(_producer' message' eventStream.GetRoutingKey() ?? eventStream.AggregateRootId' eventStream.Id' eventStream.Version.ToString()); " is 172.
Long Statement,ENode.EQueue,ENodeExtensions,C:\repos\tangxuehua_enode\src\ENode.EQueue\ENodeExtensions.cs,IsTopicProviderType,The length of the statement  "            return type.IsClass && !type.IsAbstract && type.GetInterfaces().Any(x => x.IsGenericType && x.GetGenericTypeDefinition() == typeof(ITopicProvider<>)); " is 150.
Long Statement,ENode.EQueue,PublishableExceptionConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\PublishableExceptions\PublishableExceptionConsumer.cs,Initialize,The length of the statement  "            _publishableExceptionProcessor = ObjectContainer.Resolve<IMessageProcessor<ProcessingPublishableExceptionMessage' IPublishableException>>(); " is 140.
Long Statement,ENode.EQueue,PublishableExceptionConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\PublishableExceptions\PublishableExceptionConsumer.cs,Handle,The length of the statement  "            var exceptionMessage = _jsonSerializer.Deserialize<PublishableExceptionMessage>(Encoding.UTF8.GetString(queueMessage.Body)); " is 124.
Long Statement,ENode.EQueue,PublishableExceptionConsumer,C:\repos\tangxuehua_enode\src\ENode.EQueue\PublishableExceptions\PublishableExceptionConsumer.cs,Handle,The length of the statement  "            _logger.InfoFormat("ENode exception message received' messageId: {0}' aggregateRootId: {1}' aggregateRootType: {2}"' exceptionMessage.UniqueId' exceptionMessage.AggregateRootId' exceptionMessage.AggregateRootTypeName); " is 218.
Long Statement,ENode.EQueue,PublishableExceptionPublisher,C:\repos\tangxuehua_enode\src\ENode.EQueue\PublishableExceptions\PublishableExceptionPublisher.cs,PublishAsync,The length of the statement  "            return _sendMessageService.SendMessageAsync(_producer' message' exception.GetRoutingKey() ?? exception.Id' exception.Id' null); " is 127.
Long Statement,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessage,The length of the statement  "                        _logger.ErrorFormat("ENode message sync send failed' sendResult: {0}' routingKey: {1}' messageId: {2}' version: {3}"' result' routingKey' messageId' version); " is 158.
Long Statement,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessage,The length of the statement  "                    _logger.InfoFormat("ENode message sync send success' sendResult: {0}' routingKey: {1}' messageId: {2}' version: {3}"' result' routingKey' messageId' version); " is 158.
Long Statement,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessage,The length of the statement  "                _logger.Error(string.Format("ENode message synch send has exception' message: {0}' routingKey: {1}' messageId: {2}' version: {3}"' message' routingKey' messageId' version)' ex); " is 177.
Long Statement,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessageAsync,The length of the statement  "                    _logger.ErrorFormat("ENode message async send failed' sendResult: {0}' routingKey: {1}' messageId: {2}' version: {3}"' result' routingKey' messageId' version); " is 159.
Long Statement,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessageAsync,The length of the statement  "                _logger.InfoFormat("ENode message async send success' sendResult: {0}' routingKey: {1}' messageId: {2}' version: {3}"' result' routingKey' messageId' version); " is 159.
Long Statement,ENode.EQueue,SendQueueMessageService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendQueueMessageService.cs,SendMessageAsync,The length of the statement  "                _logger.Error(string.Format("ENode message async send has exception' message: {0}' routingKey: {1}' messageId: {2}' version: {3}"' message' routingKey' messageId' version)' ex); " is 177.
Long Statement,ENode.EQueue,SendReplyService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendReplyService.cs,GetRemotingClient,The length of the statement  "            _ioHelper.TryIOAction("CreateReplyRemotingClient"' () => "replyAddress:" + replyAddress' () => CreateReplyRemotingClient(replyEndpoint)' 3); " is 140.
Magic Number,ENode.EQueue,SendReplyService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendReplyService.cs,SendReplyService,The following statement contains a magic number: _scanInactiveCommandRemotingClientTaskName = "ScanInactiveCommandRemotingClient_" + DateTime.Now.Ticks + new Random().Next(10000);
Magic Number,ENode.EQueue,SendReplyService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendReplyService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask(_scanInactiveCommandRemotingClientTaskName' ScanInactiveRemotingClients' 5000' 5000);
Magic Number,ENode.EQueue,SendReplyService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendReplyService.cs,Start,The following statement contains a magic number: _scheduleService.StartTask(_scanInactiveCommandRemotingClientTaskName' ScanInactiveRemotingClients' 5000' 5000);
Magic Number,ENode.EQueue,SendReplyService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendReplyService.cs,GetRemotingClient,The following statement contains a magic number: _ioHelper.TryIOAction("CreateReplyRemotingClient"' () => "replyAddress:" + replyAddress' () => CreateReplyRemotingClient(replyEndpoint)' 3);
Magic Number,ENode.EQueue,SendReplyService,C:\repos\tangxuehua_enode\src\ENode.EQueue\SendReplyService.cs,TryParseReplyAddress,The following statement contains a magic number: try              {                  var items = replyAddress.Split(':');                  Ensure.Equals(items.Length' 2);                  return new IPEndPoint(IPAddress.Parse(items[0])' int.Parse(items[1]));              }              catch (Exception ex)              {                  _logger.Error(string.Format("Invalid reply address : {0}"' replyAddress)' ex);                  return null;              }
