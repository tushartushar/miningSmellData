Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,NoteSample.QuickStart,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\NoteSample\NoteSample.QuickStart\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The length of the parameter commandConsumerAllocatedQueues is 30.
Magic Number,NoteSample.QuickStart,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\NoteSample\NoteSample.QuickStart\ENodeExtensions.cs,StartEQueue,The following statement contains a magic number: _commandService.Initialize(new CommandResultProcessor().Initialize(new IPEndPoint(SocketUtils.GetLocalIPV4()' 9000)));
Magic Number,NoteSample.QuickStart,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\NoteSample\NoteSample.QuickStart\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  if (eventConsumerAllocatedQueues.Count() == 4 && commandConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,NoteSample.QuickStart,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\NoteSample\NoteSample.QuickStart\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  if (eventConsumerAllocatedQueues.Count() == 4 && commandConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,NoteSample.QuickStart,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\NoteSample\NoteSample.QuickStart\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  if (eventConsumerAllocatedQueues.Count() == 4 && commandConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,NoteSample.QuickStart,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\NoteSample\NoteSample.QuickStart\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  if (eventConsumerAllocatedQueues.Count() == 4 && commandConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
