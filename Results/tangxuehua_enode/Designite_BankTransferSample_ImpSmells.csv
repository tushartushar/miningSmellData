Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BankTransferSample.Commands,AddTransactionPreparationCommand,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Commands\BankAccountCommands.cs,AddTransactionPreparationCommand,The method has 5 parameters. Parameters: accountId' transactionId' transactionType' preparationType' amount
Long Parameter List,BankTransferSample.Domain,InsufficientBalanceException,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\BankAccount\InsufficientBalanceException.cs,InsufficientBalanceException,The method has 6 parameters. Parameters: accountId' transactionId' transactionType' amount' currentBalance' currentAvailableBalance
Long Parameter List,BankTransferSample.Domain,TransactionPreparation,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\BankAccount\TransactionPreparation.cs,TransactionPreparation,The method has 5 parameters. Parameters: accountId' transactionId' transactionType' preparationType' amount
Long Identifier,BankTransferSample.Domain,BankAccount,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\BankAccount\BankAccount.cs,GetAvailableBalance,The length of the parameter totalDebitTransactionPreparationAmount is 38.
Long Identifier,BankTransferSample.Domain,TransferTransaction,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\TransferTransaction\TransferTransaction.cs,,The length of the parameter _isSourceAccountValidatePassed is 30.
Long Identifier,BankTransferSample.Domain,TransferTransaction,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\TransferTransaction\TransferTransaction.cs,,The length of the parameter _isTargetAccountValidatePassed is 30.
Long Identifier,BankTransferSample.Domain,TransferTransaction,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\TransferTransaction\TransferTransaction.cs,,The length of the parameter _isTransferOutPreparationConfirmed is 34.
Long Identifier,BankTransferSample.Domain,TransferTransaction,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\TransferTransaction\TransferTransaction.cs,,The length of the parameter _isTransferInPreparationConfirmed is 33.
Long Identifier,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The length of the parameter commandConsumerAllocatedQueues is 30.
Long Identifier,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The length of the parameter exceptionConsumerAllocatedQueues is 32.
Long Statement,BankTransferSample.CommandHandlers,BankAccountCommandHandlers,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\CommandHandlers\BankAccountCommandHandlers.cs,Handle,The length of the statement  "            context.Get<BankAccount>(command.AggregateRootId).AddTransactionPreparation(command.TransactionId' command.TransactionType' command.PreparationType' command.Amount); " is 165.
Long Statement,BankTransferSample.Domain,BankAccount,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\BankAccount\BankAccount.cs,AddTransactionPreparation,The length of the statement  "            ApplyEvent(new TransactionPreparationAddedEvent(new TransactionPreparation(Id' transactionId' transactionType' preparationType' amount))); " is 138.
Long Statement,BankTransferSample.Domain,BankAccount,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Domain\BankAccount\BankAccount.cs,GetAvailableBalance,The length of the statement  "            foreach (var debitTransactionPreparation in _transactionPreparations.Values.Where(x => x.PreparationType == PreparationType.DebitPreparation)) " is 142.
Long Statement,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,UseEQueue,The length of the statement  "            configuration.SetDefault<IMessagePublisher<IApplicationMessage>' ApplicationMessagePublisher>(_applicationMessagePublisher); " is 124.
Long Statement,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,StartEQueue,The length of the statement  "            _applicationMessageConsumer = new ApplicationMessageConsumer().Initialize().Subscribe("BankTransferApplicationMessageTopic"); " is 125.
Long Statement,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The length of the statement  "                if (commandConsumerAllocatedQueues.Count() == 4 && eventConsumerAllocatedQueues.Count() == 4 && exceptionConsumerAllocatedQueues.Count() == 4) " is 142.
Long Statement,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,NormalTest,The length of the statement  "            commandService.Send(new StartTransferTransactionCommand(ObjectId.GenerateNewStringId()' new TransferTransactionInfo(account1' account3' 300D))); " is 144.
Long Statement,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,NormalTest,The length of the statement  "            commandService.Send(new StartTransferTransactionCommand(ObjectId.GenerateNewStringId()' new TransferTransactionInfo(account1' account2' 1200D))); " is 145.
Long Statement,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,NormalTest,The length of the statement  "            commandService.Send(new StartTransferTransactionCommand(ObjectId.GenerateNewStringId()' new TransferTransactionInfo(account2' account1' 500D))); " is 144.
Long Statement,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,PerformanceTest,The length of the statement  "                commandService.ExecuteAsync(new CreateAccountCommand(accountId' "SampleAccount" + i)' CommandReturnType.EventHandled).Wait(); " is 125.
Long Statement,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,PerformanceTest,The length of the statement  "                commandService.SendAsync(new StartTransferTransactionCommand(ObjectId.GenerateNewStringId()' new TransferTransactionInfo(sourceAccount' targetAccount' transferAmount))); " is 169.
Long Statement,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,PerformanceTest,The length of the statement  "            Console.WriteLine("All transfer transactions completed' time spent: {0}ms' throughput: {1} transactions per second."' spentTime' transactionCount * 1000 / spentTime); " is 166.
Long Statement,BankTransferSample.EventHandlers,ConsoleLogger,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\EventHandlers\ConsoleLogger.cs,HandleAsync,The length of the statement  "                    Console.WriteLine("账户预转出成功，交易ID：{0}，账户：{1}，金额：{2}"' evnt.TransactionPreparation.TransactionId' evnt.TransactionPreparation.AccountId' evnt.TransactionPreparation.Amount); " is 170.
Long Statement,BankTransferSample.EventHandlers,ConsoleLogger,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\EventHandlers\ConsoleLogger.cs,HandleAsync,The length of the statement  "                    Console.WriteLine("账户预转入成功，交易ID：{0}，账户：{1}，金额：{2}"' evnt.TransactionPreparation.TransactionId' evnt.TransactionPreparation.AccountId' evnt.TransactionPreparation.Amount); " is 170.
Long Statement,BankTransferSample.EventHandlers,ConsoleLogger,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\EventHandlers\ConsoleLogger.cs,HandleAsync,The length of the statement  "                    Console.WriteLine("账户存款已成功，账户：{0}，金额：{1}，当前余额：{2}"' evnt.TransactionPreparation.AccountId' evnt.TransactionPreparation.Amount' evnt.CurrentBalance); " is 148.
Long Statement,BankTransferSample.EventHandlers,ConsoleLogger,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\EventHandlers\ConsoleLogger.cs,HandleAsync,The length of the statement  "                    Console.WriteLine("账户转出已成功，交易ID：{0}，账户：{1}，金额：{2}，当前余额：{3}"' evnt.TransactionPreparation.TransactionId' evnt.TransactionPreparation.AccountId' evnt.TransactionPreparation.Amount' evnt.CurrentBalance); " is 200.
Long Statement,BankTransferSample.EventHandlers,ConsoleLogger,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\EventHandlers\ConsoleLogger.cs,HandleAsync,The length of the statement  "                    Console.WriteLine("账户转入已成功，交易ID：{0}，账户：{1}，金额：{2}，当前余额：{3}"' evnt.TransactionPreparation.TransactionId' evnt.TransactionPreparation.AccountId' evnt.TransactionPreparation.Amount' evnt.CurrentBalance); " is 200.
Long Statement,BankTransferSample.EventHandlers,ConsoleLogger,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\EventHandlers\ConsoleLogger.cs,HandleAsync,The length of the statement  "            Console.WriteLine("转账交易已开始，交易ID：{0}，源账户：{1}，目标账户：{2}，转账金额：{3}"' evnt.AggregateRootId' evnt.TransactionInfo.SourceAccountId' evnt.TransactionInfo.TargetAccountId' evnt.TransactionInfo.Amount); " is 191.
Long Statement,BankTransferSample.EventHandlers,ConsoleLogger,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\EventHandlers\ConsoleLogger.cs,HandleAsync,The length of the statement  "            Console.WriteLine("账户的余额不足，交易ID：{0}，账户：{1}，可用余额：{2}，转出金额：{3}"' exception.TransactionId' exception.AccountId' exception.CurrentAvailableBalance' exception.Amount); " is 162.
Long Statement,BankTransferSample.ProcessManagers,DepositTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\DepositTransactionProcessManager.cs,HandleAsync,The length of the statement  "                return _commandService.SendAsync(new ConfirmDepositPreparationCommand(evnt.TransactionPreparation.TransactionId) { Id = evnt.Id }); " is 131.
Long Statement,BankTransferSample.ProcessManagers,DepositTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\DepositTransactionProcessManager.cs,HandleAsync,The length of the statement  "            return _commandService.SendAsync(new CommitTransactionPreparationCommand(evnt.AccountId' evnt.AggregateRootId) { Id = evnt.Id }); " is 129.
Long Statement,BankTransferSample.ProcessManagers,DepositTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\DepositTransactionProcessManager.cs,HandleAsync,The length of the statement  "                return _commandService.SendAsync(new ConfirmDepositCommand(evnt.TransactionPreparation.TransactionId) { Id = evnt.Id }); " is 120.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "            var task1 = _commandService.SendAsync(new ValidateAccountCommand(evnt.TransactionInfo.SourceAccountId' evnt.AggregateRootId) { Id = evnt.Id }); " is 143.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "            var task2 = _commandService.SendAsync(new ValidateAccountCommand(evnt.TransactionInfo.TargetAccountId' evnt.AggregateRootId) { Id = evnt.Id }); " is 143.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "                return new AsyncTaskResult(AsyncTaskStatus.IOException' string.Join("|"' ioExceptionResults.Select(x => x.ErrorMessage))); " is 122.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "            return _commandService.SendAsync(new ConfirmAccountValidatePassedCommand(message.TransactionId' message.AccountId) { Id = message.Id }); " is 136.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "                    return _commandService.SendAsync(new ConfirmTransferOutPreparationCommand(evnt.TransactionPreparation.TransactionId) { Id = evnt.Id }); " is 135.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "                    return _commandService.SendAsync(new ConfirmTransferInPreparationCommand(evnt.TransactionPreparation.TransactionId) { Id = evnt.Id }); " is 134.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "            var task1 = _commandService.SendAsync(new CommitTransactionPreparationCommand(evnt.TransactionInfo.SourceAccountId' evnt.AggregateRootId) { Id = evnt.Id }); " is 156.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "            var task2 = _commandService.SendAsync(new CommitTransactionPreparationCommand(evnt.TransactionInfo.TargetAccountId' evnt.AggregateRootId) { Id = evnt.Id }); " is 156.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "                return new AsyncTaskResult(AsyncTaskStatus.IOException' string.Join("|"' ioExceptionResults.Select(x => x.ErrorMessage))); " is 122.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "                    return _commandService.SendAsync(new ConfirmTransferOutCommand(evnt.TransactionPreparation.TransactionId) { Id = evnt.Id }); " is 124.
Long Statement,BankTransferSample.ProcessManagers,TransferTransactionProcessManager,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ProcessManagers\TransferTransactionProcessManager.cs,HandleAsync,The length of the statement  "                    return _commandService.SendAsync(new ConfirmTransferInCommand(evnt.TransactionPreparation.TransactionId) { Id = evnt.Id }); " is 123.
Magic Number,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,StartEQueue,The following statement contains a magic number: _commandService.Initialize(new CommandResultProcessor().Initialize(new IPEndPoint(SocketUtils.GetLocalIPV4()' 9000)));
Magic Number,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var exceptionConsumerAllocatedQueues = _exceptionConsumer.Consumer.GetCurrentQueues();                  if (commandConsumerAllocatedQueues.Count() == 4 && eventConsumerAllocatedQueues.Count() == 4 && exceptionConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var exceptionConsumerAllocatedQueues = _exceptionConsumer.Consumer.GetCurrentQueues();                  if (commandConsumerAllocatedQueues.Count() == 4 && eventConsumerAllocatedQueues.Count() == 4 && exceptionConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var exceptionConsumerAllocatedQueues = _exceptionConsumer.Consumer.GetCurrentQueues();                  if (commandConsumerAllocatedQueues.Count() == 4 && eventConsumerAllocatedQueues.Count() == 4 && exceptionConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var exceptionConsumerAllocatedQueues = _exceptionConsumer.Consumer.GetCurrentQueues();                  if (commandConsumerAllocatedQueues.Count() == 4 && eventConsumerAllocatedQueues.Count() == 4 && exceptionConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,BankTransferSample,ENodeExtensions,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\ENodeExtensions.cs,WaitAllConsumerLoadBalanceComplete,The following statement contains a magic number: scheduleService.StartTask("WaitAllConsumerLoadBalanceComplete"' () =>              {                  var commandConsumerAllocatedQueues = _commandConsumer.Consumer.GetCurrentQueues();                  var eventConsumerAllocatedQueues = _eventConsumer.Consumer.GetCurrentQueues();                  var exceptionConsumerAllocatedQueues = _exceptionConsumer.Consumer.GetCurrentQueues();                  if (commandConsumerAllocatedQueues.Count() == 4 && eventConsumerAllocatedQueues.Count() == 4 && exceptionConsumerAllocatedQueues.Count() == 4)                  {                      waitHandle.Set();                  }              }' 1000' 1000);
Magic Number,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,NormalTest,The following statement contains a magic number: commandService.Send(new StartDepositTransactionCommand(ObjectId.GenerateNewStringId()' account1' 1000));
Magic Number,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,NormalTest,The following statement contains a magic number: commandService.Send(new StartDepositTransactionCommand(ObjectId.GenerateNewStringId()' account2' 1000));
Magic Number,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,NormalTest,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,PerformanceTest,The following statement contains a magic number: var accountCount = 100;
Magic Number,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,PerformanceTest,The following statement contains a magic number: var transactionCount = 1000;
Magic Number,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,PerformanceTest,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,BankTransferSample,Program,C:\repos\tangxuehua_enode\src\Samples\BankTransferSample\Program.cs,PerformanceTest,The following statement contains a magic number: Console.WriteLine("All transfer transactions completed' time spent: {0}ms' throughput: {1} transactions per second."' spentTime' transactionCount * 1000 / spentTime);
