Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseSerializedData,Cyclomatic complexity of the method is 17
Complex Method,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,Cyclomatic complexity of the method is 13
Long Statement,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseSerializedData,The length of the statement  "	//throw new ArgumentOutOfRangeException(string.Format("Unknown data type in function parseDetailsValue {0}"' dataType)); " is 120.
Empty Catch Block,Probe.Replay,ReplayUtils,C:\repos\Metaflow_sc2drill-client\Replay\ReplayUtils.cs,GetReplaysToUpload,The method has an empty catch block.
Magic Number,Probe.Replay,FileHash,C:\repos\Metaflow_sc2drill-client\Replay\FileHash.cs,MD5,The following statement contains a magic number: while (tryCount > 0) {  	try {  		var file = new FileStream (fileName' FileMode.Open);  		MD5 md5 = new MD5CryptoServiceProvider ();  		var retVal = md5.ComputeHash (file);  		file.Close ();  		var sb = new StringBuilder ();  		for (var i = 0; i < retVal.Length; i++) {  			sb.Append (retVal [i].ToString ("x2"));  		}  		return sb.ToString ();  	}  	catch (IOException) {  		Thread.Sleep (500);  		tryCount--;  	}  }  
Magic Number,Probe.Replay,FileHash,C:\repos\Metaflow_sc2drill-client\Replay\FileHash.cs,MD5,The following statement contains a magic number: try {  	var file = new FileStream (fileName' FileMode.Open);  	MD5 md5 = new MD5CryptoServiceProvider ();  	var retVal = md5.ComputeHash (file);  	file.Close ();  	var sb = new StringBuilder ();  	for (var i = 0; i < retVal.Length; i++) {  		sb.Append (retVal [i].ToString ("x2"));  	}  	return sb.ToString ();  }  catch (IOException) {  	Thread.Sleep (500);  	tryCount--;  }  
Magic Number,Probe.Replay,FileHash,C:\repos\Metaflow_sc2drill-client\Replay\FileHash.cs,MD5,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseSerializedData,The following statement contains a magic number: switch (dataType) {  case 0x02:  	// binary data  	var dataLen = ParseVlfNumber (stream);  	byte[] buff = new byte[dataLen];  	stream.Read (buff' 0' (int)dataLen);  	return buff;  case 0x04:  	// simple array  	var array = new List<object> ();  	stream.Position += 2;  	numElements = ParseVlfNumber (stream);  	while (numElements > 0) {  		array.Add (ParseSerializedData (stream));  		numElements--;  	}  	return array;  case 0x05:  	// array with keys  	var r5 = new MpqKeyValue ();  	numElements = ParseVlfNumber (stream);  	while (numElements > 0) {  		var index = ParseVlfNumber (stream);  		r5 [index] = ParseSerializedData (stream);  		numElements--;  	}  	return r5;  case 0x06:  	// number of one byte  	return stream.ReadByte ();  case 0x07:  	// number of four bytes  	return ReadUInt32 (stream);  case 0x09:  	// number in VLF  	return ParseVlfNumber (stream);  default:  	return null;  //throw new ArgumentOutOfRangeException(string.Format("Unknown data type in function parseDetailsValue {0}"' dataType));  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseSerializedData,The following statement contains a magic number: stream.Position += 2;  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ReadUInt32,The following statement contains a magic number: stream.Read (buff' 0' 4);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseVlfNumber,The following statement contains a magic number: do {  	i = stream.ReadByte ();  	number += (i & 0x7F) * (long)Math.Pow (2' bytes * 7);  	if (first) {  		if ((number & 1) != 0) {  			multiplier = -1;  			number--;  		}  		first = false;  	}  	bytes++;  }  while ((i & 0x80) != 0);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseVlfNumber,The following statement contains a magic number: do {  	i = stream.ReadByte ();  	number += (i & 0x7F) * (long)Math.Pow (2' bytes * 7);  	if (first) {  		if ((number & 1) != 0) {  			multiplier = -1;  			number--;  		}  		first = false;  	}  	bytes++;  }  while ((i & 0x80) != 0);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseVlfNumber,The following statement contains a magic number: number += (i & 0x7F) * (long)Math.Pow (2' bytes * 7);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseVlfNumber,The following statement contains a magic number: number += (i & 0x7F) * (long)Math.Pow (2' bytes * 7);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseVlfNumber,The following statement contains a magic number: number /= 2;  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) > 0) {  	// check if value is two bytes or more  	var two = stream.ReadByte ();  	two = (((one >> 2) << 8) | two);  	if ((one & 3) >= 2) {  		var tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  		if ((one & 3) == 3) {  			tmp = stream.ReadByte ();  			two = ((two << 8) | tmp);  		}  	}  	return two;  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: two = (((one >> 2) << 8) | two);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: two = (((one >> 2) << 8) | two);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) >= 2) {  	var tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  	if ((one & 3) == 3) {  		tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  	}  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) >= 2) {  	var tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  	if ((one & 3) == 3) {  		tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  	}  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) >= 2) {  	var tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  	if ((one & 3) == 3) {  		tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  	}  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) >= 2) {  	var tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  	if ((one & 3) == 3) {  		tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  	}  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) >= 2) {  	var tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  	if ((one & 3) == 3) {  		tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  	}  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) >= 2) {  	var tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  	if ((one & 3) == 3) {  		tmp = stream.ReadByte ();  		two = ((two << 8) | tmp);  	}  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: two = ((two << 8) | tmp);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) == 3) {  	tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) == 3) {  	tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: if ((one & 3) == 3) {  	tmp = stream.ReadByte ();  	two = ((two << 8) | tmp);  }  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: two = ((two << 8) | tmp);  
Magic Number,Probe.Replay,MpqFile,C:\repos\Metaflow_sc2drill-client\Replay\MpqFile.cs,ParseTimeStamp,The following statement contains a magic number: return (one >> 2);  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayInitData)) {  	byte[] b = new byte[3];  	while (ms.Position < ms.Length) {  		if (ms.ReadByte () != 's')  			continue;  		ms.Read (b' 0' 3);  		if (Encoding.ASCII.GetString (b) != "2ma")  			continue;  		ms.Position += 2;  		// \0\0EU  		byte[] buffer = new byte[2];  		ms.Read (buffer' 0' 2);  		info.Realm = Encoding.ASCII.GetString (buffer);  		buffer = new byte[32];  		ms.Read (buffer' 0' 32);  		info.MapHash = BitConverter.ToString (buffer);  		//we need very last hash so don't quit here  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayInitData)) {  	byte[] b = new byte[3];  	while (ms.Position < ms.Length) {  		if (ms.ReadByte () != 's')  			continue;  		ms.Read (b' 0' 3);  		if (Encoding.ASCII.GetString (b) != "2ma")  			continue;  		ms.Position += 2;  		// \0\0EU  		byte[] buffer = new byte[2];  		ms.Read (buffer' 0' 2);  		info.Realm = Encoding.ASCII.GetString (buffer);  		buffer = new byte[32];  		ms.Read (buffer' 0' 32);  		info.MapHash = BitConverter.ToString (buffer);  		//we need very last hash so don't quit here  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayInitData)) {  	byte[] b = new byte[3];  	while (ms.Position < ms.Length) {  		if (ms.ReadByte () != 's')  			continue;  		ms.Read (b' 0' 3);  		if (Encoding.ASCII.GetString (b) != "2ma")  			continue;  		ms.Position += 2;  		// \0\0EU  		byte[] buffer = new byte[2];  		ms.Read (buffer' 0' 2);  		info.Realm = Encoding.ASCII.GetString (buffer);  		buffer = new byte[32];  		ms.Read (buffer' 0' 32);  		info.MapHash = BitConverter.ToString (buffer);  		//we need very last hash so don't quit here  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayInitData)) {  	byte[] b = new byte[3];  	while (ms.Position < ms.Length) {  		if (ms.ReadByte () != 's')  			continue;  		ms.Read (b' 0' 3);  		if (Encoding.ASCII.GetString (b) != "2ma")  			continue;  		ms.Position += 2;  		// \0\0EU  		byte[] buffer = new byte[2];  		ms.Read (buffer' 0' 2);  		info.Realm = Encoding.ASCII.GetString (buffer);  		buffer = new byte[32];  		ms.Read (buffer' 0' 32);  		info.MapHash = BitConverter.ToString (buffer);  		//we need very last hash so don't quit here  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayInitData)) {  	byte[] b = new byte[3];  	while (ms.Position < ms.Length) {  		if (ms.ReadByte () != 's')  			continue;  		ms.Read (b' 0' 3);  		if (Encoding.ASCII.GetString (b) != "2ma")  			continue;  		ms.Position += 2;  		// \0\0EU  		byte[] buffer = new byte[2];  		ms.Read (buffer' 0' 2);  		info.Realm = Encoding.ASCII.GetString (buffer);  		buffer = new byte[32];  		ms.Read (buffer' 0' 32);  		info.MapHash = BitConverter.ToString (buffer);  		//we need very last hash so don't quit here  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayInitData)) {  	byte[] b = new byte[3];  	while (ms.Position < ms.Length) {  		if (ms.ReadByte () != 's')  			continue;  		ms.Read (b' 0' 3);  		if (Encoding.ASCII.GetString (b) != "2ma")  			continue;  		ms.Position += 2;  		// \0\0EU  		byte[] buffer = new byte[2];  		ms.Read (buffer' 0' 2);  		info.Realm = Encoding.ASCII.GetString (buffer);  		buffer = new byte[32];  		ms.Read (buffer' 0' 32);  		info.MapHash = BitConverter.ToString (buffer);  		//we need very last hash so don't quit here  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayInitData)) {  	byte[] b = new byte[3];  	while (ms.Position < ms.Length) {  		if (ms.ReadByte () != 's')  			continue;  		ms.Read (b' 0' 3);  		if (Encoding.ASCII.GetString (b) != "2ma")  			continue;  		ms.Position += 2;  		// \0\0EU  		byte[] buffer = new byte[2];  		ms.Read (buffer' 0' 2);  		info.Realm = Encoding.ASCII.GetString (buffer);  		buffer = new byte[32];  		ms.Read (buffer' 0' 32);  		info.MapHash = BitConverter.ToString (buffer);  		//we need very last hash so don't quit here  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: while (ms.Position < ms.Length) {  	if (ms.ReadByte () != 's')  		continue;  	ms.Read (b' 0' 3);  	if (Encoding.ASCII.GetString (b) != "2ma")  		continue;  	ms.Position += 2;  	// \0\0EU  	byte[] buffer = new byte[2];  	ms.Read (buffer' 0' 2);  	info.Realm = Encoding.ASCII.GetString (buffer);  	buffer = new byte[32];  	ms.Read (buffer' 0' 32);  	info.MapHash = BitConverter.ToString (buffer);  	//we need very last hash so don't quit here  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: while (ms.Position < ms.Length) {  	if (ms.ReadByte () != 's')  		continue;  	ms.Read (b' 0' 3);  	if (Encoding.ASCII.GetString (b) != "2ma")  		continue;  	ms.Position += 2;  	// \0\0EU  	byte[] buffer = new byte[2];  	ms.Read (buffer' 0' 2);  	info.Realm = Encoding.ASCII.GetString (buffer);  	buffer = new byte[32];  	ms.Read (buffer' 0' 32);  	info.MapHash = BitConverter.ToString (buffer);  	//we need very last hash so don't quit here  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: while (ms.Position < ms.Length) {  	if (ms.ReadByte () != 's')  		continue;  	ms.Read (b' 0' 3);  	if (Encoding.ASCII.GetString (b) != "2ma")  		continue;  	ms.Position += 2;  	// \0\0EU  	byte[] buffer = new byte[2];  	ms.Read (buffer' 0' 2);  	info.Realm = Encoding.ASCII.GetString (buffer);  	buffer = new byte[32];  	ms.Read (buffer' 0' 32);  	info.MapHash = BitConverter.ToString (buffer);  	//we need very last hash so don't quit here  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: while (ms.Position < ms.Length) {  	if (ms.ReadByte () != 's')  		continue;  	ms.Read (b' 0' 3);  	if (Encoding.ASCII.GetString (b) != "2ma")  		continue;  	ms.Position += 2;  	// \0\0EU  	byte[] buffer = new byte[2];  	ms.Read (buffer' 0' 2);  	info.Realm = Encoding.ASCII.GetString (buffer);  	buffer = new byte[32];  	ms.Read (buffer' 0' 32);  	info.MapHash = BitConverter.ToString (buffer);  	//we need very last hash so don't quit here  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: while (ms.Position < ms.Length) {  	if (ms.ReadByte () != 's')  		continue;  	ms.Read (b' 0' 3);  	if (Encoding.ASCII.GetString (b) != "2ma")  		continue;  	ms.Position += 2;  	// \0\0EU  	byte[] buffer = new byte[2];  	ms.Read (buffer' 0' 2);  	info.Realm = Encoding.ASCII.GetString (buffer);  	buffer = new byte[32];  	ms.Read (buffer' 0' 32);  	info.MapHash = BitConverter.ToString (buffer);  	//we need very last hash so don't quit here  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: while (ms.Position < ms.Length) {  	if (ms.ReadByte () != 's')  		continue;  	ms.Read (b' 0' 3);  	if (Encoding.ASCII.GetString (b) != "2ma")  		continue;  	ms.Position += 2;  	// \0\0EU  	byte[] buffer = new byte[2];  	ms.Read (buffer' 0' 2);  	info.Realm = Encoding.ASCII.GetString (buffer);  	buffer = new byte[32];  	ms.Read (buffer' 0' 32);  	info.MapHash = BitConverter.ToString (buffer);  	//we need very last hash so don't quit here  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: ms.Read (b' 0' 3);  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: ms.Position += 2;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: ms.Read (buffer' 0' 2);  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: buffer = new byte[32];  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseInitData,The following statement contains a magic number: ms.Read (buffer' 0' 32);  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: using (var ms = new MemoryStream (_messageEvents)) {  	var recorderArray = new Dictionary<int' bool> ();  	for (int i = 0; i < info.Players.Count; i++) {  		recorderArray [i + 1] = info.Players [i].IsHuman;  	}  	while (ms.Position < ms.Length) {  		MpqFile.ParseTimeStamp (ms);  		var playerId = ms.ReadByte () & 0x0F;  		var opcode = ms.ReadByte ();  		if (opcode == 0x80) {  			// header weird thingy?  			ms.Position += 4;  			recorderArray [playerId] = false;  		}  		else if ((opcode & 0x80) == 0) {  			// message  			var messageTarget = opcode & 3;  			var messageLength = ms.ReadByte ();  			if ((opcode & 8) == 8)  				messageLength += 64;  			if ((opcode & 16) == 16)  				messageLength += 128;  			var buffer = new byte[messageLength];  			var message = ms.Read (buffer' 0' messageLength);  		}  		else if (opcode == 0x83) {  			// ping on map? 8 bytes?  			ms.Position += 8;  		}  	}  	info.RecorderIndex = 0;  	foreach (KeyValuePair<int' bool> pair in recorderArray) {  		if (!pair.Value)  			continue;  		if (info.RecorderIndex > 0) {  			// found a second recorder' so something is clearly broken  			info.RecorderIndex = 0;  			break;  		}  		info.RecorderIndex = pair.Key;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: while (ms.Position < ms.Length) {  	MpqFile.ParseTimeStamp (ms);  	var playerId = ms.ReadByte () & 0x0F;  	var opcode = ms.ReadByte ();  	if (opcode == 0x80) {  		// header weird thingy?  		ms.Position += 4;  		recorderArray [playerId] = false;  	}  	else if ((opcode & 0x80) == 0) {  		// message  		var messageTarget = opcode & 3;  		var messageLength = ms.ReadByte ();  		if ((opcode & 8) == 8)  			messageLength += 64;  		if ((opcode & 16) == 16)  			messageLength += 128;  		var buffer = new byte[messageLength];  		var message = ms.Read (buffer' 0' messageLength);  	}  	else if (opcode == 0x83) {  		// ping on map? 8 bytes?  		ms.Position += 8;  	}  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x80) {  	// header weird thingy?  	ms.Position += 4;  	recorderArray [playerId] = false;  }  else if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: ms.Position += 4;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 0x80) == 0) {  	// message  	var messageTarget = opcode & 3;  	var messageLength = ms.ReadByte ();  	if ((opcode & 8) == 8)  		messageLength += 64;  	if ((opcode & 16) == 16)  		messageLength += 128;  	var buffer = new byte[messageLength];  	var message = ms.Read (buffer' 0' messageLength);  }  else if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 8) == 8)  	messageLength += 64;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 8) == 8)  	messageLength += 64;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 8) == 8)  	messageLength += 64;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: messageLength += 64;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 16) == 16)  	messageLength += 128;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 16) == 16)  	messageLength += 128;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if ((opcode & 16) == 16)  	messageLength += 128;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: messageLength += 128;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: if (opcode == 0x83) {  	// ping on map? 8 bytes?  	ms.Position += 8;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseChatLog,The following statement contains a magic number: ms.Position += 8;  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayDetails)) {  	var array = (MpqKeyValue)MpqFile.ParseSerializedData (ms);  	var playerArray = (List<object>)(array [0]);  	var i = 1;  	foreach (var player in playerArray) {  		var p = new ReplayPlayerInfo ();  		p.Name = Encoding.ASCII.GetString ((byte[])((MpqKeyValue)player) [0]);  		p.Uid = Convert.ToUInt32 (((MpqKeyValue)((MpqKeyValue)player) [1]) [4]);  		p.Index = i;  		p.IsHuman = p.Uid != 0;  		info.Players.Add (p);  		i++;  	}  	Encoding.ASCII.GetString ((byte[])array [1]);  	info.GameCTime = (long)Math.Floor (((long)array [5] - 116444735995904000) / 10000000.0);  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayDetails)) {  	var array = (MpqKeyValue)MpqFile.ParseSerializedData (ms);  	var playerArray = (List<object>)(array [0]);  	var i = 1;  	foreach (var player in playerArray) {  		var p = new ReplayPlayerInfo ();  		p.Name = Encoding.ASCII.GetString ((byte[])((MpqKeyValue)player) [0]);  		p.Uid = Convert.ToUInt32 (((MpqKeyValue)((MpqKeyValue)player) [1]) [4]);  		p.Index = i;  		p.IsHuman = p.Uid != 0;  		info.Players.Add (p);  		i++;  	}  	Encoding.ASCII.GetString ((byte[])array [1]);  	info.GameCTime = (long)Math.Floor (((long)array [5] - 116444735995904000) / 10000000.0);  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayDetails)) {  	var array = (MpqKeyValue)MpqFile.ParseSerializedData (ms);  	var playerArray = (List<object>)(array [0]);  	var i = 1;  	foreach (var player in playerArray) {  		var p = new ReplayPlayerInfo ();  		p.Name = Encoding.ASCII.GetString ((byte[])((MpqKeyValue)player) [0]);  		p.Uid = Convert.ToUInt32 (((MpqKeyValue)((MpqKeyValue)player) [1]) [4]);  		p.Index = i;  		p.IsHuman = p.Uid != 0;  		info.Players.Add (p);  		i++;  	}  	Encoding.ASCII.GetString ((byte[])array [1]);  	info.GameCTime = (long)Math.Floor (((long)array [5] - 116444735995904000) / 10000000.0);  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (_replayDetails)) {  	var array = (MpqKeyValue)MpqFile.ParseSerializedData (ms);  	var playerArray = (List<object>)(array [0]);  	var i = 1;  	foreach (var player in playerArray) {  		var p = new ReplayPlayerInfo ();  		p.Name = Encoding.ASCII.GetString ((byte[])((MpqKeyValue)player) [0]);  		p.Uid = Convert.ToUInt32 (((MpqKeyValue)((MpqKeyValue)player) [1]) [4]);  		p.Index = i;  		p.IsHuman = p.Uid != 0;  		info.Players.Add (p);  		i++;  	}  	Encoding.ASCII.GetString ((byte[])array [1]);  	info.GameCTime = (long)Math.Floor (((long)array [5] - 116444735995904000) / 10000000.0);  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: foreach (var player in playerArray) {  	var p = new ReplayPlayerInfo ();  	p.Name = Encoding.ASCII.GetString ((byte[])((MpqKeyValue)player) [0]);  	p.Uid = Convert.ToUInt32 (((MpqKeyValue)((MpqKeyValue)player) [1]) [4]);  	p.Index = i;  	p.IsHuman = p.Uid != 0;  	info.Players.Add (p);  	i++;  }  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: p.Uid = Convert.ToUInt32 (((MpqKeyValue)((MpqKeyValue)player) [1]) [4]);  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: info.GameCTime = (long)Math.Floor (((long)array [5] - 116444735995904000) / 10000000.0);  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: info.GameCTime = (long)Math.Floor (((long)array [5] - 116444735995904000) / 10000000.0);  
Magic Number,Probe.Replay,ReplayParser,C:\repos\Metaflow_sc2drill-client\Replay\ReplayParser.cs,ParseDetailsFile,The following statement contains a magic number: info.GameCTime = (long)Math.Floor (((long)array [5] - 116444735995904000) / 10000000.0);  
