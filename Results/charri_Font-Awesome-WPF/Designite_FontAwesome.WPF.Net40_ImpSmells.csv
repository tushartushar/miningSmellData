Implementation smell,Namespace,Class,File,Method,Description
Long Statement,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,SetFlipOrientation,The length of the statement  "            var scaleX = control.FlipOrientation == FlipOrientation.Normal || control.FlipOrientation == FlipOrientation.Vertical ? 1 : -1; " is 127.
Long Statement,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,SetFlipOrientation,The length of the statement  "            var scaleY = control.FlipOrientation == FlipOrientation.Normal || control.FlipOrientation == FlipOrientation.Horizontal ? 1 : -1; " is 129.
Complex Conditional,FontAwesome.WPF,FontAwesome,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\FontAwesome.cs,SpinDurationChanged,The conditional expression  "null == fontAwesome || !fontAwesome.Spin || !(e.NewValue is double) || e.NewValue.Equals(e.OldValue)"  is complex.
Complex Conditional,FontAwesome.WPF,FontAwesome,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\FontAwesome.cs,RotationChanged,The conditional expression  "null == fontAwesome || fontAwesome.Spin || !(e.NewValue is double) || e.NewValue.Equals(e.OldValue)"  is complex.
Complex Conditional,FontAwesome.WPF,ImageAwesome,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ImageAwesome.cs,SpinDurationChanged,The conditional expression  "null == imageAwesome || !imageAwesome.Spin || !(e.NewValue is double) || e.NewValue.Equals(e.OldValue)"  is complex.
Complex Conditional,FontAwesome.WPF,ImageAwesome,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ImageAwesome.cs,RotationChanged,The conditional expression  "null == imageAwesome || imageAwesome.Spin || !(e.NewValue is double) || e.NewValue.Equals(e.OldValue)"  is complex.
Magic Number,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,BeginSpin,The following statement contains a magic number: if (rotateTransform != null)              {                  rotateTransform.Angle = 0;              }              else              {                  transformGroup.Children.Add(new RotateTransform(0.0));                  control.RenderTransform = transformGroup;                  control.RenderTransformOrigin = new Point(0.5' 0.5);              }
Magic Number,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,BeginSpin,The following statement contains a magic number: if (rotateTransform != null)              {                  rotateTransform.Angle = 0;              }              else              {                  transformGroup.Children.Add(new RotateTransform(0.0));                  control.RenderTransform = transformGroup;                  control.RenderTransformOrigin = new Point(0.5' 0.5);              }
Magic Number,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,BeginSpin,The following statement contains a magic number: var animation = new DoubleAnimation              {                  From = 0'                  To = 360'                  AutoReverse = false'                  RepeatBehavior = RepeatBehavior.Forever'                  Duration = new Duration(TimeSpan.FromSeconds(control.SpinDuration))              };
Magic Number,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,SetRotation,The following statement contains a magic number: if (rotateTransform != null)              {                  rotateTransform.Angle = control.Rotation;              }              else              {                  transformGroup.Children.Add(new RotateTransform(control.Rotation));                  control.RenderTransform = transformGroup;                  control.RenderTransformOrigin = new Point(0.5' 0.5);              }
Magic Number,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,SetRotation,The following statement contains a magic number: if (rotateTransform != null)              {                  rotateTransform.Angle = control.Rotation;              }              else              {                  transformGroup.Children.Add(new RotateTransform(control.Rotation));                  control.RenderTransform = transformGroup;                  control.RenderTransformOrigin = new Point(0.5' 0.5);              }
Magic Number,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,SetFlipOrientation,The following statement contains a magic number: if (scaleTransform != null)              {                  scaleTransform.ScaleX = scaleX;                  scaleTransform.ScaleY = scaleY;              }              else              {                  transformGroup.Children.Add(new ScaleTransform(scaleX' scaleY));                  control.RenderTransform = transformGroup;                  control.RenderTransformOrigin = new Point(0.5' 0.5);              }
Magic Number,FontAwesome.WPF,ControlExtensions,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ControlExtensions.cs,SetFlipOrientation,The following statement contains a magic number: if (scaleTransform != null)              {                  scaleTransform.ScaleX = scaleX;                  scaleTransform.ScaleY = scaleY;              }              else              {                  transformGroup.Children.Add(new ScaleTransform(scaleX' scaleY));                  control.RenderTransform = transformGroup;                  control.RenderTransformOrigin = new Point(0.5' 0.5);              }
Magic Number,FontAwesome.WPF,FontAwesome,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\FontAwesome.cs,RotationCoerceValue,The following statement contains a magic number: return val < 0 ? 0d : (val > 360 ? 360d : value);
Magic Number,FontAwesome.WPF,ImageAwesome,C:\repos\charri_Font-Awesome-WPF\src\WPF\FontAwesome.WPF\ImageAwesome.cs,RotationCoerceValue,The following statement contains a magic number: return val < 0 ? 0d : (val > 360 ? 360d : value);
