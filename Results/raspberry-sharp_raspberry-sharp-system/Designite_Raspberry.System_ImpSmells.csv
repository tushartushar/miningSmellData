Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Raspberry,Board,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Board.cs,LoadModel,Cyclomatic complexity of the method is 10
Complex Method,Raspberry,ModelExtensionMethods,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Model.cs,GetDisplayName,Cyclomatic complexity of the method is 11
Long Statement,Raspberry.Timers,HighResolutionTimer,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\HighResolutionTimer.cs,Start,The length of the statement  "                throw new ArgumentOutOfRangeException("startDelay"' startDelay' "Delay must be lower than or equal to uint.MaxValue / 1000"); " is 125.
Magic Number,Raspberry.Timers,HighResolutionTimer,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\HighResolutionTimer.cs,Sleep,The following statement contains a magic number: millisecondDelay >= 100
Magic Number,Raspberry.Timers,HighResolutionTimer,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\HighResolutionTimer.cs,Start,The following statement contains a magic number: startDelay.TotalMilliseconds > uint.MaxValue/1000
Magic Number,Raspberry.Timers,HighResolutionTimer,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\HighResolutionTimer.cs,Calibrate,The following statement contains a magic number: const int referenceCount = 1000;
Magic Number,Raspberry.Timers,HighResolutionTimer,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\HighResolutionTimer.cs,Calibrate,The following statement contains a magic number: return Enumerable.Range(0' referenceCount)                  .Aggregate(                      (long) 0'                      (a' i) =>                          {                              var t1 = new Interop.timespec();                              var t2 = new Interop.timespec();                                t1.tv_sec = (IntPtr) 0;                              t1.tv_nsec = (IntPtr) 1000000;                                var start = DateTime.UtcNow.Ticks;                              Interop.nanosleep(ref t1' ref t2);                                return a + ((DateTime.UtcNow.Ticks - start) * 100 - 1000000);                          }'                      a => (int)(a / referenceCount));
Magic Number,Raspberry.Timers,HighResolutionTimer,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\HighResolutionTimer.cs,Calibrate,The following statement contains a magic number: return Enumerable.Range(0' referenceCount)                  .Aggregate(                      (long) 0'                      (a' i) =>                          {                              var t1 = new Interop.timespec();                              var t2 = new Interop.timespec();                                t1.tv_sec = (IntPtr) 0;                              t1.tv_nsec = (IntPtr) 1000000;                                var start = DateTime.UtcNow.Ticks;                              Interop.nanosleep(ref t1' ref t2);                                return a + ((DateTime.UtcNow.Ticks - start) * 100 - 1000000);                          }'                      a => (int)(a / referenceCount));
Magic Number,Raspberry.Timers,HighResolutionTimer,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\HighResolutionTimer.cs,Calibrate,The following statement contains a magic number: return Enumerable.Range(0' referenceCount)                  .Aggregate(                      (long) 0'                      (a' i) =>                          {                              var t1 = new Interop.timespec();                              var t2 = new Interop.timespec();                                t1.tv_sec = (IntPtr) 0;                              t1.tv_nsec = (IntPtr) 1000000;                                var start = DateTime.UtcNow.Ticks;                              Interop.nanosleep(ref t1' ref t2);                                return a + ((DateTime.UtcNow.Ticks - start) * 100 - 1000000);                          }'                      a => (int)(a / referenceCount));
Magic Number,Raspberry.Timers,TimeSpanUtility,C:\research\architectureSmells\repos\raspberry-sharp_raspberry-sharp-system\Raspberry.System\Timers\TimeSpanUtility.cs,FromMicroseconds,The following statement contains a magic number: return TimeSpan.FromTicks((long)(microseconds/10));
