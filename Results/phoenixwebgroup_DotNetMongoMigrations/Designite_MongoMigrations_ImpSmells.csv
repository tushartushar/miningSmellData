Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MongoMigrations,DatabaseMigrationStatus,C:\repos\phoenixwebgroup_DotNetMongoMigrations\src\MongoMigrations\DatabaseMigrationStatus.cs,ThrowIfNotLatestVersion,The length of the statement  "			throw new ApplicationException("Database is not the expected version' database is at version: " + databaseVersion + "' migrations are at version: " + migrationVersion); " is 168.
Long Statement,MongoMigrations,MigrationRunner,C:\repos\phoenixwebgroup_DotNetMongoMigrations\src\MongoMigrations\MigrationRunner.cs,ApplyMigration,The length of the statement  "			Console.WriteLine(new {Message = "Applying migration"' migration.Version' migration.Description' DatabaseName = Database.Name}); " is 128.
Magic Number,MongoMigrations,MigrationVersion,C:\repos\phoenixwebgroup_DotNetMongoMigrations\src\MongoMigrations\MigrationVersion.cs,MigrationVersion,The following statement contains a magic number: if (versionParts.Length != 3)  			{  				throw new ArgumentException("Versions must have format: major.minor.revision' this doesn't match: " + version);  			}
Magic Number,MongoMigrations,MigrationVersion,C:\repos\phoenixwebgroup_DotNetMongoMigrations\src\MongoMigrations\MigrationVersion.cs,MigrationVersion,The following statement contains a magic number: var revisionString = versionParts[2];
Magic Number,MongoMigrations,MigrationVersion,C:\repos\phoenixwebgroup_DotNetMongoMigrations\src\MongoMigrations\MigrationVersion.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				var result = Major;  				result = (result*397) ^ Minor;  				result = (result*397) ^ Revision;  				return result;  			}
Magic Number,MongoMigrations,MigrationVersion,C:\repos\phoenixwebgroup_DotNetMongoMigrations\src\MongoMigrations\MigrationVersion.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				var result = Major;  				result = (result*397) ^ Minor;  				result = (result*397) ^ Revision;  				return result;  			}
