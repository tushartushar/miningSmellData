Implementation smell,Namespace,Class,File,Method,Description
Long Statement,LINQPad.CodeAnalysis,InternalsHelper,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\InternalsHelper.cs,GetIdentifierTokenValueText,The length of the statement  "	PropertyInfo identifierProperty = syntaxNode.GetType ().GetProperty ("Identifier"' BindingFlags.Public | BindingFlags.Instance); " is 128.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateTreeList,The length of the statement  "					menuStrip.Items.Add ("Dump TypeSymbol").Click += (x2' e2) => typeSymbol.Dump (typeSymbol.Kind + " " + wrapper.GetSpan ()); " is 122.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateTreeList,The length of the statement  "					menuStrip.Items.Add ("Dump Converted TypeSymbol").Click += (x2' e2) => convertedTypeSymbol.Dump (convertedTypeSymbol.Kind + " " + wrapper.GetSpan ()); " is 150.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateTreeList,The length of the statement  "					menuStrip.Items.Add ("Dump AliasSymbol").Click += (x2' e2) => aliasSymbol.Dump (aliasSymbol.Kind + " " + wrapper.GetSpan ()); " is 125.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateTreeList,The length of the statement  "					menuStrip.Items.Add ("Show Constant Value").Click += (x2' e2) => MessageBox.Show (constantValue.ToString ()' constantValue.GetType ().Name + " " + wrapper.GetSpan ()' MessageBoxButtons.OK); " is 189.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateToolStrip,The length of the statement  "			// Exclude duplicate mscorlib reference warnings (referenced in LINQPad.Codeanalysis because ObjectListView is .NET 2.0) " is 120.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateToolStrip,The length of the statement  "			semanticModel.GetDiagnostics ().Where (y => y.Id != "CS1701" && !y.Descriptor.Description.ToString ().Contains ("mscorlib")).Dump (); " is 133.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateToolStrip,The length of the statement  "	_toolStrip = new ToolStrip (new ToolStripButton ("Expand All"' null' (x' e) => _treeList.ExpandAll ())' new ToolStripButton ("Collapse All"' null' (x' e) => _treeList.CollapseAll ())' new ToolStripSeparator ()' new ToolStripLabel ("SyntaxNode  ") { " is 248.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateToolStrip,The length of the statement  "	}' new ToolStripSeparator ()' new ToolStripLabel ("Declaration Filter")' declarationFilterTextBox' new ToolStripSeparator ()' new ToolStripLabel (" ")' new ToolStripControlHost (_semanticsCheckBox)' new ToolStripLabel ("Semantics  ")' _diagnosticsButton) { " is 256.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SetRoots,The length of the statement  "	SyntaxWrapper[] roots = new SyntaxTreeDeclarationFilter (declarationFilter).GetMatchingSyntaxNodes (_syntaxTree).Select (x => SyntaxWrapper.Get (x)).ToArray (); " is 160.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SetRoots,The length of the statement  "		_textBox.Text = string.Join (Environment.NewLine + Environment.NewLine + "-" + Environment.NewLine + Environment.NewLine' roots.Select (x => x.GetSyntaxObject ().ToString ())); " is 176.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,GetDepth,The length of the statement  "		return syntax.ChildNodesAndTokens ().Count == 0 ? depth : syntax.ChildNodesAndTokens ().Max (x => GetDepth (x' depth + 1)); " is 123.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,PopulateGraph,The length of the statement  "	if ((wrapper.GetSyntaxObject () is SyntaxToken && _syntaxTokenCheckBox != null && !_syntaxTokenCheckBox.Checked) || (wrapper.GetSyntaxObject () is SyntaxTrivia && _syntaxTriviaCheckBox != null && !_syntaxTriviaCheckBox.Checked)) { " is 230.
Long Statement,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,GetSemanticModel,The length of the statement  "			compilation = compilation.AddReferences (appDomain.GetAssemblies ().Where (x => !x.IsDynamic && !string.IsNullOrEmpty (x.Location)).Select (x => MetadataReference.CreateFromFile (x.Location))).AddSyntaxTrees (_syntaxTree); " is 222.
Long Statement,LINQPad.CodeAnalysis,SyntaxTriviaWrapper,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTriviaWrapper.cs,GetKind,The length of the statement  "	Microsoft.CodeAnalysis.VisualBasic.SyntaxKind visualBasicKind = Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Kind (_trivia); " is 136.
Long Statement,LINQPad.CodeAnalysis,SyntaxTokenWrapper,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTokenWrapper.cs,GetKind,The length of the statement  "	Microsoft.CodeAnalysis.VisualBasic.SyntaxKind visualBasicKind = Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Kind (_token); " is 135.
Long Statement,LINQPad.CodeAnalysis,SyntaxNodeWrapper,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxNodeWrapper.cs,GetKind,The length of the statement  "	Microsoft.CodeAnalysis.VisualBasic.SyntaxKind visualBasicKind = Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Kind (_node); " is 134.
Complex Conditional,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,PopulateGraph,The conditional expression  "(wrapper.GetSyntaxObject () is SyntaxToken && _syntaxTokenCheckBox != null && !_syntaxTokenCheckBox.Checked) || (wrapper.GetSyntaxObject () is SyntaxTrivia && _syntaxTriviaCheckBox != null && !_syntaxTriviaCheckBox.Checked)"  is complex.
Empty Catch Block,LINQPad.CodeAnalysis,InternalsHelper,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\InternalsHelper.cs,GetDefaultFont,The method has an empty catch block.
Empty Catch Block,LINQPad.CodeAnalysis,InternalsHelper,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\InternalsHelper.cs,GetQueryEditorDefaultQueryFont,The method has an empty catch block.
Empty Catch Block,LINQPad.CodeAnalysis,InternalsHelper,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\InternalsHelper.cs,GetQueryEditorDefaultQueryFont,The method has an empty catch block.
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SyntaxTreePanel,The following statement contains a magic number: rightSplitContainer.VisibleChanged += (x' e) => {  	if (!rightSplitVisibleChanged) {  		rightSplitVisibleChanged = true;  		rightSplitContainer.SplitterDistance = (int)(rightSplitContainer.ClientSize.Height * 0.5);  	}  };  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SyntaxTreePanel,The following statement contains a magic number: if (!rightSplitVisibleChanged) {  	rightSplitVisibleChanged = true;  	rightSplitContainer.SplitterDistance = (int)(rightSplitContainer.ClientSize.Height * 0.5);  }  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SyntaxTreePanel,The following statement contains a magic number: rightSplitContainer.SplitterDistance = (int)(rightSplitContainer.ClientSize.Height * 0.5);  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SyntaxTreePanel,The following statement contains a magic number: splitContainer.VisibleChanged += (x' e) => {  	if (!splitVisibleChanged) {  		splitVisibleChanged = true;  		splitContainer.SplitterDistance = (int)(splitContainer.ClientSize.Width * 0.5);  	}  };  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SyntaxTreePanel,The following statement contains a magic number: if (!splitVisibleChanged) {  	splitVisibleChanged = true;  	splitContainer.SplitterDistance = (int)(splitContainer.ClientSize.Width * 0.5);  }  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,SyntaxTreePanel,The following statement contains a magic number: splitContainer.SplitterDistance = (int)(splitContainer.ClientSize.Width * 0.5);  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,CreateToolStrip,The following statement contains a magic number: _toolStrip = new ToolStrip (new ToolStripButton ("Expand All"' null' (x' e) => _treeList.ExpandAll ())' new ToolStripButton ("Collapse All"' null' (x' e) => _treeList.CollapseAll ())' new ToolStripSeparator ()' new ToolStripLabel ("SyntaxNode  ") {  	ForeColor = Color.Blue  }' new ToolStripControlHost (_syntaxTokenCheckBox)' new ToolStripLabel ("SyntaxToken  ") {  	ForeColor = Color.Green  }' new ToolStripControlHost (_syntaxTriviaCheckBox)' new ToolStripLabel ("SyntaxTrivia  ") {  	ForeColor = Color.Maroon  }' new ToolStripSeparator ()' new ToolStripLabel ("Declaration Filter")' declarationFilterTextBox' new ToolStripSeparator ()' new ToolStripLabel (" ")' new ToolStripControlHost (_semanticsCheckBox)' new ToolStripLabel ("Semantics  ")' _diagnosticsButton) {  	GripStyle = ToolStripGripStyle.Hidden'  	Renderer = new BorderlessToolStripRenderer ()'  	Padding = new Padding (4)  };  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,AutoSizeColumns,The following statement contains a magic number: foreach (ColumnHeader col in treeList.Columns) {  	if (recalculate) {  		col.AutoResize (ColumnHeaderAutoResizeStyle.ColumnContent);  		col.Width += 16;  		if (col.Index == 0) {  			// We have to manually take care of tree structure' checkbox and image  			col.Width += 16 * depth;  		}  	}  	if (col.Index == treeList.Columns.Count - 1) {  		// Fill in the rest  		col.Width = treeList.ClientSize.Width - totalWidth;  	}  	totalWidth += col.Width;  }  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,AutoSizeColumns,The following statement contains a magic number: foreach (ColumnHeader col in treeList.Columns) {  	if (recalculate) {  		col.AutoResize (ColumnHeaderAutoResizeStyle.ColumnContent);  		col.Width += 16;  		if (col.Index == 0) {  			// We have to manually take care of tree structure' checkbox and image  			col.Width += 16 * depth;  		}  	}  	if (col.Index == treeList.Columns.Count - 1) {  		// Fill in the rest  		col.Width = treeList.ClientSize.Width - totalWidth;  	}  	totalWidth += col.Width;  }  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,AutoSizeColumns,The following statement contains a magic number: if (recalculate) {  	col.AutoResize (ColumnHeaderAutoResizeStyle.ColumnContent);  	col.Width += 16;  	if (col.Index == 0) {  		// We have to manually take care of tree structure' checkbox and image  		col.Width += 16 * depth;  	}  }  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,AutoSizeColumns,The following statement contains a magic number: if (recalculate) {  	col.AutoResize (ColumnHeaderAutoResizeStyle.ColumnContent);  	col.Width += 16;  	if (col.Index == 0) {  		// We have to manually take care of tree structure' checkbox and image  		col.Width += 16 * depth;  	}  }  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,AutoSizeColumns,The following statement contains a magic number: col.Width += 16;  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,AutoSizeColumns,The following statement contains a magic number: if (col.Index == 0) {  	// We have to manually take care of tree structure' checkbox and image  	col.Width += 16 * depth;  }  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,AutoSizeColumns,The following statement contains a magic number: col.Width += 16 * depth;  
Magic Number,LINQPad.CodeAnalysis,SyntaxTreePanel,F:\newReposMay17\daveaglick_LINQPad.CodeAnalysis\LINQPad.CodeAnalysis\SyntaxTreePanel.cs,PopulateGraph,The following statement contains a magic number: node.Attr.LabelMargin = 10;  
