Implementation smell,Namespace,Class,File,Method,Description
Long Method,Spring.Aspects.Exceptions,ExceptionHandlerAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Exceptions\ExceptionHandlerAdvice.cs,CreateExceptionHandler,The method has 116 lines of code.
Complex Method,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,Cyclomatic complexity of the method is 8
Complex Method,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalAdvisor,Cyclomatic complexity of the method is 11
Complex Method,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,AddGlobalIntroduction,Cyclomatic complexity of the method is 12
Complex Method,Spring.Aop.Framework.AutoProxy,AbstractAdvisorAutoProxyCreator,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAdvisorAutoProxyCreator.cs,FindAdvisorsThatCanApply,Cyclomatic complexity of the method is 9
Complex Method,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,PostProcessAfterInitialization,Cyclomatic complexity of the method is 8
Complex Method,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,PostProcessBeforeInstantiation,Cyclomatic complexity of the method is 8
Complex Method,Spring.Aop.Framework.DynamicProxy,ProxyTypeCacheKey,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CachedAopProxyFactory.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetReturnValue,Cyclomatic complexity of the method is 9
Long Parameter List,Spring.Aop.Framework,DynamicMethodInvocation,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicMethodInvocation.cs,DynamicMethodInvocation,The method has 7 parameters. Parameters: proxy' target' method' proxyMethod' arguments' targetType' interceptors
Long Parameter List,Spring.Aop.Framework,AbstractMethodInvocation,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AbstractMethodInvocation.cs,AbstractMethodInvocation,The method has 6 parameters. Parameters: proxy' target' method' arguments' targetType' interceptors
Long Parameter List,Spring.Aop.Framework,ReflectiveMethodInvocation,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ReflectiveMethodInvocation.cs,ReflectiveMethodInvocation,The method has 7 parameters. Parameters: proxy' target' method' proxyMethod' arguments' targetType' interceptors
Long Parameter List,Spring.Aop.Framework.DynamicProxy,AbstractAopProxyMethodBuilder,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,AbstractAopProxyMethodBuilder,The method has 5 parameters. Parameters: typeBuilder' aopProxyGenerator' explicitImplementation' targetMethods' onProxyTargetMethods
Long Parameter List,Spring.Aop.Framework.DynamicProxy,AdvisedProxy,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AdvisedProxy.cs,Invoke,The method has 7 parameters. Parameters: proxy' target' targetType' targetMethod' proxyMethod' args' interceptors
Long Identifier,Spring.Aop.Config,AopNamespaceUtils,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Config\AopNamespaceUtils.cs,,The length of the parameter AUTO_PROXY_CREATOR_OBJECT_NAME is 30.
Long Identifier,Spring.Aop.Config,AopNamespaceUtils,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Config\AopNamespaceUtils.cs,,The length of the parameter InfrastructureAutoProxyCreatorType is 34.
Long Identifier,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,,The length of the parameter PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS is 37.
Long Identifier,Spring.Aop.Framework.DynamicProxy,References,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,,The length of the parameter BaseCompositionAopProxyConstructor is 34.
Long Identifier,Spring.Aop.Framework.DynamicProxy,References,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,,The length of the parameter BaseCompositionAopProxySerializationConstructor is 47.
Long Identifier,Spring.Aop.Framework.DynamicProxy,References,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\AbstractAopProxyMethodBuilder.cs,,The length of the parameter AdvisedProxySerializationConstructor is 36.
Long Identifier,Spring.Aspects.Cache,InvalidateCacheAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\InvalidateCacheAdvice.cs,,The length of the parameter _invalidateCacheAttributeCache is 30.
Long Statement,Spring.Aop.Config,ConfigObjectDefinitionParser,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Config\ConfigObjectDefinitionParser.cs,ParseElement,The length of the statement  "            //XmlNodeList advisorNodes = element.SelectNodes("*[local-name()='advisor' and namespace-uri()='" + element.NamespaceURI + "']"); " is 129.
Long Statement,Spring.Aop.Framework,AopUtils,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AopUtils.cs,IsAopProxyType,The length of the statement  "            return IsCompositionAopProxyType(objectType) || IsDecoratorAopProxyType(objectType) || IsInheritanceAopProxyType(objectType); " is 125.
Long Statement,Spring.Aop.Framework,AbstractMethodInvocation,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AbstractMethodInvocation.cs,AssertJoinpoint,The length of the statement  "//                throw new NotSupportedException(string.Format("Interface method '{0}.{1}()' was not handled by any interceptor and the underlying target type '{2}' does not implement this method."' method.DeclaringType.FullName' method.Name' target.GetType().FullName)); " is 272.
Long Statement,Spring.Aop.Framework,AdvisedSupport,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AdvisedSupport.cs,CopyConfigurationFrom,The length of the statement  "            CopyConfigurationFrom(other' other.TargetSource' new List<IAdvisor>(other.Advisors)' new List<IIntroductionAdvisor>(other.Introductions)); " is 138.
Long Statement,Spring.Aop.Framework,HashtableCachingAdvisorChainFactory,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\HashtableCachingAdvisorChainFactory.cs,GetInterceptors,The length of the statement  "            // Apparently not in the cache - calculate the value outside of any locks then enter upgradeable read lock and check again " is 122.
Long Statement,Spring.Aop.Framework,HashtableCachingAdvisorChainFactory,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\HashtableCachingAdvisorChainFactory.cs,GetInterceptors,The length of the statement  "            return methodCache.GetOrAdd(method' m => AdvisorChainFactoryUtils.CalculateInterceptors(advised' proxy' m' targetType)); " is 120.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,Initialize,The length of the statement  "                logger.Debug(string.Format("Initialize: begin configure target' interceptors and introductions for {0}[{1}]"' this.GetType().Name' this.GetHashCode())); " is 152.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,Initialize,The length of the statement  "                logger.Debug(string.Format("Initialize: completed configuration for {0}[{1}]: {2}"' this.GetType().Name' this.GetHashCode()' this.ToProxyConfigString())); " is 154.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,The length of the statement  "                    throw new AopConfigException("Found null interceptor name value in the InterceptorNames list; check your configuration."); " is 122.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,The length of the statement  "                        throw new AopConfigException("Can only use global advisors or interceptors in conjunction with an IListableObjectFactory."); " is 124.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeIntroductionChain,The length of the statement  "                    throw new AopConfigException("Found null interceptor name value in the InterceptorNames list; check your configuration."); " is 122.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeIntroductionChain,The length of the statement  "                    AddGlobalIntroduction((IListableObjectFactory)this.objectFactory' name.Substring(0' (name.Length - GlobalInterceptorSuffix.Length))); " is 133.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,NamedObjectToAdvisor,The length of the statement  "                throw new AopConfigException(string.Format("Unknown advisor type '{0}'; Can only include Advisor or Advice type beans in interceptorNames chain except for last entry'which may also be target or TargetSource"' next.GetType().FullName)' ex); " is 239.
Long Statement,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,CheckInterceptorNames,The length of the statement  "                            logger.Debug(string.Format("Object with name '{0}' concluding interceptor chain is not an advisor class: treating it as a target or TargetSource"' finalName)); " is 159.
Long Statement,Spring.Aop.Framework.AutoProxy,ObjectFactoryAdvisorRetrievalHelper,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\ObjectFactoryAdvisorRetrievalHelper.cs,GetAdvisorCandidateNames,The length of the statement  "                        IList<string> advisorCandidateNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors( _objectFactory' typeof(IAdvisor)' true' false); " is 142.
Long Statement,Spring.Aop.Framework.AutoProxy,ObjectFactoryAdvisorRetrievalHelper,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\ObjectFactoryAdvisorRetrievalHelper.cs,GetAdvisorCandidateNames,The length of the statement  "                        IList<string> advisorsCandidateNames = ObjectFactoryUtils.ObjectNamesForTypeIncludingAncestors(_objectFactory' typeof(IAdvisors)' true' false); " is 143.
Long Statement,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,GetCustomTargetSource,The length of the statement  "                            logger.Info(string.Format("TargetSourceCreator [{0} found custom TargetSource for object with objectName '{1}'"' tsc' name)); " is 125.
Long Statement,Spring.Aop.Framework.AutoProxy,AbstractAutoProxyCreator,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AutoProxy\AbstractAutoProxyCreator.cs,BuildAdvisors,The length of the statement  "                logger.Info(string.Format("Creating implicit proxy for object '{0}' with {1} common interceptors and {2} specific interceptors"' targetName' nrOfCommonInterceptors' nrOfSpecificInterceptors)); " is 192.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,BuildProxyType,The length of the statement  "                MethodInfo proxyMethod = proxyType.GetMethod("proxy_" + (string)entry.Key' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 145.
Long Statement,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,ImplementIAopProxy,The length of the statement  "                MethodAttributes.Private | MethodAttributes.HideBySig | MethodAttributes.NewSlot | MethodAttributes.Virtual | MethodAttributes.Final' " is 133.
Long Statement,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,ImplementIAopProxy,The length of the statement  "                MethodAttributes.Private | MethodAttributes.HideBySig | MethodAttributes.NewSlot | MethodAttributes.Virtual | MethodAttributes.Final' " is 133.
Long Statement,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,GetHashCode,The length of the statement  "	            return ((_introduction != null ? _introduction.GetHashCode() : 0)*397) ^ (_interfaces != null ? _interfaces.GetHashCode() : 0); " is 127.
Long Statement,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetCacheResultInfo,The length of the statement  "                CacheResultItemsAttribute[] itemInfoArray = (CacheResultItemsAttribute[])GetCustomAttributes(method' typeof(CacheResultItemsAttribute)); " is 136.
Long Statement,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetReturnValue,The length of the statement  "                        logger.Debug(String.Format("Object for key [{0}] was of type [{1}] which is not compatible with return type [{2}]. Proceeding..."' resultKey' returnValue.GetType()' returnType)); " is 178.
Long Statement,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetReturnValue,The length of the statement  "                        logger.Debug(String.Format("Object for key [{0}] was not found in cache [{1}]. Proceeding..."' resultKey' resultInfo.CacheName)); " is 129.
Long Statement,Spring.Aspects.Cache,CacheResultAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetReturnValue,The length of the statement  "                        logger.Debug(String.Format("Object for key [{0}] found in cache [{1}]. Aborting invocation..."' resultKey' resultInfo.CacheName)); " is 130.
Long Statement,Spring.Aspects.Cache,CacheParameterAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\CacheParameterAdvice.cs,GetCacheParameterInfo,The length of the statement  "                    CacheParameterAttribute[] paramInfoArray = (CacheParameterAttribute[])GetCustomAttributes(p' typeof(CacheParameterAttribute)); " is 126.
Complex Conditional,Spring.Aop.Framework,ProxyFactoryObject,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactoryObject.cs,InitializeAdvisorChain,The conditional expression  "this.interceptorNames[this.interceptorNames.Length - 1] != null                  && this.interceptorNames[this.interceptorNames.Length - 1].EndsWith(GlobalInterceptorSuffix)                  && this.targetName == null                  && this.TargetSource == EmptyTargetSource.Empty"  is complex.
Virtual Method Call from Constructor,Spring.Aop.Framework,AdvisedSupport,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AdvisedSupport.cs,AdvisedSupport,The constructor "AdvisedSupport" calls a virtual method "AddListener".
Virtual Method Call from Constructor,Spring.Aop.Framework,AdvisedSupport,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\AdvisedSupport.cs,AdvisedSupport,The constructor "AdvisedSupport" calls a virtual method "AddInterfaceInternal".
Virtual Method Call from Constructor,Spring.Aop.Framework,ProxyFactory,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactory.cs,ProxyFactory,The constructor "ProxyFactory" calls a virtual method "AddInterface".
Virtual Method Call from Constructor,Spring.Aop.Framework,ProxyFactory,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\ProxyFactory.cs,ProxyFactory,The constructor "ProxyFactory" calls a virtual method "AddInterface".
Virtual Method Call from Constructor,Spring.Aop.Framework.DynamicProxy,InheritanceAopProxyTypeBuilder,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\InheritanceAopProxyTypeBuilder.cs,InheritanceAopProxyTypeBuilder,The constructor "InheritanceAopProxyTypeBuilder" calls a virtual method "GetProxiableInterfaces".
Virtual Method Call from Constructor,Spring.Aop.Framework.DynamicProxy,CompositionAopProxyTypeBuilder,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CompositionAopProxyTypeBuilder.cs,CompositionAopProxyTypeBuilder,The constructor "CompositionAopProxyTypeBuilder" calls a virtual method "GetProxiableInterfaces".
Virtual Method Call from Constructor,Spring.Aop.Framework.DynamicProxy,DecoratorAopProxyTypeBuilder,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\DecoratorAopProxyTypeBuilder.cs,DecoratorAopProxyTypeBuilder,The constructor "DecoratorAopProxyTypeBuilder" calls a virtual method "GetProxiableInterfaces".
Virtual Method Call from Constructor,Spring.Aop.Framework.Adapter,DefaultAdvisorAdapterRegistry,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\Adapter\DefaultAdvisorAdapterRegistry.cs,DefaultAdvisorAdapterRegistry,The constructor "DefaultAdvisorAdapterRegistry" calls a virtual method "RegisterAdvisorAdapter".
Virtual Method Call from Constructor,Spring.Aop.Framework.Adapter,DefaultAdvisorAdapterRegistry,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\Adapter\DefaultAdvisorAdapterRegistry.cs,DefaultAdvisorAdapterRegistry,The constructor "DefaultAdvisorAdapterRegistry" calls a virtual method "RegisterAdvisorAdapter".
Virtual Method Call from Constructor,Spring.Aop.Framework.Adapter,DefaultAdvisorAdapterRegistry,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\Adapter\DefaultAdvisorAdapterRegistry.cs,DefaultAdvisorAdapterRegistry,The constructor "DefaultAdvisorAdapterRegistry" calls a virtual method "RegisterAdvisorAdapter".
Virtual Method Call from Constructor,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,DefaultIntroductionAdvisor,The constructor "DefaultIntroductionAdvisor" calls a virtual method "AddInterface".
Magic Number,Spring.Aop.Framework.DynamicProxy,ProxyTypeCacheKey,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CachedAopProxyFactory.cs,GetHashCode,The following statement contains a magic number: result = 29*result + targetType.GetHashCode();
Magic Number,Spring.Aop.Framework.DynamicProxy,ProxyTypeCacheKey,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CachedAopProxyFactory.cs,GetHashCode,The following statement contains a magic number: for (int i = 0; i < interfaceTypes.Count; i++)                  {                      result = 29 * result + interfaceTypes[i].GetHashCode();                  }
Magic Number,Spring.Aop.Framework.DynamicProxy,ProxyTypeCacheKey,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\DynamicProxy\CachedAopProxyFactory.cs,GetHashCode,The following statement contains a magic number: result = 29 * result + proxyTargetAttributes.GetHashCode();
Magic Number,Spring.Aop.Framework.Adapter,ThrowsAdviceInterceptor,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Framework\Adapter\ThrowsAdviceInterceptor.cs,MapAllExceptionHandlingMethods,The following statement contains a magic number: foreach (MethodInfo method in methods)              {                  int numParams = method.GetParameters().Length;                  if (method.Name.Equals(SpecialThrowingMethodName)                      && (numParams == 1 || numParams == 4))                  {                      Type lastParametersType = method.GetParameters()[numParams - 1].ParameterType;                      if (typeof (Exception).IsAssignableFrom(lastParametersType))                      {                          #region Instrumentation                            if(log.IsDebugEnabled)                          {                              log.Debug("Found exception handler method: " + method);                          }                            #endregion                            if(this.exceptionHandlers.Contains(lastParametersType))                          {                              throw new ArgumentException(                                  "Throws advice handler method for the [" +                                  lastParametersType + "] type already exists; don't define " +                                  "both single and multiple argument methods for the same " +                                  "Exception type in the same class.");                          }                          this.exceptionHandlers[lastParametersType] = method;                      }                  }              }
Magic Number,Spring.Aop.Support,AbstractPointcutAdvisor,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Support\AbstractPointcutAdvisor.cs,GetHashCode,The following statement contains a magic number: return 0 // (SPRNET-847) base.GetHashCode()                 + 13 * (Pointcut == null ? 0 : Pointcut.GetHashCode())                 + 27 * (Advice == null ? 0 : Advice.GetHashCode())                 + 31 * Order.GetHashCode();
Magic Number,Spring.Aop.Support,AbstractPointcutAdvisor,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Support\AbstractPointcutAdvisor.cs,GetHashCode,The following statement contains a magic number: return 0 // (SPRNET-847) base.GetHashCode()                 + 13 * (Pointcut == null ? 0 : Pointcut.GetHashCode())                 + 27 * (Advice == null ? 0 : Advice.GetHashCode())                 + 31 * Order.GetHashCode();
Magic Number,Spring.Aop.Support,AbstractPointcutAdvisor,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Support\AbstractPointcutAdvisor.cs,GetHashCode,The following statement contains a magic number: return 0 // (SPRNET-847) base.GetHashCode()                 + 13 * (Pointcut == null ? 0 : Pointcut.GetHashCode())                 + 27 * (Advice == null ? 0 : Advice.GetHashCode())                 + 31 * Order.GetHashCode();
Magic Number,Spring.Aop.Support,DefaultIntroductionAdvisor,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Support\DefaultIntroductionAdvisor.cs,GetHashCode,The following statement contains a magic number: unchecked  	        {  	            return ((_introduction != null ? _introduction.GetHashCode() : 0)*397) ^ (_interfaces != null ? _interfaces.GetHashCode() : 0);  	        }
Magic Number,Spring.Aop.Target,HotSwappableTargetSource,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Target\HotSwappableTargetSource.cs,GetHashCode,The following statement contains a magic number: return base.GetHashCode() + 13 *  				(_target == null ? 0 : _target.GetHashCode());
Magic Number,Spring.Aop.Target,SingletonTargetSource,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aop\Target\SingletonTargetSource.cs,GetHashCode,The following statement contains a magic number: return base.GetHashCode() + 13 *  				(target == null ? 0 : target.GetHashCode());
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success)             {                 parsedAdviceExpression.Success = true;                 //using exception names for exception filter                 parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray(match.Groups[2].Value.Trim());                 parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                 parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();             }             else             {                 match = GetMatch(adviceExpression' OnExceptionRegex);                 if (match.Success)                 {                     parsedAdviceExpression.Success = true;                     //using constratin expression for exception filter                     string constraintExpression = match.Groups[2].Value.Trim().Remove(0' 1);                     parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring(0' constraintExpression.Length - 1);                     parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                     parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();                 }             }
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success)             {                 parsedAdviceExpression.Success = true;                 //using exception names for exception filter                 parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray(match.Groups[2].Value.Trim());                 parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                 parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();             }             else             {                 match = GetMatch(adviceExpression' OnExceptionRegex);                 if (match.Success)                 {                     parsedAdviceExpression.Success = true;                     //using constratin expression for exception filter                     string constraintExpression = match.Groups[2].Value.Trim().Remove(0' 1);                     parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring(0' constraintExpression.Length - 1);                     parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                     parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();                 }             }
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success)             {                 parsedAdviceExpression.Success = true;                 //using exception names for exception filter                 parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray(match.Groups[2].Value.Trim());                 parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                 parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();             }             else             {                 match = GetMatch(adviceExpression' OnExceptionRegex);                 if (match.Success)                 {                     parsedAdviceExpression.Success = true;                     //using constratin expression for exception filter                     string constraintExpression = match.Groups[2].Value.Trim().Remove(0' 1);                     parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring(0' constraintExpression.Length - 1);                     parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                     parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();                 }             }
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success)             {                 parsedAdviceExpression.Success = true;                 //using exception names for exception filter                 parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray(match.Groups[2].Value.Trim());                 parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                 parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();             }             else             {                 match = GetMatch(adviceExpression' OnExceptionRegex);                 if (match.Success)                 {                     parsedAdviceExpression.Success = true;                     //using constratin expression for exception filter                     string constraintExpression = match.Groups[2].Value.Trim().Remove(0' 1);                     parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring(0' constraintExpression.Length - 1);                     parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                     parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();                 }             }
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success)             {                 parsedAdviceExpression.Success = true;                 //using exception names for exception filter                 parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray(match.Groups[2].Value.Trim());                 parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                 parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();             }             else             {                 match = GetMatch(adviceExpression' OnExceptionRegex);                 if (match.Success)                 {                     parsedAdviceExpression.Success = true;                     //using constratin expression for exception filter                     string constraintExpression = match.Groups[2].Value.Trim().Remove(0' 1);                     parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring(0' constraintExpression.Length - 1);                     parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                     parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();                 }             }
Magic Number,Spring.Aspects,AbstractExceptionHandlerAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\AbstractExceptionHandlerAdvice.cs,ParseAdviceExpression,The following statement contains a magic number: if (match.Success)             {                 parsedAdviceExpression.Success = true;                 //using exception names for exception filter                 parsedAdviceExpression.ExceptionNames = StringUtils.CommaDelimitedListToStringArray(match.Groups[2].Value.Trim());                 parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                 parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();             }             else             {                 match = GetMatch(adviceExpression' OnExceptionRegex);                 if (match.Success)                 {                     parsedAdviceExpression.Success = true;                     //using constratin expression for exception filter                     string constraintExpression = match.Groups[2].Value.Trim().Remove(0' 1);                     parsedAdviceExpression.ConstraintExpression = constraintExpression.Substring(0' constraintExpression.Length - 1);                     parsedAdviceExpression.ActionText = match.Groups[3].Value.Trim();                     parsedAdviceExpression.ActionExpressionText = match.Groups[4].Value.Trim();                 }             }
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Sleep,The following statement contains a magic number: if (handler.IsDelayBased)             {                 sleepHandler(handler.DelayTimeSpan);             }             else             {                                 try                 {                     IExpression expression = Expression.Parse(handler.DelayRateExpression);                     object result = expression.GetValue(null' callContextDictionary);                     decimal d = decimal.Parse(result.ToString());                     decimal rounded = decimal.Round(d*1000'0);                      TimeSpan duration = TimeSpan.FromMilliseconds(decimal.ToDouble(rounded));                     sleepHandler(duration);                 }                 catch (InvalidCastException e)                 {                     log.Warn("Was not able to cast expression to decimal [" + handler.DelayRateExpression + "]. Sleeping for 1 second"' e);                      sleepHandler(new TimeSpan(0'0'1));                 }                 catch (Exception e)                 {                     log.Warn("Was not able to evaluate rate expression [" + handler.DelayRateExpression + "]. Sleeping for 1 second"' e);                      sleepHandler(new TimeSpan(0'0'1));                  }             }
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: if (match.Success)             {                 handler.MaximumRetryCount = int.Parse(match.Groups[1].Value.Trim());                 handler.IsDelayBased = true;                  try                 {                     string ts = match.Groups[3].Value.Trim();                     handler.DelayTimeSpan = (TimeSpan) timeSpanConverter.ConvertFrom(null' null' ts);                 } catch (Exception)                 {                     log.Warn("Could not parse timespan " + match.Groups[3].Value.Trim());                     return null;                 }                 return handler;             }             else             {                 match = GetMatchForActionExpression(parsedAdviceExpression.ActionExpressionText' rateRegex);                 if (match.Success)                 {                     handler.MaximumRetryCount = int.Parse(match.Groups[1].Value.Trim());                     handler.IsDelayBased = false;                     handler.DelayRateExpression = match.Groups[3].Value.Trim();                     return handler;                 }                 else                 {                     return null;                 }             }
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: if (match.Success)             {                 handler.MaximumRetryCount = int.Parse(match.Groups[1].Value.Trim());                 handler.IsDelayBased = true;                  try                 {                     string ts = match.Groups[3].Value.Trim();                     handler.DelayTimeSpan = (TimeSpan) timeSpanConverter.ConvertFrom(null' null' ts);                 } catch (Exception)                 {                     log.Warn("Could not parse timespan " + match.Groups[3].Value.Trim());                     return null;                 }                 return handler;             }             else             {                 match = GetMatchForActionExpression(parsedAdviceExpression.ActionExpressionText' rateRegex);                 if (match.Success)                 {                     handler.MaximumRetryCount = int.Parse(match.Groups[1].Value.Trim());                     handler.IsDelayBased = false;                     handler.DelayRateExpression = match.Groups[3].Value.Trim();                     return handler;                 }                 else                 {                     return null;                 }             }
Magic Number,Spring.Aspects,RetryAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\RetryAdvice.cs,Parse,The following statement contains a magic number: if (match.Success)             {                 handler.MaximumRetryCount = int.Parse(match.Groups[1].Value.Trim());                 handler.IsDelayBased = true;                  try                 {                     string ts = match.Groups[3].Value.Trim();                     handler.DelayTimeSpan = (TimeSpan) timeSpanConverter.ConvertFrom(null' null' ts);                 } catch (Exception)                 {                     log.Warn("Could not parse timespan " + match.Groups[3].Value.Trim());                     return null;                 }                 return handler;             }             else             {                 match = GetMatchForActionExpression(parsedAdviceExpression.ActionExpressionText' rateRegex);                 if (match.Success)                 {                     handler.MaximumRetryCount = int.Parse(match.Groups[1].Value.Trim());                     handler.IsDelayBased = false;                     handler.DelayRateExpression = match.Groups[3].Value.Trim();                     return handler;                 }                 else                 {                     return null;                 }             }
Magic Number,Spring.Aspects.Cache,NullValueMarkerType,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Cache\CacheResultAdvice.cs,GetHashCode,The following statement contains a magic number: return 13;
Magic Number,Spring.Aspects.Logging,SimpleLoggingAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Logging\SimpleLoggingAdvice.cs,GetEntryMessage,The following statement contains a magic number: StringBuilder sb = new StringBuilder(128);
Magic Number,Spring.Aspects.Logging,SimpleLoggingAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Logging\SimpleLoggingAdvice.cs,GetExceptionMessage,The following statement contains a magic number: StringBuilder sb = new StringBuilder(128);
Magic Number,Spring.Aspects.Logging,SimpleLoggingAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Logging\SimpleLoggingAdvice.cs,GetExitMessage,The following statement contains a magic number: StringBuilder sb = new StringBuilder(128);
Magic Number,Spring.Aspects.Logging,SimpleLoggingAdvice,C:\repos\spring-projects_spring-net\src\Spring\Spring.Aop\Aspects\Logging\SimpleLoggingAdvice.cs,GetMethodArgumentAsString,The following statement contains a magic number: StringBuilder sb = new StringBuilder(128);
