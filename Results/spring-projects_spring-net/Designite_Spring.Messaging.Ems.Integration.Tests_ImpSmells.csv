Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Spring.Messaging.Ems.Config,EmsNamespaceHandlerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Config\EmsNamespaceHandlerTests.cs,ContainerConfiguration,The length of the parameter explicitConnectionFactoryCount is 30.
Empty Catch Block,Spring.Messaging.Ems.Core,EmsTemplateTests,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Core\EmsTemplateTests.cs,OnSetUp,The method has an empty catch block.
Magic Number,Spring.Messaging.Ems.Config,EmsNamespaceHandlerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Config\EmsNamespaceHandlerTests.cs,ObjectsCreated,The following statement contains a magic number: Assert.AreEqual(3' containers.Count);
Magic Number,Spring.Messaging.Ems.Config,EmsNamespaceHandlerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Config\EmsNamespaceHandlerTests.cs,ContainerConfiguration,The following statement contains a magic number: Assert.AreEqual(2' explicitConnectionFactoryCount' "2 containers should have the explicit connectionFactory");
Magic Number,Spring.Messaging.Ems.Core,SimpleGateway,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Core\SimpleGateway.cs,Publish,The following statement contains a magic number: EmsTemplate.SendWithDelegate("APP.STOCK.MARKETDATA"'                            delegate(ISession session)                            {                                MapMessage message = session.CreateMapMessage();                                message.SetString("TICKER"' ticker);                                message.SetDouble("PRICE"' price);                                message.Priority = 5;                                return message;                            });
Magic Number,Spring.Messaging.Ems.Core,SimpleGateway,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Core\SimpleGateway.cs,PublishUsingDict,The following statement contains a magic number: EmsTemplate.ConvertAndSendWithDelegate("APP.STOCK.MARKETDATA"' marketData'                       delegate(Message message)                       {                           message.Priority = 5;                           message.CorrelationID = new Guid().ToString();                           return message;                       });
Magic Number,Spring.Messaging.Ems.Core,SimplePublisher,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Core\SimplePublisher.cs,Publish,The following statement contains a magic number: emsTemplate.SendWithDelegate("APP.STOCK.MARKETDATA"'                            delegate(ISession session)                            {                                MapMessage message = session.CreateMapMessage();                                message.SetString("TICKER"' ticker);                                message.SetDouble("PRICE"' price);                                message.Priority = 5;                                return message;                            });
Magic Number,Spring.Messaging.Ems.Listener,SimpleMessageListenerContainerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Listener\SimpleMessageListenerContainerTests.cs,SendAndRecieveAsync,The following statement contains a magic number: simpleGateway.Publish("CSCO"' 123.45);
Magic Number,Spring.Messaging.Ems.Listener,SimpleMessageListenerContainerTests,D:\research\architectureSmells\repos1\spring-projects_spring-net\test\Spring\Spring.Messaging.Ems.Integration.Tests\Messaging\Ems\Listener\SimpleMessageListenerContainerTests.cs,SendAndRecieveAsync,The following statement contains a magic number: Thread.Sleep(1000);
