Implementation smell,Namespace,Class,File,Method,Description
Long Method,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The method has 126 lines of code.
Long Method,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The method has 137 lines of code.
Long Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The method has 165 lines of code.
Long Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_styles,The method has 104 lines of code.
Long Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The method has 112 lines of code.
Long Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,Save,The method has 212 lines of code.
Complex Method,Novacode,Container,C:\repos\Word-DocX_DocX\DocX\Container.cs,ReplaceText,Cyclomatic complexity of the method is 8
Complex Method,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,MergeCellsInColumn,Cyclomatic complexity of the method is 8
Complex Method,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,Cyclomatic complexity of the method is 8
Complex Method,Novacode,Row,C:\repos\Word-DocX_DocX\DocX\Table.cs,MergeCells,Cyclomatic complexity of the method is 11
Complex Method,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,Cyclomatic complexity of the method is 9
Complex Method,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,CompareTo,Cyclomatic complexity of the method is 19
Complex Method,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,ApplyTextFormattingProperty,Cyclomatic complexity of the method is 13
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,Cyclomatic complexity of the method is 18
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_images,Cyclomatic complexity of the method is 11
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_numbering,Cyclomatic complexity of the method is 16
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_styles,Cyclomatic complexity of the method is 22
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,Cyclomatic complexity of the method is 8
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,Save,Cyclomatic complexity of the method is 15
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,UpdateCorePropertyValue,Cyclomatic complexity of the method is 9
Complex Method,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,UpdateCustomPropertyValue,Cyclomatic complexity of the method is 16
Long Parameter List,Novacode,Container,C:\repos\Word-DocX_DocX\DocX\Container.cs,ReplaceText,The method has 7 parameters. Parameters: oldValue' newValue' trackChanges' options' newFormatting' matchFormatting' fo
Long Parameter List,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateItemInList,The method has 6 parameters. Parameters: list' listText' level' listType' startNumber' trackChanges
Long Parameter List,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstRunEffectedByEditRecursive,The method has 5 parameters. Parameters: Xml' index' count' theOne' type
Long Parameter List,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,ReplaceText,The method has 7 parameters. Parameters: oldValue' newValue' trackChanges' options' newFormatting' matchFormatting' fo
Long Parameter List,Novacode,Run,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstTextEffectedByEditRecursive,The method has 5 parameters. Parameters: Xml' index' count' theOne' type
Long Parameter List,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_endnotes,The method has 5 parameters. Parameters: remote_pp' local_pp' remote_mainDoc' remote' remote_endnotes
Long Parameter List,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_footnotes,The method has 5 parameters. Parameters: remote_pp' local_pp' remote_mainDoc' remote' remote_footnotes
Long Parameter List,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_styles,The method has 6 parameters. Parameters: remote_pp' local_pp' remote_mainDoc' remote' remote_footnotes' remote_endnotes
Long Parameter List,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddList,The method has 5 parameters. Parameters: listText' level' listType' startNumber' trackChanges
Long Parameter List,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddListItem,The method has 6 parameters. Parameters: list' listText' level' listType' startNumber' trackChanges
Long Statement,Novacode,Chart,C:\repos\Word-DocX_DocX\DocX\Charts\Chart.cs,AddSeries,The length of the statement  "                throw new InvalidOperationException("Maximum series for this chart is" + MaxSeriesCount.ToString() + "and have exceeded!"); " is 123.
Long Statement,Novacode,Series,C:\repos\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "            XElement ptCount = new XElement(XName.Get("ptCount"' DocX.c.NamespaceName)' new XAttribute(XName.Get("val")' list.Count)); " is 122.
Long Statement,Novacode,Series,C:\repos\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "                    new XElement(XName.Get("v"' DocX.c.NamespaceName)' item.GetType().GetProperty(categoryPropertyName).GetValue(item' null))); " is 123.
Long Statement,Novacode,Series,C:\repos\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "                    new XElement(XName.Get("v"' DocX.c.NamespaceName)' item.GetType().GetProperty(valuePropertyName).GetValue(item' null))); " is 120.
Long Statement,Novacode,Series,C:\repos\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "            XElement ptCount = new XElement(XName.Get("ptCount"' DocX.c.NamespaceName)' new XAttribute(XName.Get("val")' categories.Count)); " is 128.
Long Statement,Novacode,Container,C:\repos\Word-DocX_DocX\DocX\Container.cs,InsertParagraph,The length of the statement  "                    PackagePart style_package = Document.package.CreatePart(style_package_uri' "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml"' CompressionOption.Maximum); " is 179.
Long Statement,Novacode,Container,C:\repos\Word-DocX_DocX\DocX\Container.cs,InsertSection,The length of the statement  "                XName.Get("p"' DocX.w.NamespaceName)' new XElement(XName.Get("pPr"' DocX.w.NamespaceName)' new XElement(XName.Get("sectPr"' DocX.w.NamespaceName)' new XElement(XName.Get("type"' DocX.w.NamespaceName)' new XAttribute(DocX.w + "val"' "continuous")))) " is 248.
Long Statement,Novacode,Container,C:\repos\Word-DocX_DocX\DocX\Container.cs,InsertSectionPageBreak,The length of the statement  "                XName.Get("p"' DocX.w.NamespaceName)' new XElement(XName.Get("pPr"' DocX.w.NamespaceName)' new XElement(XName.Get("sectPr"' DocX.w.NamespaceName))) " is 147.
Long Statement,Novacode,Container,C:\repos\Word-DocX_DocX\DocX\Container.cs,InsertParagraph,The length of the statement  "                XName.Get("p"' DocX.w.NamespaceName)' new XElement(XName.Get("pPr"' DocX.w.NamespaceName))' HelperFunctions.FormatInput(text' formatting.Xml) " is 141.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateRelsPackagePart,The length of the statement  "            PackagePart pp = Document.package.CreatePart(uri' "application/vnd.openxmlformats-package.relationships+xml"' CompressionOption.Maximum); " is 137.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "                settingsPart = package.CreatePart(settingsUri' "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml"' CompressionOption.Maximum); " is 153.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "                mainDocumentPart.CreateRelationship(settingsUri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings"); " is 150.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "                <w:settings xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:r='http://schemas.openxmlformats.org/officeDocument/2006/relationships' xmlns:m='http://schemas.openxmlformats.org/officeDocument/2006/math' xmlns:v='urn:schemas-microsoft-com:vml' xmlns:w10='urn:schemas-microsoft-com:office:word' xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' xmlns:sl='http://schemas.openxmlformats.org/schemaLibrary/2006/main'> " is 439.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "                  <w:clrSchemeMapping w:bg1='light1' w:t1='dark1' w:bg2='light2' w:t2='dark2' w:accent1='accent1' w:accent2='accent2' w:accent3='accent3' w:accent4='accent4' w:accent5='accent5' w:accent6='accent6' w:hyperlink='hyperlink' w:followedHyperlink='followedHyperlink' /> " is 262.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateCustomPropertiesPart,The length of the statement  "            PackagePart customPropertiesPart = document.package.CreatePart(new Uri("/docProps/custom.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.custom-properties+xml"' CompressionOption.Maximum); " is 212.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateCustomPropertiesPart,The length of the statement  "            document.package.CreateRelationship(customPropertiesPart.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties"); " is 172.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultNumberingXml,The length of the statement  "            PackagePart wordNumbering = package.CreatePart(new Uri("/word/numbering.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml"' CompressionOption.Maximum); " is 204.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultNumberingXml,The length of the statement  "            mainDocumentPart.CreateRelationship(wordNumbering.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering"); " is 157.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultStylesXml,The length of the statement  "            PackagePart word_styles = package.CreatePart(new Uri("/word/styles.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml"' CompressionOption.Maximum); " is 196.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultStylesXml,The length of the statement  "            XElement lang = stylesDoc.Root.Element(XName.Get("docDefaults"' DocX.w.NamespaceName)).Element(XName.Get("rPrDefault"' DocX.w.NamespaceName)).Element(XName.Get("rPr"' DocX.w.NamespaceName)).Element(XName.Get("lang"' DocX.w.NamespaceName)); " is 239.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultStylesXml,The length of the statement  "            mainDocumentPart.CreateRelationship(word_styles.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles"); " is 152.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateTable,The length of the statement  "                        new XElement(XName.Get("tblStyle"' DocX.w.NamespaceName)' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' "TableGrid"))' " is 127.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateTable,The length of the statement  "                        new XElement(XName.Get("tblW"' DocX.w.NamespaceName)' new XAttribute(XName.Get("w"' DocX.w.NamespaceName)' "5000")' new XAttribute(XName.Get("type"' DocX.w.NamespaceName)' "auto"))' " is 181.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateTable,The length of the statement  "                        new XElement(XName.Get("tblLook"' DocX.w.NamespaceName)' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' "04A0")) " is 120.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateTable,The length of the statement  "                tableGrid.Add(new XElement(XName.Get("gridCol"' DocX.w.NamespaceName)' new XAttribute(XName.Get("w"' DocX.w.NamespaceName)' "2310"))); " is 134.
Long Statement,Novacode,HelperFunctions,C:\repos\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateItemInList,The length of the statement  "                    list.AddItemWithStartValue(new Paragraph(list.Document' newParagraphSection' 0' ContainerType.Paragraph)' (int)startNumber); " is 124.
Long Statement,Novacode,List,C:\repos\Word-DocX_DocX\DocX\List.cs,AddItemWithStartValue,The length of the statement  "                throw new InvalidOperationException("Cannot add a paragraph with a start value if another element already exists in this list with that level."); " is 145.
Long Statement,Novacode,List,C:\repos\Word-DocX_DocX\DocX\List.cs,UpdateNumberingForLevelStartNumber,The length of the statement  "            var level = abstractNum.Descendants().First(el => el.Name.LocalName == "lvl" && el.GetAttribute(DocX.w + "ilvl") == iLevel.ToString()); " is 135.
Long Statement,Novacode,List,C:\repos\Word-DocX_DocX\DocX\List.cs,ContainsLevel,The length of the statement  "            return Items.Any(i => i.ParagraphNumberProperties.Descendants().First(el => el.Name.LocalName == "ilvl").Value == ilvl.ToString()); " is 131.
Long Statement,Novacode,List,C:\repos\Word-DocX_DocX\DocX\List.cs,CreateNewNumberingNumId,The length of the statement  "            var abstractNumXml = new XElement(XName.Get("num"' DocX.w.NamespaceName)' new XAttribute(DocX.w + "numId"' numId)' new XElement(XName.Get("abstractNumId"' DocX.w.NamespaceName)' new XAttribute(DocX.w + "val"' abstractNumId))); " is 226.
Long Statement,Novacode,List,C:\repos\Word-DocX_DocX\DocX\List.cs,CreateNewNumberingNumId,The length of the statement  "            var abstractNumNode = Document.numbering.Root.Descendants().LastOrDefault(xElement => xElement.Name.LocalName == "abstractNum"); " is 128.
Long Statement,Novacode,List,C:\repos\Word-DocX_DocX\DocX\List.cs,GetAbstractNum,The length of the statement  "            var num = Document.numbering.Descendants().First(d => d.Name.LocalName == "num" && d.GetAttribute(DocX.w + "numId").Equals(numId.ToString())); " is 142.
Long Statement,Novacode,List,C:\repos\Word-DocX_DocX\DocX\List.cs,GetAbstractNum,The length of the statement  "            return Document.numbering.Descendants().First(d => d.Name.LocalName == "abstractNum" && d.GetAttribute("abstractNumId").Equals(abstractNumId.Value)); " is 149.
Long Statement,Novacode,InsertBeforeOrAfter,C:\repos\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertParagraphAfterSelf,The length of the statement  "                p.Xml = newlyInserted; //IMPORTANT: I think we have return new paragraph in any case' but I dont know what to put as startIndex parameter into Paragraph constructor " is 164.
Long Statement,Novacode,InsertBeforeOrAfter,C:\repos\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertParagraphBeforeSelf,The length of the statement  "                XName.Get("p"' DocX.w.NamespaceName)' new XElement(XName.Get("pPr"' DocX.w.NamespaceName))' HelperFunctions.FormatInput(text' formatting.Xml) " is 141.
Long Statement,Novacode,InsertBeforeOrAfter,C:\repos\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertParagraphAfterSelf,The length of the statement  "                XName.Get("p"' DocX.w.NamespaceName)' new XElement(XName.Get("pPr"' DocX.w.NamespaceName))' HelperFunctions.FormatInput(text' formatting.Xml) " is 141.
Long Statement,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,InsertRow,The length of the statement  "            List<XElement> content = row.Xml.Elements(XName.Get("tc"' DocX.w.NamespaceName)).Select(element => HelperFunctions.CloneElement(element)).ToList(); " is 147.
Long Statement,Novacode,Row,C:\repos\Word-DocX_DocX\DocX\Table.cs,MergeCells,The length of the statement  "            start_gridSpan.SetAttributeValue(XName.Get("val"' DocX.w.NamespaceName)' (gridSpanSum + (endIndex - startIndex + 1)).ToString()); " is 129.
Long Statement,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,InsertTable,The length of the statement  "            InsertParagraph(); //Dmitchern' It is necessary to put paragraph in the end of the cell' without it MS-Word will say that the document is corrupted " is 147.
Long Statement,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The length of the statement  "                    case "lang": formatting.Language = new CultureInfo(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("bidi"' DocX.w.NamespaceName))); break; " is 263.
Long Statement,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The length of the statement  "                    case "spacing": formatting.Spacing = Double.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 20.0; break; " is 125.
Long Statement,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The length of the statement  "                    case "position": formatting.Position = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 2; break; " is 123.
Long Statement,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The length of the statement  "                    case "rFonts": formatting.FontFamily = new FontFamily(option.GetAttribute(XName.Get("cs"' DocX.w.NamespaceName))); break; " is 121.
Long Statement,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The length of the statement  "                    case "u": formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))); " is 133.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The length of the statement  "                <wp:inline distT=""0"" distB=""0"" distL=""0"" distR=""0"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing""> " is 143.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,InsertText,The length of the statement  "            // Would have like to write 'public void InsertText(string value' bool trackChanges = false' Formatting formatting = new Formatting()) " is 134.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,AppendPicture,The length of the statement  "            this.runs = Xml.Elements(XName.Get("r"' DocX.w.NamespaceName)).Reverse().Take(p.Xml.Elements(XName.Get("r"' DocX.w.NamespaceName)).Count()).ToList(); " is 149.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetOrGenerateRel,The length of the statement  "                PackageRelationship pr = mainPart.CreateRelationship(p.img.pr.TargetUri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image"); " is 171.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetOrGenerateRel,The length of the statement  "                from r in mainPart.GetRelationshipsByType("http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink") " is 122.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetOrGenerateRel,The length of the statement  "                PackageRelationship pr = mainPart.CreateRelationship(h.Uri' TargetMode.External' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink"); " is 162.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,ApplyTextFormattingProperty,The length of the statement  "                        last.Attribute(((System.Xml.Linq.XAttribute)(content)).Name).Value = ((System.Xml.Linq.XAttribute)(content)).Value; //Apply value only if element already has it " is 160.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Color,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("color"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' c.ToHex())); " is 151.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,UnderlineStyle,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("u"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' value)); " is 143.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("sz"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' fontSize * 2)); " is 151.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("szCs"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' fontSize * 2)); " is 153.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Font,The length of the statement  "                    new XAttribute(XName.Get("hAnsi"' DocX.w.NamespaceName)' fontFamily.Name)' // Added by Maurits Elbers to support non-standard characters. See http://docx.codeplex.com/Thread/View.aspx?ThreadId=70097&ANCHOR#Post453865 " is 216.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Font,The length of the statement  "                    new XAttribute(XName.Get("cs"' DocX.w.NamespaceName)' fontFamily.Name)'    // Added by Maurits Elbers to support non-standard characters. See http://docx.codeplex.com/Thread/View.aspx?ThreadId=70097&ANCHOR#Post453865 " is 216.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Script,The length of the statement  "                        ApplyTextFormattingProperty(XName.Get("vertAlign"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' script.ToString())); " is 163.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Highlight,The length of the statement  "                        ApplyTextFormattingProperty(XName.Get("highlight"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' highlight.ToString())); " is 166.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The length of the statement  "                throw new ArgumentException("Spacing"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9"); " is 129.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("spacing"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' spacing)); " is 151.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The length of the statement  "                throw new ArgumentException("SpacingBefore"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9"); " is 135.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("before"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' spacingBefore)); " is 156.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The length of the statement  "                throw new ArgumentException("SpacingAfter"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9"); " is 134.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("after"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' spacingAfter)); " is 154.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The length of the statement  "                throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72"); " is 151.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("kern"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' kerning * 2)); " is 152.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Position,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("position"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' position * 2)); " is 157.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The length of the statement  "                throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33"); " is 132.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The length of the statement  "            ApplyTextFormattingProperty(XName.Get("w"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' percentageScale)); " is 153.
Long Statement,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,RemoveText,The length of the statement  "                            object middle = CreateEdit(EditType.del' remove_datetime' new List<XElement>() { Run.SplitRun(new Run(Document' splitRunBefore[1]' run.StartIndex + GetElementTextLength(splitRunBefore[0]))' min' EditType.del)[0] }); " is 215.
Long Statement,Novacode,Run,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SplitRun,The length of the statement  "            XElement splitLeft = new XElement(r.Xml.Name' r.Xml.Attributes()' r.Xml.Element(XName.Get("rPr"' DocX.w.NamespaceName))' t.Xml.ElementsBeforeSelf().Where(n => n.Name.LocalName != "rPr")' splitText[0]); " is 201.
Long Statement,Novacode,Run,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SplitRun,The length of the statement  "            XElement splitRight = new XElement(r.Xml.Name' r.Xml.Attributes()' r.Xml.Element(XName.Get("rPr"' DocX.w.NamespaceName))' splitText[1]' t.Xml.ElementsAfterSelf().Where(n => n.Name.LocalName != "rPr")); " is 201.
Long Statement,Novacode,Text,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SplitText,The length of the statement  "                splitRight = new XElement(t.Xml.Name' t.Xml.Attributes()' t.Xml.Value.Substring(index - t.startIndex' t.Xml.Value.Length - (index - t.startIndex))); " is 148.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,GetProtectionType,The length of the statement  "                XElement documentProtection = settings.Descendants(XName.Get("documentProtection"' DocX.w.NamespaceName)).FirstOrDefault(); " is 123.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The length of the statement  "            // Every file that is missing from the local document will have to be copied' every file that already exists will have to be merged. " is 132.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The length of the statement  "            foreach (var hyperlink_rel in remote_document.mainPart.GetRelationshipsByType("http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink")) " is 159.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The length of the statement  "                var new_rel_Id = mainPart.CreateRelationship(hyperlink_rel.TargetUri' hyperlink_rel.TargetMode' hyperlink_rel.RelationshipType).Id; " is 131.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_images,The length of the statement  "            var remote_rel = remote_document.mainPart.GetRelationships().Where(r => r.TargetUri.OriginalString.Equals(remote_pp.Uri.OriginalString.Replace("/word/"' ""))).FirstOrDefault(); " is 176.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_images,The length of the statement  "                    var local_rel = mainPart.GetRelationships().Where(r => r.TargetUri.OriginalString.Equals(part.Uri.OriginalString.Replace("/word/"' ""))).FirstOrDefault(); " is 154.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_images,The length of the statement  "                PackageRelationship pr = mainPart.CreateRelationship(new Uri(new_uri' UriKind.Relative)' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image"); " is 187.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_endnotes,The length of the statement  "            foreach (var endnote in remote_endnotes.Root.Elements().OrderBy(fr => fr.Attribute(XName.Get("id"' DocX.r.NamespaceName))).Reverse()) " is 133.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_footnotes,The length of the statement  "            foreach (var footnote in remote_footnotes.Root.Elements().OrderBy(fr => fr.Attribute(XName.Get("id"' DocX.r.NamespaceName))).Reverse()) " is 135.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_customs,The length of the statement  "                    if (remote_property != null && local_property_name != null && remote_property_name.Value.Equals(local_property_name.Value)) " is 123.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_numbering,The length of the statement  "            IEnumerable<XElement> remote_abstractNums = remote.numbering.Root.Elements(XName.Get("abstractNum"' DocX.w.NamespaceName)); " is 123.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_fonts,The length of the statement  "                    if (local_font.Attribute(XName.Get("name"' DocX.w.NamespaceName)).Value == remote_font.Attribute(XName.Get("name"' DocX.w.NamespaceName)).Value) " is 144.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,clonePackageRelationship,The length of the statement  "                    String local_Id = mainPart.CreateRelationship(remote_rel.TargetUri' remote_rel.TargetMode' remote_rel.RelationshipType).Id; " is 123.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,Create,The length of the statement  "            //WordprocessingDocument wdDoc = WordprocessingDocument.Create(ms' DocumentFormat.OpenXml.WordprocessingDocumentType.Document); " is 127.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "            PackagePart mainDocumentPart = package.CreatePart(new Uri("/word/document.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"); " is 183.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "            package.CreateRelationship(mainDocumentPart.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument"); " is 156.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "                   <w:document xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"" xmlns:a=""http://schemas.openxmlformats.org/drawingml/2006/main"" xmlns:c=""http://schemas.openxmlformats.org/drawingml/2006/chart""> " is 739.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "                        <w:pgMar w:top=""1440"" w:right=""1440"" w:bottom=""1440"" w:left=""1440"" w:header=""708"" w:footer=""708"" w:gutter=""0""/> " is 125.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "            //    var header_even_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "headerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "even"); " is 242.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "            //    var header_odd_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "headerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "default"); " is 244.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "            //eaderReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "first"); " is 156.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "            //    var footer_even_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "footerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "even"); " is 242.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "            //    var footer_odd_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "footerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "default"); " is 244.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "            //    var footer_first_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "footerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "first"); " is 244.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "                        document.endnotesPart = package.GetPart(new Uri("/word/" + rel.TargetUri.OriginalString.Replace("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 140.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "                        document.footnotesPart = package.GetPart(new Uri("/word/" + rel.TargetUri.OriginalString.Replace("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 141.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "                        document.stylesPart = package.GetPart(new Uri("/word/" + rel.TargetUri.OriginalString.Replace("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 138.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "                        document.stylesWithEffectsPart = package.GetPart(new Uri("/word/" + rel.TargetUri.OriginalString.Replace("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 149.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "                        document.fontTablePart = package.GetPart(new Uri("/word/" + rel.TargetUri.OriginalString.Replace("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 141.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "                        document.numberingPart = package.GetPart(new Uri("/word/" + rel.TargetUri.OriginalString.Replace("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 141.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The length of the statement  "                    //  and after line "templatePackage.Close();" in finally' field "settingsPart" becomes not available and method "Save" throw an exception... " is 140.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The length of the statement  "                PackagePart headerPart = package.CreatePart(new Uri(header_uri' UriKind.Relative)' string.Format("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference)); " is 183.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The length of the statement  "                PackageRelationship headerRelationship = mainPart.CreateRelationship(headerPart.Uri' TargetMode.Internal' string.Format("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference)); " is 207.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The length of the statement  "                       <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml""> " is 601.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,DeleteHeadersOrFooters,The length of the statement  "            var header_relationships = mainPart.GetRelationshipsByType(string.Format("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference)); " is 160.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,DeleteHeadersOrFooters,The length of the statement  "                        where (e.Name.LocalName == string.Format("{0}Reference"' reference)) && (e.Attribute(r + "id").Value == header_relationship.Id) " is 127.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "            List<PackagePart> imageParts = mainPart.GetRelationshipsByType("http://schemas.openxmlformats.org/officeDocument/2006/relationships/image").Select(ir => package.GetParts().Where(p => p.Uri.ToString().EndsWith(ir.TargetUri.ToString())).First()).ToList(); " is 253.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "            foreach (PackagePart relsPart in package.GetParts().Where(part => part.Uri.ToString().Contains("/word/")).Where(part => part.ContentType.Equals("application/vnd.openxmlformats-package.relationships+xml"))) " is 205.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "                    imageRel.Attribute(XName.Get("Type")).Value.Equals("http://schemas.openxmlformats.org/officeDocument/2006/relationships/image") " is 127.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "                        string imagePartUri = Path.Combine(Path.GetDirectoryName(relsPart.Uri.ToString())' imageRelationship.Attribute(XName.Get("Target")).Value); " is 139.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "                        string id = mainPart.GetRelationshipsByType("http://schemas.openxmlformats.org/officeDocument/2006/relationships/image") " is 120.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "            PackageRelationship rel = mainPart.CreateRelationship(img.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image"); " is 161.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,UpdateCustomPropertyValue,The length of the statement  "            // A list of documents' which will contain' The Main Document and if they exist: header1' header2' header3' footer1' footer2' footer3. " is 134.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertChart,The length of the statement  "            PackagePart chartPackagePart = package.CreatePart(new Uri(chartPartUriPath' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.drawingml.chart+xml"); " is 164.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertChart,The length of the statement  "            PackageRelationship rel = mainPart.CreateRelationship(chartPackagePart.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart"' relID); " is 181.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertChart,The length of the statement  "                        new XElement(XName.Get("extent"' DocX.wp.NamespaceName)' new XAttribute("cx"' "5486400")' new XAttribute("cy"' "3200400"))' " is 123.
Long Statement,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertChart,The length of the statement  "                        new XElement(XName.Get("effectExtent"' DocX.wp.NamespaceName)' new XAttribute("l"' "0")' new XAttribute("t"' "0")' new XAttribute("r"' "19050")' new XAttribute("b"' "19050"))' " is 175.
Complex Conditional,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstRunEffectedByEdit,The conditional expression  "index < 0 || ((type == EditType.ins && index > len) || (type == EditType.del && index >= len))"  is complex.
Complex Conditional,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstRunEffectedByEditRecursive,The conditional expression  "count > 0 && ((type == EditType.del && count > index) || (type == EditType.ins && count >= index))"  is complex.
Complex Conditional,Novacode,Run,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstTextEffectedByEditRecursive,The conditional expression  "count > 0 && ((type == EditType.del && count > index) || (type == EditType.ins && count >= index))"  is complex.
Virtual Method Call from Constructor,Novacode,Chart,C:\repos\Word-DocX_DocX\DocX\Charts\Chart.cs,Chart,The constructor "Chart" calls a virtual method "CreateChartXml".
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: string borderstyle = border.Tcbs.ToString().Substring(5);
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Table,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: string borderstyle = border.Tcbs.ToString().Substring(5);
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size)              {                  case BorderSize.one: size = 2; break;                  case BorderSize.two: size = 4; break;                  case BorderSize.three: size = 6; break;                  case BorderSize.four: size = 8; break;                  case BorderSize.five: size = 12; break;                  case BorderSize.six: size = 18; break;                  case BorderSize.seven: size = 24; break;                  case BorderSize.eight: size = 36; break;                  case BorderSize.nine: size = 48; break;                  default: size = 2; break;              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Cell,C:\repos\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null)              {                  // uses default border style              }              else              {                  // If sz is not an int' something is wrong with this attributes value' so remove it                  int numerical_size;                  if (!int.TryParse(sz.Value' out numerical_size))                      sz.Remove();                  else                  {                      switch (numerical_size)                      {                          case 2: b.Size = BorderSize.one; break;                          case 4: b.Size = BorderSize.two; break;                          case 6: b.Size = BorderSize.three; break;                          case 8: b.Size = BorderSize.four; break;                          case 12: b.Size = BorderSize.five; break;                          case 18: b.Size = BorderSize.six; break;                          case 24: b.Size = BorderSize.seven; break;                          case 36: b.Size = BorderSize.eight; break;                          case 48: b.Size = BorderSize.nine; break;                          default: b.Size = BorderSize.one; break;                      }                  }              }
Magic Number,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: foreach (XElement option in rPr.Elements())              {                  switch (option.Name.LocalName)                  {                      case "lang": formatting.Language = new CultureInfo(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("bidi"' DocX.w.NamespaceName))); break;                      case "spacing": formatting.Spacing = Double.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 20.0; break;                      case "position": formatting.Position = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 2; break;                      case "kern": formatting.Position = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 2; break;                      case "w": formatting.PercentageScale = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))); break;                      case "rFonts": formatting.FontFamily = new FontFamily(option.GetAttribute(XName.Get("cs"' DocX.w.NamespaceName))); break;                      case "vanish": formatting.hidden = true; break;                      case "b": formatting.Bold = true; break;                      case "i": formatting.Italic = true; break;                      case "u": formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName)));                                break;                      default: break;                  }              }
Magic Number,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: foreach (XElement option in rPr.Elements())              {                  switch (option.Name.LocalName)                  {                      case "lang": formatting.Language = new CultureInfo(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("bidi"' DocX.w.NamespaceName))); break;                      case "spacing": formatting.Spacing = Double.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 20.0; break;                      case "position": formatting.Position = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 2; break;                      case "kern": formatting.Position = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 2; break;                      case "w": formatting.PercentageScale = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))); break;                      case "rFonts": formatting.FontFamily = new FontFamily(option.GetAttribute(XName.Get("cs"' DocX.w.NamespaceName))); break;                      case "vanish": formatting.hidden = true; break;                      case "b": formatting.Bold = true; break;                      case "i": formatting.Italic = true; break;                      case "u": formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName)));                                break;                      default: break;                  }              }
Magic Number,Novacode,Formatting,C:\repos\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: foreach (XElement option in rPr.Elements())              {                  switch (option.Name.LocalName)                  {                      case "lang": formatting.Language = new CultureInfo(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute(XName.Get("bidi"' DocX.w.NamespaceName))); break;                      case "spacing": formatting.Spacing = Double.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 20.0; break;                      case "position": formatting.Position = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 2; break;                      case "kern": formatting.Position = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))) / 2; break;                      case "w": formatting.PercentageScale = Int32.Parse(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName))); break;                      case "rFonts": formatting.FontFamily = new FontFamily(option.GetAttribute(XName.Get("cs"' DocX.w.NamespaceName))); break;                      case "vanish": formatting.hidden = true; break;                      case "b": formatting.Bold = true; break;                      case "i": formatting.Italic = true; break;                      case "u": formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle(option.GetAttribute(XName.Get("val"' DocX.w.NamespaceName)));                                break;                      default: break;                  }              }
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The following statement contains a magic number: using (System.Drawing.Image img = System.Drawing.Image.FromStream(part.GetStream()))              {                  cx = img.Width * 9526;                  cy = img.Height * 9526;              }
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The following statement contains a magic number: using (System.Drawing.Image img = System.Drawing.Image.FromStream(part.GetStream()))              {                  cx = img.Width * 9526;                  cy = img.Height * 9526;              }
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The following statement contains a magic number: if (fontSize - (int)fontSize == 0)              {                  if (!(fontSize > 0 && fontSize < 1639))                      throw new ArgumentException("Size"' "Value must be in the range 0 - 1638");              }                else                  throw new ArgumentException("Size"' "Value must be either a whole or half number' examples: 32' 32.5");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The following statement contains a magic number: ApplyTextFormattingProperty(XName.Get("sz"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' fontSize * 2));
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The following statement contains a magic number: ApplyTextFormattingProperty(XName.Get("szCs"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' fontSize * 2));
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: spacing *= 20;
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: if (spacing - (int)spacing == 0)              {                  if (!(spacing > -1585 && spacing < 1585))                      throw new ArgumentException("Spacing"' "Value must be in the range: -1584 - 1584");              }                else                  throw new ArgumentException("Spacing"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: if (spacing - (int)spacing == 0)              {                  if (!(spacing > -1585 && spacing < 1585))                      throw new ArgumentException("Spacing"' "Value must be in the range: -1584 - 1584");              }                else                  throw new ArgumentException("Spacing"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: spacingBefore *= 20;
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: if (spacingBefore - (int)spacingBefore == 0)              {                  if (!(spacingBefore > -1585 && spacingBefore < 1585))                      throw new ArgumentException("SpacingBefore"' "Value must be in the range: -1584 - 1584");              }                else                  throw new ArgumentException("SpacingBefore"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: if (spacingBefore - (int)spacingBefore == 0)              {                  if (!(spacingBefore > -1585 && spacingBefore < 1585))                      throw new ArgumentException("SpacingBefore"' "Value must be in the range: -1584 - 1584");              }                else                  throw new ArgumentException("SpacingBefore"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: spacingAfter *= 20;
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: if (spacingAfter - (int)spacingAfter == 0)              {                  if (!(spacingAfter > -1585 && spacingAfter < 1585))                      throw new ArgumentException("SpacingAfter"' "Value must be in the range: -1584 - 1584");              }                else                  throw new ArgumentException("SpacingAfter"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: if (spacingAfter - (int)spacingAfter == 0)              {                  if (!(spacingAfter > -1585 && spacingAfter < 1585))                      throw new ArgumentException("SpacingAfter"' "Value must be in the range: -1584 - 1584");              }                else                  throw new ArgumentException("SpacingAfter"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] { 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48' 72 }.Contains(kerning))                  throw new ArgumentOutOfRangeException("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: ApplyTextFormattingProperty(XName.Get("kern"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' kerning * 2));
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Position,The following statement contains a magic number: if (!(position > -1585 && position < 1585))                  throw new ArgumentOutOfRangeException("Position"' "Value must be in the range -1585 - 1585");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Position,The following statement contains a magic number: if (!(position > -1585 && position < 1585))                  throw new ArgumentOutOfRangeException("Position"' "Value must be in the range -1585 - 1585");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,Position,The following statement contains a magic number: ApplyTextFormattingProperty(XName.Get("position"' DocX.w.NamespaceName)' string.Empty' new XAttribute(XName.Get("val"' DocX.w.NamespaceName)' position * 2));
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,Paragraph,C:\repos\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] { 200' 150' 100' 90' 80' 66' 50' 33 }).Contains(percentageScale))                  throw new ArgumentOutOfRangeException("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");
Magic Number,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,setMarginAttribute,The following statement contains a magic number: if (sectPr != null)              {                  XElement pgMar = sectPr.Element(XName.Get("pgMar"' DocX.w.NamespaceName));                  if (pgMar != null)                  {                      XAttribute top = pgMar.Attribute(xName);                      if (top != null)                      {                          top.SetValue(value * 15);                      }                  }              }
Magic Number,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,merge_images,The following statement contains a magic number: if (!found)              {                  String new_uri = remote_pp.Uri.OriginalString;                  new_uri = new_uri.Remove(new_uri.LastIndexOf("/"));                  new_uri = new_uri.Replace("word/"' "");                  new_uri += "/" + Guid.NewGuid().ToString() + contentType.Replace("image/"' ".");                  if (!new_uri.StartsWith("/"))                      new_uri = "/" + new_uri;                    PackagePart new_pp = package.CreatePart(new Uri(new_uri' UriKind.Relative)' remote_pp.ContentType);                    using (Stream s_read = remote_pp.GetStream())                  {                      using (Stream s_write = new_pp.GetStream(FileMode.Create))                      {                          byte[] buffer = new byte[32768];                          int read;                          while ((read = s_read.Read(buffer' 0' buffer.Length)) > 0)                          {                              s_write.Write(buffer' 0' read);                          }                      }                  }                    PackageRelationship pr = mainPart.CreateRelationship(new Uri(new_uri' UriKind.Relative)' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image");                    String new_Id = pr.Id;                    // Replace all instances of remote_Id in the local document with local_Id                  var elems = remote_mainDoc.Descendants(XName.Get("blip"' DocX.a.NamespaceName));                  foreach (var elem in elems)                  {                      XAttribute embed = elem.Attribute(XName.Get("embed"' DocX.r.NamespaceName));                      if (embed != null && embed.Value == remote_Id)                      {                          embed.SetValue(new_Id);                      }                  }              }
Magic Number,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,clonePackagePart,The following statement contains a magic number: using (Stream s_read = pp.GetStream())              {                  using (Stream s_write = new_pp.GetStream(FileMode.Create))                  {                      byte[] buffer = new byte[32768];                      int read;                      while ((read = s_read.Read(buffer' 0' buffer.Length)) > 0)                      {                          s_write.Write(buffer' 0' read);                      }                  }              }
Magic Number,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: for (int i = 1; i < 4; i++)              {                  string header_uri = string.Format("/word/{0}{1}.xml"' reference' i);                    PackagePart headerPart = package.CreatePart(new Uri(header_uri' UriKind.Relative)' string.Format("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference));                  PackageRelationship headerRelationship = mainPart.CreateRelationship(headerPart.Uri' TargetMode.Internal' string.Format("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference));                    XDocument header;                    // Load the document part into a XDocument object                  using (TextReader tr = new StreamReader(headerPart.GetStream(FileMode.Create' FileAccess.ReadWrite)))                  {                      header = XDocument.Parse                      (string.Format(@"<?xml version=""1.0"" encoding=""utf-16"" standalone=""yes""?>                         <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"">                           <w:p w:rsidR=""009D472B"" w:rsidRDefault=""009D472B"">                             <w:pPr>                               <w:pStyle w:val=""{1}"" />                             </w:pPr>                           </w:p>                         </w:{0}>"' element' reference)                      );                  }                    // Save the main document                  using (TextWriter tw = new StreamWriter(headerPart.GetStream(FileMode.Create' FileAccess.Write)))                      header.Save(tw' SaveOptions.None);                    string type;                  switch (i)                  {                      case 1: type = "default"; break;                      case 2: type = "even"; break;                      case 3: type = "first"; break;                      default: throw new ArgumentOutOfRangeException();                  }                    sectPr.Add                  (                      new XElement                      (                          w + string.Format("{0}Reference"' reference)'                          new XAttribute(w + "type"' type)'                          new XAttribute(r + "id"' headerRelationship.Id)                      )                  );              }
Magic Number,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: for (int i = 1; i < 4; i++)              {                  string header_uri = string.Format("/word/{0}{1}.xml"' reference' i);                    PackagePart headerPart = package.CreatePart(new Uri(header_uri' UriKind.Relative)' string.Format("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference));                  PackageRelationship headerRelationship = mainPart.CreateRelationship(headerPart.Uri' TargetMode.Internal' string.Format("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference));                    XDocument header;                    // Load the document part into a XDocument object                  using (TextReader tr = new StreamReader(headerPart.GetStream(FileMode.Create' FileAccess.ReadWrite)))                  {                      header = XDocument.Parse                      (string.Format(@"<?xml version=""1.0"" encoding=""utf-16"" standalone=""yes""?>                         <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"">                           <w:p w:rsidR=""009D472B"" w:rsidRDefault=""009D472B"">                             <w:pPr>                               <w:pStyle w:val=""{1}"" />                             </w:pPr>                           </w:p>                         </w:{0}>"' element' reference)                      );                  }                    // Save the main document                  using (TextWriter tw = new StreamWriter(headerPart.GetStream(FileMode.Create' FileAccess.Write)))                      header.Save(tw' SaveOptions.None);                    string type;                  switch (i)                  {                      case 1: type = "default"; break;                      case 2: type = "even"; break;                      case 3: type = "first"; break;                      default: throw new ArgumentOutOfRangeException();                  }                    sectPr.Add                  (                      new XElement                      (                          w + string.Format("{0}Reference"' reference)'                          new XAttribute(w + "type"' type)'                          new XAttribute(r + "id"' headerRelationship.Id)                      )                  );              }
Magic Number,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: for (int i = 1; i < 4; i++)              {                  string header_uri = string.Format("/word/{0}{1}.xml"' reference' i);                    PackagePart headerPart = package.CreatePart(new Uri(header_uri' UriKind.Relative)' string.Format("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference));                  PackageRelationship headerRelationship = mainPart.CreateRelationship(headerPart.Uri' TargetMode.Internal' string.Format("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference));                    XDocument header;                    // Load the document part into a XDocument object                  using (TextReader tr = new StreamReader(headerPart.GetStream(FileMode.Create' FileAccess.ReadWrite)))                  {                      header = XDocument.Parse                      (string.Format(@"<?xml version=""1.0"" encoding=""utf-16"" standalone=""yes""?>                         <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"">                           <w:p w:rsidR=""009D472B"" w:rsidRDefault=""009D472B"">                             <w:pPr>                               <w:pStyle w:val=""{1}"" />                             </w:pPr>                           </w:p>                         </w:{0}>"' element' reference)                      );                  }                    // Save the main document                  using (TextWriter tw = new StreamWriter(headerPart.GetStream(FileMode.Create' FileAccess.Write)))                      header.Save(tw' SaveOptions.None);                    string type;                  switch (i)                  {                      case 1: type = "default"; break;                      case 2: type = "even"; break;                      case 3: type = "first"; break;                      default: throw new ArgumentOutOfRangeException();                  }                    sectPr.Add                  (                      new XElement                      (                          w + string.Format("{0}Reference"' reference)'                          new XAttribute(w + "type"' type)'                          new XAttribute(r + "id"' headerRelationship.Id)                      )                  );              }
Magic Number,Novacode,Extensions,C:\repos\Word-DocX_DocX\DocX\_Extensions.cs,ToHex,The following statement contains a magic number: if (redHex.Length < 2)                  redHex = "0" + redHex;
Magic Number,Novacode,Extensions,C:\repos\Word-DocX_DocX\DocX\_Extensions.cs,ToHex,The following statement contains a magic number: if (blueHex.Length < 2)                  blueHex = "0" + blueHex;
Magic Number,Novacode,Extensions,C:\repos\Word-DocX_DocX\DocX\_Extensions.cs,ToHex,The following statement contains a magic number: if (greenHex.Length < 2)                  greenHex = "0" + greenHex;
Missing Default,Novacode,Container,C:\repos\Word-DocX_DocX\DocX\Container.cs,GetParent,The following switch statement is missing a default case: switch (containerType.Name)              {                    case "Body":                      newParagraph.ParentContainer = ContainerType.Body;                      break;                  case "Table":                      newParagraph.ParentContainer = ContainerType.Table;                      break;                  case "TOC":                      newParagraph.ParentContainer = ContainerType.TOC;                      break;                  case "Section":                      newParagraph.ParentContainer = ContainerType.Section;                      break;                  case "Cell":                      newParagraph.ParentContainer = ContainerType.Cell;                      break;                  case "Header":                      newParagraph.ParentContainer = ContainerType.Header;                      break;                  case "Footer":                      newParagraph.ParentContainer = ContainerType.Footer;                      break;                  case "Paragraph":                      newParagraph.ParentContainer = ContainerType.Paragraph;                      break;              }
Missing Default,Novacode,DocX,C:\repos\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The following switch statement is missing a default case: switch (remote_pp.ContentType)                      {                          case "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":                              endnotesPart = packagePart;                              endnotes = remote_endnotes;                              break;                            case "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":                              footnotesPart = packagePart;                              footnotes = remote_footnotes;                              break;                            case "application/vnd.openxmlformats-officedocument.custom-properties+xml":                              break;                            case "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":                              stylesPart = packagePart;                              using (TextReader tr = new StreamReader(stylesPart.GetStream()))                                  styles = XDocument.Load(tr);                              break;                            case "application/vnd.ms-word.stylesWithEffects+xml":                              stylesWithEffectsPart = packagePart;                              using (TextReader tr = new StreamReader(stylesWithEffectsPart.GetStream()))                                  stylesWithEffects = XDocument.Load(tr);                              break;                            case "application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml":                              fontTablePart = packagePart;                              using (TextReader tr = new StreamReader(fontTablePart.GetStream()))                                  fontTable = XDocument.Load(tr);                              break;                            case "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":                              numberingPart = packagePart;                              using (TextReader tr = new StreamReader(numberingPart.GetStream()))                                  numbering = XDocument.Load(tr);                              break;                        }
