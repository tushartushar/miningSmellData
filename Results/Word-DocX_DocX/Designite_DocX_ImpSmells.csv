Implementation smell,Namespace,Class,File,Method,Description
Long Method,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The method has 74 lines of code.
Long Method,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The method has 117 lines of code.
Long Method,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The method has 85 lines of code.
Long Method,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The method has 127 lines of code.
Long Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertText,The method has 70 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The method has 147 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The method has 60 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_styles,The method has 84 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The method has 94 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The method has 79 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,The method has 63 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,Save,The method has 123 lines of code.
Long Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCustomPropertyValue,The method has 78 lines of code.
Complex Method,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,ReplaceText,Cyclomatic complexity of the method is 13
Complex Method,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,InsertParagraph,Cyclomatic complexity of the method is 12
Complex Method,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,GetParentFromXmlName,Cyclomatic complexity of the method is 18
Complex Method,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,GetParent,Cyclomatic complexity of the method is 24
Complex Method,Novacode,CustomProperty,D:\newReposJune17\Word-DocX_DocX\DocX\CustomProperty.cs,CustomProperty,Cyclomatic complexity of the method is 12
Complex Method,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,GetSize,Cyclomatic complexity of the method is 10
Complex Method,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,GetFormattedTextRecursive,Cyclomatic complexity of the method is 8
Complex Method,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,ToText,Cyclomatic complexity of the method is 13
Complex Method,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,FormatInput,Cyclomatic complexity of the method is 16
Complex Method,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,GetUnderlineStyle,Cyclomatic complexity of the method is 18
Complex Method,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,CreateNewNumberingNumId,Cyclomatic complexity of the method is 10
Complex Method,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,MergeCellsInColumn,Cyclomatic complexity of the method is 8
Complex Method,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,Cyclomatic complexity of the method is 33
Complex Method,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,Cyclomatic complexity of the method is 41
Complex Method,Novacode,Row,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,MergeCells,Cyclomatic complexity of the method is 11
Complex Method,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,Cyclomatic complexity of the method is 42
Complex Method,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,Cyclomatic complexity of the method is 49
Complex Method,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,Cyclomatic complexity of the method is 33
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,RemoveHyperlinkRecursive,Cyclomatic complexity of the method is 7
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Remove,Cyclomatic complexity of the method is 7
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstRunEffectedByEditRecursive,Cyclomatic complexity of the method is 10
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetElementTextLength,Cyclomatic complexity of the method is 15
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertText,Cyclomatic complexity of the method is 13
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,ApplyTextFormattingProperty,Cyclomatic complexity of the method is 13
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,UnderlineStyle,Cyclomatic complexity of the method is 12
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Misc,Cyclomatic complexity of the method is 8
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,StrikeThrough,Cyclomatic complexity of the method is 7
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,RemoveText,Cyclomatic complexity of the method is 13
Complex Method,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,ReplaceText,Cyclomatic complexity of the method is 7
Complex Method,Novacode,Run,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Run,Cyclomatic complexity of the method is 12
Complex Method,Novacode,Text,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Text,Cyclomatic complexity of the method is 10
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,GetHeaderOrFooterByType,Cyclomatic complexity of the method is 7
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,GetCollectiveText,Cyclomatic complexity of the method is 17
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,Cyclomatic complexity of the method is 64
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,Cyclomatic complexity of the method is 15
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_customs,Cyclomatic complexity of the method is 8
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_numbering,Cyclomatic complexity of the method is 16
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_styles,Cyclomatic complexity of the method is 22
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,Cyclomatic complexity of the method is 27
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,Cyclomatic complexity of the method is 29
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,Cyclomatic complexity of the method is 24
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,Cyclomatic complexity of the method is 16
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,DeleteHeadersOrFooters,Cyclomatic complexity of the method is 7
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,Cyclomatic complexity of the method is 16
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,Save,Cyclomatic complexity of the method is 37
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddCoreProperty,Cyclomatic complexity of the method is 7
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCorePropertyValue,Cyclomatic complexity of the method is 11
Complex Method,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCustomPropertyValue,Cyclomatic complexity of the method is 18
Long Parameter List,Novacode,Border,D:\newReposJune17\Word-DocX_DocX\DocX\Border.cs,Border,The method has 4 parameters.
Long Parameter List,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,ReplaceText,The method has 7 parameters.
Long Parameter List,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,InsertParagraph,The method has 4 parameters.
Long Parameter List,Novacode,Footer,D:\newReposJune17\Word-DocX_DocX\DocX\Footer.cs,InsertParagraph,The method has 4 parameters.
Long Parameter List,Novacode,Header,D:\newReposJune17\Word-DocX_DocX\DocX\Header.cs,InsertParagraph,The method has 4 parameters.
Long Parameter List,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateItemInList,The method has 6 parameters.
Long Parameter List,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Paragraph,The method has 4 parameters.
Long Parameter List,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,RemoveHyperlinkRecursive,The method has 4 parameters.
Long Parameter List,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The method has 4 parameters.
Long Parameter List,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstRunEffectedByEditRecursive,The method has 5 parameters.
Long Parameter List,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertText,The method has 4 parameters.
Long Parameter List,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,ReplaceText,The method has 7 parameters.
Long Parameter List,Novacode,Run,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstTextEffectedByEditRecursive,The method has 5 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The method has 4 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_endnotes,The method has 5 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_footnotes,The method has 5 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_numbering,The method has 4 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_fonts,The method has 4 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_styles,The method has 6 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddList,The method has 5 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddListItem,The method has 6 parameters.
Long Parameter List,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertParagraph,The method has 4 parameters.
Long Statement,Novacode,Chart,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,AddSeries,The length of the statement  "		throw new InvalidOperationException ("Maximum series for this chart is" + MaxSeriesCount.ToString () + "and have exceeded!"); " is 125.
Long Statement,Novacode,Series,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "	XElement ptCount = new XElement (XName.Get ("ptCount"' DocX.c.NamespaceName)' new XAttribute (XName.Get ("val")' list.Count)); " is 126.
Long Statement,Novacode,Series,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "		pt = new XElement (XName.Get ("pt"' DocX.c.NamespaceName)' new XAttribute (XName.Get ("idx")' index)' new XElement (XName.Get ("v"' DocX.c.NamespaceName)' item.GetType ().GetProperty (categoryPropertyName).GetValue (item' null))); " is 230.
Long Statement,Novacode,Series,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "		pt = new XElement (XName.Get ("pt"' DocX.c.NamespaceName)' new XAttribute (XName.Get ("idx")' index)' new XElement (XName.Get ("v"' DocX.c.NamespaceName)' item.GetType ().GetProperty (valuePropertyName).GetValue (item' null))); " is 227.
Long Statement,Novacode,Series,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "	XElement ptCount = new XElement (XName.Get ("ptCount"' DocX.c.NamespaceName)' new XAttribute (XName.Get ("val")' categories.Count)); " is 132.
Long Statement,Novacode,Series,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "		pt = new XElement (XName.Get ("pt"' DocX.c.NamespaceName)' new XAttribute (XName.Get ("idx")' index)' new XElement (XName.Get ("v"' DocX.c.NamespaceName)' categories [index].ToString ())); " is 188.
Long Statement,Novacode,Series,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,Bind,The length of the statement  "		pt = new XElement (XName.Get ("pt"' DocX.c.NamespaceName)' new XAttribute (XName.Get ("idx")' index)' new XElement (XName.Get ("v"' DocX.c.NamespaceName)' values [index].ToString ())); " is 184.
Long Statement,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,GetListItemType,The length of the statement  "	XElement abstractNumNode = abstractNumNodes.FirstOrDefault (node => node.Attribute (DocX.w + "abstractNumId").Value.Equals (abstractNumNodeValue)); " is 147.
Long Statement,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,InsertParagraph,The length of the statement  "			PackagePart style_package = Document.package.CreatePart (style_package_uri' "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml"' CompressionOption.Maximum); " is 180.
Long Statement,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,InsertParagraph,The length of the statement  "				style_document = new XDocument (new XDeclaration ("1.0"' "UTF-8"' "yes")' new XElement (XName.Get ("styles"' DocX.w.NamespaceName))); " is 133.
Long Statement,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,InsertSection,The length of the statement  "	var newParagraphSection = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("pPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("sectPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("type"' DocX.w.NamespaceName)' new XAttribute (DocX.w + "val"' "continuous"))))); " is 298.
Long Statement,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,InsertSectionPageBreak,The length of the statement  "	var newParagraphSection = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("pPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("sectPr"' DocX.w.NamespaceName)))); " is 194.
Long Statement,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,InsertParagraph,The length of the statement  "	XElement newParagraph = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("pPr"' DocX.w.NamespaceName))' HelperFunctions.FormatInput (text' formatting.Xml)); " is 185.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateRelsPackagePart,The length of the statement  "	PackagePart pp = Document.package.CreatePart (uri' "application/vnd.openxmlformats-package.relationships+xml"' CompressionOption.Maximum); " is 138.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateRelsPackagePart,The length of the statement  "		XDocument d = new XDocument (new XDeclaration ("1.0"' "UTF-8"' "yes")' new XElement (XName.Get ("Relationships"' DocX.rel.NamespaceName))); " is 139.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "		settingsPart = package.CreatePart (settingsUri' "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml"' CompressionOption.Maximum); " is 154.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "		PackagePart mainDocumentPart = package.GetParts ().Where (p => p.ContentType.Equals ("application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"' StringComparison.CurrentCultureIgnoreCase)).Single (); " is 223.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "		mainDocumentPart.CreateRelationship (settingsUri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings"); " is 151.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "                <w:settings xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:r='http://schemas.openxmlformats.org/officeDocument/2006/relationships' xmlns:m='http://schemas.openxmlformats.org/officeDocument/2006/math' xmlns:v='urn:schemas-microsoft-com:vml' xmlns:w10='urn:schemas-microsoft-com:office:word' xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' xmlns:sl='http://schemas.openxmlformats.org/schemaLibrary/2006/main'> " is 439.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateOrGetSettingsPart,The length of the statement  "                  <w:clrSchemeMapping w:bg1='light1' w:t1='dark1' w:bg2='light2' w:t2='dark2' w:accent1='accent1' w:accent2='accent2' w:accent3='accent3' w:accent4='accent4' w:accent5='accent5' w:accent6='accent6' w:hyperlink='hyperlink' w:followedHyperlink='followedHyperlink' /> " is 262.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateCustomPropertiesPart,The length of the statement  "	PackagePart customPropertiesPart = document.package.CreatePart (new Uri ("/docProps/custom.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.custom-properties+xml"' CompressionOption.Maximum); " is 214.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateCustomPropertiesPart,The length of the statement  "	XDocument customPropDoc = new XDocument (new XDeclaration ("1.0"' "UTF-8"' "yes")' new XElement (XName.Get ("Properties"' DocX.customPropertiesSchema.NamespaceName)' new XAttribute (XNamespace.Xmlns + "vt"' DocX.customVTypesSchema))); " is 234.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateCustomPropertiesPart,The length of the statement  "	document.package.CreateRelationship (customPropertiesPart.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties"); " is 173.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultNumberingXml,The length of the statement  "	PackagePart wordNumbering = package.CreatePart (new Uri ("/word/numbering.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml"' CompressionOption.Maximum); " is 206.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultNumberingXml,The length of the statement  "	PackagePart mainDocumentPart = package.GetParts ().Single (p => p.ContentType.Equals ("application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"' StringComparison.CurrentCultureIgnoreCase)); " is 214.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultNumberingXml,The length of the statement  "	mainDocumentPart.CreateRelationship (wordNumbering.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering"); " is 158.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultStylesXml,The length of the statement  "	PackagePart word_styles = package.CreatePart (new Uri ("/word/styles.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml"' CompressionOption.Maximum); " is 198.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultStylesXml,The length of the statement  "	XElement lang = stylesDoc.Root.Element (XName.Get ("docDefaults"' DocX.w.NamespaceName)).Element (XName.Get ("rPrDefault"' DocX.w.NamespaceName)).Element (XName.Get ("rPr"' DocX.w.NamespaceName)).Element (XName.Get ("lang"' DocX.w.NamespaceName)); " is 247.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultStylesXml,The length of the statement  "	PackagePart mainDocumentPart = package.GetParts ().Where (p => p.ContentType.Equals ("application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"' StringComparison.CurrentCultureIgnoreCase)).Single (); " is 223.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,AddDefaultStylesXml,The length of the statement  "	mainDocumentPart.CreateRelationship (word_styles.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles"); " is 153.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateEdit,The length of the statement  "	return (new XElement (DocX.w + t.ToString ()' new XAttribute (DocX.w + "id"' 0)' new XAttribute (DocX.w + "author"' WindowsIdentity.GetCurrent ().Name)' new XAttribute (DocX.w + "date"' edit_time)' content)); " is 208.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateTable,The length of the statement  "	XElement newTable = new XElement (XName.Get ("tbl"' DocX.w.NamespaceName)' new XElement (XName.Get ("tblPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("tblStyle"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' "TableGrid"))' new XElement (XName.Get ("tblW"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("w"' DocX.w.NamespaceName)' "5000")' new XAttribute (XName.Get ("type"' DocX.w.NamespaceName)' "auto"))' new XElement (XName.Get ("tblLook"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' "04A0")))); " is 579.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateTable,The length of the statement  "		tableGrid.Add (new XElement (XName.Get ("gridCol"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("w"' DocX.w.NamespaceName)' "2310"))); " is 139.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateTableCell,The length of the statement  "	return new XElement (XName.Get ("tc"' DocX.w.NamespaceName)' new XElement (XName.Get ("tcPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("tcW"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("w"' DocX.w.NamespaceName)' "2310")' new XAttribute (XName.Get ("type"' DocX.w.NamespaceName)' "dxa")))' new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("pPr"' DocX.w.NamespaceName)))); " is 414.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateItemInList,The length of the statement  "		var newParagraphSection = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("pPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("numPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("ilvl"' DocX.w.NamespaceName)' new XAttribute (DocX.w + "val"' level))' new XElement (XName.Get ("numId"' DocX.w.NamespaceName)' new XAttribute (DocX.w + "val"' list.NumId))))' new XElement (XName.Get ("r"' DocX.w.NamespaceName)' new XElement (XName.Get ("t"' DocX.w.NamespaceName)' listText))); " is 511.
Long Statement,Novacode,HelperFunctions,D:\newReposJune17\Word-DocX_DocX\DocX\HelperFunctions.cs,CreateItemInList,The length of the statement  "			list.AddItemWithStartValue (new Paragraph (list.Document' newParagraphSection' 0' ContainerType.Paragraph)' (int)startNumber); " is 126.
Long Statement,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,AddItemWithStartValue,The length of the statement  "		throw new InvalidOperationException ("Cannot add a paragraph with a start value if another element already exists in this list with that level."); " is 146.
Long Statement,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,UpdateNumberingForLevelStartNumber,The length of the statement  "	var level = abstractNum.Descendants ().First (el => el.Name.LocalName == "lvl" && el.GetAttribute (DocX.w + "ilvl") == iLevel.ToString ()); " is 139.
Long Statement,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,ContainsLevel,The length of the statement  "	return Items.Any (i => i.ParagraphNumberProperties.Descendants ().First (el => el.Name.LocalName == "ilvl").Value == ilvl.ToString ()); " is 135.
Long Statement,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,CreateNewNumberingNumId,The length of the statement  "	var abstractNumXml = new XElement (XName.Get ("num"' DocX.w.NamespaceName)' new XAttribute (DocX.w + "numId"' numId)' new XElement (XName.Get ("abstractNumId"' DocX.w.NamespaceName)' new XAttribute (DocX.w + "val"' abstractNumId))); " is 232.
Long Statement,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,CreateNewNumberingNumId,The length of the statement  "	var abstractNumNode = Document.numbering.Root.Descendants ().LastOrDefault (xElement => xElement.Name.LocalName == "abstractNum"); " is 130.
Long Statement,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,GetAbstractNum,The length of the statement  "	var num = Document.numbering.Descendants ().First (d => d.Name.LocalName == "num" && d.GetAttribute (DocX.w + "numId").Equals (numId.ToString ())); " is 147.
Long Statement,Novacode,List,D:\newReposJune17\Word-DocX_DocX\DocX\List.cs,GetAbstractNum,The length of the statement  "	return Document.numbering.Descendants ().First (d => d.Name.LocalName == "abstractNum" && d.GetAttribute ("abstractNumId").Equals (abstractNumId.Value)); " is 153.
Long Statement,Novacode,InsertBeforeOrAfter,D:\newReposJune17\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertPageBreakBeforeSelf,The length of the statement  "	XElement p = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("r"' DocX.w.NamespaceName)' new XElement (XName.Get ("br"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("type"' DocX.w.NamespaceName)' "page")))); " is 242.
Long Statement,Novacode,InsertBeforeOrAfter,D:\newReposJune17\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertPageBreakAfterSelf,The length of the statement  "	XElement p = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("r"' DocX.w.NamespaceName)' new XElement (XName.Get ("br"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("type"' DocX.w.NamespaceName)' "page")))); " is 242.
Long Statement,Novacode,InsertBeforeOrAfter,D:\newReposJune17\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertParagraphAfterSelf,The length of the statement  "		//IMPORTANT: I think we have return new paragraph in any case' but I dont know what to put as startIndex parameter into Paragraph constructor " is 141.
Long Statement,Novacode,InsertBeforeOrAfter,D:\newReposJune17\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertParagraphBeforeSelf,The length of the statement  "	XElement newParagraph = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("pPr"' DocX.w.NamespaceName))' HelperFunctions.FormatInput (text' formatting.Xml)); " is 185.
Long Statement,Novacode,InsertBeforeOrAfter,D:\newReposJune17\Word-DocX_DocX\DocX\_BaseClasses.cs,InsertParagraphAfterSelf,The length of the statement  "	XElement newParagraph = new XElement (XName.Get ("p"' DocX.w.NamespaceName)' new XElement (XName.Get ("pPr"' DocX.w.NamespaceName))' HelperFunctions.FormatInput (text' formatting.Xml)); " is 185.
Long Statement,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,InsertRow,The length of the statement  "	List<XElement> content = row.Xml.Elements (XName.Get ("tc"' DocX.w.NamespaceName)).Select (element => HelperFunctions.CloneElement (element)).ToList (); " is 152.
Long Statement,Novacode,Row,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,MergeCells,The length of the statement  "	start_gridSpan.SetAttributeValue (XName.Get ("val"' DocX.w.NamespaceName)' (gridSpanSum + (endIndex - startIndex + 1)).ToString ()); " is 132.
Long Statement,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,InsertTable,The length of the statement  "	//Dmitchern' It is necessary to put paragraph in the end of the cell' without it MS-Word will say that the document is corrupted " is 128.
Long Statement,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The length of the statement  "			formatting.Language = new CultureInfo (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("bidi"' DocX.w.NamespaceName))); " is 250.
Long Statement,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The length of the statement  "			formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))); " is 126.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The length of the statement  "                <wp:inline distT=""0"" distB=""0"" distL=""0"" distR=""0"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing""> " is 143.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CreateEdit,The length of the statement  "	return (new XElement (DocX.w + t.ToString ()' new XAttribute (DocX.w + "id"' 0)' new XAttribute (DocX.w + "author"' WindowsIdentity.GetCurrent ().Name)' new XAttribute (DocX.w + "date"' edit_time)' content)); " is 208.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertText,The length of the statement  "	// Would have like to write 'public void InsertText(string value' bool trackChanges = false' Formatting formatting = new Formatting()) " is 134.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CurentCulture,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("lang"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' CultureInfo.CurrentCulture.Name)); " is 176.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Culture,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("lang"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' culture.Name)); " is 157.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,AppendPicture,The length of the statement  "	select e.Attribute (XName.Get ("embed"' "http://schemas.openxmlformats.org/officeDocument/2006/relationships"))).Single (); " is 123.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,AppendPicture,The length of the statement  "	this.runs = Xml.Elements (XName.Get ("r"' DocX.w.NamespaceName)).Reverse ().Take (p.Xml.Elements (XName.Get ("r"' DocX.w.NamespaceName)).Count ()).ToList (); " is 157.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,AppendEquation,The length of the statement  "	XElement oMathPara = new XElement (XName.Get ("oMathPara"' DocX.m.NamespaceName)' new XElement (XName.Get ("oMath"' DocX.m.NamespaceName)' new XElement (XName.Get ("r"' DocX.w.NamespaceName)' new Formatting () { " is 211.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetOrGenerateRel,The length of the statement  "	var Id = (from r in mainPart.GetRelationshipsByType ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/image") " is 129.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetOrGenerateRel,The length of the statement  "		PackageRelationship pr = mainPart.CreateRelationship (p.img.pr.TargetUri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image"); " is 172.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetOrGenerateRel,The length of the statement  "	var Id = (from r in mainPart.GetRelationshipsByType ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink") " is 133.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetOrGenerateRel,The length of the statement  "		PackageRelationship pr = mainPart.CreateRelationship (h.Uri' TargetMode.External' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink"); " is 163.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertPicture,The length of the statement  "		select e.Attribute (XName.Get ("embed"' "http://schemas.openxmlformats.org/officeDocument/2006/relationships"))).Single (); " is 123.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Color,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("color"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' c.ToHex ())); " is 156.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,UnderlineStyle,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("u"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' value)); " is 147.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("sz"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' fontSize * 2)); " is 155.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("szCs"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' fontSize * 2)); " is 157.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Font,The length of the statement  "		// Added by Maurits Elbers to support non-standard characters. See http://docx.codeplex.com/Thread/View.aspx?ThreadId=70097&ANCHOR#Post453865 " is 141.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Font,The length of the statement  "	// Added by Maurits Elbers to support non-standard characters. See http://docx.codeplex.com/Thread/View.aspx?ThreadId=70097&ANCHOR#Post453865 " is 141.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Script,The length of the statement  "		ApplyTextFormattingProperty (XName.Get ("vertAlign"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' script.ToString ())); " is 168.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Highlight,The length of the statement  "		ApplyTextFormattingProperty (XName.Get ("highlight"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' highlight.ToString ())); " is 171.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The length of the statement  "		throw new ArgumentException ("Spacing"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9"); " is 130.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("spacing"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' spacing)); " is 155.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The length of the statement  "		throw new ArgumentException ("SpacingBefore"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9"); " is 136.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("before"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' spacingBefore)); " is 160.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The length of the statement  "		throw new ArgumentException ("SpacingAfter"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9"); " is 135.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("after"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' spacingAfter)); " is 158.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The length of the statement  "		throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72"); " is 152.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("kern"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' kerning * 2)); " is 156.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Position,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("position"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' position * 2)); " is 161.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The length of the statement  "		throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33"); " is 133.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The length of the statement  "	ApplyTextFormattingProperty (XName.Get ("w"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' percentageScale)); " is 157.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertDocProperty,The length of the statement  "	XElement e = new XElement (XName.Get ("fldSimple"' DocX.w.NamespaceName)' new XAttribute (XName.Get ("instr"' DocX.w.NamespaceName)' string.Format (@"DOCPROPERTY {0} \* MERGEFORMAT"' cp.Name))' new XElement (XName.Get ("r"' DocX.w.NamespaceName)' new XElement (XName.Get ("t"' DocX.w.NamespaceName)' f_xml' cp.Value))); " is 319.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,RemoveText,The length of the statement  "				Run.SplitRun (new Run (Document' splitRunBefore [1]' run.StartIndex + GetElementTextLength (splitRunBefore [0]))' min' EditType.del) [0] " is 136.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertPageNumber,The length of the statement  "	XElement content = XElement.Parse (@"<w:r w:rsidR='001D0226' xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main""> " is 134.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,AppendPageNumber,The length of the statement  "	XElement content = XElement.Parse (@"<w:r w:rsidR='001D0226' xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main""> " is 134.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,InsertPageCount,The length of the statement  "	XElement content = XElement.Parse (@"<w:r w:rsidR='001D0226' xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main""> " is 134.
Long Statement,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,AppendPageCount,The length of the statement  "	XElement content = XElement.Parse (@"<w:r w:rsidR='001D0226' xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main""> " is 134.
Long Statement,Novacode,Run,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SplitRun,The length of the statement  "	XElement splitLeft = new XElement (r.Xml.Name' r.Xml.Attributes ()' r.Xml.Element (XName.Get ("rPr"' DocX.w.NamespaceName))' t.Xml.ElementsBeforeSelf ().Where (n => n.Name.LocalName != "rPr")' splitText [0]); " is 208.
Long Statement,Novacode,Run,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SplitRun,The length of the statement  "	XElement splitRight = new XElement (r.Xml.Name' r.Xml.Attributes ()' r.Xml.Element (XName.Get ("rPr"' DocX.w.NamespaceName))' splitText [1]' t.Xml.ElementsAfterSelf ().Where (n => n.Name.LocalName != "rPr")); " is 208.
Long Statement,Novacode,Text,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SplitText,The length of the statement  "		splitRight = new XElement (t.Xml.Name' t.Xml.Attributes ()' t.Xml.Value.Substring (index - t.startIndex' t.Xml.Value.Length - (index - t.startIndex))); " is 151.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,GetProtectionType,The length of the statement  "		XElement documentProtection = settings.Descendants (XName.Get ("documentProtection"' DocX.w.NamespaceName)).FirstOrDefault (); " is 126.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The length of the statement  "	// Every file that is missing from the local document will have to be copied' every file that already exists will have to be merged. " is 132.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The length of the statement  "	foreach (var hyperlink_rel in remote_document.mainPart.GetRelationshipsByType ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink")) { " is 162.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The length of the statement  "		var new_rel_Id = mainPart.CreateRelationship (hyperlink_rel.TargetUri' hyperlink_rel.TargetMode' hyperlink_rel.RelationshipType).Id; " is 132.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The length of the statement  "	var remote_rel = remote_document.mainPart.GetRelationships ().Where (r => r.TargetUri.OriginalString.Equals (remote_pp.Uri.OriginalString.Replace ("/word/"' ""))).FirstOrDefault (); " is 181.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The length of the statement  "			var local_rel = mainPart.GetRelationships ().Where (r => r.TargetUri.OriginalString.Equals (part.Uri.OriginalString.Replace ("/word/"' ""))).FirstOrDefault (); " is 159.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The length of the statement  "		PackageRelationship pr = mainPart.CreateRelationship (new Uri (new_uri' UriKind.Relative)' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image"); " is 189.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_endnotes,The length of the statement  "	foreach (var endnote in remote_endnotes.Root.Elements ().OrderBy (fr => fr.Attribute (XName.Get ("id"' DocX.r.NamespaceName))).Reverse ()) { " is 140.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_footnotes,The length of the statement  "	foreach (var footnote in remote_footnotes.Root.Elements ().OrderBy (fr => fr.Attribute (XName.Get ("id"' DocX.r.NamespaceName))).Reverse ()) { " is 142.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_customs,The length of the statement  "			if (remote_property != null && local_property_name != null && remote_property_name.Value.Equals (local_property_name.Value)) " is 124.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_numbering,The length of the statement  "	IEnumerable<XElement> remote_abstractNums = remote.numbering.Root.Elements (XName.Get ("abstractNum"' DocX.w.NamespaceName)); " is 125.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_fonts,The length of the statement  "			if (local_font.Attribute (XName.Get ("name"' DocX.w.NamespaceName)).Value == remote_font.Attribute (XName.Get ("name"' DocX.w.NamespaceName)).Value) { " is 150.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,clonePackageRelationship,The length of the statement  "			String local_Id = mainPart.CreateRelationship (remote_rel.TargetUri' remote_rel.TargetMode' remote_rel.RelationshipType).Id; " is 124.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddStylesForList,The length of the statement  "		var style = new XElement (w + "style"' new XAttribute (w + "type"' "paragraph")' new XAttribute (w + "styleId"' "ListParagraph")' new XElement (w + "name"' new XAttribute (w + "val"' "List Paragraph"))' new XElement (w + "basedOn"' new XAttribute (w + "val"' "Normal"))' new XElement (w + "uiPriority"' new XAttribute (w + "val"' "34"))' new XElement (w + "qformat")' new XElement (w + "rsid"' new XAttribute (w + "val"' "00832EE1"))' new XElement (w + "rPr"' new XElement (w + "ind"' new XAttribute (w + "left"' "720"))' new XElement (w + "contextualSpacing"))); " is 563.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,Create,The length of the statement  "	//WordprocessingDocument wdDoc = WordprocessingDocument.Create(ms' DocumentFormat.OpenXml.WordprocessingDocumentType.Document); " is 127.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "	PackagePart mainDocumentPart = package.CreatePart (new Uri ("/word/document.xml"' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"); " is 185.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "	package.CreateRelationship (mainDocumentPart.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument"); " is 157.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "                   <w:document xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"" xmlns:a=""http://schemas.openxmlformats.org/drawingml/2006/main"" xmlns:c=""http://schemas.openxmlformats.org/drawingml/2006/chart""> " is 739.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PostCreation,The length of the statement  "                        <w:pgMar w:top=""1440"" w:right=""1440"" w:bottom=""1440"" w:left=""1440"" w:header=""708"" w:footer=""708"" w:gutter=""0""/> " is 125.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PostLoad,The length of the statement  "	document.mainPart = package.GetParts ().Where (p => p.ContentType.Equals ("application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"' StringComparison.CurrentCultureIgnoreCase)).Single (); " is 212.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "	//    var header_even_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "headerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "even"); " is 242.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "	//    var header_odd_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "headerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "default"); " is 244.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "	//eaderReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "first"); " is 156.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "	//    var footer_even_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "footerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "even"); " is 242.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "	//    var footer_odd_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "footerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "default"); " is 244.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "	//    var footer_first_ref = sectPr.Elements().SingleOrDefault(x => x.Name.LocalName == "footerReference" && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)) != null && x.Attribute(XName.Get("type"' DocX.w.NamespaceName)).Value == "first"); " is 244.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "			document.endnotesPart = package.GetPart (new Uri ("/word/" + rel.TargetUri.OriginalString.Replace ("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 143.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "			document.footnotesPart = package.GetPart (new Uri ("/word/" + rel.TargetUri.OriginalString.Replace ("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 144.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "			document.stylesPart = package.GetPart (new Uri ("/word/" + rel.TargetUri.OriginalString.Replace ("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 141.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "			document.stylesWithEffectsPart = package.GetPart (new Uri ("/word/" + rel.TargetUri.OriginalString.Replace ("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 152.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "			document.fontTablePart = package.GetPart (new Uri ("/word/" + rel.TargetUri.OriginalString.Replace ("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 144.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,PopulateDocument,The length of the statement  "			document.numberingPart = package.GetPart (new Uri ("/word/" + rel.TargetUri.OriginalString.Replace ("/word/"' "")' UriKind.RelativeOrAbsolute)); " is 144.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The length of the statement  "					using (StreamWriter tw = new StreamWriter (globalRelsPart.GetStream (FileMode.Create' FileAccess.Write)' Encoding.UTF8)) { " is 122.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The length of the statement  "				using (StreamReader tr = new StreamReader (packagePart.GetStream (FileMode.Open' FileAccess.Read)' packagePartEncoding)) { " is 122.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The length of the statement  "					using (StreamWriter tw = new StreamWriter (nativePart.GetStream (FileMode.Create' FileAccess.Write)' tr.CurrentEncoding)) { " is 123.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The length of the statement  "			PackagePart documentNewPart = this.package.CreatePart (documentPart.Uri' mainContentType' documentPart.CompressionOption); " is 122.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The length of the statement  "				documentNewPart.CreateRelationship (documentPartRel.TargetUri' documentPartRel.TargetMode' documentPartRel.RelationshipType' documentPartRel.Id); " is 145.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,ApplyTemplate,The length of the statement  "			//  and after line "templatePackage.Close();" in finally' field "settingsPart" becomes not available and method "Save" throw an exception... " is 140.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHyperlink,The length of the statement  "	XElement i = new XElement (XName.Get ("hyperlink"' DocX.w.NamespaceName)' new XAttribute (r + "id"' string.Empty)' new XAttribute (w + "history"' "1")' new XElement (XName.Get ("r"' DocX.w.NamespaceName)' new XElement (XName.Get ("rPr"' DocX.w.NamespaceName)' new XElement (XName.Get ("rStyle"' DocX.w.NamespaceName)' new XAttribute (w + "val"' "Hyperlink")))' new XElement (XName.Get ("t"' DocX.w.NamespaceName)' text))); " is 422.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHyperlinkStyleIfNotPresent,The length of the statement  "		XElement style = new XElement (w + "style"' new XAttribute (w + "type"' "character")' new XAttribute (w + "styleId"' "Hyperlink")' new XElement (w + "name"' new XAttribute (w + "val"' "Hyperlink"))' new XElement (w + "basedOn"' new XAttribute (w + "val"' "DefaultParagraphFont"))' new XElement (w + "uiPriority"' new XAttribute (w + "val"' "99"))' new XElement (w + "unhideWhenUsed")' new XElement (w + "rsid"' new XAttribute (w + "val"' "0005416C"))' new XElement (w + "rPr"' new XElement (w + "color"' new XAttribute (w + "val"' "0000FF")' new XAttribute (w + "themeColor"' "hyperlink"))' new XElement (w + "u"' new XAttribute (w + "val"' "single")))); " is 654.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The length of the statement  "		PackagePart headerPart = package.CreatePart (new Uri (header_uri' UriKind.Relative)' string.Format ("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference)); " is 186.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The length of the statement  "		PackageRelationship headerRelationship = mainPart.CreateRelationship (headerPart.Uri' TargetMode.Internal' string.Format ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference)); " is 209.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The length of the statement  "                       <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml""> " is 601.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The length of the statement  "		sectPr.Add (new XElement (w + string.Format ("{0}Reference"' reference)' new XAttribute (w + "type"' type)' new XAttribute (r + "id"' headerRelationship.Id))); " is 159.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,DeleteHeadersOrFooters,The length of the statement  "	var header_relationships = mainPart.GetRelationshipsByType (string.Format ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference)); " is 162.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,DeleteHeadersOrFooters,The length of the statement  "			where (e.Name.LocalName == string.Format ("{0}Reference"' reference)) && (e.Attribute (r + "id").Value == header_relationship.Id) " is 129.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "	List<PackagePart> imageParts = mainPart.GetRelationshipsByType ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/image").Select (ir => package.GetParts ().Where (p => p.Uri.ToString ().EndsWith (ir.TargetUri.ToString ())).First ()).ToList (); " is 262.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "	foreach (PackagePart relsPart in package.GetParts ().Where (part => part.Uri.ToString ().Contains ("/word/")).Where (part => part.ContentType.Equals ("application/vnd.openxmlformats-package.relationships+xml"))) { " is 213.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "		IEnumerable<XElement> imageRelationships = relsPartContent.Root.Elements ().Where (imageRel => imageRel.Attribute (XName.Get ("Type")).Value.Equals ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/image")); " is 227.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "				string imagePartUri = Path.Combine (Path.GetDirectoryName (relsPart.Uri.ToString ())' imageRelationship.Attribute (XName.Get ("Target")).Value); " is 144.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "				string id = mainPart.GetRelationshipsByType ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/image").Where (r => r.TargetUri == pp.Uri).Select (r => r.Id).First (); " is 185.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddImage,The length of the statement  "	PackageRelationship rel = mainPart.CreateRelationship (img.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image"); " is 162.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCorePropertyValue,The length of the statement  "		string attr_value = e.Attribute (XName.Get ("instr"' w.NamespaceName)).Value.Replace (" "' string.Empty).Trim ().ToLower (); " is 124.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCorePropertyValue,The length of the statement  "			string attr_value = e.Attribute (XName.Get ("instr"' w.NamespaceName)).Value.Replace (" "' string.Empty).Trim ().ToLower (); " is 124.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCorePropertyValue,The length of the statement  "			string attr_value = e.Attribute (XName.Get ("instr"' w.NamespaceName)).Value.Replace (" "' string.Empty).Trim ().ToLower (); " is 124.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddCustomProperty,The length of the statement  "	propertiesElement.Add (new XElement (XName.Get ("property"' customPropertiesSchema.NamespaceName)' new XAttribute ("fmtid"' "{D5CDD505-2E9C-101B-9397-08002B2CF9AE}")' new XAttribute ("pid"' pid + 1)' new XAttribute ("name"' cp.Name)' new XElement (customVTypesSchema + cp.Type' cp.Value))); " is 290.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCustomPropertyValue,The length of the statement  "	// A list of documents' which will contain' The Main Document and if they exist: header1' header2' header3' footer1' footer2' footer3. " is 134.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCustomPropertyValue,The length of the statement  "			string match_value = string.Format (@"DOCPROPERTY  {0}  \* MERGEFORMAT"' customPropertyName).Replace (" "' string.Empty); " is 121.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,UpdateCustomPropertyValue,The length of the statement  "			string match_value = string.Format (@"DOCPROPERTY  {0}  \* MERGEFORMAT"' customPropertyName).Replace (" "' string.Empty); " is 121.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertChart,The length of the statement  "	PackagePart chartPackagePart = package.CreatePart (new Uri (chartPartUriPath' UriKind.Relative)' "application/vnd.openxmlformats-officedocument.drawingml.chart+xml"); " is 166.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertChart,The length of the statement  "	PackageRelationship rel = mainPart.CreateRelationship (chartPackagePart.Uri' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart"' relID); " is 182.
Long Statement,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertChart,The length of the statement  "	XElement chartElement = new XElement (XName.Get ("r"' DocX.w.NamespaceName)' new XElement (XName.Get ("drawing"' DocX.w.NamespaceName)' new XElement (XName.Get ("inline"' DocX.wp.NamespaceName)' new XElement (XName.Get ("extent"' DocX.wp.NamespaceName)' new XAttribute ("cx"' "5486400")' new XAttribute ("cy"' "3200400"))' new XElement (XName.Get ("effectExtent"' DocX.wp.NamespaceName)' new XAttribute ("l"' "0")' new XAttribute ("t"' "0")' new XAttribute ("r"' "19050")' new XAttribute ("b"' "19050"))' new XElement (XName.Get ("docPr"' DocX.wp.NamespaceName)' new XAttribute ("id"' "1")' new XAttribute ("name"' "chart"))' new XElement (XName.Get ("graphic"' DocX.a.NamespaceName)' new XElement (XName.Get ("graphicData"' DocX.a.NamespaceName)' new XAttribute ("uri"' DocX.c.NamespaceName)' new XElement (XName.Get ("chart"' DocX.c.NamespaceName)' new XAttribute (XName.Get ("id"' DocX.r.NamespaceName)' relID))))))); " is 920.
Complex Conditional,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstRunEffectedByEdit,The conditional expression  "index < 0 || ((type == EditType.ins && index > len) || (type == EditType.del && index >= len))"  is complex.
Complex Conditional,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstRunEffectedByEditRecursive,The conditional expression  "count > 0 && ((type == EditType.del && count > index) || (type == EditType.ins && count >= index))"  is complex.
Complex Conditional,Novacode,Run,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,GetFirstTextEffectedByEditRecursive,The conditional expression  "count > 0 && ((type == EditType.del && count > index) || (type == EditType.ins && count >= index))"  is complex.
Virtual Method Call from Constructor,Novacode,Chart,D:\newReposJune17\Word-DocX_DocX\DocX\Charts\Chart.cs,Chart,The constructor "Chart" calls a virtual method "CreateChartXml".
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 2;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 4;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 6;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 8;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 12;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 18;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 24;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 36;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 48;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 2;  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Table,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: switch (border.Size) {  case BorderSize.one:  	size = 2;  	break;  case BorderSize.two:  	size = 4;  	break;  case BorderSize.three:  	size = 6;  	break;  case BorderSize.four:  	size = 8;  	break;  case BorderSize.five:  	size = 12;  	break;  case BorderSize.six:  	size = 18;  	break;  case BorderSize.seven:  	size = 24;  	break;  case BorderSize.eight:  	size = 36;  	break;  case BorderSize.nine:  	size = 48;  	break;  default:  	size = 2;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 2;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 4;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 6;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 8;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 12;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 18;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 24;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 36;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 48;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,SetBorder,The following statement contains a magic number: size = 2;  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (sz == null) {  	// uses default border style  } else {  	// If sz is not an int' something is wrong with this attributes value' so remove it  	int numerical_size;  	if (!int.TryParse (sz.Value' out numerical_size))  		sz.Remove ();  	else {  		switch (numerical_size) {  		case 2:  			b.Size = BorderSize.one;  			break;  		case 4:  			b.Size = BorderSize.two;  			break;  		case 6:  			b.Size = BorderSize.three;  			break;  		case 8:  			b.Size = BorderSize.four;  			break;  		case 12:  			b.Size = BorderSize.five;  			break;  		case 18:  			b.Size = BorderSize.six;  			break;  		case 24:  			b.Size = BorderSize.seven;  			break;  		case 36:  			b.Size = BorderSize.eight;  			break;  		case 48:  			b.Size = BorderSize.nine;  			break;  		default:  			b.Size = BorderSize.one;  			break;  		}  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: if (!int.TryParse (sz.Value' out numerical_size))  	sz.Remove ();  else {  	switch (numerical_size) {  	case 2:  		b.Size = BorderSize.one;  		break;  	case 4:  		b.Size = BorderSize.two;  		break;  	case 6:  		b.Size = BorderSize.three;  		break;  	case 8:  		b.Size = BorderSize.four;  		break;  	case 12:  		b.Size = BorderSize.five;  		break;  	case 18:  		b.Size = BorderSize.six;  		break;  	case 24:  		b.Size = BorderSize.seven;  		break;  	case 36:  		b.Size = BorderSize.eight;  		break;  	case 48:  		b.Size = BorderSize.nine;  		break;  	default:  		b.Size = BorderSize.one;  		break;  	}  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Cell,D:\newReposJune17\Word-DocX_DocX\DocX\Table.cs,GetBorder,The following statement contains a magic number: switch (numerical_size) {  case 2:  	b.Size = BorderSize.one;  	break;  case 4:  	b.Size = BorderSize.two;  	break;  case 6:  	b.Size = BorderSize.three;  	break;  case 8:  	b.Size = BorderSize.four;  	break;  case 12:  	b.Size = BorderSize.five;  	break;  case 18:  	b.Size = BorderSize.six;  	break;  case 24:  	b.Size = BorderSize.seven;  	break;  case 36:  	b.Size = BorderSize.eight;  	break;  case 48:  	b.Size = BorderSize.nine;  	break;  default:  	b.Size = BorderSize.one;  	break;  }  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: foreach (XElement option in rPr.Elements ()) {  	switch (option.Name.LocalName) {  	case "lang":  		formatting.Language = new CultureInfo (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("bidi"' DocX.w.NamespaceName)));  		break;  	case "spacing":  		formatting.Spacing = Double.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 20.0;  		break;  	case "position":  		formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  		break;  	case "kern":  		formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  		break;  	case "w":  		formatting.PercentageScale = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  		break;  	case "rFonts":  		formatting.FontFamily = new FontFamily (option.GetAttribute (XName.Get ("cs"' DocX.w.NamespaceName)));  		break;  	case "vanish":  		formatting.hidden = true;  		break;  	case "b":  		formatting.Bold = true;  		break;  	case "i":  		formatting.Italic = true;  		break;  	case "u":  		formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  		break;  	default:  		break;  	}  }  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: foreach (XElement option in rPr.Elements ()) {  	switch (option.Name.LocalName) {  	case "lang":  		formatting.Language = new CultureInfo (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("bidi"' DocX.w.NamespaceName)));  		break;  	case "spacing":  		formatting.Spacing = Double.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 20.0;  		break;  	case "position":  		formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  		break;  	case "kern":  		formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  		break;  	case "w":  		formatting.PercentageScale = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  		break;  	case "rFonts":  		formatting.FontFamily = new FontFamily (option.GetAttribute (XName.Get ("cs"' DocX.w.NamespaceName)));  		break;  	case "vanish":  		formatting.hidden = true;  		break;  	case "b":  		formatting.Bold = true;  		break;  	case "i":  		formatting.Italic = true;  		break;  	case "u":  		formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  		break;  	default:  		break;  	}  }  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: foreach (XElement option in rPr.Elements ()) {  	switch (option.Name.LocalName) {  	case "lang":  		formatting.Language = new CultureInfo (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("bidi"' DocX.w.NamespaceName)));  		break;  	case "spacing":  		formatting.Spacing = Double.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 20.0;  		break;  	case "position":  		formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  		break;  	case "kern":  		formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  		break;  	case "w":  		formatting.PercentageScale = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  		break;  	case "rFonts":  		formatting.FontFamily = new FontFamily (option.GetAttribute (XName.Get ("cs"' DocX.w.NamespaceName)));  		break;  	case "vanish":  		formatting.hidden = true;  		break;  	case "b":  		formatting.Bold = true;  		break;  	case "i":  		formatting.Italic = true;  		break;  	case "u":  		formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  		break;  	default:  		break;  	}  }  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: switch (option.Name.LocalName) {  case "lang":  	formatting.Language = new CultureInfo (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("bidi"' DocX.w.NamespaceName)));  	break;  case "spacing":  	formatting.Spacing = Double.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 20.0;  	break;  case "position":  	formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  	break;  case "kern":  	formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  	break;  case "w":  	formatting.PercentageScale = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  	break;  case "rFonts":  	formatting.FontFamily = new FontFamily (option.GetAttribute (XName.Get ("cs"' DocX.w.NamespaceName)));  	break;  case "vanish":  	formatting.hidden = true;  	break;  case "b":  	formatting.Bold = true;  	break;  case "i":  	formatting.Italic = true;  	break;  case "u":  	formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  	break;  default:  	break;  }  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: switch (option.Name.LocalName) {  case "lang":  	formatting.Language = new CultureInfo (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("bidi"' DocX.w.NamespaceName)));  	break;  case "spacing":  	formatting.Spacing = Double.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 20.0;  	break;  case "position":  	formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  	break;  case "kern":  	formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  	break;  case "w":  	formatting.PercentageScale = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  	break;  case "rFonts":  	formatting.FontFamily = new FontFamily (option.GetAttribute (XName.Get ("cs"' DocX.w.NamespaceName)));  	break;  case "vanish":  	formatting.hidden = true;  	break;  case "b":  	formatting.Bold = true;  	break;  case "i":  	formatting.Italic = true;  	break;  case "u":  	formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  	break;  default:  	break;  }  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: switch (option.Name.LocalName) {  case "lang":  	formatting.Language = new CultureInfo (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("eastAsia"' DocX.w.NamespaceName)' null) ?? option.GetAttribute (XName.Get ("bidi"' DocX.w.NamespaceName)));  	break;  case "spacing":  	formatting.Spacing = Double.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 20.0;  	break;  case "position":  	formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  	break;  case "kern":  	formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  	break;  case "w":  	formatting.PercentageScale = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  	break;  case "rFonts":  	formatting.FontFamily = new FontFamily (option.GetAttribute (XName.Get ("cs"' DocX.w.NamespaceName)));  	break;  case "vanish":  	formatting.hidden = true;  	break;  case "b":  	formatting.Bold = true;  	break;  case "i":  	formatting.Italic = true;  	break;  case "u":  	formatting.UnderlineStyle = HelperFunctions.GetUnderlineStyle (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName)));  	break;  default:  	break;  }  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: formatting.Spacing = Double.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 20.0;  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  
Magic Number,Novacode,Formatting,D:\newReposJune17\Word-DocX_DocX\DocX\Formatting.cs,Parse,The following statement contains a magic number: formatting.Position = Int32.Parse (option.GetAttribute (XName.Get ("val"' DocX.w.NamespaceName))) / 2;  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The following statement contains a magic number: using (System.Drawing.Image img = System.Drawing.Image.FromStream (part.GetStream ())) {  	cx = img.Width * 9526;  	cy = img.Height * 9526;  }  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The following statement contains a magic number: using (System.Drawing.Image img = System.Drawing.Image.FromStream (part.GetStream ())) {  	cx = img.Width * 9526;  	cy = img.Height * 9526;  }  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The following statement contains a magic number: cx = img.Width * 9526;  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,CreatePicture,The following statement contains a magic number: cy = img.Height * 9526;  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The following statement contains a magic number: if (fontSize - (int)fontSize == 0) {  	if (!(fontSize > 0 && fontSize < 1639))  		throw new ArgumentException ("Size"' "Value must be in the range 0 - 1638");  } else  	throw new ArgumentException ("Size"' "Value must be either a whole or half number' examples: 32' 32.5");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The following statement contains a magic number: if (!(fontSize > 0 && fontSize < 1639))  	throw new ArgumentException ("Size"' "Value must be in the range 0 - 1638");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The following statement contains a magic number: ApplyTextFormattingProperty (XName.Get ("sz"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' fontSize * 2));  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,FontSize,The following statement contains a magic number: ApplyTextFormattingProperty (XName.Get ("szCs"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' fontSize * 2));  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: spacing *= 20;  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: if (spacing - (int)spacing == 0) {  	if (!(spacing > -1585 && spacing < 1585))  		throw new ArgumentException ("Spacing"' "Value must be in the range: -1584 - 1584");  } else  	throw new ArgumentException ("Spacing"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: if (spacing - (int)spacing == 0) {  	if (!(spacing > -1585 && spacing < 1585))  		throw new ArgumentException ("Spacing"' "Value must be in the range: -1584 - 1584");  } else  	throw new ArgumentException ("Spacing"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: if (!(spacing > -1585 && spacing < 1585))  	throw new ArgumentException ("Spacing"' "Value must be in the range: -1584 - 1584");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Spacing,The following statement contains a magic number: if (!(spacing > -1585 && spacing < 1585))  	throw new ArgumentException ("Spacing"' "Value must be in the range: -1584 - 1584");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: spacingBefore *= 20;  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: if (spacingBefore - (int)spacingBefore == 0) {  	if (!(spacingBefore > -1585 && spacingBefore < 1585))  		throw new ArgumentException ("SpacingBefore"' "Value must be in the range: -1584 - 1584");  } else  	throw new ArgumentException ("SpacingBefore"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: if (spacingBefore - (int)spacingBefore == 0) {  	if (!(spacingBefore > -1585 && spacingBefore < 1585))  		throw new ArgumentException ("SpacingBefore"' "Value must be in the range: -1584 - 1584");  } else  	throw new ArgumentException ("SpacingBefore"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: if (!(spacingBefore > -1585 && spacingBefore < 1585))  	throw new ArgumentException ("SpacingBefore"' "Value must be in the range: -1584 - 1584");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingBefore,The following statement contains a magic number: if (!(spacingBefore > -1585 && spacingBefore < 1585))  	throw new ArgumentException ("SpacingBefore"' "Value must be in the range: -1584 - 1584");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: spacingAfter *= 20;  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: if (spacingAfter - (int)spacingAfter == 0) {  	if (!(spacingAfter > -1585 && spacingAfter < 1585))  		throw new ArgumentException ("SpacingAfter"' "Value must be in the range: -1584 - 1584");  } else  	throw new ArgumentException ("SpacingAfter"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: if (spacingAfter - (int)spacingAfter == 0) {  	if (!(spacingAfter > -1585 && spacingAfter < 1585))  		throw new ArgumentException ("SpacingAfter"' "Value must be in the range: -1584 - 1584");  } else  	throw new ArgumentException ("SpacingAfter"' "Value must be either a whole or acurate to one decimal' examples: 32' 32.1' 32.2' 32.9");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: if (!(spacingAfter > -1585 && spacingAfter < 1585))  	throw new ArgumentException ("SpacingAfter"' "Value must be in the range: -1584 - 1584");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,SpacingAfter,The following statement contains a magic number: if (!(spacingAfter > -1585 && spacingAfter < 1585))  	throw new ArgumentException ("SpacingAfter"' "Value must be in the range: -1584 - 1584");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: if (!new int?[] {  	8'  	9'  	10'  	11'  	12'  	14'  	16'  	18'  	20'  	22'  	24'  	26'  	28'  	36'  	48'  	72  }.Contains (kerning))  	throw new ArgumentOutOfRangeException ("Kerning"' "Value must be one of the following: 8' 9' 10' 11' 12' 14' 16' 18' 20' 22' 24' 26' 28' 36' 48 or 72");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Kerning,The following statement contains a magic number: ApplyTextFormattingProperty (XName.Get ("kern"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' kerning * 2));  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Position,The following statement contains a magic number: if (!(position > -1585 && position < 1585))  	throw new ArgumentOutOfRangeException ("Position"' "Value must be in the range -1585 - 1585");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Position,The following statement contains a magic number: if (!(position > -1585 && position < 1585))  	throw new ArgumentOutOfRangeException ("Position"' "Value must be in the range -1585 - 1585");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,Position,The following statement contains a magic number: ApplyTextFormattingProperty (XName.Get ("position"' DocX.w.NamespaceName)' string.Empty' new XAttribute (XName.Get ("val"' DocX.w.NamespaceName)' position * 2));  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,Paragraph,D:\newReposJune17\Word-DocX_DocX\DocX\Paragraph.cs,PercentageScale,The following statement contains a magic number: if (!(new int?[] {  	200'  	150'  	100'  	90'  	80'  	66'  	50'  	33  }).Contains (percentageScale))  	throw new ArgumentOutOfRangeException ("PercentageScale"' "Value must be one of the following: 200' 150' 100' 90' 80' 66' 50 or 33");  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,setMarginAttribute,The following statement contains a magic number: if (sectPr != null) {  	XElement pgMar = sectPr.Element (XName.Get ("pgMar"' DocX.w.NamespaceName));  	if (pgMar != null) {  		XAttribute top = pgMar.Attribute (xName);  		if (top != null) {  			top.SetValue (value * 15);  		}  	}  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,setMarginAttribute,The following statement contains a magic number: if (pgMar != null) {  	XAttribute top = pgMar.Attribute (xName);  	if (top != null) {  		top.SetValue (value * 15);  	}  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,setMarginAttribute,The following statement contains a magic number: if (top != null) {  	top.SetValue (value * 15);  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,setMarginAttribute,The following statement contains a magic number: top.SetValue (value * 15);  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The following statement contains a magic number: if (!found) {  	String new_uri = remote_pp.Uri.OriginalString;  	new_uri = new_uri.Remove (new_uri.LastIndexOf ("/"));  	new_uri = new_uri.Replace ("word/"' "");  	new_uri += "/" + Guid.NewGuid ().ToString () + contentType.Replace ("image/"' ".");  	if (!new_uri.StartsWith ("/"))  		new_uri = "/" + new_uri;  	PackagePart new_pp = package.CreatePart (new Uri (new_uri' UriKind.Relative)' remote_pp.ContentType);  	using (Stream s_read = remote_pp.GetStream ()) {  		using (Stream s_write = new_pp.GetStream (FileMode.Create)) {  			byte[] buffer = new byte[32768];  			int read;  			while ((read = s_read.Read (buffer' 0' buffer.Length)) > 0) {  				s_write.Write (buffer' 0' read);  			}  		}  	}  	PackageRelationship pr = mainPart.CreateRelationship (new Uri (new_uri' UriKind.Relative)' TargetMode.Internal' "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image");  	String new_Id = pr.Id;  	// Replace all instances of remote_Id in the local document with local_Id  	var elems = remote_mainDoc.Descendants (XName.Get ("blip"' DocX.a.NamespaceName));  	foreach (var elem in elems) {  		XAttribute embed = elem.Attribute (XName.Get ("embed"' DocX.r.NamespaceName));  		if (embed != null && embed.Value == remote_Id) {  			embed.SetValue (new_Id);  		}  	}  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The following statement contains a magic number: using (Stream s_read = remote_pp.GetStream ()) {  	using (Stream s_write = new_pp.GetStream (FileMode.Create)) {  		byte[] buffer = new byte[32768];  		int read;  		while ((read = s_read.Read (buffer' 0' buffer.Length)) > 0) {  			s_write.Write (buffer' 0' read);  		}  	}  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,merge_images,The following statement contains a magic number: using (Stream s_write = new_pp.GetStream (FileMode.Create)) {  	byte[] buffer = new byte[32768];  	int read;  	while ((read = s_read.Read (buffer' 0' buffer.Length)) > 0) {  		s_write.Write (buffer' 0' read);  	}  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,clonePackagePart,The following statement contains a magic number: using (Stream s_read = pp.GetStream ()) {  	using (Stream s_write = new_pp.GetStream (FileMode.Create)) {  		byte[] buffer = new byte[32768];  		int read;  		while ((read = s_read.Read (buffer' 0' buffer.Length)) > 0) {  			s_write.Write (buffer' 0' read);  		}  	}  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,clonePackagePart,The following statement contains a magic number: using (Stream s_write = new_pp.GetStream (FileMode.Create)) {  	byte[] buffer = new byte[32768];  	int read;  	while ((read = s_read.Read (buffer' 0' buffer.Length)) > 0) {  		s_write.Write (buffer' 0' read);  	}  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: for (int i = 1; i < 4; i++) {  	string header_uri = string.Format ("/word/{0}{1}.xml"' reference' i);  	PackagePart headerPart = package.CreatePart (new Uri (header_uri' UriKind.Relative)' string.Format ("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference));  	PackageRelationship headerRelationship = mainPart.CreateRelationship (headerPart.Uri' TargetMode.Internal' string.Format ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference));  	XDocument header;  	// Load the document part into a XDocument object  	using (TextReader tr = new StreamReader (headerPart.GetStream (FileMode.Create' FileAccess.ReadWrite))) {  		header = XDocument.Parse (string.Format (@"<?xml version=""1.0"" encoding=""utf-16"" standalone=""yes""?>                         <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"">                           <w:p w:rsidR=""009D472B"" w:rsidRDefault=""009D472B"">                             <w:pPr>                               <w:pStyle w:val=""{1}"" />                             </w:pPr>                           </w:p>                         </w:{0}>"' element' reference));  	}  	// Save the main document  	using (TextWriter tw = new StreamWriter (headerPart.GetStream (FileMode.Create' FileAccess.Write)))  		header.Save (tw' SaveOptions.None);  	string type;  	switch (i) {  	case 1:  		type = "default";  		break;  	case 2:  		type = "even";  		break;  	case 3:  		type = "first";  		break;  	default:  		throw new ArgumentOutOfRangeException ();  	}  	sectPr.Add (new XElement (w + string.Format ("{0}Reference"' reference)' new XAttribute (w + "type"' type)' new XAttribute (r + "id"' headerRelationship.Id)));  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: for (int i = 1; i < 4; i++) {  	string header_uri = string.Format ("/word/{0}{1}.xml"' reference' i);  	PackagePart headerPart = package.CreatePart (new Uri (header_uri' UriKind.Relative)' string.Format ("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference));  	PackageRelationship headerRelationship = mainPart.CreateRelationship (headerPart.Uri' TargetMode.Internal' string.Format ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference));  	XDocument header;  	// Load the document part into a XDocument object  	using (TextReader tr = new StreamReader (headerPart.GetStream (FileMode.Create' FileAccess.ReadWrite))) {  		header = XDocument.Parse (string.Format (@"<?xml version=""1.0"" encoding=""utf-16"" standalone=""yes""?>                         <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"">                           <w:p w:rsidR=""009D472B"" w:rsidRDefault=""009D472B"">                             <w:pPr>                               <w:pStyle w:val=""{1}"" />                             </w:pPr>                           </w:p>                         </w:{0}>"' element' reference));  	}  	// Save the main document  	using (TextWriter tw = new StreamWriter (headerPart.GetStream (FileMode.Create' FileAccess.Write)))  		header.Save (tw' SaveOptions.None);  	string type;  	switch (i) {  	case 1:  		type = "default";  		break;  	case 2:  		type = "even";  		break;  	case 3:  		type = "first";  		break;  	default:  		throw new ArgumentOutOfRangeException ();  	}  	sectPr.Add (new XElement (w + string.Format ("{0}Reference"' reference)' new XAttribute (w + "type"' type)' new XAttribute (r + "id"' headerRelationship.Id)));  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: for (int i = 1; i < 4; i++) {  	string header_uri = string.Format ("/word/{0}{1}.xml"' reference' i);  	PackagePart headerPart = package.CreatePart (new Uri (header_uri' UriKind.Relative)' string.Format ("application/vnd.openxmlformats-officedocument.wordprocessingml.{0}+xml"' reference));  	PackageRelationship headerRelationship = mainPart.CreateRelationship (headerPart.Uri' TargetMode.Internal' string.Format ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/{0}"' reference));  	XDocument header;  	// Load the document part into a XDocument object  	using (TextReader tr = new StreamReader (headerPart.GetStream (FileMode.Create' FileAccess.ReadWrite))) {  		header = XDocument.Parse (string.Format (@"<?xml version=""1.0"" encoding=""utf-16"" standalone=""yes""?>                         <w:{0} xmlns:ve=""http://schemas.openxmlformats.org/markup-compatibility/2006"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:r=""http://schemas.openxmlformats.org/officeDocument/2006/relationships"" xmlns:m=""http://schemas.openxmlformats.org/officeDocument/2006/math"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:wp=""http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"" xmlns:w10=""urn:schemas-microsoft-com:office:word"" xmlns:w=""http://schemas.openxmlformats.org/wordprocessingml/2006/main"" xmlns:wne=""http://schemas.microsoft.com/office/word/2006/wordml"">                           <w:p w:rsidR=""009D472B"" w:rsidRDefault=""009D472B"">                             <w:pPr>                               <w:pStyle w:val=""{1}"" />                             </w:pPr>                           </w:p>                         </w:{0}>"' element' reference));  	}  	// Save the main document  	using (TextWriter tw = new StreamWriter (headerPart.GetStream (FileMode.Create' FileAccess.Write)))  		header.Save (tw' SaveOptions.None);  	string type;  	switch (i) {  	case 1:  		type = "default";  		break;  	case 2:  		type = "even";  		break;  	case 3:  		type = "first";  		break;  	default:  		throw new ArgumentOutOfRangeException ();  	}  	sectPr.Add (new XElement (w + string.Format ("{0}Reference"' reference)' new XAttribute (w + "type"' type)' new XAttribute (r + "id"' headerRelationship.Id)));  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: switch (i) {  case 1:  	type = "default";  	break;  case 2:  	type = "even";  	break;  case 3:  	type = "first";  	break;  default:  	throw new ArgumentOutOfRangeException ();  }  
Magic Number,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,AddHeadersOrFooters,The following statement contains a magic number: switch (i) {  case 1:  	type = "default";  	break;  case 2:  	type = "even";  	break;  case 3:  	type = "first";  	break;  default:  	throw new ArgumentOutOfRangeException ();  }  
Magic Number,Novacode,Extensions,D:\newReposJune17\Word-DocX_DocX\DocX\_Extensions.cs,ToHex,The following statement contains a magic number: if (redHex.Length < 2)  	redHex = "0" + redHex;  
Magic Number,Novacode,Extensions,D:\newReposJune17\Word-DocX_DocX\DocX\_Extensions.cs,ToHex,The following statement contains a magic number: if (blueHex.Length < 2)  	blueHex = "0" + blueHex;  
Magic Number,Novacode,Extensions,D:\newReposJune17\Word-DocX_DocX\DocX\_Extensions.cs,ToHex,The following statement contains a magic number: if (greenHex.Length < 2)  	greenHex = "0" + greenHex;  
Missing Default,Novacode,Container,D:\newReposJune17\Word-DocX_DocX\DocX\Container.cs,GetParent,The following switch statement is missing a default case: switch (containerType.Name) {  case "Body":  	newParagraph.ParentContainer = ContainerType.Body;  	break;  case "Table":  	newParagraph.ParentContainer = ContainerType.Table;  	break;  case "TOC":  	newParagraph.ParentContainer = ContainerType.TOC;  	break;  case "Section":  	newParagraph.ParentContainer = ContainerType.Section;  	break;  case "Cell":  	newParagraph.ParentContainer = ContainerType.Cell;  	break;  case "Header":  	newParagraph.ParentContainer = ContainerType.Header;  	break;  case "Footer":  	newParagraph.ParentContainer = ContainerType.Footer;  	break;  case "Paragraph":  	newParagraph.ParentContainer = ContainerType.Paragraph;  	break;  }  
Missing Default,Novacode,DocX,D:\newReposJune17\Word-DocX_DocX\DocX\DocX.cs,InsertDocument,The following switch statement is missing a default case: switch (remote_pp.ContentType) {  case "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":  	endnotesPart = packagePart;  	endnotes = remote_endnotes;  	break;  case "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":  	footnotesPart = packagePart;  	footnotes = remote_footnotes;  	break;  case "application/vnd.openxmlformats-officedocument.custom-properties+xml":  	break;  case "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":  	stylesPart = packagePart;  	using (TextReader tr = new StreamReader (stylesPart.GetStream ()))  		styles = XDocument.Load (tr);  	break;  case "application/vnd.ms-word.stylesWithEffects+xml":  	stylesWithEffectsPart = packagePart;  	using (TextReader tr = new StreamReader (stylesWithEffectsPart.GetStream ()))  		stylesWithEffects = XDocument.Load (tr);  	break;  case "application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml":  	fontTablePart = packagePart;  	using (TextReader tr = new StreamReader (fontTablePart.GetStream ()))  		fontTable = XDocument.Load (tr);  	break;  case "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":  	numberingPart = packagePart;  	using (TextReader tr = new StreamReader (numberingPart.GetStream ()))  		numbering = XDocument.Load (tr);  	break;  }  
