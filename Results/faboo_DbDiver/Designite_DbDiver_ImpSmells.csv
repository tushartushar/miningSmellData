Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetPrimaryKeys,Cyclomatic complexity of the method is 9
Complex Method,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetForeignKeys,Cyclomatic complexity of the method is 8
Complex Method,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,Cyclomatic complexity of the method is 8
Complex Method,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetTableData,Cyclomatic complexity of the method is 8
Complex Method,DbDiver,CrawlControl,C:\repos\faboo_DbDiver\DbDiver\CrawlControl.cs,ExecuteFind,Cyclomatic complexity of the method is 8
Complex Method,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetDatabases,Cyclomatic complexity of the method is 9
Complex Method,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetProcedures,Cyclomatic complexity of the method is 8
Complex Method,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetForeignKeys,Cyclomatic complexity of the method is 8
Complex Method,DbDiver,QueryControl,C:\repos\faboo_DbDiver\DbDiver\QueryControl.xaml.cs,ExecuteFind,Cyclomatic complexity of the method is 10
Complex Method,DbDiver,SqlConnection,C:\repos\faboo_DbDiver\DbDiver\SqlConnection.cs,GetDatabases,Cyclomatic complexity of the method is 9
Complex Method,DbDiver,SqlConnection,C:\repos\faboo_DbDiver\DbDiver\SqlConnection.cs,GetPrimaryKeys,Cyclomatic complexity of the method is 9
Complex Method,DbDiver,SqlConnection,C:\repos\faboo_DbDiver\DbDiver\SqlConnection.cs,GetTypeAsNative,Cyclomatic complexity of the method is 41
Long Parameter List,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,TraceDependents,The method has 6 parameters.
Long Parameter List,DbDiver,DataCrawlControl,C:\repos\faboo_DbDiver\DbDiver\DataCrawlControl.xaml.cs,OnRowChanged,The method has 5 parameters.
Long Parameter List,DbDiver,EditDataControl,C:\repos\faboo_DbDiver\DbDiver\EditDataControl.xaml.cs,OnRowDeleted,The method has 5 parameters.
Long Parameter List,DbDiver,EditDataControl,C:\repos\faboo_DbDiver\DbDiver\EditDataControl.xaml.cs,OnRowChanged,The method has 7 parameters.
Long Parameter List,DbDiver,EditDataControl,C:\repos\faboo_DbDiver\DbDiver\EditDataControl.xaml.cs,OnRowEditEnding,The method has 7 parameters.
Long Parameter List,DbDiver,FrameworkElementExtension,C:\repos\faboo_DbDiver\DbDiver\FrameworkElementExtension.cs,Weave,The method has 5 parameters.
Long Parameter List,DbDiver,FrameworkElementExtension,C:\repos\faboo_DbDiver\DbDiver\FrameworkElementExtension.cs,Weave,The method has 5 parameters.
Long Parameter List,DbDiver,FrameworkElementExtension,C:\repos\faboo_DbDiver\DbDiver\FrameworkElementExtension.cs,WeaveWithError,The method has 7 parameters.
Long Parameter List,DbDiver,RowData,C:\repos\faboo_DbDiver\DbDiver\TableData.cs,RowData,The method has 6 parameters.
Long Statement,DbDiver,CeConnection,C:\repos\faboo_DbDiver\DbDiver\CeConnection.cs,GetTables,The length of the statement  "			command.CommandText = "select TABLE_NAME as [Table]' 0 as [Rows] " + "from INFORMATION_SCHEMA.TABLES " + "group by TABLE_NAME"; " is 127.
Long Statement,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetTables,The length of the statement  "				command.CommandText = "select TABLE_NAME as [Table]' 0 as [Rows] " + "from INFORMATION_SCHEMA.TABLES " + "where " + DB_CHECK + " " + "order by TABLE_NAME"; " is 155.
Long Statement,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetPrimaryKeys,The length of the statement  "			command.CommandText = "select [column_name] from [INFORMATION_SCHEMA].[INDEXES] " + "where [PRIMARY_KEY] = 1 and [TABLE_NAME] = @tableName " + "and " + DB_CHECK; " is 161.
Long Statement,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetForeignKeys,The length of the statement  "			command.CommandText = "select " + (outward ? "[parent_key].[COLUMN_NAME] as [parent_column]' [referenced_constraint].[TABLE_NAME] as [referenced_table]' [referenced_key].[COLUMN_NAME] as [referenced_column] " : "[referenced_key].[COLUMN_NAME] as [parent_column]' [parent_constraint].[TABLE_NAME] as [referenced_table]' [parent_key].[COLUMN_NAME] as [referenced_column] ") + "from   [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] as [parent_constraint] " + "inner join [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] as [parent_key] " + "on [parent_constraint].[CONSTRAINT_SCHEMA] = [parent_key].[CONSTRAINT_SCHEMA] " + "and [parent_constraint].[CONSTRAINT_NAME] = [parent_key].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[REFERENTIAL_CONSTRAINTS] as [rc] " + "on [parent_constraint].[CONSTRAINT_SCHEMA] = [rc].[CONSTRAINT_SCHEMA] " + "and [parent_constraint].[CONSTRAINT_NAME] = [rc].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] as [referenced_constraint] " + "on [rc].[UNIQUE_CONSTRAINT_SCHEMA] = [referenced_constraint].[CONSTRAINT_SCHEMA] " + "and [rc].[UNIQUE_CONSTRAINT_NAME] = [referenced_constraint].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] as [referenced_key] " + "on [referenced_constraint].[CONSTRAINT_SCHEMA] = [referenced_key].[CONSTRAINT_SCHEMA] " + "and [referenced_constraint].[CONSTRAINT_NAME] = [referenced_key].[CONSTRAINT_NAME] " + "and [parent_key].[ORDINAL_POSITION] = [referenced_key].[ORDINAL_POSITION] " + "where [parent_constraint].[CONSTRAINT_TYPE] = 'FOREIGN KEY' " + "and (([parent_constraint].[TABLE_CATALOG] is null and [parent_constraint].[TABLE_SCHEMA] is null) or ([parent_constraint].[TABLE_CATALOG] is null and [parent_constraint].[TABLE_SCHEMA] = @database) or [parent_constraint].[TABLE_CATALOG] = @database) " + (outward ? "and [parent_constraint].[TABLE_NAME] = @tableName " : "and [referenced_constraint].[TABLE_NAME] = @tableName "); " is 1934.
Long Statement,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The length of the statement  "			command.CommandText = "select [ORDINAL_POSITION]' [COLUMN_NAME]' [DATA_TYPE]' [IS_NULLABLE] " + "from [INFORMATION_SCHEMA].[COLUMNS] " + "where [TABLE_NAME] = @tableName " + "and " + DB_CHECK; " is 192.
Long Statement,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetTableData,The length of the statement  "				command.CommandText = String.Format ("select {2} * from [{0}] {1}"' name' String.IsNullOrWhiteSpace (where) ? "" : "where " + where' max == null ? "" : "top " + max); " is 166.
Long Statement,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,DeleteRow,The length of the statement  "	//Although it would be nice to do these deletes in a transaction' it appears that deleted rows aren't necessarily fully deleted' so FK " is 134.
Long Statement,DbDiver,DataCrawl,C:\repos\faboo_DbDiver\DbDiver\DataCrawl.xaml.cs,ExecuteOpenTable,The length of the statement  "	this.Weave<TableData> (new Func<Connection' ColumnData' TableData> (getRows)' data => AddTable (column.Set' data)' () => Cursor = Cursors.Arrow' Connection' column); " is 165.
Long Statement,DbDiver,DataCrawl,C:\repos\faboo_DbDiver\DbDiver\DataCrawl.xaml.cs,OnDependentKeySelected,The length of the statement  "	this.Weave<TableData> (new Func<Connection' Key' object' TableData> (loadTable)' child => UnshiftTable (column.Set' child)' () => Cursor = Cursors.Arrow' Connection' dependentKey' column.Data); " is 193.
Long Statement,DbDiver,DataCrawlControl,C:\repos\faboo_DbDiver\DbDiver\DataCrawlControl.xaml.cs,ExecuteOpenTable,The length of the statement  "	this.Weave<TableData> (new Func<Connection' ColumnData' TableData> (getRows)' data => AddTable (column.Set' data)' () => Cursor = Cursors.Arrow' Connection' column); " is 165.
Long Statement,DbDiver,DataCrawlControl,C:\repos\faboo_DbDiver\DbDiver\DataCrawlControl.xaml.cs,OnRowChanged,The length of the statement  "		this.Background (new Action<Connection' RowData' Table> ((conn' row' table) => conn.UpdateRow (row' table))' Connection' args.Row' data.Table); " is 143.
Long Statement,DbDiver,DataCrawlControl,C:\repos\faboo_DbDiver\DbDiver\DataCrawlControl.xaml.cs,OnDependentKeySelected,The length of the statement  "	this.Weave<TableData> (new Func<Connection' Key' object' TableData> (loadTable)' child => UnshiftTable (column.Set' child)' () => Cursor = Cursors.Arrow' Connection' dependentKey' column.Data); " is 193.
Long Statement,DbDiver,EditDataControl,C:\repos\faboo_DbDiver\DbDiver\EditDataControl.xaml.cs,ExecuteOpenTable,The length of the statement  "	this.Weave<TableData> (new Func<Connection' string' string' TableData> (getTable)' AddRows' () => Cursor = Cursors.Arrow' Connection' TableName' WhereBox.Text); " is 160.
Long Statement,DbDiver,EditDataControl,C:\repos\faboo_DbDiver\DbDiver\EditDataControl.xaml.cs,FollowDependents,The length of the statement  "	return (bool)Dispatcher.Invoke (new Func<bool> (() => MessageBox.Show ("This row has dependent rows. Should we delete those (and their dependents) first?"' "DbDiver"' MessageBoxButton.YesNo' MessageBoxImage.Question) == MessageBoxResult.Yes)' DispatcherPriority.Background); " is 274.
Long Statement,DbDiver,EditDataControl,C:\repos\faboo_DbDiver\DbDiver\EditDataControl.xaml.cs,OnRowChanged,The length of the statement  "		this.Background (new Action<Connection' RowData' Table> ((conn' row' table) => conn.UpdateRow (row' table))' Connection' args.Row' data.Table); " is 143.
Long Statement,DbDiver,EditDataControl,C:\repos\faboo_DbDiver\DbDiver\EditDataControl.xaml.cs,OnRowEditEnding,The length of the statement  "		this.Background (new Action<Connection' RowData' Table> ((conn' row' table) => conn.UpdateRow (row' table))' Connection' rowData' Rows); " is 136.
Long Statement,DbDiver,CrawlControl,C:\repos\faboo_DbDiver\DbDiver\CrawlControl.cs,ExecuteFind,The length of the statement  "		while (foundTable == null && currentFoundTable < OpenTables.Count && currentFoundColumn < OpenTables [currentFoundTable].Columns.Count) { " is 137.
Long Statement,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetForeignKeys,The length of the statement  "			command.CommandText = "select " + (outward ? "[COLUMN_NAME] as [parent_column]' [REFERENCED_TABLE_NAME] as [referenced_table]' [REFERENCED_COLUMN_NAME] as [referenced_column] " : "[REFERENCED_COLUMN_NAME] as [parent_column]' [TABLE_NAME] as [referenced_table]' [COLUMN_NAME] as [referenced_column] ") + "from " + "[INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] where " + (outward ? "[REFERENCED_TABLE_NAME] is not null and [TABLE_NAME] = @tableName " : "[TABLE_NAME] is not null and [REFERENCED_TABLE_NAME] = @tableName ") + "and [TABLE_SCHEMA] = @database"; " is 551.
Long Statement,DbDiver,ProceduresControl,C:\repos\faboo_DbDiver\DbDiver\ProceduresControl.xaml.cs,GetParameters,The length of the statement  "			command.CommandText = "select parameter_name from information_schema.parameters " + "where specific_name='" + procedure + "' order by ordinal_position"; " is 152.
Long Statement,DbDiver,QueryControl,C:\repos\faboo_DbDiver\DbDiver\QueryControl.xaml.cs,ExecuteFind,The length of the statement  "		while (foundTable == null && foundRow == null && currentFoundTable < Results.Count && currentFoundRow < Results [currentFoundTable].Rows.Count) { " is 145.
Long Statement,DbDiver,SqlConnection,C:\repos\faboo_DbDiver\DbDiver\SqlConnection.cs,GetProcedures,The length of the statement  "			command.CommandText = "SELECT name as 'Procedure'' sys.objects.type_desc as 'Type' " + "FROM sys.sql_modules " + "JOIN sys.objects ON sql_modules.object_id = objects.object_id"; " is 177.
Long Statement,DbDiver,SqlConnection,C:\repos\faboo_DbDiver\DbDiver\SqlConnection.cs,DescribeProcedure,The length of the statement  "			command.CommandText = "SELECT Definition " + "FROM sys.sql_modules m JOIN sys.objects o ON m.object_id = o.object_id " + "AND TYPE IN ('FN'' 'IF'' 'TF'' 'P') " + "WHERE Name = @objname;"; " is 187.
Long Statement,DbDiver,SqlConnection,C:\repos\faboo_DbDiver\DbDiver\SqlConnection.cs,GetTables,The length of the statement  "			command.CommandText = "SELECT name as 'Table'' SUM(rows) as 'Rows' " + "FROM sys.tables " + "INNER JOIN sys.partitions " + "ON sys.partitions.OBJECT_ID = sys.tables.OBJECT_ID " + "WHERE is_ms_shipped = 0 AND index_id IN (1'0) " + "GROUP BY name"; " is 246.
Long Statement,DbDiver,SqlConnection,C:\repos\faboo_DbDiver\DbDiver\SqlConnection.cs,GetPrimaryKeys,The length of the statement  "			command.CommandText = "SELECT ordinal_position' column_name " + "FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE " + "WHERE OBJECTPROPERTY(OBJECT_ID(constraint_name)' 'IsPrimaryKey') = 1 " + "AND table_name = @tableName"; " is 214.
Long Statement,DbDiver,TableCrawlControl,C:\repos\faboo_DbDiver\DbDiver\TableCrawlControl.xaml.cs,CanExecuteOpenTable,The length of the statement  "	args.CanExecute = args.Parameter != null && (!(args.Parameter is string) || !String.IsNullOrWhiteSpace (args.Parameter as string)); " is 131.
Long Statement,DbDiver,TableCrawlControl,C:\repos\faboo_DbDiver\DbDiver\TableCrawlControl.xaml.cs,ExecuteCreateQuery,The length of the statement  "		query.AppendFormat ("join [{0}] on [{0}].[{1}] = [{2}].[{3}]\n"' foreign.Name' key.ForeignColumn' key.Table.Name' key.Name); " is 124.
Long Statement,DbDiver,TableCrawlControl,C:\repos\faboo_DbDiver\DbDiver\TableCrawlControl.xaml.cs,OnDependentKeySelected,The length of the statement  "	this.Weave<Table> (new Func<Connection' Key' Table> (loadTable)' child => UnshiftTable (column.Table' child)' () => Cursor = Cursors.Arrow' Connection' dependentKey); " is 166.
Long Statement,DbDiver,DescribeControl,C:\repos\faboo_DbDiver\DbDiver\DescribeControl.xaml.cs,updateDescription,The length of the statement  "	Dispatcher.Invoke (DispatcherPriority.Background' new Action<String' String> (Describe)' description' serializeDocument (Highlight.Plain.Highlight (description))); " is 163.
Long Statement,DbDiver,DescribeControl,C:\repos\faboo_DbDiver\DbDiver\DescribeControl.xaml.cs,updateDescription,The length of the statement  "	Dispatcher.BeginInvoke (DispatcherPriority.Background' new Action<String' String> (Describe)' description' serializeDocument (highlighter.Highlight (description))); " is 164.
Long Statement,DbDiver,Highlighter,C:\repos\faboo_DbDiver\DbDiver\Highlighter.cs,Highlight,The length of the statement  "		if (match.Success && (foundMatch == null || match.Index < foundMatch.Index || (match.Index == foundMatch.Index && match.Length > foundMatch.Length))) { " is 151.
Complex Conditional,DbDiver,Highlighter,C:\repos\faboo_DbDiver\DbDiver\Highlighter.cs,Highlight,The conditional expression  "match.Success && (foundMatch == null || match.Index < foundMatch.Index || (match.Index == foundMatch.Index && match.Length > foundMatch.Length))"  is complex.
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetForeignKeys,The following statement contains a magic number: using (var conn = Get ()) {  	using (var command = conn.CreateCommand ()) {  		command.CommandText = "select " + (outward ? "[parent_key].[COLUMN_NAME] as [parent_column]' [referenced_constraint].[TABLE_NAME] as [referenced_table]' [referenced_key].[COLUMN_NAME] as [referenced_column] " : "[referenced_key].[COLUMN_NAME] as [parent_column]' [parent_constraint].[TABLE_NAME] as [referenced_table]' [parent_key].[COLUMN_NAME] as [referenced_column] ") + "from   [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] as [parent_constraint] " + "inner join [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] as [parent_key] " + "on [parent_constraint].[CONSTRAINT_SCHEMA] = [parent_key].[CONSTRAINT_SCHEMA] " + "and [parent_constraint].[CONSTRAINT_NAME] = [parent_key].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[REFERENTIAL_CONSTRAINTS] as [rc] " + "on [parent_constraint].[CONSTRAINT_SCHEMA] = [rc].[CONSTRAINT_SCHEMA] " + "and [parent_constraint].[CONSTRAINT_NAME] = [rc].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] as [referenced_constraint] " + "on [rc].[UNIQUE_CONSTRAINT_SCHEMA] = [referenced_constraint].[CONSTRAINT_SCHEMA] " + "and [rc].[UNIQUE_CONSTRAINT_NAME] = [referenced_constraint].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] as [referenced_key] " + "on [referenced_constraint].[CONSTRAINT_SCHEMA] = [referenced_key].[CONSTRAINT_SCHEMA] " + "and [referenced_constraint].[CONSTRAINT_NAME] = [referenced_key].[CONSTRAINT_NAME] " + "and [parent_key].[ORDINAL_POSITION] = [referenced_key].[ORDINAL_POSITION] " + "where [parent_constraint].[CONSTRAINT_TYPE] = 'FOREIGN KEY' " + "and (([parent_constraint].[TABLE_CATALOG] is null and [parent_constraint].[TABLE_SCHEMA] is null) or ([parent_constraint].[TABLE_CATALOG] is null and [parent_constraint].[TABLE_SCHEMA] = @database) or [parent_constraint].[TABLE_CATALOG] = @database) " + (outward ? "and [parent_constraint].[TABLE_NAME] = @tableName " : "and [referenced_constraint].[TABLE_NAME] = @tableName ");  		command.AddWithValue ("@tableName"' table);  		command.AddWithValue ("@database"' conn.Database);  		using (var reader = command.ExecuteReader ()) {  			while (reader.Read ()) {  				Key key = new Key {  					Type = KeyType.Foreign'  					Column = reader.GetString (0)'  					ForeignTable = reader.GetString (1)'  					ForeignColumn = reader.GetString (2)'  				};  				keys.Add (key);  			}  			reader.Close ();  		}  	}  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetForeignKeys,The following statement contains a magic number: using (var command = conn.CreateCommand ()) {  	command.CommandText = "select " + (outward ? "[parent_key].[COLUMN_NAME] as [parent_column]' [referenced_constraint].[TABLE_NAME] as [referenced_table]' [referenced_key].[COLUMN_NAME] as [referenced_column] " : "[referenced_key].[COLUMN_NAME] as [parent_column]' [parent_constraint].[TABLE_NAME] as [referenced_table]' [parent_key].[COLUMN_NAME] as [referenced_column] ") + "from   [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] as [parent_constraint] " + "inner join [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] as [parent_key] " + "on [parent_constraint].[CONSTRAINT_SCHEMA] = [parent_key].[CONSTRAINT_SCHEMA] " + "and [parent_constraint].[CONSTRAINT_NAME] = [parent_key].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[REFERENTIAL_CONSTRAINTS] as [rc] " + "on [parent_constraint].[CONSTRAINT_SCHEMA] = [rc].[CONSTRAINT_SCHEMA] " + "and [parent_constraint].[CONSTRAINT_NAME] = [rc].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] as [referenced_constraint] " + "on [rc].[UNIQUE_CONSTRAINT_SCHEMA] = [referenced_constraint].[CONSTRAINT_SCHEMA] " + "and [rc].[UNIQUE_CONSTRAINT_NAME] = [referenced_constraint].[CONSTRAINT_NAME] " + "inner join [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] as [referenced_key] " + "on [referenced_constraint].[CONSTRAINT_SCHEMA] = [referenced_key].[CONSTRAINT_SCHEMA] " + "and [referenced_constraint].[CONSTRAINT_NAME] = [referenced_key].[CONSTRAINT_NAME] " + "and [parent_key].[ORDINAL_POSITION] = [referenced_key].[ORDINAL_POSITION] " + "where [parent_constraint].[CONSTRAINT_TYPE] = 'FOREIGN KEY' " + "and (([parent_constraint].[TABLE_CATALOG] is null and [parent_constraint].[TABLE_SCHEMA] is null) or ([parent_constraint].[TABLE_CATALOG] is null and [parent_constraint].[TABLE_SCHEMA] = @database) or [parent_constraint].[TABLE_CATALOG] = @database) " + (outward ? "and [parent_constraint].[TABLE_NAME] = @tableName " : "and [referenced_constraint].[TABLE_NAME] = @tableName ");  	command.AddWithValue ("@tableName"' table);  	command.AddWithValue ("@database"' conn.Database);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			Key key = new Key {  				Type = KeyType.Foreign'  				Column = reader.GetString (0)'  				ForeignTable = reader.GetString (1)'  				ForeignColumn = reader.GetString (2)'  			};  			keys.Add (key);  		}  		reader.Close ();  	}  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetForeignKeys,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		Key key = new Key {  			Type = KeyType.Foreign'  			Column = reader.GetString (0)'  			ForeignTable = reader.GetString (1)'  			ForeignColumn = reader.GetString (2)'  		};  		keys.Add (key);  	}  	reader.Close ();  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetForeignKeys,The following statement contains a magic number: while (reader.Read ()) {  	Key key = new Key {  		Type = KeyType.Foreign'  		Column = reader.GetString (0)'  		ForeignTable = reader.GetString (1)'  		ForeignColumn = reader.GetString (2)'  	};  	keys.Add (key);  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: using (var conn = Get ()) {  	using (var command = conn.CreateCommand ()) {  		command.CommandText = "select [ORDINAL_POSITION]' [COLUMN_NAME]' [DATA_TYPE]' [IS_NULLABLE] " + "from [INFORMATION_SCHEMA].[COLUMNS] " + "where [TABLE_NAME] = @tableName " + "and " + DB_CHECK;  		command.AddWithValue ("@tableName"' table.Name);  		command.AddWithValue ("@database"' conn.Database);  		using (var reader = command.ExecuteReader ()) {  			string type;  			while (reader.Read ()) {  				type = reader.GetString (2);  				table.Columns.Add (new Column {  					Table = table'  					Position = reader.GetInt32 (0)'  					Name = reader.GetString (1)'  					Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  					NativeType = GetTypeAsNative (type)'  				});  			}  			reader.Close ();  		}  	}  	conn.Close ();  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: using (var conn = Get ()) {  	using (var command = conn.CreateCommand ()) {  		command.CommandText = "select [ORDINAL_POSITION]' [COLUMN_NAME]' [DATA_TYPE]' [IS_NULLABLE] " + "from [INFORMATION_SCHEMA].[COLUMNS] " + "where [TABLE_NAME] = @tableName " + "and " + DB_CHECK;  		command.AddWithValue ("@tableName"' table.Name);  		command.AddWithValue ("@database"' conn.Database);  		using (var reader = command.ExecuteReader ()) {  			string type;  			while (reader.Read ()) {  				type = reader.GetString (2);  				table.Columns.Add (new Column {  					Table = table'  					Position = reader.GetInt32 (0)'  					Name = reader.GetString (1)'  					Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  					NativeType = GetTypeAsNative (type)'  				});  			}  			reader.Close ();  		}  	}  	conn.Close ();  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: using (var command = conn.CreateCommand ()) {  	command.CommandText = "select [ORDINAL_POSITION]' [COLUMN_NAME]' [DATA_TYPE]' [IS_NULLABLE] " + "from [INFORMATION_SCHEMA].[COLUMNS] " + "where [TABLE_NAME] = @tableName " + "and " + DB_CHECK;  	command.AddWithValue ("@tableName"' table.Name);  	command.AddWithValue ("@database"' conn.Database);  	using (var reader = command.ExecuteReader ()) {  		string type;  		while (reader.Read ()) {  			type = reader.GetString (2);  			table.Columns.Add (new Column {  				Table = table'  				Position = reader.GetInt32 (0)'  				Name = reader.GetString (1)'  				Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  				NativeType = GetTypeAsNative (type)'  			});  		}  		reader.Close ();  	}  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: using (var command = conn.CreateCommand ()) {  	command.CommandText = "select [ORDINAL_POSITION]' [COLUMN_NAME]' [DATA_TYPE]' [IS_NULLABLE] " + "from [INFORMATION_SCHEMA].[COLUMNS] " + "where [TABLE_NAME] = @tableName " + "and " + DB_CHECK;  	command.AddWithValue ("@tableName"' table.Name);  	command.AddWithValue ("@database"' conn.Database);  	using (var reader = command.ExecuteReader ()) {  		string type;  		while (reader.Read ()) {  			type = reader.GetString (2);  			table.Columns.Add (new Column {  				Table = table'  				Position = reader.GetInt32 (0)'  				Name = reader.GetString (1)'  				Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  				NativeType = GetTypeAsNative (type)'  			});  		}  		reader.Close ();  	}  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	string type;  	while (reader.Read ()) {  		type = reader.GetString (2);  		table.Columns.Add (new Column {  			Table = table'  			Position = reader.GetInt32 (0)'  			Name = reader.GetString (1)'  			Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  			NativeType = GetTypeAsNative (type)'  		});  	}  	reader.Close ();  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	string type;  	while (reader.Read ()) {  		type = reader.GetString (2);  		table.Columns.Add (new Column {  			Table = table'  			Position = reader.GetInt32 (0)'  			Name = reader.GetString (1)'  			Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  			NativeType = GetTypeAsNative (type)'  		});  	}  	reader.Close ();  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: while (reader.Read ()) {  	type = reader.GetString (2);  	table.Columns.Add (new Column {  		Table = table'  		Position = reader.GetInt32 (0)'  		Name = reader.GetString (1)'  		Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  		NativeType = GetTypeAsNative (type)'  	});  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: while (reader.Read ()) {  	type = reader.GetString (2);  	table.Columns.Add (new Column {  		Table = table'  		Position = reader.GetInt32 (0)'  		Name = reader.GetString (1)'  		Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  		NativeType = GetTypeAsNative (type)'  	});  }  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: type = reader.GetString (2);  
Magic Number,DbDiver,Connection,C:\repos\faboo_DbDiver\DbDiver\Connection.cs,GetColumns,The following statement contains a magic number: table.Columns.Add (new Column {  	Table = table'  	Position = reader.GetInt32 (0)'  	Name = reader.GetString (1)'  	Type = type + (reader.GetString (3).Equals ("YES") ? " (nullable)" : "")'  	NativeType = GetTypeAsNative (type)'  });  
Magic Number,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetForeignKeys,The following statement contains a magic number: using (var conn = Get ()) {  	using (var command = conn.CreateCommand ()) {  		command.CommandText = "select " + (outward ? "[COLUMN_NAME] as [parent_column]' [REFERENCED_TABLE_NAME] as [referenced_table]' [REFERENCED_COLUMN_NAME] as [referenced_column] " : "[REFERENCED_COLUMN_NAME] as [parent_column]' [TABLE_NAME] as [referenced_table]' [COLUMN_NAME] as [referenced_column] ") + "from " + "[INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] where " + (outward ? "[REFERENCED_TABLE_NAME] is not null and [TABLE_NAME] = @tableName " : "[TABLE_NAME] is not null and [REFERENCED_TABLE_NAME] = @tableName ") + "and [TABLE_SCHEMA] = @database";  		command.AddWithValue ("@tableName"' table);  		command.AddWithValue ("@database"' conn.Database);  		using (var reader = command.ExecuteReader ()) {  			while (reader.Read ()) {  				Key key = new Key {  					Type = KeyType.Foreign'  					Column = reader.GetString (0)'  					ForeignTable = reader.GetString (1)'  					ForeignColumn = reader.GetString (2)'  				};  				keys.Add (key);  			}  			reader.Close ();  		}  	}  }  
Magic Number,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetForeignKeys,The following statement contains a magic number: using (var command = conn.CreateCommand ()) {  	command.CommandText = "select " + (outward ? "[COLUMN_NAME] as [parent_column]' [REFERENCED_TABLE_NAME] as [referenced_table]' [REFERENCED_COLUMN_NAME] as [referenced_column] " : "[REFERENCED_COLUMN_NAME] as [parent_column]' [TABLE_NAME] as [referenced_table]' [COLUMN_NAME] as [referenced_column] ") + "from " + "[INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] where " + (outward ? "[REFERENCED_TABLE_NAME] is not null and [TABLE_NAME] = @tableName " : "[TABLE_NAME] is not null and [REFERENCED_TABLE_NAME] = @tableName ") + "and [TABLE_SCHEMA] = @database";  	command.AddWithValue ("@tableName"' table);  	command.AddWithValue ("@database"' conn.Database);  	using (var reader = command.ExecuteReader ()) {  		while (reader.Read ()) {  			Key key = new Key {  				Type = KeyType.Foreign'  				Column = reader.GetString (0)'  				ForeignTable = reader.GetString (1)'  				ForeignColumn = reader.GetString (2)'  			};  			keys.Add (key);  		}  		reader.Close ();  	}  }  
Magic Number,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetForeignKeys,The following statement contains a magic number: using (var reader = command.ExecuteReader ()) {  	while (reader.Read ()) {  		Key key = new Key {  			Type = KeyType.Foreign'  			Column = reader.GetString (0)'  			ForeignTable = reader.GetString (1)'  			ForeignColumn = reader.GetString (2)'  		};  		keys.Add (key);  	}  	reader.Close ();  }  
Magic Number,DbDiver,MySqlConnection,C:\repos\faboo_DbDiver\DbDiver\MySqlConnection.cs,GetForeignKeys,The following statement contains a magic number: while (reader.Read ()) {  	Key key = new Key {  		Type = KeyType.Foreign'  		Column = reader.GetString (0)'  		ForeignTable = reader.GetString (1)'  		ForeignColumn = reader.GetString (2)'  	};  	keys.Add (key);  }  
Magic Number,DbDiver,ProceduresControl,C:\repos\faboo_DbDiver\DbDiver\ProceduresControl.xaml.cs,ExecuteQueryModule,The following statement contains a magic number: query.Remove (query.Length - 2' 2);  
Magic Number,DbDiver,ProceduresControl,C:\repos\faboo_DbDiver\DbDiver\ProceduresControl.xaml.cs,ExecuteQueryModule,The following statement contains a magic number: query.Remove (query.Length - 2' 2);  
Magic Number,DbDiver,DbTools,C:\repos\faboo_DbDiver\DbDiver\DbTools.xaml.cs,OnEditTableData,The following statement contains a magic number: if (args.Size < 100)  	ApplicationCommands.Open.Execute (args.Table' editData);  
Magic Number,DbDiver,Highlighter,C:\repos\faboo_DbDiver\DbDiver\Highlighter.cs,Highlighter,The following statement contains a magic number: setters.Add (new Setter (Paragraph.MarginProperty' new Thickness (5' 2' 5' 2)));  
Magic Number,DbDiver,Highlighter,C:\repos\faboo_DbDiver\DbDiver\Highlighter.cs,Highlighter,The following statement contains a magic number: setters.Add (new Setter (Paragraph.MarginProperty' new Thickness (5' 2' 5' 2)));  
Magic Number,DbDiver,Highlighter,C:\repos\faboo_DbDiver\DbDiver\Highlighter.cs,Highlighter,The following statement contains a magic number: setters.Add (new Setter (Paragraph.MarginProperty' new Thickness (5' 2' 5' 2)));  
Magic Number,DbDiver,Highlighter,C:\repos\faboo_DbDiver\DbDiver\Highlighter.cs,Highlighter,The following statement contains a magic number: setters.Add (new Setter (Paragraph.MarginProperty' new Thickness (5' 2' 5' 2)));  
