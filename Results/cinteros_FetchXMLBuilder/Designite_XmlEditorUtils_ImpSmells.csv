Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cinteros.Xrm.XmlEditorUtils,ControlUtils,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\ControlUtils.cs,FillControl,Cyclomatic complexity of the method is 10
Complex Method,CSRichTextBoxSyntaxHighlighting,CharacterEncoder,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\CharacterEncoder.cs,Encode,Cyclomatic complexity of the method is 29
Complex Method,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,Cyclomatic complexity of the method is 8
Long Statement,Cinteros.Xrm.XmlEditorUtils,FindTextHandler,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\FindTextHandler.cs,FindTheText,The length of the statement  "			MessageBox.Show ("Text \"" + text + "\" was not found."' "Find text"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 120.
Long Statement,Cinteros.Xrm.XmlEditorUtils,FindTextHandler,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\FindTextHandler.cs,FindTheText,The length of the statement  "		} else if (MessageBox.Show ("No more occurence of \"" + text + "\" was found.\nSearch from the beginning?"' "Find text"' MessageBoxButtons.OKCancel' MessageBoxIcon.Information) == DialogResult.OK) { " is 198.
Long Statement,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The length of the statement  "		childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line ")); " is 189.
Long Statement,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The length of the statement  "		childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ())); " is 198.
Long Statement,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The length of the statement  "		childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ())); " is 172.
Long Statement,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The length of the statement  "			string attributeRtfContent = string.Format (@" \cf{0} {3}\cf{1} =\cf0 {5}\cf{2} {4}\cf0 {5}"' XMLViewerSettings.AttributeKeyID' XMLViewerSettings.TagID' XMLViewerSettings.AttributeValueID' attribute.Name' CharacterEncoder.Encode (attribute.Value)' settings.QuoteCharacter); " is 273.
Magic Number,Cinteros.Xrm.XmlEditorUtils,ControlUtils,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\ControlUtils.cs,GetControlDefinition,The following statement contains a magic number: defaultvalue = tags.Length > 2 ? tags [2] : control is CheckBox ? "false" : "";  
Magic Number,Cinteros.Xrm.XmlEditorUtils,ControlUtils,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\ControlUtils.cs,GetControlDefinition,The following statement contains a magic number: defaultvalue = tags.Length > 2 ? tags [2] : control is CheckBox ? "false" : "";  
Magic Number,Cinteros.Xrm.XmlEditorUtils,Prompt,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\Prompt.cs,ShowDialog,The following statement contains a magic number: prompt.Width = 500;  
Magic Number,Cinteros.Xrm.XmlEditorUtils,Prompt,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\Prompt.cs,ShowDialog,The following statement contains a magic number: prompt.Height = 150;  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element.ChildNodes.Count > 0 && !(element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >\par  {{1}}  {0}\cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	// Construct the Rtf of child elements.  	foreach (XmlNode childElement in element.ChildNodes) {  		string childElementRtfContent = ProcessElement (childElement' level + 1);  		childElementsRtfContent.Append (childElementRtfContent);  	}  } else if (element is XmlComment) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <!--  {{1}}  \cf{1} -->\par"' indent' XMLViewerSettings.TagID);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line "));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element.ChildNodes.Count > 0 && !(element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >\par  {{1}}  {0}\cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	// Construct the Rtf of child elements.  	foreach (XmlNode childElement in element.ChildNodes) {  		string childElementRtfContent = ProcessElement (childElement' level + 1);  		childElementsRtfContent.Append (childElementRtfContent);  	}  } else if (element is XmlComment) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <!--  {{1}}  \cf{1} -->\par"' indent' XMLViewerSettings.TagID);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line "));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element.ChildNodes.Count > 0 && !(element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >\par  {{1}}  {0}\cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	// Construct the Rtf of child elements.  	foreach (XmlNode childElement in element.ChildNodes) {  		string childElementRtfContent = ProcessElement (childElement' level + 1);  		childElementsRtfContent.Append (childElementRtfContent);  	}  } else if (element is XmlComment) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <!--  {{1}}  \cf{1} -->\par"' indent' XMLViewerSettings.TagID);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line "));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element is XmlComment) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <!--  {{1}}  \cf{1} -->\par"' indent' XMLViewerSettings.TagID);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line "));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element is XmlComment) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <!--  {{1}}  \cf{1} -->\par"' indent' XMLViewerSettings.TagID);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line "));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element is XmlComment) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <!--  {{1}}  \cf{1} -->\par"' indent' XMLViewerSettings.TagID);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line "));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.CommentID' element.Value.Replace ("\r\n"' "\n").Replace ("\n"' "\\line "));  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (element.ChildNodes.Count == 1 && element.ChildNodes [0] is XmlText) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  } // If !string.IsNullOrWhiteSpace(element.Value)' then construct the Rtf   // of the value.  else if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (((XmlText)element.ChildNodes [0]).Value.Trim ()));  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace (element.Value)) {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} >  {{1}}  \cf{1} </\cf{2} {3}\cf{1} >\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  	childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  } // This element only has attributes. {{0}} will be replaced with the attributes.  else {  	elementRtfFormat = string.Format (@"  {0}\cf{1} <\cf{2} {3}{{0}}\cf{1} />\par"' indent' XMLViewerSettings.TagID' XMLViewerSettings.ElementID' element.Name);  }  
Magic Number,CSRichTextBoxSyntaxHighlighting,XMLViewer,F:\newReposMay17\cinteros_FetchXMLBuilder\XmlEditorUtils\XMLViewer\XMLViewer.cs,ProcessElement,The following statement contains a magic number: childElementsRtfContent.AppendFormat (@"{0}\cf{1} {2}"' new string (' '' 2 * (0/*level + 1*/))' XMLViewerSettings.ValueID' CharacterEncoder.Encode (element.Value.Trim ()));  
