Implementation smell,Namespace,Class,File,Method,Description
Long Method,MySql.Data.MySqlClient,MySqlDatabaseInitializer,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDatabaseInitializer.cs,CreateMySqlDatabase,The method has 100 lines of code.
Complex Method,MySql.Data.MySqlClient,MySqlDatabaseInitializer,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDatabaseInitializer.cs,CreateMySqlDatabase,Cyclomatic complexity of the method is 8
Long Parameter List,MySql.Data.MySqlClient,MySqlDbContext,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDbContext.cs,MySqlDbContext,The method has 5 parameters.
Long Parameter List,MySql.Data.MySqlClient,MySqlDbContext,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDbContext.cs,GetMySqlConnectionString,The method has 5 parameters.
Long Statement,MySql.Data.MySqlClient,MySqlDatabaseInitializer,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDatabaseInitializer.cs,CreateMySqlDatabase,The length of the statement  "							//command.CommandText = string.Format("grant all privileges on {0}.* to '{1}'@'%' identified by '{2}' with grant option;"'" is 122.
Long Statement,MySql.Data.MySqlClient,MySqlDatabaseInitializer,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDatabaseInitializer.cs,GetModel,The length of the statement  "		using (var gzipStream = new System.IO.Compression.GZipStream (memoryStream' System.IO.Compression.CompressionMode.Compress)) " is 124.
Long Statement,MySql.Data.MySqlClient,MySqlDatabaseInitializer,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDatabaseInitializer.cs,GetProductVersion,The length of the statement  "	return typeof(DbContext).Assembly.GetCustomAttributes (false).OfType<System.Reflection.AssemblyInformationalVersionAttribute> ().Single ().InformationalVersion; " is 160.
Magic Number,MySql.Data.MySqlClient,MySqlDatabaseInitializer,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDatabaseInitializer.cs,CreateMySqlDatabase,The following statement contains a magic number: try {  	// Create as much of the database as we can               	context.Database.Create ();  	// No exception? Don't need a workaround  	Seed (context);  	context.SaveChanges ();  	return;  }  catch (MySqlException ex) {  	/* 				if (ex.Number == 1044) 				{ 					// Could not create database under message 					// Access denied for user 'User'@'%' to database 'database' 					using (var connection = ((MySqlConnection)context.Database.Connection).Clone()) 					{ 						using (var command = connection.CreateCommand()) 						{ 							string userId = string.Empty; 							string password = string.Empty;  							foreach (string item in connection.ConnectionString.SplitDelimiter(";")) 							{ 								var parse = item.SplitDelimiter("=").ToArray();  								if (parse.Count() == 2) 								{ 									if (String.Compare(parse[0]' "User Id"' true) == 0) 										userId = parse[1];  									if (String.Compare(parse[0]' "password"' true) == 0) 										password = parse[1]; 								} 								if (userId != string.Empty && password != string.Empty) 									break; 							} 							 							//command.CommandText = string.Format("grant all privileges on {0}.* to '{1}'@'%' identified by '{2}' with grant option;"' 							//	connection.Database' userId' password); 							command.CommandText = string.Format("create database {0} character set utf8;"' connection.Database);  							try 							{ 								connection.Open(); 								command.ExecuteNonQuery(); 							} 							catch (Exception exDb) 							{ 								throw exDb; 							} 							finally 							{ 								connection.Close(); 							} 						} 					} 				} 				*/if (ex.Number != 1064)  		// Ignore the parse exception  		throw;  }  
Magic Number,MySql.Data.MySqlClient,MySqlDatabaseInitializer,C:\repos\robin521111_DataAnslysis\MySql.Data.Extension\MySql.Data.MySqlClient\MySqlDatabaseInitializer.cs,CreateMySqlDatabase,The following statement contains a magic number: if (ex.Number != 1064)  	// Ignore the parse exception  	throw;  
