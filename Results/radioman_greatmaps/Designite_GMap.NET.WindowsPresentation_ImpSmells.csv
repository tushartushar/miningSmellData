Implementation smell,Namespace,Class,File,Method,Description
Long Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The method has 121 lines of code.
Complex Method,GMap.NET.WindowsPresentation,GMapImageProxy,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapImage.cs,FromStream,Cyclomatic complexity of the method is 9
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,ZoomPropertyChanged,Cyclomatic complexity of the method is 8
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,Cyclomatic complexity of the method is 18
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,GetRectOfAllMarkers,Cyclomatic complexity of the method is 10
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,Cyclomatic complexity of the method is 10
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseWheel,Cyclomatic complexity of the method is 11
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseUp,Cyclomatic complexity of the method is 10
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,Cyclomatic complexity of the method is 13
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnStylusMove,Cyclomatic complexity of the method is 11
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,SingleTouchPanMap,Cyclomatic complexity of the method is 8
Complex Method,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnManipulationCompleted,Cyclomatic complexity of the method is 8
Long Identifier,GMap.NET.WindowsPresentation,GMapMarker,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapMarker.cs,,The length of the parameter Shape_PropertyChangedEventArgs is 30.
Long Identifier,GMap.NET.WindowsPresentation,GMapMarker,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapMarker.cs,,The length of the parameter LocalPositionX_PropertyChangedEventArgs is 39.
Long Identifier,GMap.NET.WindowsPresentation,GMapMarker,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapMarker.cs,,The length of the parameter LocalPositionY_PropertyChangedEventArgs is 39.
Long Identifier,GMap.NET.WindowsPresentation,GMapMarker,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapMarker.cs,,The length of the parameter ZIndex_PropertyChangedEventArgs is 31.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,MapProviderPropertyChanged,The length of the statement  "               map.Copyright = new FormattedText(map.Core.Provider.Copyright' CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface("GenericSansSerif")' 9' Brushes.Navy); " is 171.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                           var imgRect = new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6); " is 124.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                              var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * img.Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * img.Yoff + 0.6' Core.tileRect.Width * img.Ix + 0.6' Core.tileRect.Height * img.Ix + 0.6); " is 215.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                        parentTile = Core.Matrix.GetTileWithNoLock(Core.Zoom - zoomOffset++' new GMap.NET.GPoint((int)(tilePoint.PosXY.X / Ix)' (int)(tilePoint.PosXY.Y / Ix))); " is 152.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                        var geometry = new RectangleGeometry(new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6)); " is 148.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                        var parentImgRect = new Rect(Core.tileRect.X - Core.tileRect.Width * Xoff + 0.6' Core.tileRect.Y - Core.tileRect.Height * Yoff + 0.6' Core.tileRect.Width * Ix + 0.6' Core.tileRect.Height * Ix + 0.6); " is 199.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                           g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height)); " is 137.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                           FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red); " is 180.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                           g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2)); " is 192.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                     g.DrawRectangle(null' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height)); " is 127.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                        FormattedText TileText = new FormattedText("CENTER:" + tilePoint.ToString()' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 16' Brushes.Red); " is 186.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                        g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - TileText.Height / 2)); " is 182.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                        FormattedText TileText = new FormattedText("TILE: " + tilePoint.ToString()' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 16' Brushes.Red); " is 185.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The length of the statement  "                        g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - TileText.Height / 2)); " is 182.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The length of the statement  "               drawingContext.DrawEllipse(SelectedAreaFill' SelectionPen' new System.Windows.Point(x1 + (x2 - x1) / 2' y1 + (y2 - y1) / 2)' (x2 - x1) / 2' (y2 - y1) / 2); " is 155.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The length of the statement  "            drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point((ActualWidth / 2) - 5' ActualHeight / 2)' new System.Windows.Point((ActualWidth / 2) + 5' ActualHeight / 2)); " is 174.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The length of the statement  "            drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) - 5)' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) + 5)); " is 174.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,The length of the statement  "               if(Math.Abs(p.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(p.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance) " is 178.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,The length of the statement  "            if(isSelected && !selectionStart.IsEmpty && (Keyboard.Modifiers == ModifierKeys.Shift || Keyboard.Modifiers == ModifierKeys.Alt || DisableAltForSelection)) " is 155.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnStylusMove,The length of the statement  "               if(Math.Abs(p.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(p.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance) " is 178.
Long Statement,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,SingleTouchPanMap,The length of the statement  "               if(Math.Abs(deltaPoint.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(deltaPoint.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance) " is 196.
Long Statement,GMap.NET.WindowsPresentation,TilePrefetcher,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\TilePrefetcher.xaml.cs,worker_ProgressChanged,The length of the statement  "         this.label1.Text = "Fetching tile at zoom (" + zoom + "): " + ((int)e.UserState).ToString() + " of " + all + "' complete: " + e.ProgressPercentage.ToString() + "%"; " is 164.
Long Statement,GMap.NET.WindowsPresentation,TilePrefetcher,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\TilePrefetcher.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/GMap.NET.WindowsPresentation;component/gmap.net.windowspresentation/tileprefetch" + " is 129.
Complex Conditional,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,GetRectOfAllMarkers,The conditional expression  "left != double.MaxValue && right != double.MinValue && top != double.MinValue && bottom != double.MaxValue"  is complex.
Complex Conditional,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseWheel,The conditional expression  "MouseWheelZoomEnabled && (IsMouseDirectlyOver || IgnoreMarkerOnMouseWheel) && !Core.IsDragging"  is complex.
Complex Conditional,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,The conditional expression  "(e.LeftButton == MouseButtonState.Pressed && DragButton == MouseButton.Left) ||                  e.RightButton == MouseButtonState.Pressed && DragButton == MouseButton.Right"  is complex.
Complex Conditional,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,The conditional expression  "isSelected && !selectionStart.IsEmpty && (Keyboard.Modifiers == ModifierKeys.Shift || Keyboard.Modifiers == ModifierKeys.Alt || DisableAltForSelection)"  is complex.
Magic Number,GMap.NET.WindowsPresentation,GMapPolygon,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapPolygon.cs,CreatePath,The following statement contains a magic number: ef.Radius = 3.0;
Magic Number,GMap.NET.WindowsPresentation,GMapPolygon,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapPolygon.cs,CreatePath,The following statement contains a magic number: myPath.StrokeThickness = 5;
Magic Number,GMap.NET.WindowsPresentation,GMapPolygon,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapPolygon.cs,CreatePath,The following statement contains a magic number: myPath.Opacity = 0.6;
Magic Number,GMap.NET.WindowsPresentation,GMapRoute,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapRoute.cs,CreatePath,The following statement contains a magic number: ef.Radius = 3.0;
Magic Number,GMap.NET.WindowsPresentation,GMapRoute,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapRoute.cs,CreatePath,The following statement contains a magic number: myPath.StrokeThickness = 5;
Magic Number,GMap.NET.WindowsPresentation,GMapRoute,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapRoute.cs,CreatePath,The following statement contains a magic number: myPath.Opacity = 0.6;
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,MapProviderPropertyChanged,The following statement contains a magic number: map.Position = new PointLatLng(viewarea.Lat - viewarea.HeightLat / 2' viewarea.Lng + viewarea.WidthLng / 2);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,MapProviderPropertyChanged,The following statement contains a magic number: map.Position = new PointLatLng(viewarea.Lat - viewarea.HeightLat / 2' viewarea.Lng + viewarea.WidthLng / 2);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,MapProviderPropertyChanged,The following statement contains a magic number: map.Copyright = new FormattedText(map.Core.Provider.Copyright' CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface("GenericSansSerif")' 9' Brushes.Navy);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,ZoomPropertyChanged,The following statement contains a magic number: switch(map.ScaleMode)                 {                    case ScaleModes.ScaleDown:                    scaleDown = true;                    break;                      case ScaleModes.Dynamic:                    scaleDown = remainder > 0.25;                    break;                      default:                    scaleDown = false;                    break;                 }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,ZoomPropertyChanged,The following statement contains a magic number: double scaleValue = Math.Pow(2d' remainder);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,ZoomPropertyChanged,The following statement contains a magic number: map.MapScaleTransform.CenterX = map.ActualWidth / 2;
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,ZoomPropertyChanged,The following statement contains a magic number: map.MapScaleTransform.CenterY = map.ActualHeight / 2;
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: var imgRect = new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: var imgRect = new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: var imgRect = new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: var imgRect = new Rect(Core.tileRect.X + 0.6' Core.tileRect.Y + 0.6' Core.tileRect.Width + 0.6' Core.tileRect.Height + 0.6);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: lock(Core.FailedLoads)                       {                          var lt = new LoadTask(tilePoint.PosXY' Core.Zoom);                            if(Core.FailedLoads.ContainsKey(lt))                          {                             g.DrawRectangle(EmptytileBrush' EmptyTileBorders' new Rect(Core.tileRect.X' Core.tileRect.Y' Core.tileRect.Width' Core.tileRect.Height));                               var ex = Core.FailedLoads[lt];                             FormattedText TileText = new FormattedText("Exception: " + ex.Message' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 14' Brushes.Red);                             TileText.MaxTextWidth = Core.tileRect.Width - 11;                               g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + 11' Core.tileRect.Y + 11));                               g.DrawText(EmptyTileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - EmptyTileText.Height / 2));                          }                       }
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: FormattedText TileText = new FormattedText("CENTER:" + tilePoint.ToString()' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' tileTypeface' 16' Brushes.Red);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - TileText.Height / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - TileText.Height / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - TileText.Height / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,DrawMap,The following statement contains a magic number: g.DrawText(TileText' new System.Windows.Point(Core.tileRect.X + Core.tileRect.Width / 2 - EmptyTileText.Width / 2' Core.tileRect.Y + Core.tileRect.Height / 2 - TileText.Height / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,ToImageSource,The following statement contains a magic number: RenderTargetBitmap bmp = new RenderTargetBitmap(           (int)size.Width' (int)size.Height' 96' 96' PixelFormats.Pbgra32);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,ToImageSource,The following statement contains a magic number: RenderTargetBitmap bmp = new RenderTargetBitmap(           (int)size.Width' (int)size.Height' 96' 96' PixelFormats.Pbgra32);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,UpdateRotationMatrix,The following statement contains a magic number: System.Windows.Point center = new System.Windows.Point(ActualWidth / 2.0' ActualHeight / 2.0);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,UpdateRotationMatrix,The following statement contains a magic number: System.Windows.Point center = new System.Windows.Point(ActualWidth / 2.0' ActualHeight / 2.0);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawEllipse(SelectedAreaFill' SelectionPen' new System.Windows.Point(x1 + (x2 - x1) / 2' y1 + (y2 - y1) / 2)' (x2 - x1) / 2' (y2 - y1) / 2);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawEllipse(SelectedAreaFill' SelectionPen' new System.Windows.Point(x1 + (x2 - x1) / 2' y1 + (y2 - y1) / 2)' (x2 - x1) / 2' (y2 - y1) / 2);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawEllipse(SelectedAreaFill' SelectionPen' new System.Windows.Point(x1 + (x2 - x1) / 2' y1 + (y2 - y1) / 2)' (x2 - x1) / 2' (y2 - y1) / 2);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawEllipse(SelectedAreaFill' SelectionPen' new System.Windows.Point(x1 + (x2 - x1) / 2' y1 + (y2 - y1) / 2)' (x2 - x1) / 2' (y2 - y1) / 2);
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point((ActualWidth / 2) - 5' ActualHeight / 2)' new System.Windows.Point((ActualWidth / 2) + 5' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point((ActualWidth / 2) - 5' ActualHeight / 2)' new System.Windows.Point((ActualWidth / 2) + 5' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point((ActualWidth / 2) - 5' ActualHeight / 2)' new System.Windows.Point((ActualWidth / 2) + 5' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point((ActualWidth / 2) - 5' ActualHeight / 2)' new System.Windows.Point((ActualWidth / 2) + 5' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point((ActualWidth / 2) - 5' ActualHeight / 2)' new System.Windows.Point((ActualWidth / 2) + 5' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point((ActualWidth / 2) - 5' ActualHeight / 2)' new System.Windows.Point((ActualWidth / 2) + 5' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) - 5)' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) + 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) - 5)' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) + 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) - 5)' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) + 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) - 5)' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) + 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) - 5)' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) + 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawLine(CenterCrossPen' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) - 5)' new System.Windows.Point(ActualWidth / 2' (ActualHeight / 2) + 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawText(Copyright' new System.Windows.Point(5' ActualHeight - Copyright.Height - 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnRender,The following statement contains a magic number: drawingContext.DrawText(Copyright' new System.Windows.Point(5' ActualHeight - Copyright.Height - 5));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseWheel,The following statement contains a magic number: System.Windows.Point ps = PointToScreen(new System.Windows.Point(ActualWidth / 2' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseWheel,The following statement contains a magic number: System.Windows.Point ps = PointToScreen(new System.Windows.Point(ActualWidth / 2' ActualHeight / 2));
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,The following statement contains a magic number: (e.Timestamp & Int32.MaxValue) - onMouseUpTimestamp < 55
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,The following statement contains a magic number: Math.Abs(p.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(p.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnMouseMove,The following statement contains a magic number: Math.Abs(p.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(p.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnStylusMove,The following statement contains a magic number: (e.Timestamp & Int32.MaxValue) - onMouseUpTimestamp < 55
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnStylusMove,The following statement contains a magic number: Math.Abs(p.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(p.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,OnStylusMove,The following statement contains a magic number: Math.Abs(p.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(p.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,SingleTouchPanMap,The following statement contains a magic number: Math.Abs(deltaPoint.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(deltaPoint.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance
Magic Number,GMap.NET.WindowsPresentation,GMapControl,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\GMapControl.cs,SingleTouchPanMap,The following statement contains a magic number: Math.Abs(deltaPoint.X - Core.mouseDown.X) * 2 >= SystemParameters.MinimumHorizontalDragDistance || Math.Abs(deltaPoint.Y - Core.mouseDown.Y) * 2 >= SystemParameters.MinimumVerticalDragDistance
Magic Number,GMap.NET.WindowsPresentation,TilePrefetcher,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\TilePrefetcher.xaml.cs,worker_DoWork,The following statement contains a magic number: worker.ReportProgress((int)((i + 1) * 100 / all)' i + 1);
Magic Number,GMap.NET.WindowsPresentation,TilePrefetcher,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\TilePrefetcher.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.label1 = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.progressBar1 = ((System.Windows.Controls.ProgressBar)(target));              return;              case 3:              this.label2 = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,GMap.NET.WindowsPresentation,TilePrefetcher,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\TilePrefetcher.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.label1 = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.progressBar1 = ((System.Windows.Controls.ProgressBar)(target));              return;              case 3:              this.label2 = ((System.Windows.Controls.TextBlock)(target));              return;              }
Missing Default,GMap.NET.WindowsPresentation,TilePrefetcher,C:\research\architectureSmells\repos\radioman_greatmaps\GMap.NET.WindowsPresentation\GMap.NET.WindowsPresentation\TilePrefetcher.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.label1 = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.progressBar1 = ((System.Windows.Controls.ProgressBar)(target));              return;              case 3:              this.label2 = ((System.Windows.Controls.TextBlock)(target));              return;              }
